%!PS-Adobe-2.0
%%Creator: dvips(k) 5.86 Copyright 1999 Radical Eye Software
%%Title: root.dvi
%%Pages: 21
%%PageOrder: Ascend
%%BoundingBox: 0 0 612 792
%%DocumentFonts: CMR17 CMSY10 CMR12 CMBX10 CMR10 CMTI10 CMBX12 CMMI12
%%+ CMSY7 CMTI12 CMR8 CMMI8 CMEX10 Times-Roman
%%EndComments
%DVIPSWebPage: (www.radicaleye.com)
%DVIPSCommandLine: dvips -P pdf -t letter root.dvi -o
%DVIPSParameters: dpi=8000, compressed
%DVIPSSource:  TeX output 2003.01.28:2320
%%BeginProcSet: tex.pro
%!
/TeXDict 300 dict def TeXDict begin/N{def}def/B{bind def}N/S{exch}N/X{S
N}B/A{dup}B/TR{translate}N/isls false N/vsize 11 72 mul N/hsize 8.5 72
mul N/landplus90{false}def/@rigin{isls{[0 landplus90{1 -1}{-1 1}ifelse 0
0 0]concat}if 72 Resolution div 72 VResolution div neg scale isls{
landplus90{VResolution 72 div vsize mul 0 exch}{Resolution -72 div hsize
mul 0}ifelse TR}if Resolution VResolution vsize -72 div 1 add mul TR[
matrix currentmatrix{A A round sub abs 0.00001 lt{round}if}forall round
exch round exch]setmatrix}N/@landscape{/isls true N}B/@manualfeed{
statusdict/manualfeed true put}B/@copies{/#copies X}B/FMat[1 0 0 -1 0 0]
N/FBB[0 0 0 0]N/nn 0 N/IEn 0 N/ctr 0 N/df-tail{/nn 8 dict N nn begin
/FontType 3 N/FontMatrix fntrx N/FontBBox FBB N string/base X array
/BitMaps X/BuildChar{CharBuilder}N/Encoding IEn N end A{/foo setfont}2
array copy cvx N load 0 nn put/ctr 0 N[}B/sf 0 N/df{/sf 1 N/fntrx FMat N
df-tail}B/dfs{div/sf X/fntrx[sf 0 0 sf neg 0 0]N df-tail}B/E{pop nn A
definefont setfont}B/Cw{Cd A length 5 sub get}B/Ch{Cd A length 4 sub get
}B/Cx{128 Cd A length 3 sub get sub}B/Cy{Cd A length 2 sub get 127 sub}
B/Cdx{Cd A length 1 sub get}B/Ci{Cd A type/stringtype ne{ctr get/ctr ctr
1 add N}if}B/CharBuilder{save 3 1 roll S A/base get 2 index get S
/BitMaps get S get/Cd X pop/ctr 0 N Cdx 0 Cx Cy Ch sub Cx Cw add Cy
setcachedevice Cw Ch true[1 0 0 -1 -.1 Cx sub Cy .1 sub]{Ci}imagemask
restore}B/D{/cc X A type/stringtype ne{]}if nn/base get cc ctr put nn
/BitMaps get S ctr S sf 1 ne{A A length 1 sub A 2 index S get sf div put
}if put/ctr ctr 1 add N}B/I{cc 1 add D}B/bop{userdict/bop-hook known{
bop-hook}if/SI save N @rigin 0 0 moveto/V matrix currentmatrix A 1 get A
mul exch 0 get A mul add .99 lt{/QV}{/RV}ifelse load def pop pop}N/eop{
SI restore userdict/eop-hook known{eop-hook}if showpage}N/@start{
userdict/start-hook known{start-hook}if pop/VResolution X/Resolution X
1000 div/DVImag X/IEn 256 array N 2 string 0 1 255{IEn S A 360 add 36 4
index cvrs cvn put}for pop 65781.76 div/vsize X 65781.76 div/hsize X}N
/p{show}N/RMat[1 0 0 -1 0 0]N/BDot 260 string N/Rx 0 N/Ry 0 N/V{}B/RV/v{
/Ry X/Rx X V}B statusdict begin/product where{pop false[(Display)(NeXT)
(LaserWriter 16/600)]{A length product length le{A length product exch 0
exch getinterval eq{pop true exit}if}{pop}ifelse}forall}{false}ifelse
end{{gsave TR -.1 .1 TR 1 1 scale Rx Ry false RMat{BDot}imagemask
grestore}}{{gsave TR -.1 .1 TR Rx Ry scale 1 1 false RMat{BDot}
imagemask grestore}}ifelse B/QV{gsave newpath transform round exch round
exch itransform moveto Rx 0 rlineto 0 Ry neg rlineto Rx neg 0 rlineto
fill grestore}B/a{moveto}B/delta 0 N/tail{A/delta X 0 rmoveto}B/M{S p
delta add tail}B/b{S p tail}B/c{-4 M}B/d{-3 M}B/e{-2 M}B/f{-1 M}B/g{0 M}
B/h{1 M}B/i{2 M}B/j{3 M}B/k{4 M}B/w{0 rmoveto}B/l{p -4 w}B/m{p -3 w}B/n{
p -2 w}B/o{p -1 w}B/q{p 1 w}B/r{p 2 w}B/s{p 3 w}B/t{p 4 w}B/x{0 S
rmoveto}B/y{3 2 roll p a}B/bos{/SS save N}B/eos{SS restore}B end

%%EndProcSet
%%BeginProcSet: alt-rule.pro
%!
% Patch by TVZ
% Makes dvips files draw rules with stroke rather than fill.
% Makes narrow rules more predictable at low resolutions
% after distilling to PDF.
% May have unknown consequences for very thick rules.
% Tested only with dvips 5.85(k).
TeXDict begin
/QV {
  gsave newpath /ruleY X /ruleX X
  Rx Ry gt
  { ruleX ruleY Ry 2 div sub moveto Rx 0 rlineto Ry }
  { ruleX Rx 2 div add ruleY moveto 0 Ry neg rlineto Rx }
  ifelse
  setlinewidth 0 setlinecap stroke grestore
} bind def
end

%%EndProcSet
%%BeginProcSet: texc.pro
%!
/TeXDict 300 dict def TeXDict begin/N{def}def/B{bind def}N/S{exch}N/X{S
N}B/A{dup}B/TR{translate}N/isls false N/vsize 11 72 mul N/hsize 8.5 72
mul N/landplus90{false}def/@rigin{isls{[0 landplus90{1 -1}{-1 1}ifelse 0
0 0]concat}if 72 Resolution div 72 VResolution div neg scale isls{
landplus90{VResolution 72 div vsize mul 0 exch}{Resolution -72 div hsize
mul 0}ifelse TR}if Resolution VResolution vsize -72 div 1 add mul TR[
matrix currentmatrix{A A round sub abs 0.00001 lt{round}if}forall round
exch round exch]setmatrix}N/@landscape{/isls true N}B/@manualfeed{
statusdict/manualfeed true put}B/@copies{/#copies X}B/FMat[1 0 0 -1 0 0]
N/FBB[0 0 0 0]N/nn 0 N/IEn 0 N/ctr 0 N/df-tail{/nn 8 dict N nn begin
/FontType 3 N/FontMatrix fntrx N/FontBBox FBB N string/base X array
/BitMaps X/BuildChar{CharBuilder}N/Encoding IEn N end A{/foo setfont}2
array copy cvx N load 0 nn put/ctr 0 N[}B/sf 0 N/df{/sf 1 N/fntrx FMat N
df-tail}B/dfs{div/sf X/fntrx[sf 0 0 sf neg 0 0]N df-tail}B/E{pop nn A
definefont setfont}B/Cw{Cd A length 5 sub get}B/Ch{Cd A length 4 sub get
}B/Cx{128 Cd A length 3 sub get sub}B/Cy{Cd A length 2 sub get 127 sub}
B/Cdx{Cd A length 1 sub get}B/Ci{Cd A type/stringtype ne{ctr get/ctr ctr
1 add N}if}B/id 0 N/rw 0 N/rc 0 N/gp 0 N/cp 0 N/G 0 N/CharBuilder{save 3
1 roll S A/base get 2 index get S/BitMaps get S get/Cd X pop/ctr 0 N Cdx
0 Cx Cy Ch sub Cx Cw add Cy setcachedevice Cw Ch true[1 0 0 -1 -.1 Cx
sub Cy .1 sub]/id Ci N/rw Cw 7 add 8 idiv string N/rc 0 N/gp 0 N/cp 0 N{
rc 0 ne{rc 1 sub/rc X rw}{G}ifelse}imagemask restore}B/G{{id gp get/gp
gp 1 add N A 18 mod S 18 idiv pl S get exec}loop}B/adv{cp add/cp X}B
/chg{rw cp id gp 4 index getinterval putinterval A gp add/gp X adv}B/nd{
/cp 0 N rw exit}B/lsh{rw cp 2 copy get A 0 eq{pop 1}{A 255 eq{pop 254}{
A A add 255 and S 1 and or}ifelse}ifelse put 1 adv}B/rsh{rw cp 2 copy
get A 0 eq{pop 128}{A 255 eq{pop 127}{A 2 idiv S 128 and or}ifelse}
ifelse put 1 adv}B/clr{rw cp 2 index string putinterval adv}B/set{rw cp
fillstr 0 4 index getinterval putinterval adv}B/fillstr 18 string 0 1 17
{2 copy 255 put pop}for N/pl[{adv 1 chg}{adv 1 chg nd}{1 add chg}{1 add
chg nd}{adv lsh}{adv lsh nd}{adv rsh}{adv rsh nd}{1 add adv}{/rc X nd}{
1 add set}{1 add clr}{adv 2 chg}{adv 2 chg nd}{pop nd}]A{bind pop}
forall N/D{/cc X A type/stringtype ne{]}if nn/base get cc ctr put nn
/BitMaps get S ctr S sf 1 ne{A A length 1 sub A 2 index S get sf div put
}if put/ctr ctr 1 add N}B/I{cc 1 add D}B/bop{userdict/bop-hook known{
bop-hook}if/SI save N @rigin 0 0 moveto/V matrix currentmatrix A 1 get A
mul exch 0 get A mul add .99 lt{/QV}{/RV}ifelse load def pop pop}N/eop{
SI restore userdict/eop-hook known{eop-hook}if showpage}N/@start{
userdict/start-hook known{start-hook}if pop/VResolution X/Resolution X
1000 div/DVImag X/IEn 256 array N 2 string 0 1 255{IEn S A 360 add 36 4
index cvrs cvn put}for pop 65781.76 div/vsize X 65781.76 div/hsize X}N
/p{show}N/RMat[1 0 0 -1 0 0]N/BDot 260 string N/Rx 0 N/Ry 0 N/V{}B/RV/v{
/Ry X/Rx X V}B statusdict begin/product where{pop false[(Display)(NeXT)
(LaserWriter 16/600)]{A length product length le{A length product exch 0
exch getinterval eq{pop true exit}if}{pop}ifelse}forall}{false}ifelse
end{{gsave TR -.1 .1 TR 1 1 scale Rx Ry false RMat{BDot}imagemask
grestore}}{{gsave TR -.1 .1 TR Rx Ry scale 1 1 false RMat{BDot}
imagemask grestore}}ifelse B/QV{gsave newpath transform round exch round
exch itransform moveto Rx 0 rlineto 0 Ry neg rlineto Rx neg 0 rlineto
fill grestore}B/a{moveto}B/delta 0 N/tail{A/delta X 0 rmoveto}B/M{S p
delta add tail}B/b{S p tail}B/c{-4 M}B/d{-3 M}B/e{-2 M}B/f{-1 M}B/g{0 M}
B/h{1 M}B/i{2 M}B/j{3 M}B/k{4 M}B/w{0 rmoveto}B/l{p -4 w}B/m{p -3 w}B/n{
p -2 w}B/o{p -1 w}B/q{p 1 w}B/r{p 2 w}B/s{p 3 w}B/t{p 4 w}B/x{0 S
rmoveto}B/y{3 2 roll p a}B/bos{/SS save N}B/eos{SS restore}B end

%%EndProcSet
%%BeginProcSet: 8r.enc
% @@psencodingfile@{
%   author = "S. Rahtz, P. MacKay, Alan Jeffrey, B. Horn, K. Berry",
%   version = "0.6",
%   date = "1 July 1998",
%   filename = "8r.enc",
%   email = "tex-fonts@@tug.org",
%   docstring = "Encoding for TrueType or Type 1 fonts
%                to be used with TeX."
% @}
% 
% Idea is to have all the characters normally included in Type 1 fonts
% available for typesetting. This is effectively the characters in Adobe
% Standard Encoding + ISO Latin 1 + extra characters from Lucida.
% 
% Character code assignments were made as follows:
% 
% (1) the Windows ANSI characters are almost all in their Windows ANSI
% positions, because some Windows users cannot easily reencode the
% fonts, and it makes no difference on other systems. The only Windows
% ANSI characters not available are those that make no sense for
% typesetting -- rubout (127 decimal), nobreakspace (160), softhyphen
% (173). quotesingle and grave are moved just because it's such an
% irritation not having them in TeX positions.
% 
% (2) Remaining characters are assigned arbitrarily to the lower part
% of the range, avoiding 0, 10 and 13 in case we meet dumb software.
% 
% (3) Y&Y Lucida Bright includes some extra text characters; in the
% hopes that other PostScript fonts, perhaps created for public
% consumption, will include them, they are included starting at 0x12.
% 
% (4) Remaining positions left undefined are for use in (hopefully)
% upward-compatible revisions, if someday more characters are generally
% available.
% 
% (5) hyphen appears twice for compatibility with both 
% ASCII and Windows.
% 
/TeXBase1Encoding [
% 0x00 (encoded characters from Adobe Standard not in Windows 3.1)
  /.notdef /dotaccent /fi /fl
  /fraction /hungarumlaut /Lslash /lslash
  /ogonek /ring /.notdef
  /breve /minus /.notdef 
% These are the only two remaining unencoded characters, so may as
% well include them.
  /Zcaron /zcaron 
% 0x10
 /caron /dotlessi 
% (unusual TeX characters available in, e.g., Lucida Bright)
 /dotlessj /ff /ffi /ffl 
 /.notdef /.notdef /.notdef /.notdef
 /.notdef /.notdef /.notdef /.notdef
 % very contentious; it's so painful not having quoteleft and quoteright
 % at 96 and 145 that we move the things normally found there to here.
 /grave /quotesingle 
% 0x20 (ASCII begins)
 /space /exclam /quotedbl /numbersign
 /dollar /percent /ampersand /quoteright
 /parenleft /parenright /asterisk /plus /comma /hyphen /period /slash
% 0x30
 /zero /one /two /three /four /five /six /seven
 /eight /nine /colon /semicolon /less /equal /greater /question
% 0x40
 /at /A /B /C /D /E /F /G /H /I /J /K /L /M /N /O
% 0x50
 /P /Q /R /S /T /U /V /W
 /X /Y /Z /bracketleft /backslash /bracketright /asciicircum /underscore
% 0x60
 /quoteleft /a /b /c /d /e /f /g /h /i /j /k /l /m /n /o
% 0x70
 /p /q /r /s /t /u /v /w
 /x /y /z /braceleft /bar /braceright /asciitilde
 /.notdef % rubout; ASCII ends
% 0x80
 /.notdef /.notdef /quotesinglbase /florin
 /quotedblbase /ellipsis /dagger /daggerdbl
 /circumflex /perthousand /Scaron /guilsinglleft
 /OE /.notdef /.notdef /.notdef
% 0x90
 /.notdef /.notdef /.notdef /quotedblleft
 /quotedblright /bullet /endash /emdash
 /tilde /trademark /scaron /guilsinglright
 /oe /.notdef /.notdef /Ydieresis
% 0xA0
 /.notdef % nobreakspace
 /exclamdown /cent /sterling
 /currency /yen /brokenbar /section
 /dieresis /copyright /ordfeminine /guillemotleft
 /logicalnot
 /hyphen % Y&Y (also at 45); Windows' softhyphen
 /registered
 /macron
% 0xD0
 /degree /plusminus /twosuperior /threesuperior
 /acute /mu /paragraph /periodcentered
 /cedilla /onesuperior /ordmasculine /guillemotright
 /onequarter /onehalf /threequarters /questiondown
% 0xC0
 /Agrave /Aacute /Acircumflex /Atilde /Adieresis /Aring /AE /Ccedilla
 /Egrave /Eacute /Ecircumflex /Edieresis
 /Igrave /Iacute /Icircumflex /Idieresis
% 0xD0
 /Eth /Ntilde /Ograve /Oacute
 /Ocircumflex /Otilde /Odieresis /multiply
 /Oslash /Ugrave /Uacute /Ucircumflex
 /Udieresis /Yacute /Thorn /germandbls
% 0xE0
 /agrave /aacute /acircumflex /atilde
 /adieresis /aring /ae /ccedilla
 /egrave /eacute /ecircumflex /edieresis
 /igrave /iacute /icircumflex /idieresis
% 0xF0
 /eth /ntilde /ograve /oacute
 /ocircumflex /otilde /odieresis /divide
 /oslash /ugrave /uacute /ucircumflex
 /udieresis /yacute /thorn /ydieresis
] def

%%EndProcSet
%%BeginProcSet: texps.pro
%!
TeXDict begin/rf{findfont dup length 1 add dict begin{1 index/FID ne 2
index/UniqueID ne and{def}{pop pop}ifelse}forall[1 index 0 6 -1 roll
exec 0 exch 5 -1 roll VResolution Resolution div mul neg 0 0]/Metrics
exch def dict begin Encoding{exch dup type/integertype ne{pop pop 1 sub
dup 0 le{pop}{[}ifelse}{FontMatrix 0 get div Metrics 0 get div def}
ifelse}forall Metrics/Metrics currentdict end def[2 index currentdict
end definefont 3 -1 roll makefont/setfont cvx]cvx def}def/ObliqueSlant{
dup sin S cos div neg}B/SlantFont{4 index mul add}def/ExtendFont{3 -1
roll mul exch}def/ReEncodeFont{CharStrings rcheck{/Encoding false def
dup[exch{dup CharStrings exch known not{pop/.notdef/Encoding true def}
if}forall Encoding{]exch pop}{cleartomark}ifelse}if/Encoding exch def}
def end

%%EndProcSet
%%BeginProcSet: special.pro
%!
TeXDict begin/SDict 200 dict N SDict begin/@SpecialDefaults{/hs 612 N
/vs 792 N/ho 0 N/vo 0 N/hsc 1 N/vsc 1 N/ang 0 N/CLIP 0 N/rwiSeen false N
/rhiSeen false N/letter{}N/note{}N/a4{}N/legal{}N}B/@scaleunit 100 N
/@hscale{@scaleunit div/hsc X}B/@vscale{@scaleunit div/vsc X}B/@hsize{
/hs X/CLIP 1 N}B/@vsize{/vs X/CLIP 1 N}B/@clip{/CLIP 2 N}B/@hoffset{/ho
X}B/@voffset{/vo X}B/@angle{/ang X}B/@rwi{10 div/rwi X/rwiSeen true N}B
/@rhi{10 div/rhi X/rhiSeen true N}B/@llx{/llx X}B/@lly{/lly X}B/@urx{
/urx X}B/@ury{/ury X}B/magscale true def end/@MacSetUp{userdict/md known
{userdict/md get type/dicttype eq{userdict begin md length 10 add md
maxlength ge{/md md dup length 20 add dict copy def}if end md begin
/letter{}N/note{}N/legal{}N/od{txpose 1 0 mtx defaultmatrix dtransform S
atan/pa X newpath clippath mark{transform{itransform moveto}}{transform{
itransform lineto}}{6 -2 roll transform 6 -2 roll transform 6 -2 roll
transform{itransform 6 2 roll itransform 6 2 roll itransform 6 2 roll
curveto}}{{closepath}}pathforall newpath counttomark array astore/gc xdf
pop ct 39 0 put 10 fz 0 fs 2 F/|______Courier fnt invertflag{PaintBlack}
if}N/txpose{pxs pys scale ppr aload pop por{noflips{pop S neg S TR pop 1
-1 scale}if xflip yflip and{pop S neg S TR 180 rotate 1 -1 scale ppr 3
get ppr 1 get neg sub neg ppr 2 get ppr 0 get neg sub neg TR}if xflip
yflip not and{pop S neg S TR pop 180 rotate ppr 3 get ppr 1 get neg sub
neg 0 TR}if yflip xflip not and{ppr 1 get neg ppr 0 get neg TR}if}{
noflips{TR pop pop 270 rotate 1 -1 scale}if xflip yflip and{TR pop pop
90 rotate 1 -1 scale ppr 3 get ppr 1 get neg sub neg ppr 2 get ppr 0 get
neg sub neg TR}if xflip yflip not and{TR pop pop 90 rotate ppr 3 get ppr
1 get neg sub neg 0 TR}if yflip xflip not and{TR pop pop 270 rotate ppr
2 get ppr 0 get neg sub neg 0 S TR}if}ifelse scaleby96{ppr aload pop 4
-1 roll add 2 div 3 1 roll add 2 div 2 copy TR .96 dup scale neg S neg S
TR}if}N/cp{pop pop showpage pm restore}N end}if}if}N/normalscale{
Resolution 72 div VResolution 72 div neg scale magscale{DVImag dup scale
}if 0 setgray}N/psfts{S 65781.76 div N}N/startTexFig{/psf$SavedState
save N userdict maxlength dict begin/magscale true def normalscale
currentpoint TR/psf$ury psfts/psf$urx psfts/psf$lly psfts/psf$llx psfts
/psf$y psfts/psf$x psfts currentpoint/psf$cy X/psf$cx X/psf$sx psf$x
psf$urx psf$llx sub div N/psf$sy psf$y psf$ury psf$lly sub div N psf$sx
psf$sy scale psf$cx psf$sx div psf$llx sub psf$cy psf$sy div psf$ury sub
TR/showpage{}N/erasepage{}N/copypage{}N/p 3 def @MacSetUp}N/doclip{
psf$llx psf$lly psf$urx psf$ury currentpoint 6 2 roll newpath 4 copy 4 2
roll moveto 6 -1 roll S lineto S lineto S lineto closepath clip newpath
moveto}N/endTexFig{end psf$SavedState restore}N/@beginspecial{SDict
begin/SpecialSave save N gsave normalscale currentpoint TR
@SpecialDefaults count/ocount X/dcount countdictstack N}N/@setspecial{
CLIP 1 eq{newpath 0 0 moveto hs 0 rlineto 0 vs rlineto hs neg 0 rlineto
closepath clip}if ho vo TR hsc vsc scale ang rotate rwiSeen{rwi urx llx
sub div rhiSeen{rhi ury lly sub div}{dup}ifelse scale llx neg lly neg TR
}{rhiSeen{rhi ury lly sub div dup scale llx neg lly neg TR}if}ifelse
CLIP 2 eq{newpath llx lly moveto urx lly lineto urx ury lineto llx ury
lineto closepath clip}if/showpage{}N/erasepage{}N/copypage{}N newpath}N
/@endspecial{count ocount sub{pop}repeat countdictstack dcount sub{end}
repeat grestore SpecialSave restore end}N/@defspecial{SDict begin}N
/@fedspecial{end}B/li{lineto}B/rl{rlineto}B/rc{rcurveto}B/np{/SaveX
currentpoint/SaveY X N 1 setlinecap newpath}N/st{stroke SaveX SaveY
moveto}N/fil{fill SaveX SaveY moveto}N/ellipse{/endangle X/startangle X
/yrad X/xrad X/savematrix matrix currentmatrix N TR xrad yrad scale 0 0
1 startangle endangle arc savematrix setmatrix}N end

%%EndProcSet
%%BeginFont: CMEX10
%!PS-AdobeFont-1.1: CMEX10 1.00
%%CreationDate: 1992 Jul 23 21:22:48

% Copyright (C) 1997 American Mathematical Society.  All Rights Reserved.

11 dict begin
/FontInfo 7 dict dup begin
/version (1.00) readonly def
/Notice (Copyright (C) 1997 American Mathematical Society. All Rights Reserved) readonly def
/FullName (CMEX10) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
end readonly def
/FontName /CMEX10 def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 88 /summationdisplay put
readonly def
/FontBBox{-24 -2960 1454 772}readonly def
/UniqueXX 5000774 def
currentdict end
currentfile eexec
80347982ab3942d930e069a70d0d48311d7190fa2d133a583138f76695558e7a
e9348d37cac6651806d08527c1bb4a062a4835ac37784cc39ad8841404e438b4
d52d3901e47a1de4f7924e0fb3daf442499175bab1226edf692a4956739f8828
e80592f450c5d5c22ac88bcfbe9748f61d18243a16f4a4467f084e8e2be46ef4
7fc51c3a8199e3cda62ff9c4fb73956dab8b6683d2156377808cb35026073e80
523f59a30d195fcf9b9fce4ffafc6d5649664203ab24acb938d58d246707ffe7
d62f04bec4b70c21ef75beb2b812622b3c74e969d72d3cd11bd7106294a99caf
0b1629bc7d4de6b96ca82930831d64575f23f4ad06a0e45e315b1d392411be8d
6d73c998789ff258a07a3c8c2057325784514c845500bfd1a971310cfc11d41c
1a167dbd5ff012c60add4e87325f6e5299032a839de65fb1473a166aae1876a4
414a434f22c1d241591fb36f857df6fa930608750ffc0c54f44994662b1f00f1
400bf752ea8d83ffc4cb77a290bc2d99981ae59a191748ba5c7ba1a9d2583fd2
1398452b6ff5d83a059f7eadcd2ef744e9dd22bdf9c79d049bf06835e878c32b
7765c69bdd8ef4deb4ea7cfff4cf9354a4ddffa689de961d16772491c7afbd7f
ffde42400764c68e954ee5c455a5687959829bc3b319b2147deaab3628662c80
30c5e02fea09609abe4eaa12e217bc3af673f1bc36a7039eb13fcacb4218fe0f
c5a3f9452d4edf46cc91db67b624d4f2d37502fb9f11af4da18ca40b61097f95
d44329375467ed13c5cb585ec53f62b83ef9502cc755af44bf32b87b8ae9f3f2
f8dbf72dab90acafbacd280db6aaffaefdff6d5eff26669bac56280a950560e3
d01714ba38659b0e4e28bf8cdc1f15ff7e3ea9d95a6afbbe3d8e6905aa6d531d
6b6dcab89e2036cc492c65f76ddcc3cfcff33fde3d9ffd10f7a90530fd5c7683
4329baa902e701ca42717476298c9ff511b1941244bb1dfd0e5cab92a43970cd
1bdb292eadd055c97972844fdcdb0aa06401e7b2632b9d134f96bce0064860f3
9859da7a9a82be0a840672a1331212752ae1b521b693b384a72dba8d37a86eaf
a0341e7fc5f6ef7a8c566aacb91e8bf5005c18837894c4eacff41dba54e071ca
83fe249b6aa6921340879a644a43e13b3ef9b1db789a062b37835a96c2ced7ee
50320bea2d3fca3d6ebb9a3bf3154cd11489aedebbc2c525153949bf33a9fb16
5a6aeebb1910e08ba05bfbf47a5a8506790edca009e4927288e8919cbf92e428
d4b0d462124ec2b4cdb49fa37a030b64e1b85b7cc19a4baff176f2f45737e03f
a41e6b068dcc5c26f539fd5926883e94430f0018d5bf9a50902d8bc5df0c6695
fa3dbbd6684d15d63b5172ca84108e8a12d6476a97b3ce2feeb426a1f2bfc7aa
75c3245cd5abc9c9ea10c91786d14d9316782bb114404c7a59a7f3d010ed437b
23ad80ca9bc0b134e6ef0ffcea86e58da6bbd2325b47f0af6caa6d4eed342e2f
0a09d360cf3d2626ec5745b2d5b5c63f6ef3d90a59d6ad274516f1e44287b9b5
9a47be39fd701e4cb1b23b35c99d517ae2608097ee02d6b39a79255869c81b27
27a5d5ac856f03e2a35ceaa882695c20d42ac191

0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark

%%EndFont 
%%BeginFont: CMMI8
%!PS-AdobeFont-1.1: CMMI8 1.100
%%CreationDate: 1996 Jul 23 07:53:54

% Copyright (C) 1997 American Mathematical Society.  All Rights Reserved.

11 dict begin
/FontInfo 7 dict dup begin
/version (1.100) readonly def
/Notice (Copyright (C) 1997 American Mathematical Society. All Rights Reserved) readonly def
/FullName (CMMI8) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle -14.04 def
/isFixedPitch false def
end readonly def
/FontName /CMMI8 def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 58 /period put
dup 59 /comma put
dup 65 /A put
dup 71 /G put
dup 77 /M put
dup 78 /N put
dup 80 /P put
dup 105 /i put
dup 116 /t put
readonly def
/FontBBox{-24 -250 1110 750}readonly def
/UniqueXX 5087383 def
currentdict end
currentfile eexec
80347982ab3942d930e069a70d0d48311d725e830d1c76fba12e12486e989c98
74c2b527f0925722787027f44470d484262c360cdfdddf3657533a57bb16f730
48bfbbfcb73a650484015441fdc837add94ac8fbd2022e3ec8f115d4b4bb7b7f
15388f22cc6198efe768bd9fceb3446ee4a8dc27d6cd152485384ef5f59381ff
da43f2d20c8fb08aa27ab2015b774db10dacfdcd33e60f178c461553146ab427
bdd7da12534ba078ad3d780414930e72218b3075925ce1192f11fc8530fcd5e3
038e3a6a6db2dcfbae3b4653e7e02730314e02b54a1e296d2bef8a79411d9225
dad7b4e6d6f9cf0688b69ba21193bf1495807e7a196cf14c95a4e02f9cd2da8c
db2546c6df52e524745992e18d9ff87aa25e4e1800bbe4ebb357c6ef55ed6d03
6d3a00c1ee8073266c21d2f0ac85d656abf61d7e5a4fa87da8ec3b5329e434d0
d2adab706b42a2e5331be5295399d803ccac03f631f01f39a022fcdf63486b68
7d15ef284a77def7fde4898543e7b5f7ec267756103e477f547cfb8d2311c4b0
09deff56085f5d419697af1846c8b88c1bbbae149f0f19ca3c8dafe19cec48fe
6b38357246d8b5cef80b53bab4cbbbe8bc8318cc462a4158258f456e697f6058
86010493f252073ee4e4c9531f23485415ad6bc901bbaea659ef701f825f4b6d
5c9bed0dce7b63810f906b33ea4955531ca1ed1fc120cc56dc1e277a33222cc6
c3a97552607b865783faf0895cbeccd0df54f57bd162a88494768435eda71a39
69718c0c5912d3167bb0971546d733e735aa9bcd89f5aa154656031ab3f6fe41
94ec225ad03ab8b67a9da43ab365c4df17c23e79f685c3b6fd5b654e4a6f2603
6cec3a8641b0b57f93eb95f9e238832aeac2061f3153e0f375513c974f1c38f7
b59edcc94716f2862cf71c9a2be8430985da1cd813b1e1c1b9310564a2eb1aff
52c190f50fc981dccb64bb2c1f7a62c216f211c162c2ed1c554ef49fbaf12b31
aa3b2a80fee259dc0a2a4242869ddec7c29e2941792b28bba7f2c6f77ef69638
12b07d6843f33b51e01c8626b26edc34e1e0fffadede5fb468e8cd5de7e5a64c
366967578f415484d122834de4a647541d66989f7d8b25d1712d8d16729bd9a6
472e90129a2683bfdc33e9dd68460c122b1abb8107422743a264a5055ac8ddb7
d589cc03c495cf4f3ac08c76af82798f5f1dc27a6c3a76f3c89b07c33cf509f4
87775d27ac12ea70524d255fd9123557af29714708644ab1f3d72d956de47869
8bb17cd462b99af2bc5f96bb2782acc526d73ce6fa3ca1efc3ee9c4a7ab4de13
8cf95c7bfc62e214f084eb6f90f48e47efb7259aa2a696be190ece3be75423be
a84da686ab868a451a9965d651f751a3b52a1713e8cf0fbbffe585b224271669
de017285eeecb2721a8085095d2c30427d7a62eea30538ef5f66cc88eb39ed5f
0c4aa5bf2c500118919c9d3f4aaf7d0c96a32bebd30ec3328fe44d26396164b4
3eba8579de627ef16f8a011b2459de453115f3ad6a0d0b1bd30e3be4caea6711
3d41d103d37da3ff5a326aa6729807af143194da1f4a99c3fa8a4f94d37bb2c3
ccc353c6c959dc665af9ba5dc81f5523214527200567311151c3b1fda12d97ae
2751ace7a2eed60bde6aa2db81e4e7c7af083eb5b01ba19db118556f653991cd
03e7433283a2f1f223c663148837f0aa9315aa6d4b525ee5b3d0d10167c606ac
f1b4af9fc611f8f09fc6f7c7c427f96775a4b6f5545aa2cc9f0d48b520c66b1c
0948e0874a3061066bf073154f8a27f5bc3e0d6bb3e4e1ab42aadb548b07cd25
41ee86773e8486d885f0af279c85f5e873e0ef94e871c0220803474341f5cb0d
43994fdebc235dfecad5b735584af30074ca53826992ef34d63769fd69d00b3b
31af81b96ed925ff04d116dc8af3dcdbadf6324673996eeac7dc8c3d281949ce
c0d02575115cbc7301c937551ec9e81d9c426e6d4fc01d423adbf88c164fe34c
49a15d5727f481f9fc6b6ad8f3fc5553c33aefaf7b876828812e43b34f30c220
3d3ed47167952c51648293395e5e829fcd8793b8a5ea98b7c2bd8e5901de8a7f
9981f68b06880407f38b64426710a3817246134e5c410aec996e331e7d47d32e
7c0a7f15dd98af6dcad0b74080bab9e16c0d4577c2e0275b30b689979eaa5bd3
43af4ddd3a0e3438430ce57a02099268a6ac930777045ef8c79835e6421ba8e6
be0d2c7f390d10311c215f1cd48df626d383cb8edc0c41f8e9f61907c693ff88
f45ab4a42665a741583ecdfe2c14995c3ff5aac8562700610bec555e9017bd21
2035f0be763ee1742b2bc2b815b78390f9a185b33a640758c13991ec99ab4dda
3b5c86766af13cfb43b3745ebf0201d3e06a069a05e21b96419eb790e4da9d75
e4bc2cf046871a79f67bfa95f14bb6263110ffc120aa0550561f3101b797d4d9
b29bd971c7f0ab52a7347c81c26b5b4c1bc2481fb8e974fecb61ca60925c8a95
391786330b563e2470c56bf3431cf0490ee2e842a8638e8f3ee58e0b3b12d3eb
199ae85b4ae93d974afa758560c2d2d8ef13395e7c4b31a688ab926dd5535cf6
3bbbc5636e79bdd5d711dbc239e900d5ab60173126d47a049dd7b13823bc2464
54c11e18a26115df66d43d951364a9f7df134d23e861f697a16f0f00ce983a06
4837bc42876acfac3c0245c7d2484b205863abe9d643d9e872061d482c55f4be
d16a0245d78387f04737c71ba61ffd5b25d3cd4486b173584454bbd614d801d4
2d6124c2b9e5985e7b6cc858690a3df7eac9c37d36425d51be4149fcb0cc3f60
0978343b07add25acbf30905d55de0f5c1750b800baad552aed9a2afc2a2c8dc
73b7975a56f1302e38040ed83e0f446ccdc20fdf0de774c31d408ede1ce713be
af521f0227c922bcb4c7026488d401d3c0176c5c9eec807bdb3656bad7f6923a
5ab3249557f961d785f8fb81167d8669a6e7c50bb96b4eb6d478d497830433c6
e86efafca130c9aadec65d3dbfdbb9ffc485427e3a5962702d285882a4db78f4
ca9d5d0eb7d411b001d5f606bb1039696de2e70be55c4aca570d0bf900b20021
9375fdc36b03a85a89f5e6648012fc8980b1233ee57f1cfd71ffc4dc9c665f90
8a2d4641e4414a929053b0f3250303856c232b3471067f3ca6df468b787afc36
113e13ca259057a70ad84da0fa62c316ffbc10f1709f4802655d23f215ae81be
a254af9e5ebdf7b0c8ccdce8309c36eeda687044855761cd29106129948ef7c2
9326a41396a5d0bfc7db389b1a6a69cfeeccc32c3df63b7285c76d5685f4df5b
e24378de79182dc7dc7bfa2a2085e2a44c87d753324b61e124e12bda220b01d8
36f8e7618cdb779b818817c1ff9b9c3ca5ccfeaff5ae349fd46bdded94778300
adbfec5c6922d5de17852590b0bf0f265d28fda5b4646e758b95d8a7557c4fb8
d46a891befcff2b198fdedc56b59446a2692d74123d0b82fe7941b1785c379cd
b5d36b99e85ddee2dce96609f43fb6bd27b1a4a4ccfa61f8af22659453cf8017
91583aac2d5ead810019f717d0bc269055764639fde06dd712e10b904bc53df0
1f34d3d70ed6cf70755a74d65377d1968548ad5a12fd0a94a544672a8a73ba6f
d9641efee78be4863dafee89e0adb45a942dc9e7684f09f785865bb31712cf59
67f38376b959d6b4494cdbe67fab5d30f8f8441f5b747971fe
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark

%%EndFont 
%%BeginFont: CMR8
%!PS-AdobeFont-1.1: CMR8 1.0
%%CreationDate: 1991 Aug 20 16:39:40

% Copyright (C) 1997 American Mathematical Society.  All Rights Reserved.

11 dict begin
/FontInfo 7 dict dup begin
/version (1.0) readonly def
/Notice (Copyright (C) 1997 American Mathematical Society. All Rights Reserved) readonly def
/FullName (CMR8) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
end readonly def
/FontName /CMR8 def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 49 /one put
dup 50 /two put
dup 61 /equal put
readonly def
/FontBBox{-36 -250 1070 750}readonly def
/UniqueXX 5000791 def
currentdict end
currentfile eexec
9b9c1569015f2c1d2bf560f4c0d52257bacdd6500abda5ed9835f6a016cfc8f0
0b6c052ed76a87856b50f4d80dfaeb508c97f8281f3f88b17e4d3b90c0f65ec3
79791aacdc162a66cbbc5be2f53aad8de72dd113b55a022fbfee658cb95f5bb3
2ba0357b5e050fddf264a07470bef1c52119b6fbd5c77ebed964ac5a2bbec9d8
b3e48ae5bb003a63d545774b922b9d5ff6b0066ece43645a131879b032137d6d
823385fe55f3402d557fd3b4486858b2a4b5a0cc2e1bf4e2a4a0e748483c3bcf
5de47cc5260a3a967cac70a7a35b88b54315191d0423b4065c7a432987938c6b
edad3b72ad63c2918b6e5a2017457e0d4ebc204b094541f345ec367ae85ca9bd
24568a01d3b9f8095f7420e6c423c414b3dcce6da48dd1c89a56d078e0d0e2f2
62a13640a06d17e44ee3866c3471fb58fedf5a3b77294517651c16bdd7267d39
a54e7171752dbde63ac19bb4b3021ce95eb5fe67390b09ae4d9ed4d704a67443
f55dce17acd996c1f5e023c9e5a18cbeecc3097f23763acb86cdd7cd13381ae7
4e48495ec7fa520539d87f8a8dcb3c826275469b6800876a457e7d1e5be867c7
b1ccad69742a8c9b0ad943482bf2a4ad0aed40baeb69a0233bad36b4ca2d2da7
322956c70375d152653500b2f22d2ab6990cadde2da14b4917f7515e64bc3d96
bf775258fc7dae4e42a4c9b6da8eddec4a800c8aadc8d75e48cae52137e05c03
677f5d6a82fa46d9f2fc7f56d62e5c605a1b7898b8d1401c2cac1a0122a2c8a7
aae09607f2c5f29293a09b9959399283be89051452898238b777db9830ff4318
a298b221c4a820c700ca964fc99e6b1d9eb0bafc39be9aa9dffa2fa326b2a466
1e67261bb3dbc85844e76f9313ab533ee16bcb478166de5502b68e6ec1ea6110
f53206cf1cfea419571b0243244b32ea38b828a01e62b03bcf476a32c2341cec
b8a0fa2a3f3f339315d5f3aa7704408f6617d026ffee4925aa48537a4b2e556d
225be09392546ad561cd46cf766f0ba14c6854c5af1a528c3842b0c5aeefefcf
19f19cbce5d967153c4f88e51c776cfbe10d39328466f7a3b83d85601ef4d1ce
0cc136610fa6a74d9676e4e99291d565cad27b9eb2337b0eba4148efd0eb2866
ebf0a4209ba135ad1376cf9cc2d4110f36121055caa3f2e01780740eece6c18a
13a2dd210687a04dfffff599203049443810003f7fbab9b6ebb55d5528345d36
c71de3336b7c09ea4fbf2f52752e5d87d81e529b81007e4b0220ae61547416df
4d69e3f44139fa1f615166114637fd9735b715bb9522046944fe5d3046d82bad
b10acfb9aefbe7771853e5df51c2145aae8681284a6e403fc8530e748e531b1e
980de41b012957c20315bf1171485e87b3cab8d162c866f25d89cb47af604166
44492350ee5fbd58e4b298ab2ccd1a999994cf8c3292a97de6aa400e7c827726
f01fc6a55ad1ef9314543899f1abe3fd27bc6bb1ef3ca298efc7a4deb14f0e80
782bbc6c622c39d92fd25ad76a6ae5df82da0a665ba02644f52e770ac6b46067
73e37185585f7589fdc5bf0bbdeb90e1ef6becd39b49e70ecb04c8d933cdb416
345b770790fb510a5c05a026c5ce887b4c628e201d18f10b0d16379de6b337d7
88b4f1cecbbeaa26fc60ef6097ba67798acf7546fcb85f64515c16e2a5ba2dd2
b11fe07f5a74f22c8467005afcdba58269913c26b0b7f5a56bdebe96c8145c78
369e8c50dc9d7e41e3c64f8982ecad1a016f82e209b822eeb909362ec1336c08
7095fcae4b6a9fa5666973bd550acc5f87408032d0c735a84210ea4f4c186b65
9b7e406ee3234c60c17c48ebcf00346d791738589c348f5a6e77ccb8c0836402
7f2aeba0f115c8e937bcf5bd8ca624590cb70f34e019b6888e627476
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark

%%EndFont 
%%BeginFont: CMBX12
%!PS-AdobeFont-1.1: CMBX12 1.0
%%CreationDate: 1991 Aug 20 16:34:54

% Copyright (C) 1997 American Mathematical Society.  All Rights Reserved.

11 dict begin
/FontInfo 7 dict dup begin
/version (1.0) readonly def
/Notice (Copyright (C) 1997 American Mathematical Society. All Rights Reserved) readonly def
/FullName (CMBX12) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Bold) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
end readonly def
/FontName /CMBX12 def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 46 /period put
dup 49 /one put
dup 50 /two put
dup 51 /three put
dup 52 /four put
dup 53 /five put
dup 54 /six put
dup 55 /seven put
dup 65 /A put
dup 66 /B put
dup 67 /C put
dup 68 /D put
dup 69 /E put
dup 71 /G put
dup 73 /I put
dup 76 /L put
dup 77 /M put
dup 79 /O put
dup 80 /P put
dup 81 /Q put
dup 82 /R put
dup 83 /S put
dup 84 /T put
dup 97 /a put
dup 99 /c put
dup 100 /d put
dup 101 /e put
dup 102 /f put
dup 103 /g put
dup 104 /h put
dup 105 /i put
dup 106 /j put
dup 107 /k put
dup 108 /l put
dup 109 /m put
dup 110 /n put
dup 111 /o put
dup 112 /p put
dup 114 /r put
dup 115 /s put
dup 116 /t put
dup 117 /u put
dup 118 /v put
dup 119 /w put
dup 121 /y put
dup 122 /z put
readonly def
/FontBBox{-53 -251 1139 750}readonly def
/UniqueXX 5000769 def
currentdict end
currentfile eexec
9b9c1569015f2c1d2bf560f4c0d52257bacdd6500abda5ed9835f6a016cfc8f0
0b6c052ed76a87856b50f4d80dfaeb508c97f8281f3f88b17e4d3b90c0f65ec3
79791aacdc162a66cbbc5be2f53aad8de72dd113b55a022fbfee658cb95f5bb3
2ba0357b5e050fddf264a07470bef1c52119b6fbd5c77ebed964ac5a2bbec9d8
b3e48ae5bb003a63d545774b922b9d5ff6b0066ece43645a131879b032137d6d
823385fe55f3402d557fd3b4486be79011d1f5bfae5c1f476ee6f05eb1d2caeb
269958b194521197b312fcced4867f3c8fbd030bd715d8ffda1dcd454b174e7a
1a97b59fe770e67702519d9d9b23d61ac08424d555242a8ca08c49aef300945d
99b999a79ce74804ae6bfde623f4463371442f6523a5f6ce19c839a708c02513
2e22c696c8ccade45680e5197189d0f98e7f0d5f955e353970b392cf530a68cc
56b0035ddfbf206c3074beeb0739dcbca272a6e629fb7aea2c5ba7bae50c7b4c
a595df78200c352997ec3ee564df229fbb5473f5e8ccb1cc0153e9a7e299a8ea
a29b69d1b622b1f0cffc58291248759607d91150cb0651120970dc9f743bebef
44f6ae92facec57658999c8bf01f60611560043962c0695e1bb87d090e0fdaab
659d6557208a660be9aeef8ae55f71b8bc76394d792967e41bd8023b6e7f8c3d
9987d5e54c53bf2bbb32855b946473b44833bd78873df8e4c7e668ffff25aabb
8da4148f744b9d0524d6cb8281247b3052cc5d66f3f1bcf8a56a3fb446ea587b
d8be30257652cee035628aeddfd8283b5ad21b8b1480ad24d898970ac8a1e33e
543ce4e3c48f9ee621c5ce3e8ae930f890011b630866c988606068d9e92396eb
f51bb3db204505fc3d09d4701ac703a14d92bbfe27bd7411b363a88e33a8e9a8
025ac31f21e73dc52b333b918d0b1270c54873a490222d041a66e0192612be6d
2c88958a8f70c10390146ee5091df020ab97675e8e6acf98b28b539cd0a20d24
a42f535ae44b8f5e9290b38fc6b02e1bbbdf1aca96558c2dd5afbec53f03ab51
fbce958ed4a65b17fbc03f9defd4aea4a15229f3c320876235f2d8b69bda5f48
03a2798790d35b394c63295997dd487bc603cdd10d18f3e3fcc7f17d2a6afc77
f1d7f6cf69d2a86b104b9d3b260e4a78716927a485ad8a650d610e68378f4514
3610b087981f0a0655090163dd2dd4d0030faf6a953896a9cb2cd033ec99b744
27593863fb4d92a8b79375960cacd395e5e12ae16486882a5163c02b9dab6039
9a0c05ce10d8d1f1a34157bf32bcf4736deb251a6b8917bb293dcf7605c2da0d
c88c8c73c8633adaabd85f1af4c5af4182ca0db755206ef1b9e6741a531f5517
f37b640b28500b6e3bd9f6e652b46cef284e1bacb9163ebb051f23c14cdf5ded
ee2e7c891ade146accbd71627a858ed9ea616a59243c79c0bee7fc853badb36d
8a5ea77cbc8b4bb3ac42d9229f24715f9f69c975336ef231543c917b70ffbd0b
99bd5fd2aaf278c8c3ff15bd329b25cae458207d622cd28dc842163ba5a5107d
8cd943df927399f6151700eb715fe93fb1464be8b85b9686e3c83e83eb37e64b
b3e7fd0ed3781ed1fb317081ae800a7d24e007c83dfe817ce23c469fe5bb4c62
edd02efcc49515bb9988d5851e94d06d96488d4bee5b6afcd807c6717cfcbf79
17c21d91bc4e829ada9b5da1be4eeb33fffc91e2c9524eb54be48686ef38f5b5
137b21fa006010c28a9a8f5130ccc6f2322eeaf4c8772c05c5522db2179238b8
5c63630d000ca97ffbf06b8b4061a99b882be5a4d65ee709788ef0d991fbffb4
5e620532d1c7d72ec9fabb3914003dcd5f0c565bbe38c9da4484219bb3f6194a
c2c60f80e3392a483c9270b6a5d32e218dc865b6507fadee3b09a713e4398ed0
4636c6f2aa8843e8b36b2878342760d87e2418b16433f8db95c3dad5f3a0f67e
8443dea5f13c7e123273711109447a261c35dbe8ad0fb0d496318a738f2c1850
ce13a67c42202dcef48b0bf9c59b57734c620b5616aafefab01c86abe64295d0
11ac9d75963e3c83530b2fa3e56137d09ecbaa7f93e182453c86563f3017dca2
8574983872b882ada60fe0870066d2435f09031e8eb304a362186d51b9b414c5
4e44c1e5a83bc1799ab50eeaef4575d7c54447f48d0127c81d1fd8597270f003
46ad688d2b013f2c536067901df9911e62d5d35827bdfb9fd455b180fed1f910
76fbaa34670644b729f215844e12343f1429288b0570309432cbf3fb427f0c9d
bd507e9e88d672eac830d1cd79f84cc200bed829cba4232626f240ecdcf5bc80
8a7baea6f3f6d7253880e6ee8d5bdde7e10782f2f21a3642ce96a6c48bbe9fa1
519076aa59a8d0add8535349d00e4d1b7a35c02b3e74f71056ce06b138b371ad
638e9e75fc4af94ec3d682aa01c0510740132ce952a7300e585d23f9d1d5a860
4942b9a0e0204b14971c0bc0c27bbdaa771460beb73e02d96c7384ee5aa8dd91
a140508e0652c8f8127054be85ce971a3b1afed8540889ded1a06d97b1a4ee86
3ebdd333070d9f0840aaa5871ea01a5fdd8b79d4a4fff0656267d34783ba4ec5
1ccd02485f3d8f36e88550794092cc608363f306d63d5e1446b86b1680b57d26
46546254d8a01ddf481308916444d92103b9c03f48fe6aa07cfda8a62e2568d6
b479c50a9f1ab5c1a8d241062ff6a3b92f545f9499042322bf86a6d2f28625f0
5af84669de64889e3ef06851ddc4d2db0192582a622dd03a10f5da61696b1db0
7b62eed9d5c1c1ee2f5d2f45ef38b1cd3cf868ecaf491b8d38906c3d284f04fa
7eaf3cc079cffb8bc166a060f5c3708dd3a965e4ef22c4a1e5830ba5b061bcbb
3e52fbea9f8cf249b1571288c438d659eb48b1c86b1ddc707e350284d846ffe0
7eea2d7a89ffd23ab28df068fb6de06dde8f4458cc15c16cf325daa6b4bec7b4
3cdeb6fd99566755157165b883d7f10ce8ca64e8534c2297963b8d8ddbff6803
3b0b0ab83fe91ea4929efdca3967ae5183925b480572426b4a7677c924a8a4d5
038aba6f14f6260e4ce09717918c2978dab446f23cbf97807ba3d1af7fef7b0f
d0bee6560aba1b22b1e2e95ecc8e9d714e2e394f433fe1092a339a94702cf085
5378b7681e16b0cd9b4f36153934ed966581337ceeedabf186de9741f5642af0
91217cf3cc44aa693c60801f5c73147d56c32abeecf24e890b8e8d9b7c1d7b12
150501f6137c3b6b62eb14f29cbf074f8b1a1ebcdeee8180755e9af41b1da95f
ec18604581895b2898b11ebe26a0dfbd81c768cf77546568036b1dc3c99581a1
3340ae4f10d162723a6a70bf34b8422a4b4ebbfac0434a8886b9083ba908b0cd
233d3a96605167b840338d07881e9e404f8136475a9359504cda066a745a49c0
0306f719ad00a154d70ea042c85164628de88a9c09c56be4995c1ce6aca97f2b
ceda7b1724fb5ddda5a49c20df94e3759bb6b263a173506234b6b204d3a051a9
f5dd7252d8c54d7826fc089adc799e43cfc23343db09ab0ff60c8647c052a598
b10c70677ce6afa3455736d5d9f6f42795a6fcf36c491e43cd9c20e94dcae381
2da4b4913c69d9b4de51e6ed91dc03b8a09fd8b515949faacaf34709462afb5d
b9b76d4ccc7ef60b5241cc62a89af8eaab4dbfb5747306446000712507357b03
0247686d80d001b8f53f5b2e102b9dda5561e1c8e0cbc75ec3ffb71eda3f712d
cae6ac60620bdab0410318148ea97b842d6d4c7e4855365cf56bceed325d4dd3
3ccb886db6412138aa903a00d4befd54008efcec184d2d0e5effe0854be6111b
10d8e096e3b02a00b5fa35393b02d0df408b69773ec2c120add5577ccc027fca
e78677edc64ffc94e3d4230e660a15d6eb7b154ffaf916b70d9bb4a5449c30d2
bc7f2cb0790f64e29ac2ea8ae8b44d7c0f5043f0a325aace315a0c8fef45c542
584e4b0e0bf199d40b39802704deda6929f1f4b382429bbf70a3c8c9db7ab23d
2410eb5b21f8265e9a873e3ff5595837496fab75da25de761b8dd96af94d5b89
589db266507578df8d74ecc1feccd73d9bf6bbae7f694e59b3273cee692269b5
71daff0123626a91edceb0c630dc949f297b6ac183077d74a3ee6e8d4321b1e8
20cf2151032db3d09c0f9c024d1855021a506edcf0b9d42f2d6b0ebc1914ad2b
13103308d760d2e61ba1f2a7217e3cd345a1f91dd18e2038ebb3ac9c1ad9e69a
eb4ee620fcf55aca008bb5157d3882683184b685a321e296e51515fb6a7eabca
c56206e4289d376e1529744d15be3256783f1b8c3719401404699f738cf8084a
0a2432dd1135d1f2c3acd23962fa5182b471564ababce34b42ffeb3405577a64
6c12d85f614b77d05349710b45efc0d83dcc4b3d66c4dedff9158d4cc0232552
da30f9b0364f9f349b47628761bb3d8463a6cb6dea0309b506cff05e647e1b9a
b75837c29d763f99775ff620f66ebfed268fa84a6f9b4594e53de294f4796cc3
421d36310056c19a7c8bc9151d85602832f26500874fb87f2c07df0ab85ffdfe
377cf41aeea9419744c28596da651f87ec441a1f8dfa145a4e2b9331d799417a
3c98bb6fc78fa492081882a7061a8e8f51493cbca74d70aaaa8d11cafe59de1d
89b0162cc33b522a3d838b65709c64b93eab03271cca3e10dc681db58edbab13
f85de74f9148658d3b6fa6e7c18da8c7718d402b6cca179ea923df3b0f41f9fe
9f1adfb8cff4b4466b9752591e5aa4c3a9faf19c43a6f4319bc55b16e664096e
7a7a33dd2dfeffbb18e470d13cd38d33ef127c9ec4dc0ed1c876237fa7423337
7f6678ca6cf08d6b237fc41bc484cfb4336934d35fe041030c0d5f6cc9fd8064
4a79ec8e7902de7b3d04c3bde137340d27fe658b54111a285d435cbe0d61def8
cc4c67f87a30cac97dd92702971e58228cbd4883920b15c072e1d2252d10af99
230e6ce32fc3ba9ab0d3c7d9478981a84ea3bd16665eaa1304eccd640a245c8a
7d3d030ee330f27126aa23bd4698ed6c3bbb564a66dabc94407efda675c210a2
c7fd52e0f1e8a02bff9c4a4dbd047f29423e2c01e6a6f1ead9cfb3628ae8fe37
22d629cd6584ddf866e4e44451d4c0f750e12cf3d9d2fcede7d203f834e6ca29
aa3f95d8bc42a60e6e2a5cdab6c9dfb3ccc162cfdbf05b1d93dcd17d38872002
1f0d67d2a5bb784cb03a23d018727b2c31a7c73040f1ce7f429d598a33860365
175006c9eee5cdf5a72d7145389d14234eb088250e843712bd0922c421e332ab
29e8a4f5375a0dc81d6d3f6ec3467e409c61733b97eae7eae82a65ba12398dcf
2f54ad6d2f4f4f6cdc4461504170fb6df337dd92d31719f46ffd426016349978
b36901ea05c41ffe9d05a9ad194f5c363ceef189849ee27040ec4dfd31a44a1f
8f2882ec41126e0ef97398cfb0d4c6b483c7b06a851019f07b552e086102edff
8fde9bc1388e043c339379b798ed908cd237ef1f04ef7410fa831114add732f6
ad87a14a8a39601c2e5ec3ebfc48b2b2e367696396d488ec930ffed0b76d26f8
0d34fc50dd263d1a904a3148a3884d27715acc5f7def64540e284dc2cf742a26
983fae226263ee8ecb650a5459d49a0175bc69271eae9b5529df7c5dfd350334
f270d69b4a49e32689404bb4648696c9b62fd5dd192724649c6e779261ac137d
a09cc1f5d442c17e5bd3554b5c331c179dcf92631cac68251e188f14203104f5
79aae8b4829b823962aa67e8eb98806f256ed1f715c533ddd9cdd657b91cd116
889f08f73f6e777e2cc5e0e69ea867a8aa78b905a6e35856c0fd5508783bd12a
9cefc29a676b2e8692dd5698796442fb61d8ad95c7f0e828328b69eeeb5f4204
7df2e6c669df5f1acd95888a2ea5208847b38ba616f685762ebdd9a89246520a
bfee7358f3ebeccfb91c34870740975b074a10e990d0c73442680633bf5e38f9
3f7cefa89c427341987afe989569f9d740a03639eb362bdc5391e80a1a903596
00e457a2d75baa99800ec50d2388361599826d8abfda8efbda8a5123b7e515e3
ac1c759e476ee84ae31a32f5ef587519f3c47bcbcc57316af4b93e4cc7c6c9f2
175b93e1102d9c7623d667676efda7daaa4f69b81e026025d6b62e6e517369d3
2a950a629d765a715a99bccd57728ff889ed3e0769d2f19da8e498a9d523fa35
eafec616eca6bd8ffc78e8d194e02c92cc14728f7de4e01787e9468de706513f
ef76cce02efd1b1dff01559ede213ede4975641c9fc4509121c4993b174089a2
3427f56f5fc0f6b855c96d6ade1f2c20a59295b1105d6fd38b959ddfbeadfb10
155ef8adb426fca891e00552a41f8dbd5b53bef052dcf68cf047a2043b40d2fe
c4c29071b4fe430e7c7c34693fac915860d4974cc402d0c51ee6d3f2639a2c61
3afd9e45aa0eda523bd2b378bf2944a65e756e86950ad40507b16891cc166c6a
662fb27112dddcd69e8659fb892d44668e53de9aac35d07b25b155fdcf57f253
d218276a7d9d8297c24bd0056b4fba90b8488ff41cf7349ce20f0a3d63c90f24
f2f60bcf355be3d8a4e5ebd365185c0150abad94702184d817582959d7f5efb5
42b9710dab3ed5c8ebab54c87dd86b8298df6f70933e2dd3fee4851175ef1475
059d492a9e1659afdb0742cc1fa6342f123abae407b2af3468173a45dfbac707
2d0d1b5b37d2b225ecc651075a49fb7e00dd2b919273fb295abf3857911aeb39
086a1d132610995f16060aff23dfc1bc5bb17224bf49b4b0d47a891fb1c55623
e28aa5eefaa53d7993cbf20e1a7d4a23ebb414a798c1cb4c530e71dfd009bdcc
036f973cb4951163ead234148aa07fcbc0ee6ceabd7eeb9f9428eb2c326f84a6
519f56937e80c8d25a6f75de18fefddd1a0e93b47e7e79e074789ade3558d1b9
55399ea52c9ea221861a2dcf7196b7a2a288a07055abe059385dcee152a5117a
99050ef87b84bac2d2be0861c98e112962aaf8293d56a14be326f5923664f5bd
9ccd5965cb72712bb089e519b638f048ca1cd14c09f099a9be4a035259e9011d
08905c3519b58ab1b7c035ca5335869331235266a8a5e9168e708fcde30dd721
2e5f87f7652373b31ab0e052083c357e1eb47699021ced5fbd508a0b4c414651
44bd21fd682a9ba4b94ec180bcd6fa1a27f22013a28c40d30f54858440b4df85
9c108010942658d3c2ab629771d0a9d79a84508ad80b9870dd4587fe092817de
84fc582da2cfde63946c730944379e0dff857cb22aebc6a8a0056fb9c35b67ab
30afe0f6211715ae2c2b19f7d6fd0683f010b4c71e4137178c32b6099424618a
d368990b9c2c420c593ce0b3a402a6cd61fb4289e216a4cbbfc61254c49137c3
f4992c0baf46fff883c1ef636553ab9174ee1a504ebc43af66c2d9ce8b4227e6
fa1035e6e9079a109be14df403148ee68d37433464bd049dc3efc17415ebf364
189e326666ac9d8117189c46758574ee1a94514b2aa1c4e66cd1741c4456f6ce
d318791666e24ea0e9ca9ae79f73a34ebaab1ea2bb5bf9134d54b7534b5c86ac
0b017cc4b75a7506a7bb1309881c8613798aee0c66df85047e16448e40ca616e
5477b0d2f1c10b29d1b3e8a5b1c51cb50398d10c87510b940ddd4fff186d07cf
5c53d170badec1814f78c2a49833a826c8c1dab27944b2f98dcd0bc2978dc316
223e786a3a9262860383ea86b5805efd57ecace27402baec14ba78ae3092691d
a35d369471f3576ee64e1e82c08e81a2ff7e24ddb800749d6a5938ff6d47824b
8bdf82222ff1f6529118e4dc242ebcdee88a459e2059fb2fbbb2742b6eb1bf1a
ddb54e9b3733d62b1ba9559c4b4cf24c73b4756e6a5e1feab05dbf89abed3b7b
99b2eb0709a7551d62fe520b27c6a6d4e3643b19fb1202d64d65434c7ae611e3
33de1e950675093c007af6f226bb72131433b2daa5d9e74b8dd610371058c7f0
5a9d8d5785ec19185154c44a73927a3b9c0977f4de62ba0495a7b732c99fa2da
39e7127a77abcb45f2e433a11c21b9f7a80fcba87eddd0c8539235309d0ade6a
6de77a274ff46e84c155002dad3f84954ae45aa3ec753edfbe20e806812ce42d
5b9855bba9e156a5be18651067afafa2fe310857caab073ce9367b149f904857
ccb4175c5979d88bb862aeaba007291a2dacdbc721ff671193ba88fe0e12ea78
954a1f8869404f32ae2ee8c44ac133e12cf368e7c7756988932296fc29de038f
a3acf7cb63ef2fa53d7e7d066e4a5582cffe30c4b6d686e1cbef94ff6b759e81
8a6c6a678b13525d5aa9a0f288ab1811de685a22b6f6613af5550b2be2d1411b
99be6bd3122d46fc289b10f4099b50e808860796fc657f8a217b33ef26a224e9
7970f71e412dd4598763174c87e3384e552154d1def954f5d286ec5bf28611b2
d8e8827cc9dc16ed96538a0967a6cab361f804211dda419349fc70fc0c77ce18
e4d6d262e3fc7c7bcc0be1516f69a02b9d5eb74f7329680d64ea0701f176f6d1
f577890adf91c1961c1ace747b594da0f3fccc502379f933fad0224344b7193e
5508fb81f596ac7359e1522a3ad5ff7935332562ade5d813d06e8455ba5176d7
f6b7dc97474217bdd484c4bb6239aca44e63ba49769e0e6ce4afb9afa5f91256
82864eceb67cf8aec74fde784a522d65d2f4ab9828815fcda8290112fbeada07
00e5c85e8f8460a0dc08825298b76ad222059325f3e299a19b4eb3d86801af0b
cad5f02696edea6d435d738ae5c814c42c87fa753271722ff5e147b05091e084
02749bd962c8102107132f33da1d5d517e9e9d2c3b407fe9b7c065a54bfd43ea
522006ef563f668ecc70d92d3c728510c2425a37a4bc737114ac57fbd2a49ff8
5360601cde508b7ab9a3eada7ed6af3862ae80df58fe4829f8e86a494170c163
3c66384b64186efc2c00eb164672a09dc2780a94c51f546e1e730376fb9c021e
c0c513104e18defd5ec37597d5316e1ef8594a21894dd79bedacbb0c9fe30d74
fd3dcdcb120da0d6d90ea49d2cfe923fc223beb720c529b86cef9932b78c5861
128b475c0230f3e60d98328754f7cc14cd15e24811bb8994717b2f7c218d9cda
e578b1c170643b40d76b5b7634eb5fca82adc4194345e9768a246a501b1072d0
95bbda29bf921898806e90862dd5ec6633733732e4de99662475baff08dfb844
cbb8be4333596f0d51e02c1132fb1b40148b2cd773722cb0cbd9a284f8cfc159
16216fc5931912ce305134ae4283d071fb0bd2b25fa514d330857539fc6b3dcf
243b8d5a638063c8ec73c31309d8588df7dd60b1fdec303fc99d7d967e4e3801
856e5f2a374132d5f79304f2bfa47af96b40c4a7e4fea34b5a4d4b9cc401e288
086af7a49c6b992d221630b11ae8e70ced67402dd64e3166f25e10faa5555450
5b0c15703eece8609593b93e3d3f2de2735c97f80278151445322f4022d6a333
089fbeaf8cc9a0f0e07a40b86a26370f0429b0cbe1e1514590bd936affa78613
b22c194893b637d628855aaed502b4bf14ec56bc63d94d4b08e9f3fb75770e13
231bea91b2d3f2dd735daef24595aa53ab7867f8d70d70687ea8718dbe656c1b
22c9a14800c31e77119092b4f85f5718ad9ce908e961989eee436c1e7b3cb316
c18c819c1d40d7aed37a5b3d80b31ed18cc8f496847ce279bdb16336298dbba0
27c9cfcef7b832bc1966d5d047b867da926f60a169461ba34eed4d7fc75ee8d5
e74f70c3c51de85b2c1f991a9ef7cb51434e8a67fdf8d50d08f6e6828ac4cdad
5101bde4a5a43d1780df86527536fdbb3aecd78514ebabb219deb3f4d290e166
768bf0c6b372b2bdf939256dafc19129e676d7f2bd0efacafce7c64ec85aabc2
796c383ea74727309a7af4b9399def91485fe7b9fb19de17cc2f10bceb753f22
74c7af48c733cefd5dee2194464f225955f5b931673b5a63c5dca682cf42334e
2cfcd312ab9a1b541941bc526ce849fcfefd7a32157ca062f986cad01597b895
78d8bebb71dc2485e8a5b335283e74135be5345ded40e6f824fe249c0263f1e4
ced1716216332a20e9c9c89732067055f21b14becb3ed80d37ea4ad959dba6d3
075873db657f5046d7d3decb823fc3fefae168c2f68eafc3190949e0f3465d23
b5e5c52d759f4795a3e09795299b9ccb5cad6df3d4e9466f722df25edf857847
4851410316d8e9df8a3f445a54ff2f080353effe5052a449941749ba9fb3289c
ef014af37a53237a8cdf0e16ba2a31ea92f82ab2501581668a7d36f6c300f32f
9a44e6295b44da4168e5bcc90e861578b82b17ea1395ff9a36ac164e274b43fd
5c0d710a69f308600361a34611a48780d0e313b2b3ae86792952a7e04cd6b945
7b73896d99d1c34f02a1db4e319f369f115c3070d7b935d53fa1f5516b331b21
7be9766df2ec8401f3972666756a223d2c60719a1e95f8795ef351cdb84d42a4
638167e3660decbbe0159e5e6cda1dea1ee4fd943a99d6b3185d0bfbc8f07431
f8a02501b5616d4a51fb80bfa815ee3fca010fb4af5415ee82586f4e0dacfbf1
36b63167c583c55f41317380d13188e830ec7874c8826930b23122574fd2ae2c
a8ae616ee24b8621f84859ab2e9cc7acf7cd6e8323253a47dbe11da50714c98d
3e6bbb9c555adeb0b3bd015d3d2a16627a9b4a94e03a1b081432bcdd42c3f918
e4249ed5476b11cf0984a1232dc2a8b87d122dee1fdc128331f24bbb367e98d1
a3547ad759e026be3fd97c7357e989e2fe2232ee111b9b899548a8251099303b
39e8e5efb930ff7ca3d8b165fed88ce1bf10990d3326720ad9b16591a34f563d
4f470bf23b490960b91de1a1aba286da6ad301688cff8acf5264ef1808bb6547
61245839701cddb5fa8c44884fcdec70b0483aa66ace9fa95b10d365ae64dc18
3e638788c91479c483b61346bf4dc42a5b2c33919ec5dcb141081678783452de
f5284b733e312cde8d253cf1ee156871ec59e733fc23bc8c9af5b3644890d1a4
ba9fe7209702410e8c4aa28c288b92690a3a7af4109bbbfae172c983f1cdc9cc
55bd54ba8a4a0a2a2540e377c294c899b916e4de02a7fec4d149b1add144876b
63ae8fc9cca3ff8b6dcc834478b525a9b845fa2274243647e95660fefbe0f3f3
6bd8e91e3cd0c05396aeb9461dc520526d3d27c4401906d1bf82ffa67c9c32fc
dbedf13ec903e7a3df41671e387d5944fa4803e8d49db31f174af5228ebcfaf5
9a06cdf51b49bcfbb6a68c15d0af1d9357932a0f66c3eac76419af852218e1f3
6bb744
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark

%%EndFont 
%%BeginFont: CMSY10
%!PS-AdobeFont-1.1: CMSY10 1.0
%%CreationDate: 1991 Aug 15 07:20:57

% Copyright (C) 1997 American Mathematical Society.  All Rights Reserved.

11 dict begin
/FontInfo 7 dict dup begin
/version (1.0) readonly def
/Notice (Copyright (C) 1997 American Mathematical Society. All Rights Reserved) readonly def
/FullName (CMSY10) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle -14.035 def
/isFixedPitch false def
end readonly def
/FontName /CMSY10 def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 161 /minus put
dup 164 /asteriskmath put
dup 178 /bullet put
dup 120 /section put
dup 121 /dagger put
readonly def
/FontBBox{-29 -960 1116 775}readonly def
/UniqueXX 5000820 def
currentdict end
currentfile eexec
9b9c1569015f2c1d2bf560f4c0d52257bac8ced9b09a275ab231194ecf829352
05826f4e975dcecec72b2cf3a18899ccde1fd935d09d813b096cc6b83cdf4f23
b9a60db41f9976ac333263c908dcefcdbd4c8402ed00a36e7487634d089fd45a
f4a38a56a4412c3b0baffaeb717bf0de9ffb7a8460bf475a6718b0c73c571145
d026957276530530a2fbefc6c8f67052788e6703bb5ee49533870bca1f113ad8
3750d597b842d8d96c423ba1273ddd32f3a54a912a443fcd44f7c3a6fe3956b0
aa1e784aaec6fce08dae0c76da9d0a3eba57b98a6233d9e9f0c3f00fcc6b2c6a
9ba23af389e6dfff4efec3de05d6276c6be417703ce508377f25960ef4ed83b4
9b01b873f3a639ce00f356229b6477a081933fef3bb80e2b9dffa7f75567b1fa
4d739b772f8d674e567534c6c5bbf1cf615372be20b18472f7aa58be8c216dbd
df81cc0a86b6d8318ca68fe22c8af13b54d7576fe4ca5a7af9005ea5cc4edb79
c0ab668e4fec4b7f5a9eb5f0e4c088cd818ecc4feb4b40ec8bd2981bf2336074
b64c43053d2f6dbf479cf7dbf69f478ce583a36399a4215a0dfbdf8d67b8d5fe
0ca35b713c7540cff55c3d5d12b0e9de77cf0be21c81e1d7fc2f0dcc0c4d7d20
fca38a6476e8ac1412392509d9fafe151f3e642fb8d43fe66cb2980eaf136d31
aeab44e483145c0da68086fb258a67b538ebbf846b012fc2013cb38ea2e6d30f
4ff1fdd76d3deb798d173a3c2240208e6a236d77fe71c622372eb44e4e52fcf9
521b119756f0797a8ac429759c021016e4f106f036699308e047148c5b600c9e
344326fe2e822c8f8e31f55deecb8572a960dacbc9897632d82cebef3c0034cb
11bec619bcc3abfce1fe13979943cdefea5830b1fe52e4f26dcc4cbc758f640c
02b250a4686083e4af0f9f9566d6c5f17c691e886629d7eb1dd9ea346dd32bd2
189e139abd7f84dbedbdf9fc93d95544d36140d642c3c91f5c2c928cd098f025
5d8b7856247a172c3ebe844e4661e556ea5a771178a29651304ea76adbf78d65
1aa967296b7490d0a6f7b6ba714f3779746c98c42064ac13715ddf657b892c4a
ba94215e0b15e156f0604baaeae79cbf11e1616abd6b55735ff7e9f9c8d377c1
b2fb1c52f62b6a127eba59cc8458ba5dfbe50880f361f587968a70eb74a51122
32f40eaabbae979c95e1447ce09a7215ae4bbc2160a6f8e3b576927caa950071
867f06872bff3bd54bbdc6cd7e1e81b11e7c24797e0b11f8d1dd81e065d10448
f640ac333f1bc007bf2f498c7aacef4783ee761d285937da03875387ca7e3bc3
7e6d45bb10dcd14e68c14dfa2e51e00fd8e2edbcb66a1ee66d1393f7d19c755b
a130e923323c34b37b483a4a2d22187d2725c307bb7cc66b5ae97cb3c766a158
70ad048219f8d644df4ed6136516d9c4cc062fbda21bb8a70c02bc790c72b7d5
205218d2b75aa127fbb0eb88108521537e0768d2bc7c2ed40b0745509129a10f
c9076a889e9e08041ad448fac099ee671e175993ce2d9de92d66696458723fee
4605d7c73e7701e2cb4a2f48db99d3547028354069c042fa713956c42171bb7b
34fe4f02929a492248e7a6dec5d1ffc6d805b1ae2b70a97b56d79be379b62cbe
cffb26628c064a9f0f353d0abaa49a66cb17c24c1190396c7471ccd6de6a2a2d
55db0b7bd90e921cf3ddb785e1bcf8d187a8d40ff85968f63ab0fd0c944e1551
da7ec82948582efe77edfa263d634fd12b765200b4c64387ca01e14ed97af1fc
292d8d24e732bf373060e111b229ac0893a86f8387fc04da7be40f600f5c61df
ec23cc2252758f5a634016c9e5eb4f73563ebb0f1c02c5353f30261bff3f00ec
ee8c22c3cfdd21
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark

%%EndFont 
%%BeginFont: CMTI12
%!PS-AdobeFont-1.1: CMTI12 1.0
%%CreationDate: 1991 Aug 18 21:06:53

% Copyright (C) 1997 American Mathematical Society.  All Rights Reserved.

11 dict begin
/FontInfo 7 dict dup begin
/version (1.0) readonly def
/Notice (Copyright (C) 1997 American Mathematical Society. All Rights Reserved) readonly def
/FullName (CMTI12) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle -14.04 def
/isFixedPitch false def
end readonly def
/FontName /CMTI12 def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 161 /Gamma put
dup 164 /Lambda put
dup 174 /ff put
dup 175 /fi put
dup 178 /ffl put
dup 38 /ampersand put
dup 39 /quoteright put
dup 40 /parenleft put
dup 41 /parenright put
dup 44 /comma put
dup 45 /hyphen put
dup 46 /period put
dup 49 /one put
dup 50 /two put
dup 51 /three put
dup 52 /four put
dup 55 /seven put
dup 57 /nine put
dup 58 /colon put
dup 59 /semicolon put
dup 65 /A put
dup 66 /B put
dup 67 /C put
dup 68 /D put
dup 69 /E put
dup 70 /F put
dup 71 /G put
dup 72 /H put
dup 73 /I put
dup 74 /J put
dup 76 /L put
dup 77 /M put
dup 78 /N put
dup 79 /O put
dup 80 /P put
dup 82 /R put
dup 83 /S put
dup 84 /T put
dup 85 /U put
dup 86 /V put
dup 87 /W put
dup 90 /Z put
dup 97 /a put
dup 98 /b put
dup 99 /c put
dup 100 /d put
dup 101 /e put
dup 102 /f put
dup 103 /g put
dup 104 /h put
dup 105 /i put
dup 106 /j put
dup 107 /k put
dup 108 /l put
dup 109 /m put
dup 110 /n put
dup 111 /o put
dup 112 /p put
dup 113 /q put
dup 114 /r put
dup 115 /s put
dup 116 /t put
dup 117 /u put
dup 118 /v put
dup 119 /w put
dup 120 /x put
dup 121 /y put
readonly def
/FontBBox{-36 -251 1103 750}readonly def
/UniqueXX 5000829 def
currentdict end
currentfile eexec
9b9c1569015f2c1d2bf560f4c0d52257bacee583a5c939393e012707b47e0c1f
a47d284a1edc9d01a497d772bca8c543388e6dc0d1e2c4944740470e0914f65e
fb0737b0851b2ba713a9a00b36d07da6bcb52920b9b59efe587734027a3c5e65
66aad332fe6fbcced1417802822a3b81d6187875263d6bbda04bbcf6e4870fee
ad60f104bb3c5a766610dd11aea64a6b107b0b04439fa2888b8cc39232bb83f7
695aba81f0260cd5248b9e649cd803271dc8bb1656323089e9e2bb50f2b95088
87d31dc36e555668d9578b338402f8c259f6813b0b71e6cbd95e19c20ced8495
2559e47577e612a4d94de3c1b4c6c41a6a3fa9e2313457242de74c7e4c0d722b
3e224d18baa726369542682e9459b951b2ac638494880c42be4e2175a3c067e5
945bfc1a05d3de8c3e8ab97f80ab6000e1f78fc258b85d3c84b038d7d0f5be85
0d43fe03e26cdfbb41c36d14cb552e8447ca678efea1d275e85503123a2263b1
4077587683de69a8f5a88d666172668411d0d0fed3e037ee468627207505dbb3
59cfdc5d7f526fca5416d741073284f5dd2471e09f5916f4bff1a90eea4d1283
7731f6a36e5ea695f4efc3bf5669b7f60ab606df5819149c0c8a4817f06dc172
0543467645daeffe4457293e0c0407c4ec7857558d0452de2ac773f141783edf
81b30215ae8d2d062aeb3cb69eb0d62bf04780997c9c027a22896f456b784378
7f2ccdd4804375321e7946d3d254521249a4d28a360f4d3163912a688c16e807
15d0440bd27bb78fcbc89bc28028aab2f594f8b641e45b9c599180b69663eef0
03465a2425aa4f8b29dade493002fb335b23eb145108ef3ab828755d3753ea8d
f0683265497b1cb5cb484c13f7a4e003fa6ab3ed5e24fcc6125cee4e33936122
3cc907af3c64e5aaad882c356e673e6ca2509a71920e99549d8797e9af709e51
4ebefe61aa0478a60f3a2b7b3d47542fbd126303e31718e6b9c711d202dff7af
eb7c19098c9e2a52aa57844eb07e1bfe9067dbe7d0bcd87c86f4ea099deb2373
edf149ab7955979e26ad415a5c29c1dfd02b5f0678dc863d3d6e537ad3b40da7
6529df395597aad7f22d53ed7e16573ce620e179f10fc8e66d1eef855b5427e2
9a7aee650c79f4ee340b1bcc4aef263bba31c829effbd9df68ce46b8fd90d280
0c6578962ca80190291a33e9df17e4f2078edac3a0c4a6f24aef2324946a2b92
98db5f75cd6d863bc0d517059b837acc176940a09706ee9c8d15b512f449a2bf
1881a3492d535c40ede04a6e1d4101487ed7ea6fa84a3a1e144f23697e59f33e
e37596e46c0de577a166e98f86933687202b13ad9c8ab180519f26688cce5f19
82f8a5ad75495828e69adc5d0946dce9ebcec04916dba1394894a2dad637fa91
233a89befef04baacdf1cb4c43d93317e666e8539da224bb898b2acc84901aec
068e76cd51d80c45cdc3e428595f67c2ee631720fc47a3e9f5c9f61c47cc3089
fbac228be7966062b5a1b92e538385940ac26b130b11fd50c7c2308423c21a6c
49c4a29889e7bb5a544bd5fa101d9dd8d9ba7cfec6d3cfda935e92d692076472
7b4eedd1caaff9834a58b8e885cb998d5b38b5fd06343fe7b1217bee52064f9d
bd525d170feb87bdbc733efdd6025dfcc380d554ae601648d1ed116b0de789e9
3641552931ad67ecefe2c48043faae2f7a6c1d23f6e5b6bc1e213c9414adddbb
48b6163034b8bef796c524411b68b39790b29a314bec3d442c2b5a972d9704c0
a191c005c726b053039123099c45cfa00509a674e155ad2642bcbe4ef955dca4
29130f3be27cbdfbd39a8b49c2cd498eaf8056e558dc91b680380f34a91ca2c5
fc238690b7c31450d8ae2bfcb46aece5213df65d35b8505fd4db7185213c74f2
8c47ac8e0e68c5d62f9d3072790d9bc47107c33d3193e238189c8eae0683b1ec
4b726d753c6516a8898233a002a284704327c6b49996dc4f952fc6affb515843
3bb692e491e4666b69de645a393697d5cacc0a73f3c1c1a2735a0a7ae0066fee
d522619e9e8f2e98361f7eb694ea216d8895c3585c0bef75db1a25f73c9cfb2e
d64277a8ac8994e136b31473a1305c046e5c30de88fdb5ccbcf2e6a31a83f8ad
5519406f9ce08a5de96aa3f2747fecdf3531919fca59a6bd5b5c252660b0b5e9
ddc179f64021bcf38766c8e485975f9a7a7008308fda1fcabe6f60dd1debbbce
6ac6d787353e9d82fcbc0d47ffa398e45a27f3aab3d5f1f80a12c2c3b8d5af1b
99c0cb5442f4f9cc7784dc92d5b2546c0eceb65fe6c77d1963023d07c34b4077
f668306050aa8890685df93125ffccb0e9f673a3cbd7c5267308c1ae4014831f
efdc27ce9ea13b2b34c4f14dd14898b21cd6884525fd4534986698da722d49f6
b5199ea08eb30eaaf4b4334d2e6dbf23bfebd693b85e36f92ea5f04740e736a4
5ce5cf25a5345949661ea3d3fb26ed8a9d6156d46e075b2b73e98898ec583217
a58f8b07f86f601925c5744ccd76daa43d5bd44062b4f5913fc10d34d92db804
c12771c5441c4cfd62deb7c62277a3e52cd07d97608d16e7154f4b6a07900493
8bb6e8c90df95018e7f0cf45e323b6a3a40cadea762c2e3b2eeafe58ae38a8c9
9b8b0f75383803d50d8f8339ea65f6bedf1977b877cc4e5a9b01ef8e46347d04
69bf2fb2a0efe97138c5e286e777de823bc6e3d6673b915c212438b8aa1d16ad
16caf97601dfd53e884ed763cacd3e84a37b9b2d24cca5cc7522d80fef9e01f1
77f3f8f46f9b040f2c3c2a67dca82c9ffc9245045cefc92217178621ccd80dd9
13dca73c00bbd7a69f3358aadd815b3884a59739694842c76afd7f1be5cab173
3a4aef45780deac50edddd0eaa74ffcf145768d7d63a6a43c00d0b9d06b78a6e
920abcc214d6fec2c3ee054fd1e2bb00677ceec1f9b55b5c7358a6c9e5f573ba
2b12504dc2dc9f92e4449ed2ce1af704259f839af04decfe4cf9450c45e637f2
e2e4a43d27f10229ed60118e24a040b0eb32f72f46d7429ca4c063acfec7d883
f03a94d1b8445672e0c397aeaa003afd74e2211270b1af4a54d8bfa639570917
c41d9c97ae06d6d29fdc64868d00a76751559a8641cbcbd251f6e5269798e31f
8aa071ef70938b8669c3e7baa48c7831cc395d8fb0fe5af84c4f66be4a0796d8
377b4a5bae3d8f86fd69a4cc42af0a209f1d4df33d42c3663bd72942e1bf34ad
510c5ef84946ab1a2e5926859cce5e2ed9f63b1ad963935a398e811f80098b51
a8f1c0b8d4422f3f1bd23925e6771c9371dc7b37ee65d859572373c258cc6527
dd786aa876f80829d8a9d3bd3c4e6789adcd090b95ff0e47e75996ef2122254b
e7616da013d9eb5c0ce9d0c064f3112a2f12f3e33760217966083f29ea9354c6
38a142473e525cf34c82e61f8a8e5a612ea5055f59556c0d221573a26e12a8b6
c86003d2563d4fa8c4f494b9d3466c87ddb6f4fe70362fd35d2351a360b4e7da
c4c936d9066cd417e6d1b9edabba0391279c4586a8ac5ee46aa516699b9275c9
18750a4ece6137ae03bd7acf3c49755499041863f8c2db0e05a9e30830daafaa
a3817b52b9a9ee38a7ee75e5b330abf7b2a908d25d81ed10adfafc89a882e3f7
fce177ce7db825ce17afb5847516f97d1dffc66d7e83042e8c06364e920c8572
7fd8b67c3841ebfdc255017df6142eae413421ab6d55afd6047889af3a11cd6b
741641c3c9fb0e5999743fe458f5ffa4b022eb7c2f0b845ed4de5c9ed483ac96
46532663c74ea584baf136e5aa6042e58dcab16899a1d59c623a160758f4df34
20e28f1d951705f73574b2d93b5a201a4c2308633d24946f3262d6c72ded5d85
d79bcc905718d498f558e81c005912da8cfb8e8ff0cbff275f96685a32a417f1
6ee9b593e33b22191f8d1a60cd2509eae258d1e0ea13dd09851e6e6fc502d90a
8d10ac5e9235b9e67fc07620a0458eadfa3bb337a01d26bc66cfc0fd1f0e075d
52649b6a33a3e9bc0ee515ac0aae3cdcddcfd41dbfd90ef26baf0c8c7a7b295f
1381e7091303d2fdc1f4228c9830cb7aac783e7870e75d81eb3c1147e6475ae8
024eee0901551ba8cfb1bf5dfa7c10b8423181808958f7b93134814b1059ab5d
f9b546ae82b953f44817ea1068f0301622ba84092961534985cc2dc224596a39
798f5bf21dd612bc1c7e593fc5871af31de456d9733564dcdc3cd0b156602eb3
271de61d71bf1499d17a3da273ead0e097cb1314503c9ba5975cee05f53fd74f
005c9f8c7ef0d368d0dacd5ad62c3a9a6b9ba1c7c0fd57dc54dc31f2e28bc9f0
12f706c97f5290d2cad7775e9a6a88a4e12a8a6ab71398312c3a8efa3b7aa01f
b5147b425adf2d88a404317cdcf44e9ca71cf5b3fa340dc1737d0c30a6dc1122
286e3af97a5d4e098cd896482af8373ded40a9ac30c63564771cd200a9125a3b
fbc63830c8306a7cb3a06e7c2669fef87ebc4e0455ad93d67dd8aa24aa5077e1
ee135690835b3a5e8bc206863e48d014f38302738df0fc046c6905a89ea2851a
038194b73309f88409228eab5dcf98add3ca902c3f4082021e6db7670e1ce8d3
1f74b99c5f670836b14998f3836e82bf33cf32ad9d617637204c79c6b3eaf29b
78b89abbb7cb20c8b8afb680a49f2ee23c856de436be007cb708781824f219b8
995a6cb01693be8385a78ed6f1900cbeee31e23573603214b437580589d387b0
1eba654ee86646b7b988d18019160b08bbdc33f4c04310e1b121611ade333b02
f149b2747cdd0ecd98064aa6a46f642755feef513977433ce80b48fb5ead574e
5bd74ba52bb9110609ae295e57dbb5cb177ad0224d27f9750fa95c0be2350b3e
66b5cd0d2b217585a6c747b1e184f145dd3a6bd05a5cb609d651dabda8259678
b63bde91f8d982a1aab80748c38553a74451fbb7d6f308fdb5d4e7c1bb01d153
171f50b1c354c745feccbf2687d4d9de9a427606d7af2eb689ba6811cac79be1
702b5fa8593a4e6efffda92163d62860f9310272899843f10dda516ac93ad634
d61ef6f3dabd11e4a945410eb98de4a683e6e9abaab6012321726818b517612e
1631fe14e9083283d0d6c6d5725efbbe61e0c93a3360f1f69b09eb73c29359b4
6d5e7113618325c4bb66f8bd85f7e52f8ab611be5e3a9c58174bb784203a8ba6
4e9a9fc00175040378cb89745443249783cc9fc09b76a9fb95090fa2513bb671
a5d93ab582f5bba88074f8efd95a385e8538ddd4c52d1714c365ba3acb2fbde0
0513b3f8be94e53d389f5ef3b96abb6f8936c8c6518b50ffe080b4a65dcc981d
4e75c4d897db30a077ce752f2d36c8912f35e8182a2c8cf365356408e242ae92
d0a316644a4af7025c9c70ec11938f28293f05fe48b0a817509dd1ac5edd6a4e
815d916901a8dc9a28a69a248873aa2318aa5d4c46427b77f2fc370a4e4e6809
cf06498b8adf4af66e78a59439d817fbb0ba8a6c413e2c43b1081ec10191f0ed
a9bb66b987c764b627755e6f30479d2ea193e1baa7ef87ded83b3e284561db6b
cda25c88de50e908acf10e80460fa406f0435787a7ed0d988927c6ca65338240
34f38fa24e5cc46a1f9eaa852c83cbe5ac0f2abd4403196106884f90b4401884
ce9dead98fce8493f7fab5256b77b05a373ff15e2b948aabe1b85a516a619456
4746655b7f1a228ad230a259d8591ca2e19d06e2e8fa5b844cfdae47965efaa1
85b41a790d9b8f0ca842be20a4ebb23442b6287f45eab57195d5d0d7aae1c42f
dcae0b07a7f2ff3bf5d7f5b2fb54aafe65013099e1fd6d5568de62934618b08d
5056049ddfc0d0fb76e6fbd61e71f13a3fe176097117747641511a87479c7b91
ff525efd299e3c35cab635d388c9531f85ea9ec4b0f0030f1da021485f56068e
870aeaa1e95d301fb6ee1cc688cba519fd7011c748fd4a463d83df452ad8c2f0
e14842e57b4ab92226ab13e7a4ad574a239596392a803a3e3f13032e47ea8749
251d8e8fffdae5726887b59e402979033f752b0d16f53405a2e4906e029b9b14
99a6544ae75f4552a27c20e61a48f216933f90fd5f731cfc7eed525cd8dd3e90
e1a985cc758bd2ce4c3d4d624a8f875104d90d08e23d38bf01dda746f46fb2b6
a730e92421937131386a43a8113aaa584b55847b4f3d5607748af3e2e9649bec
0a94bb6fa2245e9f97077746d5142210909c79ed75f22a240c11028a05c4e8dc
dc4454b8d0456b1f9dd7c25b7ed85c070f44520582bae56b69138ec746d70679
6d316597e7a784f07a37fa68b589f76cc1dbc29d7d8a8e125b9701a62829c5a5
3fc6a2f59363165e0f87b38cfdf3b04092c24471230b3ea75c4ab057319e6e89
91dc575eca7a895a60a5fce44a069daaf65ddb01169214cdd5714d8178d1d285
8a420d493825ae40be38821c7a1e4a27f97f751c7f1621f9b7d4ef0c93e26695
fa546c148073a11dc68cc3bc272f2717a77c9eabe2d54ecfa44b440da8123507
e943cca8dd551dd05c63a475de5d7d2329cfc781a5e5e05a4f8bfc0912f4195e
3c51771b61af49ac0293aac079cb21141ddc021eb3c7fc854b51ef11e903c91b
9da63ff59f59e236c26b4ad9ef0e13e08c319912055ca13428681c0424268fa6
20d81127be18436b64aac1f9a00e02feea8d2d61eaa92abae8e3d1f6ef992fdf
077580c40e29be1eb79b0e209665448465163424fa28424219d9e47bb3d66261
c9839159077330c87b8039d037d586f9513611d94445b5caa9321a947a0fc43c
745d7e12f368fa9c1220d1d6bb6154713d81e6d344b5b341559b4c95f094d772
bf924be89ec421efd5880c17129ad3e2e1e01192193a5a114b00644f8e10e376
910e1c82f40e473816421bd389d9ea247cf49bc9d418127b6b74aed268455f8a
e5a71475b0265a36fa23e34c40a2843b8d0a0dbe5570cdc74063b952801d7395
f3dadfcf5bdda5a98cc808a6530c15266440841e30116c2e2ad0c261583bbbf6
ba7b1c70d4da4b1acf469c521adc32a2d9ffcacb94a10ba08e15321a257844fb
d4ae298a53c3c53a6838e264cd967a9d862e389eac42fcd8740c7dd938f51ec5
509fb4bb776bceb486b15364b4b55090292000cf599cd27f6d44f1a035a3547e
5656130f5522345e5253738aebec4822e9485ca643574c14d6f52d38684ce65a
d77017f48f4908c2a8041f5e70807b7dc15fd56c9d27c060cfe1add138f665fa
1fc8198cffd187602474d401e223e336330326a455f24968ae3857445fe5ae15
2f99524c65f470d387a36a66578dbf771541eeef07f65ac3916dec840182e283
7b9da36666e3e39a12b4230ddd98798a9f9b745d6ec42878dd04028c63e39eb6
6891a76311c885716050ea9b044ebc6baf773960df5abfbafd9d3b7a4822d831
9008c7bd84c5f8613a2bf8d652eb55dbde260c9ae865702f65902d114762413e
bd286f5059f11c9babd478512c3e8a8c0c04bead7a8c735bd25d65d774c7a706
b8e14c46dbe6ca549aa6976dcf22669c2bbb6f0fb68d7c0e50c56ef3421c6c25
737d52462ade73c91a15c517e5b6e8eec1dbee35ad6023a9371265efe67ed140
51cc5e1ee764bfbbc4357b1fedac460ad3e2da5f1856f4e12e25a4bc3451c37e
e9753c8fece758ab89148138c0038af65bb94898b8d670761ccb768cbe2a2c46
1a333b1304f51194cb2c4527d4270dcc916486ad4ea7559b2a0de97110ae99cf
b05b8f48debd076e99da056eae09c4b3e7bb1223461171e4b8d511daddea9fbd
5a1396ad284548981a199ff47a34e36af9eca3c8ef75619a9bd00ec150fb1441
84b9f24714575eb614b239884dc75aeb75cb555601184e3ff0cd3750ad6dc37e
e003fc4d03eaf596e4e6f0696996d169515b2d1f08f5d794384a3f3554ea0fa8
c2be1310cc6fea4f2d9a8d0c998da9c6d8f5754d8a9da619de5e6dce4abf6a65
0356b76b970e68d5d3cb683e41f2dca761138685989e3a2e3fa6381f6657b70a
bc1117468b745bdc32cb7685a4550e32139e38c5adddbdd2795677affb28711a
5fcce43bcb6b091dc53abd80a7b14f3f1c71e875a4b3a54a216b694ca9348fc2
915f925e40ac5904a3b8c6a55aaeae6c00f0ca3582ea12638c323ab5d9b112a9
43d93554e36c606f5910b5a99a91f95de6a4f3a8ee5c43b47e1df2c5d943e448
9b8dc69adf70e024455be51aa09827ea1c1f1dcc7fa8c47e8816afdebceeb9ca
fe7f706129161cce8cdf4bcc202acd55a8fde8a9c5e24f9951f66938f4e6acb3
bab700f6da739a61acb4b69728e6d4fa3f2aa50ef952ea0deea23039c06a4e30
6aa0ba931e2bf341c9e6aaad44b24fd4db4e9c57d343261df00f5bb33063a9db
477d73ff26d7a0507127585620c0c5519838dfe09eac786924b08a0ca1ce6c40
df52383ecfcf6359da204660bccf61e2bea5222e18c83318708ddd15ccaec694
2cfb91de40cc73481be6965f197424c2d4e0c5eecd9c72b8986ab5c7d12e85d2
08180ca60e60a08184ca4b5842d4750f089ca2095f67cab12ebffaecd047f0f9
210a652509bfbffafb51cab53ddc0c8058c9d150ef4a5c4b599fb7b920980acb
ba34b72264139a7740e1f63107dd0128355953ac943e6d32a825a8e597058c46
e2db268f8ab56f2881d69a8c14a1d06e52066aba44d5904a54758c9d5aa43f21
f600cc7378d53a8b3d8261c0dd08b339606f03fff0899546f0e078a7016a8caa
877a349026ddbee2b5801a78a385a7e454c60cafe3744087e7f32bb2cf593ddf
0d58f38827a2a56de208875aa1ecd933eba25fe402ce23a9e220679ca6278cc6
8878ac194cc5696d9d892af237daa3127b4cbfbb69f6525220acda35b07cd7da
707a301ee049afe8f07a40d35330ebe0d6ba13c0d73562d50d11745c5fdefdb0
cff4fb34285f7cb28f49fc6b5f53ca1fe18b8fc4645bec0a1b89f9395add1788
0ba124736cf713f68c6305ce30257388da525e42e09096b1ebf81eae731bcd5c
d0092f1f4f02454ceaf3fcc2f1296daed1488edf4cb9adc9ec16b3436d43f119
4a5b00bb8a014473ae303df69ea3e0df43161053161969715401aa11611217e7
e9c37b025a0b1787574e44850fa13c301a17cdadae0af0a02d9aede68175446b
c18b053656ddd707f12bc1d4cd833da1bba71776ea80bd99072b72b1b2ee085c
05d39ab6edc83f73b59a3df839021b8cc9660dc6caea01a8f93c303cb8dd66fc
4dfe09d65f2dc338320d5733b849fd60badda6029a700e23cd12f2cdfb7e5243
668954a70540f04ab9d5a111e97d07f2524645d69bb26cd546b7147f9b3d793c
b61e19bebb9040350c8685dba8002bb534f9c26a8b16779a5318b8f15fca1ea1
8eb01b12d29f2d4368bd6e9a79a3af531fd93bb69fea4049c63e653dacacac5a
296336e8aca8b17f5b3b306e6799ce1104c9cdd5e64cdfc9405f9a486153debd
387ce2b5ea366e01a681335d7a25970f85c5905a6004da04196109b0bb4a1b16
c611b01eb340dbb7c7401fedc613436718d678c1dbdffa3fa670a4a9abb69f56
e2ba2c91c404ea5364f368dc1aa17e53144f19bacb8b7776316828a1032eef2d
6a64c75c382fc0e07d0d65b85fbf359b1bda995ae725b8e143638a9b8e96a9fa
3632c1fb3b1d8dc682ef75d0fa3faca1e114e3748883a7a656987b9da42593ea
30587fc531609ceb9d20e5dd765ed55182efc3eac1a2192e24085d64557d4f71
e64942bc3dcf26a4284124c4a8c0d31a665bcb3ea7391f6db0250a1ff77b75f0
ebec41c952e0c2abb18f344a8bf1a78638ebc925f8201cae2a408ed8bc24d2c8
f508025d4a8832efbe5b16ef7c707c01486072d54af2fd4bc8029e40ef05495a
9844bb750ed0b72c1bce8a856868ca1fc7df1f8d92790c8fa7e93fa252d4ba17
bd6181290519e38845dff9b274d687ae2f7d597f121f8ec35355c076c3dbea37
f960f612dcd1ffe8f528914ef26bde3cd85fa5bbcea2ba0133c6f6249aec9e32
296101ee7fbcb00629c9204f9ccbeae42b889d853096ead80ddb7af1f12ee218
fee8f76736b4589460a65bcb02b5a21b6d651af318d294e3bf291133d237335e
eee0aff85e3dd9cf133856e887dd8f47f5f57d45efa9a3ad576a5d9deb874abf
9cad045da9a8149c69482cf54fb3bad0a2044bdc333c7e6fd1aef5fca2e21cbb
8e7f3a66a0643ddda9afaf67052253b9d7544210d7b2a64052844fbf65469a26
e65f7f694a113751420bb4ab40090da3c0294a2d570ef3827240d8da2cea82f3
8c4dc474b0671eb3069c1b2ad189257855a6180b6ebd56c90c306b82ee41801f
424ee69d12c0882ff83b1cc89996efbfb23bd25b145fb2331bfe2eaa4dfb4f9a
ced4edbb9630b3e492ef1597d937ee340a0df0dbdd80824733f6ece9ce26ce9a
bce9da07118b58c21581b2cfa5965443563535e7287703641c7580470e0a9d92
fc2887715c7480f8be1787d93a67dfc689e705675074f5b71e994ac703e771a1
8e8c4abf232af5a6f47bf0a8ff3f04385c19716c36a82872507fef8e93dbb45a
005240236d5d4de73ef24271ae7afab676cd113265f9513a2e737af223996848
13305d2c2c415b1dc34e7ff08ea0b03a87435c9205bac3d835b63ed6971044f1
19455397060a2fb82a9172c62b4439bbcd4222fdfc4b94a976502673eae9ab3d
e7264c5b81c4495f54302bc842fc611904623bc29587146b2447957140d65388
2c89d077891e3aaab5a05386a1595d109a7cf9eb333ff421d3f1f28c5355dc0d
bf80e1ae71afaa52eff3c50810d078d6b57ca071be9a9db3f108151958b42678
23d0b587102630aea139aaf6d99ce071c3321403611ea69eb66c2c6ef8b65b05
a4c91b136cd403dff2249886f9d102a86d0b15e1c6ccecf8e3b5484c7f71b48f
62d412f2c9796adb9ed66bc72506bcace1f57145ac80843e983cc9c414c58a88
f8a4e06a4699656b69fc001688f6d4d9e443ad4626f7ebe54f9bcffea7f14814
d61fd5c56ed32963619f488b533b2008521da4e32669a7c4918473d1ae54dae0
a13bd03db9d6204ad7262bdc22a16c481f3da68c2b21e5487038e54289fe0075
b9d1d44f1aa59c886b305250839d66b701e5fafb4c02c1db0b6de5e4f60669a4
4ced2a2cc99c35a94d0403eecf9d16f3e625dba3a0a6f969339c752d548cfd69
c308d58756d4b4b6ec20a48c87c984d25fd9c7788549e98bbce413d528a262ae
0e1131a003a474b01f93c34149a3a87a8a87b0fd4eb8332e40160b9dbb8bae26
f3d58969d27ce317b6d0b5835ed2819e650b3146ef3691a3ebca3fb657da4c46
f5ab6db58f9ef355dbb32b25e4341270a35d85ab128d1eabd9366c861304d491
04a9b946b04a120d15c62efbd12fdad9eac954b0c4b6b83360a9670bab149001
144bae048eaa022d1f58f914e283f3c18f6664537994941f2348cd10a6c0e388
a000905275f5c4fd9514a6949625db67f2c0f77cfebfe1c034c3913ba1f3304b
3cc074b9d9c2272fdf26ff9cfb69a244a110c4fdf15fb334b483ea6c00165fe3
a58f4194e82c34f7a925c150be9a5c26f746c851d4737fc30dbc6fadde297b6f
f60e0b346d00987e9cad80743be698bcd7b3cf6f40d3f44b1e7cb30c3d50a1d6
881df8a28ae4af7c3e8b267b218fe007d320e2667d369a33b24719c131b21984
11c150db22795622912dfc8c219a2fcd04ffee183eb8e53062c6f3be5618513e
748e947d6b3f1087dc2543c6398cfa80aba37ec023fe4cda55bc23b27be9ccd3
da455a833c8aad7a503b2eb079a342b448775a030cc6a74000c01e7a053700c3
b43f88e1c7029d59d22980f14743d9153bfd97383da1b2d2fa573a07185b9a6f
7dc87aa49e5c02bfe82ec631888aea74463b144fdcb3ce9ce5c1a8b03440a3de
6515188e5c5cb5d1b21113dfc9ee4e01f81bd3258457e5c2f8fc55bafa38a4e7
675139344577d09b766fcc61c290caaafebb95bdbef58d9d4a457a20f4bbaadf
46049ad91c91d6debde441f4bf5a290561b3408e92e033f30d0627aafff474e3
ba9a7ce650d321b9ff754634b38a23f8af808e80cdc0e84eaa84fc3fd8c38c92
47c2972a19f41e06256abb546418a5fa1659fff89cb3f3740476029873a8f15f
3a31e74cd90c2025afc41e028dc82d1e479637d85b08a5fee68f05b07b9f4e3d
360d10d52c8add9d9717c97c34ec27fbbbaa773f201115d0b833b737fde8d606
3e1455d0784781e96ea6c766acaf97d45f09b5b395b7aa7744f99c564f6734b9
e4ef0ebd4c6af0eaecbfbc507745b200a35526fd87146debb5cbb18b7ccddb92
d6cbea2a9cbfccb6aeed3a2c40380eb250b6895b8780eca10fd3a521adcb7b95
a57d8bffd9024e5c6e4554353e87e7f5cc00b41bd919fae29fb82ed78c422ae8
bcc0ba5d989dc6e12b75bfeec3ba8649d3dd416a1be21ff2a7585e27992c3bdf
a61ecd0832fe2e9e8995539a9a017e6cb67550b8a3571285847f37c49c1fa2f4
6d7fe29376ec7a57779bdfbf561fe7aa4281b2b5c799be7d6b16959fbca7bb4b
f13cf29a3c1589702879a9d4d27376bd4d7ade3494f2a887b24bb8ac7580eca9
843860ca0a622be1eb10ba71c6db27febbf596655f4e13a27f0f198dd604dded
6f29aa6de923394568cea4d77962ffd56288060717d76dc58f6d955dbbb8b556
fc2ca35df3ec5a147027a93c0b391fa33ab12b758acf1301c262dc7ba5721b2e
0a86e7fa1b284fe1514983e247d6bf185e09e303d1fcd579a79a7df5df16431a
ad6608df94010ba07f2c6a1140fef838761d8a79887e80720ee2779cf87ab025
3f632f90a0700bcdaa39658072df299afb48e419af2e18251e532bd7fb19ea55
6d3c20ed1cab9e7d7993bccb7ba14fb16f09c896486bac6124065760eb3750cd
cedb56510490602ee434ed38a809fa4c3a6991235dab74745120081cb2a28689
2a0c257cca63b138c4a177d80e1db9bc3a33c9d725b02318156be39d9698aa7b
43222c1c07ab9bbe2a28ac11b53b8ec18f0c82d251aebb395b4eca2daf0d75fa
76f11979cd2ff31026dd08dde686e47d119d129d31eaef938e27121c1a96d274
2c77eff200e14c803d46c79a88f065670cc4adc51c1f10eabfdf2f4165a2236a
7fc74ec4ff5a4828e14026018ed00709af78cdd9e07f87a064645b6a9e414898
7e3ffa54f9667169977fdbd337f23ab84ed1b6964132d9eab91645064d350765
5433c1293bc29067847267b236f1100e2167216c13169a67b04da00c8cdf240a
fe238aecb85dbfbbb8501850bd8c7a9facea492fc690041b2f4da4655566968c
1c2b338726bc5be3a8c37202de054caa5edc50fb998594d793746fd44b7247f5
c9f524a8ded8f3bc8f81fef34cfbc1d48b92e6a97dc39f3fe0d846165a2e092e
9a01ce20b287b64765aef6e0ddbae1b572b540140c446bafd525c9f13a42c1ce
b732c8527449822edd05fc97477492785df9a133348e38899ccc2fff1fb71d74
8d41fb3d94277315def5722e7908653291c79a80c11e848950fb364403870063
26239f9d0a82e2a886e6adc9f1d428d83eca7171ceabd54e3ff91eac92a8749e
e8ffe518a6c8dde85f1df413ad26d6ccd6fd951ad87b561364498cbcab65bc75
581a3a316f9ce590ccb4495603f6757851af9d67bfe61c09cb86a2644f6babf4
97b826c5ea9e5660658c91c08f79f634e8d9a92c240764b172909519ad8d7d28
2793f42c3c141710a0d1cdd6f7c5dd0892254c9aefd197e10b68d7241e61c93f
48d4a86f43cfcdbc9553d64110057bbb03285d3ab5406e0f40a37d1cee873b1e
f3ef2c1739f77bb0e7134059bdc14bd8b49c3227bb768d6f8f48454d521f43e3
4f9356e6addedc70ce49c8e70a6395198265507fd4440cd0a9499293336f3fa0
fdc5f42221cbc1737e22557a74b7a19b9085c41309d6ea6b053d87a800b1ffa9
0f081c19548286e3fe52e38a19c2753642deac22546947ea0b5236ee127fc9b1
7dba3cfd880775d995c9e811fc8570dbecf74a494aa0cbb2aabff1e074529255
e243a5c455b54aec506d05f69e26f332e5c1a0003a5d637adb3d03dd24d41b92
2a583b88923dd3f1eb0f6b283935fcef2e667076ca2dd1edc374e32a2646db67
ee38f26dd4bb7b3990514ba43d0287d89ea4f49bbd8e474cce5b482a28d158f4
f0fcf6a13fe29b389210e390443920cc58854b6d2a4f2ded36c2f48ccdc150a7
1e928283a629277c168e2542652538782df4c98ddac56d4c766ed239e2ac18ee
7a2bd772910f8f6526e73d9b6fe6ba772baf9065a81f042d27b90ec0aa51bba7
18063cfa055bf33d96dc82a98ba65c59b26332b00485fdbae99346f7f323ea30
0d03b805c62decc39c79fd21737671ace2d5816d65808503a88102737e77fe12
e82ec3d26d5b25d95d94c7e34d331688f1454fea0ee333e32b97671f155d70fe
d063243d49f73761740d8a16e94c0950abec232ac33b1597c4e51042d847cfb4
3f6206e5364fca6b1ed20c2a04136a71a04c0614998890009f69b2f2db455bb2
37127358932ba40324a37aac3996234cb3e8aa8ebb4c0c0cdf7ad9582ddb75fa
5242a816302273985725cb75fdb7de72054a6e7a2f3832d8686e1f63ab12ee35
b10aeb3c99c81f213293bbf354de5d7e0a88b620d1ca3febab6e53f36ab8f849
10cb1b6fa4cf9888c452414188acf2e5fae0a6167967ff5708b55159993f328a
216f296e89445d713b44744a79f15631f8bee09110bcca7a65914f1a864d2b2d
fdc83b213356cf0c880d5a7af01c7383d098d07e2aaa61b4ed6de0e0cfd50412
7b4be7e22142d9f1c18cccc66fae924ca0da095c66bd9f099257144a85b3aa68
474748050bc196d7fd89d613640e7e355e99cd967b950f713791cf379c7c1201
c6a9897c58c7b7c401d3c046343a6d3ea29069160209587c8f5032f35dcddbbf
3bcf4147a559bef2e0a05870563241f02b1f130b2519e7c226c346094de3f128
08ed0ebe7e5b9023bd69cfe3987fbb74d852a064b190811723865891ed151513
84fcbe1a4757e2dd6800faa0e18bdbeb2f796c67347c6b51e34b00c64e1cd646
5edfb11a9a5cdd3739c4ca2fff5f78b9569ea613d3e40956025931f597b58944
d17744361e2f3d5fd0c5713ce16c7cc72ca125dc27275771e9f888cb4903d4c8
288ad27127ed9a98eac83828f17c80aed1d6d3954b61016f2a1f2cd9eaefa296
9b3cb43a87e2a6cd66539f6c6fe22aa9986abc5d65d55a77e4b6d8ce46a3f8d6
3268f8d51a45924065b06d016cd1fb59c8519585c0c377db3197f0d20fe1caaf
236b06b756d505ad92d18f3bee5159c857c2bed635026a4dfd0c0634e2639feb
577c82aee944f591cd2be46103c0261b07099340cc343aa5392d271cfcec57b1
d9e74484be9dd25e0fb257df2e70b0c01b8b06d90228e96ec9aca5d51bc3d7de
defb3c0505baf81feab81069220574c1a7b1a32ce36997f71c84972faca00736
883c5efc97085b92518baa7f579d03da6ebbb5e584196073729b7700f70783fb
3c6725df3a1dbd07fcdc4df9c6857fa308fc31cfe41e71b853553a04bf52f527
7c8db1ee7fff8a1361ead928f8ff87f2649c1224831814c8d3c71b5eb3fc1515
fcab8ae3c5c8b82605b5a99fce8a4f5c6421fe41983732d8e042da363b7aeb0e
0133490e8b111b2f5fce4264904d00062e42ea8abcb89e762a8b7ded2396d376
42eed9ff319d535f7bb402ebf232b0be2d097c725c37aa4621b4d612501af35b
0dafafe18a1511355db2d86642b07839256fbc1227492b20ddcf4261c971878e
27f5882b36f74006ff5f4824bad445a02f538c88045a592106952e01056177c3
258f7565adbd9a6bb78745f0c518ea5d0a4e655f200f5af00d92216ef6e7b8ac
94ec95ca1eaf11b9c1536f2b61ca2e6ea1c24f03a3178b3227816917b2ebed34
52edea27fe3d67bce3b6c02fb815802645aeb9ed8564f439cdb5b3378426b5f3
898bf19a7cf018a827465fa8e542f7da0a83608eef8fca5b73986a0372717eae
6dd9d9b0182fc3e9e25db84496c8370bfbe291a08dda9186cb620594ab2aa06a
68d1989a80a2707c1ae8f6571b5eadcca768abbdf05d6b208c03478974c1ec94
7c2f2179fa1154a78b653b0033bf6a5a0d38210dd760c2d54330bb8d6ab9f3cf
ab4299947404b67ac91b4b1ef86aea90169b375ba7ca43f1c8886978f290b0c7
e8b816d41563d5885d2f416c10583e8659667eb1146a952103e8abfcad35f58d
3224d07d7a8763e5847f8190c53b67bde0da289f441de83e4765ff85a7f87ffb
b786cf43c91c61ea72b981e5b0bb8a3d767f7c29e2073aa5ac42bd3ffb8bb486
b4361f617cf8d06798e9c2aa07c4abbf4a1b921e3121de8ed0f26ae3d74d37c4
c106f4b03da1566b4735db13c75dbc9c662faa0035a3a716966bf993b7db745b
53d472832ba2d9632a536b5365d993f3e28f4cefc1e0ad03c9b487a5c5eb20ca
0f5c79615eed1350ea699fb510483b82d74f481af88b264ae77b8e265154c3b8
c0bee8b69e7a5d68b02607886eb0d459254285062100d4d408e540fac39a0283
4a7cfe5d821fc9f3d7a517ce5478be4dde13a54b35fa7bb0a0894625c7f8fa30
44ff8598141d6e785b40fa42c689b020e3c5a03ff620e1dcc92c70b1315f741d
7b3056a2e15c66df3433e6beea6828bf61b3e36dddd4a7829b5df7467a7fd0d8
f9a6c652e033898f72c6a456db8a21f0388c90f1a028f75f9af44aa33163b334
9700cd0341717d83486557b9eb0d9eab62e8acebf15d9c33e0f9eb11189b9797
4852cba65fa153e5479020f4f82baa215cbc0c6105bea219b2fbd8f115ffb985
c538bc2c12d78914a0064570bc120c9c7d9d4b8cb8b01230440febc219eb0b2d
e91b28ef64e445e51e974aa5e8da2adb67d2bb2d516c37eae5a82cc1ae96bf30
9e86c22d5927f481555176548c3ed74cf5cd027e35ae9f4f06424eb018932434
2360cfda5911277252cbfe3ad96154df16c845fb9b878aa73d2efc902d59a106
67677591f2b69fecc9223eb517b41f67190e7907909b86e99820c81302ed6bee
141e1c1d7ba9ab5ea25f50838f5b15f34a1a4f193ad632c0faafe0006b29077a
3f8dbfe1027ba1ba221c74ddf675dd722e6f239bcb3383b9d4da2e2fa85d0b21
49afd5774712c1c750b24ed36010852ca9d7014bb5c4a5f4394923178c39ea16
15cab2803ac980e642bb265e47a72378970986ddf1e961863d06c2673e19bd4d
ec3723c9b466e2da55ca3da34b162e6030f1ec586c36393fb3da9246fe6b21a2
0dd575b2f6f23aa2a50ece54b376a42d0e5127b5f428b75ea4b1155f60e98898
d4589f12dc29cb6f96a4c87f207366625886c1b0c77a89505b29fac2bd9cf0d7
a7d9840ca1d81c62ad930a27b57f35617d28be108b864f1fa678a1e21eb8e41e
ed9023bbb75d6c604a873d54fc44055c23bf7b9f782a9d8594e1faa043f70027
66ddc55f94a71ebd2aa4e048260ae383f5ae28e632e304cb8c823c556de27062
5632710b41d85ae01b1c416243ee1686cb9be701fea7a5b5bff7dadc93fa95f9
883c54354478c9adb2f0bac2ccd0b64df9b0d77cc6133ab7561bbf7c0f6212d9
72d31a6cd8eb8bab28ae2626fafe89952653c35387e732a889226796e137b88d
e9e15fb9b6d75d445077d3b5660f0f6a037339a86b2c4f4f68c576042cab469a
e1d9375aa38f023dc9f4300f829460164ecddd74c35ccec30cf62b58248e1a7f
92338c4be43327493abf5da6e3c951d71d9c03240dc731ec6aa547e46af59c13
8e686382cc717b1faafbf9245898877948ca46aa9e9b44f43f0f53cd4bbe3235
2ce87e772fdb685f5f1afdc024b6576d99560898b47c2377226a28a3c8f1b0dd
e9115a3e1d76ad4eb1f6c7395f26c0c98bfa8b1940fce88ff030336881311826
cc58e73cc25a0837fac7188646676f1cf7249f3b9129e240681461e50438e1f8
ca5f4150914c898655af5460d260a598cd09d9deb30aec29452a580ced48d34e
42e118c10b7520423721302e7d2d39288f01418266b3f5914e3be67c4b87d54e
40d6cb9c21f975de701919035ff2135c51d001f2238fa740d3e5e59671452608
14a36a3e4d360ee47a4c78bd5f26cb5ac1e5dbfedcc0adb72a1e802dd4db10d5
ace32d520ce34577ce9841e2d5b35cd2f13e4fda99c96aa37c832247e7f4e09c
7c49d140c98448d927aafe45f43f8f2e9273815db2385c96221b322d15701d52
2a76c271a4d11d205c3dea536f804be895fe0e13f7742d3d76e5d15c2776a7a8
3e0690cb630378eb9750b1da51353530b092ffe87a9709936ca2fc7ec5c821f6
cf160a8755f5aee76f9fd12a461c9e9960c1d4766016f1403587604312e6180b
567f87dd63e80d20c1efb58c257d42df24e0ba4ada7b277fcf932e6b2ad6fc2f
d4cbff4176802a67a93c7f24e7aecbbe6f54295802705f2b658123ebab33eff9
e32b2dfd7e3a587a2ff6a655c9cbc63dcbbb89f14f4ee8d959a33a79e7c0e97d
858d938ed842ef5b4eaca8ee78826b19a1e1a11e30b237be3307cafa8fda29e6
f84089e6ad25110294d9d2ec5fa7f40aadcfe7d230966555c694febd8742db60
3f360d062248503463cfe7faf877f070e5d3e7578656d72d4fd8430aa8680b02
0a74aa136dabcaf68e0689ad7686cbc18f1e55913ecaaa70b908ede5acbf05f1
f79f78e9e313181543e1721d6a61e10bb394768cec68117ba0cee9797ff33605
c32c0cfe13106e47976c46c8c283d80e311b9a7c55c99574e813a8ea340f9080
4d19a2610c2a945263ae03f4378a034b79e2264764f587a4a605387611de534c
cd4d5a9a13cabc9a7cef387c12ce9c52c5d450d1e06dc4e35a757dd36f2f8b5e
15993a99b0528016883f61811d6e1d19e323b9954c1359ee4afafcea4253baa7
7c4c74b7473af773e9d75f3c1d83c3edcc6011d98c6b70a55ed2e604b15c735c
842c156678b99d44eaba3f627f8cc206489406621051335acad47ebbc9930445
8b3926815d22f2ab0b97d1d179555064c2c6439f462ed6d4fb5cbb4f51082135
15da4164486dd5bb1efe7a8fb67a35156fa8f2d0981088fe87ef3de061a0b2bb
e2b25c84cd60d57cb3032c282e7319e749f73150eaad285499a9b5821afd4746
0123590f42ea111cd909636a0376b41b141b703f21f7106bbcd197af8ba306cd
a63c3aec3606188355e25a5e55376e743ddcf5acdd6c3283551ff8cf452194ee
1ff754aafe9446ab83d4b0ca85787b3adcb84f491660088bce969be328944a17
ab0332c9d3665d498f003bda224c1a2e72ef175bf83ca33889bfc5eda68e6840
3b8d27335de2f3ba55e31b5d0d410562052f49c00584f74022027ff634a491fc
1d8e3737c9d2cb3e097c606011b24420166c4fafabbb74c5aa4b78e36c522da9
a6b9b855a9c52dfa11fca21f85ea84521b25efaf2a88998dca6c21ad52580ce7
8b943b4175d93e9320a96c380eae0d07976d5b43de701aca64bb3a86e8f2eef9
59781defe00f46a8b651ce58ded75010de096985ea7dba0727605952e2d06292
232a5c9a8c30cd97a49e98093f6e605874e2ed6138a6c2738a42a6cbb3a8f387
9a1f605168d55d45ef9bacf11263b4c55986c6639fd1887ef926e19f089e1810
b37e9c1284bd55015c998c2d99614d2a0ae4c43514943438ecb64d22f4b6e186
8b9ca612c7ac68b93cf67486aa406060d2a91405a654972b054698a371fb70d7
4f09db1e6f60c92620d03f7cfa273bb0321b4ba081cb33f5ebf4c160c332955b
76115058909b20b034810e6f92128bd78dc1e1f1f0a996750296839b314e3603
316d688c4620a0581a0878838d3ed0bd371349c7819f94e835b47a052bb06660
e8c5dd0b880331b492b234deb604e3653e9bc922b74c36e023f2131405f96d2d
dd7b1adcce8c52d3d108
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark

%%EndFont 
%%BeginFont: CMR10
%!PS-AdobeFont-1.1: CMR10 1.00B
%%CreationDate: 1992 Feb 19 19:54:52

% Copyright (C) 1997 American Mathematical Society.  All Rights Reserved.

11 dict begin
/FontInfo 7 dict dup begin
/version (1.00B) readonly def
/Notice (Copyright (C) 1997 American Mathematical Society. All Rights Reserved) readonly def
/FullName (CMR10) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
end readonly def
/FontName /CMR10 def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 161 /Gamma put
dup 164 /Lambda put
dup 174 /ff put
dup 175 /fi put
dup 178 /ffl put
dup 34 /quotedblright put
dup 40 /parenleft put
dup 41 /parenright put
dup 44 /comma put
dup 45 /hyphen put
dup 46 /period put
dup 47 /slash put
dup 48 /zero put
dup 49 /one put
dup 50 /two put
dup 51 /three put
dup 52 /four put
dup 53 /five put
dup 55 /seven put
dup 57 /nine put
dup 58 /colon put
dup 64 /at put
dup 67 /C put
dup 68 /D put
dup 69 /E put
dup 70 /F put
dup 73 /I put
dup 80 /P put
dup 82 /R put
dup 83 /S put
dup 84 /T put
dup 87 /W put
dup 90 /Z put
dup 92 /quotedblleft put
dup 97 /a put
dup 98 /b put
dup 99 /c put
dup 100 /d put
dup 101 /e put
dup 102 /f put
dup 103 /g put
dup 104 /h put
dup 105 /i put
dup 106 /j put
dup 107 /k put
dup 108 /l put
dup 109 /m put
dup 110 /n put
dup 111 /o put
dup 112 /p put
dup 113 /q put
dup 114 /r put
dup 115 /s put
dup 116 /t put
dup 117 /u put
dup 118 /v put
dup 119 /w put
dup 120 /x put
dup 121 /y put
dup 122 /z put
readonly def
/FontBBox{-251 -250 1009 969}readonly def
/UniqueXX 5000793 def
currentdict end
currentfile eexec
8053514d28ec28da1630165fab262882d3fca78881823c5537fe6c3dda8ee5b8
97e17cb027f5c73fdbb56b0a7c25fc3512b55fe8f3acfbffcc7f4a382d8299cc
8fd37d3cea49dabdca92847af0560b404ef71134b0f3d99934fc9d0b4e602011
b9cfb856c23f958f3c5a2fbe0ef8587d1f5774879c324e51fcb22888b74f2415
50d7401eb990d4f3a7af635198422283cac1b6cd446ddbcbd915db9bff88844e
784c6bf7389803d9450b0c21756a017306457c7e62c1d269f306bd3402e266de
fc3b5e7d8a8d2f5bf0fe6ddd40d07391df4fad4a6018dce29a2b8f692b29f202
3a7c0e66de8ed85c14f1f8492167357f51a7e84cc5d92e0fee4d81cf7fbc8de5
2d2e7bb57142033993f9c08c315abade8dbc4a732e84e142d3bee51557910e12
cd8aa37c459a5e6b7f5269f59078aba3be4641a11ac48d0b625c8325b38ec08e
4c9e5e7fed976a5650d99d82114f449b9ca14c4ec957702295a39a93ef93f618
99b8ea06b092c3c1e503e6e436e0a9fa22576c8930ab3dc8c20f5d82b69cddf8
ff4dacfa9c54bed5a3aa3ea5b129fe96be632843b9b6bc91b615581a985db56b
1e01ca60ee69ca92cf5c0882ece62edad3e106d835348822400f0b66af658f2a
e56ed08f8b0010571807009b73ab12a8cf14ca6c71f03c2a48c500f9d62266af
154a6375ff600d9bac3f05ce34142d6867a79581c533176bb2f3117336671e2e
44638a97167e2ea9644e31ea16c2ad2990ea33c54001e0c8156e6de8ab6a4d40
a7137ba275f39589fea2e2db8256adc103d6f9cc038037a47e8fd469c5f98a5e
3c15bd4ace40d340018b1cff7d1ed8abb0ac57b5b5a2c20a51957b96c453edb7
dae5affd91a46d938fe0a13363001d844ded4323f1ee6d30012aea19b024a552
315505535c85dc26bad31e09c50e6512802976d298c4e90d0044c362e6bf3ab3
62a454ee93de25ce54411090c29e9d75c80ce26a84404bd9de3aee0e3f921ac5
87f907572b8354a5c3165eea7e8b2ba4e333802132f760b41a900c698eb3d273
8bea0aaf7aae96a558f08b61aec7c7d65b2889bb7b99800cffee5ba19ac90fce
11437be1ddfcf0bca5670b543b9644a71c8726d0c1005abdb96f6e0cf7caaa31
95017ca81519151c2c0b04f81e717c0691b63a76e9b25329ce2625b711cb7bf9
9d23ec2bb5ec8aefb8c1a3b422ad617b3da4d49685fd44cc21a1fe5e1541163a
b3e1594601d63c7e98801d7746474377ce93f81404f3570afbd5dbfe77578605
917ab96963987e6efc2d3f99fa56e25dcf288c2cf1919f3990d1a385e9edb749
782c9c3690651204c680e0a3a74e030f57f8a5f6df7dc3b76eeda75f29e3a8e4
6b80c2cc7d2ad59d7078c91d5792fc5d327e5417231530e880ee3d4e349dd02a
c3cb9c3bda7030ec2ed6e91a13f42f63b001427b90d2c6971e35aba77d9b7518
42a1fb9fe3a3fa7a2c2f382b97f9697b34fbfc113294c971445d177717d6af77
76ee83717db699e6643c8e7d232fd0c714ae9bbf874293f662dc1269d70a0f63
dd86c02fbac82f4d3b45b258dc1de0b551437a4c1e75e53fe62ac7f1eec3d13d
70176b8bd1da5931f895d3bdbbefd9e3fb13344b5f056fb2d68256eeafb962eb
22c348f4c55f64744151eeb9ebb3c1dda190ee9fc6a4ffb44c182c64d5ce33ae
1f10ab41a5a9d3259a745aacb25487603aecb391b8c5df50addc2f49417f13cf
0f3398f900a46da9e27a1e18894f809f60d920a7db2b01abdd07b639b3f2b474
1aab222b97eeb8f3da3f2050025dd29885965324bf40240f122a519d9f8d6d33
2c279f8f7f3f543aa21ac69fe23dafcd01cfb3fb79991e66c6e72ee80dcdfad9
66c2cf0a714e6bc08a6c23e2fca030d201bc6096a013646a1d2ff42ec6210b4f
10688ef7960eaf782a4f405316e39264c075c7e67c4e24e42f818b09a7944971
649809f43d14166f56e66b4c65f7077e78741d59e88149b36fc3648d94b14078
8dcbd377324d2fe1fe9e57591c80ae95381c730f91680c42eb12742c9aad727a
56207ce5b2d22d9242da1d89e2ad043a2ed4248c75824f84604aab6e2fcc3eea
e15d0f6492fc23f52cad860adcf5254f8da0d9c881679e6e1634a33a10d56fce
76df950b2b951ccd2ceb411bb3d2fc1051c59e31a5089ab08cc2ab7441a9b9fd
274319c189791424cdecaa0f42e215c08ac9a31029f88b2af50dc9c3bc866a7c
9c759a9343a42fd8789821ca77a14930372d110ee04b8d3331fa2690df33be07
bfda9efac659ed41ce0c8e7e429612c44f9e6eeb71af652f7788723d09bf281b
18c384d57f1ee6a6426a8208ac658bd5a15b6d83db5dc1a150f94f2c534a4673
d2254efa2a4f72fe4bb5b0a3723ff9b6fdf6b4575089eba67991c2fdfa30ab13
ad234a1e636c5e1946053b5c7738f2b739747deb0e82ade1ae9175510a91cad7
66cb0bc8acd5dea90903e08ecb26420bf3290a465256450560a896cabba17793
2b88c6701a70133ffe33a5b7ed43c5ef19f0451b9a68dd1c637d6c31b633d435
1f7864297e22fce9bb855646cc28fedf3d4e078a76a9d708f4a1fdb4a7137b90
786c678bdfad03c3fa47967b86ea971fa118b04c175d309d4ffdf87457864a0a
9a48f9d25136c424d1e961c6fc31cf101031f0fe2a28f982ceff283713f6ced5
76f0dbd3f0fb047df94b1f66959bc44285766840e0db0aa291f24387e033a7c3
4210b7cf3d11d94615606a0b43a5d5fc8f64ce5ef14e3f757059a3483814880e
4028f257b27fc19f7a64f5ce0f59f85d1e904690d116e0d9445aeb3bf7288b15
f1b491f5c0bc0527db80b140158ad9ef6ebdc1cd5e289bf8962998e2410f9926
d8ca287a35582f32e72531528e70690512b3a3241c6281a766fea6bafb0e4d42
9db9c15b302dc2b94a7edbf67cf3e2db836cd0ab436a62549ee40353d703eb17
ee6d45cc97f4da25e2bbc60ab8bb11a7f7f9bfa9f3e044a086152ad16a8ff9d2
a0c5037f9e42a3020c8a9067a522eefd5e3d07da9dab7f2f7999b9f5d5da660d
6005ede4d2bf0e4b2cbe3af205e75772f9cbd1ea7ceb342c2c5d382d29fdac9d
1038847fad17dec8e120f8120f556ef42cc7c5adb80ced419171d8a406f3e5eb
744fd6ba921c5620d4b3b86abcd3f4ee29efccfb39ca8ab23d1523a4b53e2004
704a56292d1a528c9a223fca97ca2c028d8ea6c2472d3969eb3afdeab70f058c
893ba4a9420ee7f9fabdd4eb552258ee2191ec058196076dc715bdd1431540f1
44ae5b353558698ab2cbe5f06bf748d2efbc4906c48b292204065067d4fd2cf4
82b1249968bc2da1deab5f90e280771809f2fd865921d264c629ea2013b946e1
ee95033135cbf516ae6655477f24f667906b9173265ab39935454340aa748194
1bb54d04f605f03590cd68ebd66014679a94248da8e75b8619cccdd2bc9ca9ac
004da5afcaaf8e008ff9c6dfb42449318065adbab0d7ebb4e4bddd2baf1d7814
abfcf81ba3d211c81a21ec4da8f78ab4a4a5013263962ef967fd40a9795902f7
13f30584efa35aee59d7fbbd651a5532f7b5e8ee7ce47ab9b81878c7a76b4602
af7243f935ac070acfeed55d7579a5fe66f7214f2b3d2f1c352cdcba1244c396
742f3f435299bb3baacfd7204782b1e6e4ed1d881590cba4795d674303af9f14
da7eac0ed860b5f1d3d5251bf2a0ba30da9d910d6b61b9d23f86cf6acbd3d37c
1d5cf544875ce8992d45258bc01db4679de257615dbfb67c28603a0d0d1c9ab1
19d0dbde05d8e2e9a93583011096d608481f7c4c8ff11133ae12f6e95ec3d774
249ee04f2556e68f6a9547d96bf5b41ed4afb152fc55bc98d92fc4577192df7c
781b46af97990a36c3aa8684be3cc2d5813aa6660157191b1702b06a293f7251
f3a01b98475f04c362f224aced8d360c78643cb482ed69846cfa341fd3516acf
f7bc53be1d04a6ef1dbd2376e2e5a4da140e641e12a013334aefc9b312debc66
bac89960e7768dd06aa5697043e991bb1462f93d4959aeade81463596bc605a6
5f7964c7bb17e0d38b8a784f02236974600092793639a1aebe5f70a0f92e6a43
7e74f297b8c4239a7375fdf1c51849f7905e401278723dbebb6ca41df2a5bd1a
f720343476335c09b690bf38453e33631d73e63c53ba760b4476f174edaa3bec
7d67a282ec28fda8590733180b489cdf782cae2bf81621f853528814f5730712
e37bade908d270efcf632f549726a9f8d4a4bd4cbd9d15e7c355f0c583b673fb
a60b0a2bb3a59588485e0e5c65841bbf623a686ca83de672c618de664a49793b
48ffb2793290f92f0a47c0f3b93d945d5b87268a0e11c61178330196cf3033c6
21d0e563a7c93e164679e1d50eeedb242cdda98829e1bbf83a75ec06e1c842d0
897f6a70fdbeab62c9daad235e3935d7786cf8b8b19ac5d32e9764d724fadbff
5b719560c23590d8ad909815757af6570154fe17617ed77ac123c9a32f588141
f80e2e116f484db08d090b694c5cca97c7a434179f893506c0b8d4c719b04204
b2e40eae56374a8f634a4d61f7e90e3a871c95cc19c61a2ee293972b0b50461e
58f8bc9e705a7bc666ecee8bff20354eac39e6a4a6b058b65cad900eb11012f3
56294a9b692615b0ed43bc7094cf0bcad3eb691d79b2a59dd147168c44e20118
a3e4215115d2b41bcc17cf32a13fac11ea8433b414377273491661027fd6e07d
37acd1c55023a243b4b38dff42eaa07584de180eadf527c52afafa08f6f9e8dd
720d5cc254508f0d1c2899b4d7fb6a681dd274a5b3630adac2108a32208d3c40
e9e30a573d72143920dae465d62139ddc5e78aad17754cb7465b0240ec207e2e
3ce4ed3b3bc0501d077a2e170a105d557f08a69b85e281313e1e02a7a9905a81
1dc481ebf005abbeaa1a8973a16c3e6fa01c03da580ed6004eab23b3bdb3aa35
3990b673b7e3fb5c57d80c81128aad2eac245ee9795912828d2c1900944c4978
65c207307c7f63ad15b85bef44c8f68c8812df60c0248afce9f21e5b7cdb90ff
30535ceaaa4650917b7af8009c050518371953cb777187f59f86c8c491ac4a1b
6c0d59a0b9c942da604a4e3b6843f6d8bfb2c0b24dfe8ffcbcc968cb5bd22856
6f65389a7819e2c01b9ccedbd947cf3f87ece79ad877b72ea0ef42cb1a0ba776
3826348e33bc1bfe53f4bf4005b5f0f618b6bf36de79a7c6978c41a70022933b
aef9da4e20d8a33bb7ce088488448c8cd2b89a021fe2e7c116794853fdd0639f
9bacab577f4989bab63a9abfb55579f08c8fcd64358987fb71eef106eb97b8c8
544097249d9ed4524a2400aa7a294116e7cb253c695d7db3979badb2b301c126
e8813940cd45c9583457a391ee174797118e562b177ee494bc74702c4bae3e3f
d35cbf59b88f3794e7f6fb048845495d2017c61031b1fc9b7e9e562633122d0e
3a95d13072dd88c7f284a3c2ac957e944647e1f213c201c0c3514209fa4e4ec0
c50d2756711c040f9cd399528eb9760b70fffba30e579bce66c206b4c925df29
01a21438942a037c84eb34bc81805730838009ac3f4a54f1ea0aad06e4dda739
d045ff9864cfac79834965d22d5dbc6bbc8eb75d500400c949b1e37b413b1f3a
2a042c0b64ce2d6749bf2397380047c510d7e0b65e12a3b8f9f4cb75231eb8c4
df24e298c78e25140d8b0a382644ebcb3a797d1c049501169e6cbd8fb9cde1e6
8f503e0512b3c7b4704fe1c78d916aa53e462594eed01cc82e102f67f1c03b9c
c5f82077d3bd310e016d608a2a1ce96dbe3db48b6e590696f193a4d5a7ebe0de
98f7bc00bc176bd519ab7876ba7b8e2f1113f82a62bb34937eff13edd23829b3
c367edb2bb1b33ae40f23e59815178ab3896fdeef5e503f2a5552ddf864c6a4d
17b352b3c92e1735031e76b77420295fc5dc536b3f1832469f1ce03a647d44e5
9ced4be541ebff702380e03c1ed68b688d48bda10f5885a72a8fdae8b3f256ba
0941a4ed2c2a4b91d6eaaae2aea5427e0fc96c03b9bc9ccfaef0b049a0c840b0
20e6008f8ee7f324ee4c062b174e12d26773bedb525683863b1c5e2c50df676a
0a3361afe7137237cee61ed09f2a29582820f2dc4906d60119bfb00c5e273788
775b2132f32b77bab19db5041f92898fed835a430a66104dcc29818541f29114
f0756b18cc73e92e39760cf26f19aa0d52a2eebd6163c323b26ca3983c83f1ad
e7cfa4730274b7ae24530a40bd5a9efd842e05d704309629e177f9692e6c4fda
55081e13dece127d95598428623e04818466031e1f4be2944cb8429c84785d02
ecd84e02fb9a7415900a7f99473c20472d373fc9f61a514024b9a5118cf330db
1f670a57f677a01f4e0fd2d1d2e4f5c95ff3cb893d31d02f004433048a6aa9b4
c6233f94c55a849bc551896ee35300a2952616c70f7c7b8692560ed4f136658d
e65d875998e0e72b9c2bb5858a741d9481c372e54c61d70fa8ea95275ce37643
c126b14fe27b58f78a610665dea0807043b9c5e681b1d4c1e56e0be44dcf70f6
670fc21d01a5d5460adf38955084f305a695cc6a85445990c71e1e1fefee870d
6748942146889148deb465058d5d5df05f04cae9f163ef9aa677644b3866b2b2
8e98e0a7d9f264759c5f94289d4fcbac5c2f026317a062c63a054a0e2ade4cad
7000a933b3a46dff60d6b974c5398721f62d82e41f6d950143a4ac6e7d122029
8715592dfa06b8e692a49902b3047216bc786b1cce595073344afa8997c1d40c
3065fa3b582dd3c9c0b2c75d37806d3be9586fca4494f68e489c21d46ac780df
6509b421cf562a04d64293daaece858f21f0aad862507fa407b3c8167bc3310b
7f87a5f01bcc3cb7fcc5d520b9de873e037b50fd046a4bd1833c45ee629bae50
7652fba960fe21b83f637586c6bfac4856d6bd8af5a6750257294f4d3c7110f5
fd31700e53426f0976eec99ff4d9d64ac3a2cf92286b4bc594eba9dc959db3b3
4a767611c88fcfd48ebc55508e35890dfc0b6866d83f95589819ea61eeafc002
99ac2a95ca47aa0288b6f5e8cc71dbddafc917ec16b579d4846a5c17dda60d60
9044e137926edbd82fab37353f2d022184040a06ed2e008b3205e1cf307a2180
26b742f2ed86532da61ec0bd291971e4a0f82c4da67b1eb66079d86d617daece
50782d16c3f002255fbe43e1c31f5a2477139e870993b3b2a96b7ac363e829e5
6bdf100dbc6ea015934311c861deb0a0d533fa79f4dc5349d1a4cb12b9b8770d
35f5f7ae64c85b2c40554f30f61bd37e108b39bd74b69232e193d3462df03af0
c87c722b1ca8a8adfc2bc0f04a8996599dad34cec4f9367af3fe77487f8a0dc6
cb5c2b722e78853fbc0caadcc57aae36a6c2ee4d4245ac8300f0dbfeb73be321
a1bf0f4d4d39315c33fca7fd47cfdeba4b6db44bc6b8072a7164483acf493520
b983c8e1cb4be5c0b93580d483ebaf2a626a5a95c0e84bca3aec6474f8fa6148
4db7f119f0dd7682b14d5a328549cd9af12c5f344c6066eafe8a07aaff724a52
41ac49ebba8da1095070927f1bbf103b7f1e72eb8bac499e9ab51df469c5207b
ce690d7f91f92b7dafdf5cbe160de83caeb2e0d6b841f567b11df0078daf411a
97c0c16f4d331ccd33aeb193262c4cad522be130cdb503abc6ccb0110e6bc1d4
ae554229d8e9231fde81f2a2cd8d123bf07a060304714107405f33ff502c64d2
0ac135195e4f0211dfef53ac11aa894022d7d1ad4adf61587f9cce91f07ddd14
27972982d5f9b60c5687fc343ec7966aa2acab466c1b114560a12c174ad7ca4c
56d3e6bcdd9d81c8d2d7080aee6057bf7beeb31133cd6f0a796172769e08dba6
fa1e375035df304b654a084369a5581429560eb702f6e6226566f42cc956097a
ff596298077d323f39ae7882eba8825168012bf86a73b2a2fce4aa2bccfe7ce7
e07c099c2886aff0fa328f1fd72da40f2d4cbd67f3f204843eca03fd3410c996
0fe442ef0b2e47d4600383d3b65bf5213c4f8dfb080ea5af2cbf16992b6d415c
924a6f47ba3d138258fe4a8cd4a8237d7b17b215a133274d3963828940afe5f4
d265d00391ff452d12807c2dcfef1aed670134227ee8abf7e08e13ac68be9a9b
649938d11db996b004d8091e202d493be9a564a4f5d7a19076811f64d88ac523
16a260f29d665d3beab95d43639fddb0ff3d32e2f2b4e8ccb45b686a7cf8f89d
d6b596fc6e0eb7e7f04278ef94e7e47376a93af17efa9c27ef776f6b462a2f74
2be69a37c5d2be05c3c77d1494e3dfb4ecec783dfadae36de263f4c9e491e973
4bd4d6faf491fd13640a7d2e56e3d798eb3d659442d6f415cc16316abb08ef9f
4f15d8be7281cd160d532c74ecfbce3147b8d1bee1477237782b741d80ffbd8c
5a17993576cb3da6f37421854b4db41f588f67fd564ab3da48cc6d19028c4309
96b378cd931ab61675fa09b5c276159d9613a7a2139a48068baba64eb2bf47cd
02f5476fe41c07289d64323c213b77a6a8b4d6302cee96ec9d02855eb4d217f6
b14eb348004641adbb8aee92f62125b00f5fedfc6be44c9183dfed5f81c64357
b9678f2b4ce37f0fe1c53c07d3b1a5ce0e1aaadc165c349918280c4206c27f55
21c54e4e85f00e3007b3277fbc3cc016eea9b6f4dca947f3ddda131d1e0c07cd
651c9ceca166e269d264be25782bc9ae722c2ca9fc322cf3e54c7d7730c53f92
94033cfce31959f0b3b31ea4e3347fd1b8d3c0782b7c78c5003f6e5872d9c3f6
4e9e1fc60a2aafff9b627c4dbb0c5bd91bc7fe030216abc4bbb2b81c4d077741
e2600db6a751928f839e8258775b423c9fc823b9a2bd293231cd67670ce9e405
3c7260bda78a1dc45d991ec5b258151e438890ba8cf95d8300242d0bbc612a55
9a324503752dadf815c8df9d9b14c207e6f277a69f87d09961a66ef010fe933b
1e8a5f24678612ac0ae40127cbc8c698fa33af720b6db6b40284fa54b71a9d64
afeb4dab018601c0cc0809bbd08f2c8a57c4dcb3de073415e6fd6c1c37bbb68c
a08df6a3fd418517bae1c0bf159350bdf1d8bc0e27a277f65afc343387d98318
f44e5fb19d36642031666692bbeb82c8d4a9bf12a69ff2e94078cd1ffcdebcd6
4832e3300c0728b538569fa4466dfd36a90eac9e81eb4d72dede6662dabccc1a
3a66329bef3f185879cdd5dfb0420f5962c556f944844b71d9850f48e95a23f5
d494a0291a6e3fc57f32db3ae7876700bdbcffdc5a45ad4ebee090907491c6dd
6b896a3b2101cfcf1ff56b29b90d9a824cfb7f269db537c5a4d8fd77583c53d0
6b262da199625b255813f27632828ba5cbc2f052fe305dec6adae267900ab3d4
f5428c713fb789f22569aa1282d485aee0eb621c2db805e93f577f8ddd45a90a
aa959f1b247e99fcff0a2537dce684a7102043743b0208436b2d64c5be72201b
050af98ad1d683574b74f3092fca65e1dbe05f07f38cda8becf0962b4713e867
2ce564330467c88524ad352eeeb830d6f5ffd42369d70b691fb7c74f93e3f8cd
b06ffcd511f44f864e2879fe8c0549d18a0437650db948ca8931ad2e1c35a0bf
8bc459cff67622f34f8c53301dd5b23f929fb3072d7c29fce48f906a97ccc744
5f4aa05cb20637c096ac688be44845735d970c0185cf0b44b26ccab892852da6
673c825b15ec1c81d88eadf9c77908d56a4721c9de356c0b41f560ea54dfbb70
8fb517dcf5c5732bfb2f0194ad2204934d2be999a31424a74fde24bc2dcadc16
30c9543bd3934df2893d0722af49cf5e55f6c4f94d42f925f40dc2afeb0ae25c
8f420f2f5c855f804ded20f9ef9bdaeba2e6e79530c9f4e5c3a2c4d6cc22bdf7
48711dd1789bd2c810d0e6041d8a8a4630739f7357b8ed699cd40ab2d34dfdda
328c39edd541c51afae007390a1e8ab7c81d5473c3f8bddc3d57bca2a4667f20
db98fce717f46cf6173cdc586bb9cdf158424767a974b1744e2e2ac7140b6b79
10ae6007c657dbdd0125c0c1a291e13752f5b50b4206b45925bec40b0bf248db
de0182cc129ff6b8808096c0495e76567d53d3b460f73dd602f5c061c08559ad
86dfb74889ac73d8935f5d52f9406e78095f5f0d959f5ce44181bc92125491c4
4334b02484e9b956860b1e91e47006ac32554c5b53b9d8f9e76dc1e2fc094c1c
6642f1ff7871b4e35ec0672b985670125689b1353550af33437408dc2343c743
0dbb396f8a627e318970ae38529338a1a693565e81aef88fdcf770a772f0a390
a11854d084a5896711666da0351fa911dd85c15065a999256dddc1492879bcc8
0e2ac171c7a059c7730a73d0be83e06f8474fe4523ce1c54c85b5a4c9ad5cefb
e2de74e9117b49a92ab98483c2e572c4cb18c0f14e662631bde02e75d176fd9d
019e895c0c13eee8c968f0f987d0c7fca01f03088457fe1996506455bca1d5b7
11bdf6e172cccdca1eaa27acc76ca998d8b2a1a640a79c82a58fbcb110f9e0e8
01aebfdf6e979a1c1fef5300185e3098ed05de8b60be6fd08fc3fc2044aa0908
abe4285b477d47e98c8294dd11c294c34f0c38859f035124d7cab0f89f3919a0
74290b20076c919ee4a80ab30aa73d28414c99e418cc6a35257896517426a009
67342ef00998680ca2530d32934a0bff7f96d9b7df04c0ca4a9d3bf12de52a20
5a7a92c5bd42a251de58ea5193f425a755bca29cb8f030951193d8aa1172a02a
b559e904eae12ac168360dd9f77a0dc806a3eb8fc5a4c6125bf369828e9be10d
7880a02063f32aa9a7b317da441b4c9a59a5fe6f97a6754cc6b2bc127593eec3
31dcecbf9d3ce8274e9bb56c90b6ff88e76e7272ff87253b6b5c7db6c49980ad
c0f73c6102a5b8daa9d0b823f1cff76f2b85989d906c0a59ecd265ac557a0bc8
c84fdb64b064818303026d58e03fd6b1d29f926d6922f920dbe9b0f7195e8e90
361f3808d83738a53a71a6dfe5d0a9452e1b5f6b83bf054fb2717a5688915085
df6fd58c1dbf7d47d50b3c272c56e5c62d668f5d9afe77d9f516bc1f2a5f683c
2234baefdd555ecd0091eaedd316cd5a10cc5c3030f1a70052629bd99f93d49f
d8a04b97ea43ceb01876c5be32f2005657bb65967f64fa4b5f07b3b87204f289
f4d12f5853d3dea314b26b0982f860259245939d603a4886401a1b0df1dc7940
3c4ca4e5f5ed3695e1b9bcc574360924cc4f7306ba8de4d290c77c5d1a36f573
e00e9e23e7aaca58fd65a682ce0d11518d6ae1434b2865de398888266282b7ab
1be5f2587abc8b240675aae46fc09ae858928e40475829aefee07cfabbdbe441
646a5852efe872f60c7b19b8899368d9d230c344ebf8309cb3a4c9e9cf7c07f2
49b9ffd538d7b4ec4711a0cbd80d92e5efa6b111eae3344c4bb83f765311a593
043c121326403276b6aac2edeb3193b35e940787735f001acf7351d73dfddb0b
01d14d4660ff69761f365f1e6c115a2bb3e9bd19382e14e622d1056c7fdf9cb5
85351cdf9a4da74e9f470dfec7778b9c2f2a49f4edb2765df0039cfcb42629f2
85a34a2c5d04fc0ec24a2d2f5efdb04990045c179c5c3f419c9e4438056e9b56
b4acb62c286e71082878db9e5276f4f0ae240d21bad964305a8437f256a98f7e
d99edbd1452a0c31b4e404d5a676ecba617bfba4caece6fe75e570ddd6fbddcd
11a9f61f0313098321f00b17c78aac126fafdc9bab3b384981f38d71d2a19b96
ae8014314ace1955704e889f5a2d6e68fe94a75456120567ea7228a402aa3fc2
10d5b036faa3d9990cd59bc9a2fdecc671aa5ff1778cb24352267c0bd9c22244
fb91919e5863c20204323d7401c3d693ed3306a632949f6921f50ec274955c3a
5f943dcc12a1779d57287be82963cec5c409872f87423fe69acbf8a240700cf8
a796af1770c060bee8d1cc964db7501503597e65d8f6e4c95896d2993f96d7af
6aa5da613d9d01a479c60649418b6427bf51d497819aecfdaaaee8a315911257
df3b2f500ea653c078bd93e5927265392432c00ee00a02702da091e57a749be5
1eb69a02d7376d1ccd5161fcbfec26de46abde4aaa1f33f1aa1595aa121b23d4
f6b7e712b457c0bb6b2f5266781cd767c08eb8fad5439f6f435da73cfdb93e90
194018b764e0f5f98090f0eeaf77a5d730bbc12b5295b7fc6621e4350e99561f
9315494fd70b08fdd980226d244b98293cceb9386a7d6ab9c409417edd7cec6b
0e8a5062a8d322975970f4bad6cc47c363d3c1223012dd9854f37866ccc7a715
7380c7583156ba9956c9e2cafc8a00187540077c8790b3258decf4a90efe1e1d
9b72a8ca4d21a0ada2894bf6cf5cff1cb5dd74b233daf95e79c88f96aa0c86d7
251a783d0c9c6e76da5905e8d505bf430df5087e7676f8dfb12293bb96bbbc71
9c4922ec24e9eceba03d6f981770bc3b34dcc9f1e097c1ffc9a1eab57ab172e0
391d10ec45740d34a5cb7f687b6787fa8b32db381fda5e2ea508c3c22dcb99fe
98cb54105d4d61fdf5cb2345da0de2c0ba61036b07372ea720200989c52b9a73
991853b033a133ce52589c0c80400dcebd141e9684d8857656a2f4f381bb382c
83cb628d25bdfbc7a68dd801c7fffc5133101b32ca4ecd818f85564a4855b0ba
677b89cc9fc93849f3d16635e444e2c203a436fcf2cf625b8ef466d368a24bd1
a89781f4a586e0d834a8b42ea454a2ddd3c6eb6a0dfc2fefbfcedd71b4f82ae4
b25ceca0aa143122eb18f791e4d7635d6327183d796aae1628f20ce701d19260
f810b2ed6ca3af38ede9f5852100b49143d9d882243fd4e3807f58ec9f3c2eca
bf6b7a8b762eda164b2462a77998f21c8262816e511771532744382552e6005f
e5ad18bd80ab4569356ffe0ae1f6e764c97655ab43d82b815586a38e4391b896
9a411b3ca7cd20724a39bc1295fc7d243133212eff407f705db332f3e29bdc96
879026c1e00c70e2cac6b22b5fdf1766673922a26b0edd7def6672b02e3a1eb9
16f4bdc96cbbfdb95741f001838d85920bd56c84d880a7216d3d6c0f2f967281
b55c15d60756674a78f0c512a05776a007e531747357f09eab86cafa026c5df5
cce2f67b5c8cc2dd2480fee37e455f612ebee3625e6a1abaa375e18f71b3e8f1
3248d3af7ddd022df0d1a9f39c6c650de49425339e719b478b2fa21ca03713a8
e10ed0eae36b84a70730fbc220fcc7cf9c6a58a45ebabaa14cecaf32e481925f
d4b7917649b7d0e1a708dd13b4ae2c4ca57ec300de2a7e388c0fc6452fcf4e16
b8d57b1259c84faf880245a9cc4657f43f2b0335d277f72021012f9a69a5463d
63c6418c18e7bcd97c4a1690feff2bef3833dc4d8acae3e6532f93be3d27eb3d
ff1aa851722339c013c7d5ae7d6618919cff56029483e6d574e0a45a734bd010
310e6c6eb1ea17265531c7fe7ecc8bc7b145f226f02663f562823339d5ae3092
3e54c647a0bb53591e1d487ab13d50f08866ee5effcdd2bcb3b03006701f20f4
a1aeb1500b3eb70016e75da5ae108c9a87d1b7018fa9ef26e3bab838980b0e3c
d2dd701faf5328d42facc53cd23433fed7d036733680f67ba5b31d2850c8095d
652eca335cccccdc8e9c415de4ee14e270e91b73ab22d9b268e542c1bab2e3f5
6d9b3d71c2fa91d51e4be1d4f8de7a5dfe0093be105accdcc90a6dead119c1bc
d1423de40b20a6c83c526e844383f06d54fcc06b20814c9fc75e5408166db6cf
97477a871c3d21395fc5eee98f89da18f17f760a0f05d01147bec97f3745c318
c4d5221e5df6cf908de75a1a50c65829cbd48ef65bf4f43d662f850554c1e286
57b90e7bf40bef0a96d9b2a195c2e6d9ca5a04139075abdc0134587dff6328d5
d85c92a2b2330ce0b8303ecfcd1f5776d96929bffc8ea3a0ead89716c4382e31
60dab297a745082f5d2efe95e303b8a30099b72ab7a4a6b7d6bcd7708b53c6ef
6799116573eb13e126f79f2fb7dd697907504a0161adc034cb1e9e4ea600f4c5
51abc35fcbf2987cd52224b8647a0aa9f051e4dae3e9bb95da2bfa59e2f8799e
70bbb927dfc2781c0271c3d49af3ddd37fba87c35db75e6c99dbbabf28635c01
5c64e9cf76d32b5baae7d7db5e6dbea35552d71fc3c9543f673f42e8dacc62af
315633f9b212b6f6eb5e98aef05f5718daec4281f538a36cc5b67ac95d2a5650
3b3da5668e8e3891cd03e70f6cc7787c52ec20737833b808ae5385b033fa8f3c
4b91316cf3fd75fc71c7c178db1901704f5a22271441a62a89187ce90e973846
65f40e0612fd46062a5366462e0bdecd5778b1b516eefffca09d40d950825ce1
0c851fb4a381de1453a1cc453a652be760b147179ab4e3d030ced0abf980b20b
1fce49fe024177a8a52b035692a757d69ec076cb7590b65997ebbde7c1e323b2
91aface4e3bdfe758760e36885be6ab82dd01c0c8b07f0d8dd4747b4c6c61e0f
1c67664b981a0ba2361d801575d398992ccd70352fe501bc3d05407d9be9744e
3e9d17e4595a315aaea1cde9a72af80c66938ea01e43f122a4dc52e1026f139e
9be53a5616b96091a5983f91c8559f41641b6b426f1ab2ce54979ca40f26b360
0fb3535fd025a0ae9d8ad176d88730d2f5ec9f6ae8f3a67b926e0dfefad6169b
fbdc4b0a83cddd03db966c59b50e720950e11c16407f2c5b96d95fbbe1304df9
1a346e7296d95b06309bac5e8eca913e6b632b4c09a6cb253182f07f946aa328
126f1c991a2a99add2abcee52fd000be416bfeca75f4c244930c3951d9f9026d
e622a8787add7d440b4648e53e2eeb892d156e3d5a67e40e2a5f68f5e6aeea03
926eb45b2f30e58f309d897486d1d5e1e0ebc288e2207cf81bc2ab581d0f80dd
2312bd9281c9b8cf106c20e41b60c76489cd939236bc02defe1b1756ae211bb8
6cf993e238c7f5f8a8a19c3773f90140dd97d156da8e3d985103ddddcc3ffb05
0f31f48e173ce294f47e9698db5b3db5300637a464c70df1c01ef4fde0343481
302bf9d22da4b1912818a2534a392ac7f948befb09d56c857e1775b6803c838b
452a3ba9429f19939a10571f10603730c38e1d8096df705c198c7b46d2c02de5
61b6dc32670794fecc0c439fcd8ba46d036534b11693a3f58bb08fa84adb3afd
3ecfc0db52dbd7d5a7f02ff70f58d934a7f89a67d38490acf1057c0735912bf2
be16ace6a312060f25b15058c30c0968610a95aa1ac981d62885ac010b9c29b5
651fc1dcbb4574a18ab988c3df7d7f1cea6a3df276236353ab3077582d3419b6
e78b5046b03ee7781144d49445f50e7a83151a8026d3bb4fa41bd93318f746a4
23e6fbd9bbb2eb4c08c7d631cd331e81c3b64bac82ab68147d6e844c2305740e
4a504df56aa4e8f764d07b1df4c482056411e9e5f2046eed2b1bea27f0906cb3
a4ca929a949683c443748e4c54bfc3dc0dc32553a2b92b75112151685fb8f22d
791b28fa57eb7767de667f3dd5a328e6e995844213dd657b5708ad976fd491ab
524ead9c8622206e89b2ecf37145d43788d17042e95e59392e180cbfe159aa01
b782ed053651b88704916ee8a8cb29a9a1950de9a56ff0e87e1db56c170fc711
12414139d80ee84346c0b5edc4d2c36e82e99a1fdd3a25784a47ebfd3af0ef5b
c2cd9d0f5e885eed46159917caed75b66a407c531c1640d454f8f04f570a042f
151aa79450cd6b058fee85cec51fb3578688ba447bc3e9718b8ca5d42256f8b1
0fec6eaec4d079a6e8f3e34ead1584288a26603219afd85b882f6b31fa589c72
8fba0066ccd4f9fbe18d94661356cfe3c5d123f4f1a2b66badd574733ad65f38
19ce710b2e892c72af9856b71ac2c06d8ea684d06a8a5a8e9c36d14b205b9546
1a3c8ecfae188b859eb474e4de7210873d23fad90b3729a0c1666935fa822154
210e9709d7f068172a5c76568285b11be058a40ddd6823db0ecd5c0bab1667ed
d0fd3d0fa52664a6fe694d40e0e70dfffbbadca4b0078b6068ccdc68ca233771
ac610f0cc2a609b187971feecd375ea8e7497807e4617b12d6080c0257672c3e
a2fbe0393386e47d24565e19274f251a3c00669136c0d8addb5114e339f15979
0f60b98a3f86b07bded1899a4e79fae20edda59f00dbb7b1c62d04e40a6df937
9e48c150225129e38489b0c5ce439fce1b94718dd1f304afe15a864032eaa507
7ace1fa2ac4d2de8a646bcdb9d6a0dbfa811537e9d8f663bc820c0d24d076d11
b0be629d81b016216f2e82582fd5b6cbb8d8e50e0b96e82e44d98c224981a5b5
116e759f914d2f30e11cbfddc5ecdc9c2cbdcd8d5d3f18451153a9cc3118a68d
99921ca56151fc5fd81fa3f77c01f90367e1e480ae7422bbc9288cc467e5d70f
3b41d45ec71b06e92d899b42a752e71e82e892fa32e65ba47f98844255e188a7
482307f004795c95cce973815a3aa699a6f88d516d785cb73da8584f3fc1a8de
568a77180f5a97c29e14811801d5ff879c62f90fc62107c512370595ce168f04
a56bee035c9c1df8817bbd91
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark

%%EndFont 
%%BeginFont: CMSY7
%!PS-AdobeFont-1.1: CMSY7 1.0
%%CreationDate: 1991 Aug 15 07:21:52

% Copyright (C) 1997 American Mathematical Society.  All Rights Reserved.

11 dict begin
/FontInfo 7 dict dup begin
/version (1.0) readonly def
/Notice (Copyright (C) 1997 American Mathematical Society. All Rights Reserved) readonly def
/FullName (CMSY7) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle -14.035 def
/isFixedPitch false def
end readonly def
/FontName /CMSY7 def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 161 /minus put
dup 164 /asteriskmath put
dup 174 /circledivide put
dup 175 /circledot put
dup 178 /bullet put
dup 121 /dagger put
readonly def
/FontBBox{-15 -951 1252 782}readonly def
/UniqueXX 5000817 def
currentdict end
currentfile eexec
9b9c1569015f2c1d2bf560f4c0d52257bac8ced9b09a275ab231194ecf829352
05826f4e975dcecec72b2cf3a18899ccde1fd935d09d813b096cc6b83cdf4f23
b9a60db41f9976ac333263c908dcefcdbd4c8402ed00a36e7487634d089fd45a
f4a38a56a4412c3b0baffaeb717bf0de9ffb7a8460bf475a6718b0c73c571145
d026957276530530a2fbefc6c8f73e9b697ddc0351763500e23c4d170ea8a2d2
75ad0b6b23097f02fa803c1f46f9ac10fe0e527c431b11b1b9a50e874896cca6
17fe3e255960846bc319ca68b9b930a45d5d0fc36b352c3443ab6f7793b38d2c
7fb9c409ab7980ead55e9f8f6b83c70088d1fa6d7f2214da8928e40b96334ad2
72d1b5db9d1355a579b26a8dac21f021e393d7d837a95deb8de92ed818a8b80b
98ee9cdd8a3c57ad7d6eb7a82f43eaa6ec520eefa7302e750edc4b495f70bba2
24a2182eec37f1a1c5dc8e20973007150237daa6bf03d498826777eeebe09014
ebfe05a8731e1a421cfc513d47d673e3d94d805f5d0668ffa265e0962cb5a75a
4a93d9b877ca4bc5cd9c6c6dad91024aa3cd58a7ec276a45510cad80f10b9356
1e62c497ea0eea8e11387891398b3c063d850c9c655fdd2b7985026629ba6f33
bb860326eef1d0cdecf8ba2b07d1a332c60c36deda038f2a5a0bd40c5307437a
2e57304f3327405c56dbb938a39f7fb26da375cd128a5977bd8ae2d7bb0751a5
7340945529aa8ca90627f12b5c916376f0d464fb7c5f76d005f8f2ed809f3ed0
27d538dd2ee0620a5c944bddf4f129c19309e1cc3fc4857bdce3d0a91feba96b
93cd2ed43a0470d78d98fb148ff07558442e9cc419cb766c056a44664cbf6eee
7500d746f1f4869e7a052d915e5658c0c71eaeb64ee2ed8d6af151b779950965
95e3edc31c45d04baa32f5c605fa1e4d2a043de6fa544bd1864ab39d9a9c26dd
6f035a25eb1201937fa7fee4e65efaf99de60d9da09c21ed25d941115cf293fc
92af561e08a9a2c8fead50474b7e37899b47923f94c701411bd6cf805801176c
1df09c8608040cfb56676a0bbac49f7ef9f8f629de610b27dc50d4b0cbc16f00
930ece46753646270bde40febb46dcc16dcd8422cd55a4bf5d6f4e610b0ae029
fae1ceb82ecf91a0556b04855cb3335e8f45c6a7f731404cd8457f67979704d9
ad3ad6ad67eeeb2fdd0e2299f7941d2f7d0ef4d3eecf54702d079675b408f574
7628d5b82d33056add44693a8a65edf28c22280a347352202b3c0358668d8edf
c3589fbc16ce9063c01f0397274f74547c93ce404ffdaf558f7f96965655e92c
e53695924913a8d07e1119a5b7cf965de31278596aa4ce8a06da0ecedc666865
16aaee4211802a8b8c9141c59717177db237e476bf44551c6dd4e645af0cbf41
97f1a691c281d3a11c7d1c32849e1467642dc6f2d8f7c497968b050b8fe97dd2
997cbc5cca491a1944d0e3510a10564b18f1a4f26f70d2644471d1add32ee572
bf68ad6d5e589c3cc737d0b23b74e63c8c4f5846b0981d0c6ea39b6459a5991d
5fc3589ac2f62461dacbb53ba93a458011ea81d1cc540619026592f64d441e20
cc1df3bad9d814328867c52a2ad46f8c9ea0ce809e08174f9e2fd69c76a4720a
f2ede90034e804e978725e34e677b605847d359004a8efb49ff783cb244da862
a10a34f8aa0d4037b84905cf6438f65197e1be12757e04f64249694c32355eb4
14581f2219b7c938e45db90f20597c9dc16454fff80dfa180604e6a96f97eaa6
b2ece2678cfb985868fdb2d705d4e6975511da270e94b30649623549fa32ca46
f5d48d3bb04e40730e5807344f17d1eadbdd93451b308f88b8efceb0aaf37a71
86164ff9cbf15581da1e770711f604fd5512aa50728b3a6ca01a41b65ea27361
7337802ab3b3ee45c71fff3e0da802828a2dc341949cbcb7c8ecbd54139eafbb
d0504d9fb79825197dbc76ef00dedaf21e6428687f12d04a5ff899d69e2c4aef
dabf14b858b04222effcf2f01ae29488b80ba79c94486f3adf8b266fa8bd4bf6
a2da86
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark

%%EndFont 
%%BeginFont: CMMI12
%!PS-AdobeFont-1.1: CMMI12 1.100
%%CreationDate: 1996 Jul 27 08:57:55

% Copyright (C) 1997 American Mathematical Society.  All Rights Reserved.

11 dict begin
/FontInfo 7 dict dup begin
/version (1.100) readonly def
/Notice (Copyright (C) 1997 American Mathematical Society. All Rights Reserved) readonly def
/FullName (CMMI12) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle -14.04 def
/isFixedPitch false def
end readonly def
/FontName /CMMI12 def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 161 /Gamma put
dup 164 /Lambda put
dup 174 /alpha put
dup 175 /beta put
dup 178 /epsilon1 put
dup 58 /period put
dup 59 /comma put
dup 78 /N put
dup 80 /P put
dup 97 /a put
dup 98 /b put
dup 99 /c put
dup 100 /d put
dup 102 /f put
dup 104 /h put
dup 105 /i put
dup 106 /j put
dup 107 /k put
dup 112 /p put
dup 114 /r put
dup 120 /x put
dup 121 /y put
dup 122 /z put
readonly def
/FontBBox{-30 -250 1026 750}readonly def
/UniqueXX 5087386 def
currentdict end
currentfile eexec
80347982ab3942d930e069a70d0d48311d725e830d1c76fba12e12486e989c98
74c2b527f0925722787027f44470d484262c360cdfdddf3657533a57bb16f730
48bfbbfcb73a650484015441fdc837add94ac8fbd2022e3ec8f115d4b4bb7b7f
15388f22cc6198efe768bd9fceb3446ee4a8dc27d6cd152485384ef5f59381ff
da43f2d20c8fb08aa27ab2015b774db10dacfdcd33e60f178c461553146ab427
bdd7da12534ba078ad3d780414930e72218b3075925ce1192f11fc8530fcd5e3
038e3a6a6db2dcfbae3b4653e7e02730314e02b54a1e296d2bef8a79411d9225
dad7b4e6d6f9cf0688b69ba21193bf1495807e7bcb09b7064e91fa0ded228e42
09aae407a7aaca60b1076299ac4abd23ef02f108765f0e3d91f92f3afbfded37
2fcf6e4b1416901517da8f2fb3c9fe7a87bcbe6fd36cd5b5823fdb74229036a6
3c3346a1093e6b1036902c1bf42fc317c80abf04020a47b344c36de42f05c490
a0ff44ab6d5249e9f552a8707bb7661e242644814001c8430ebd5e5f0b944ceb
666ee64359d663e355b2f17093a964139d17287f6ca6a024767eba4fe4873855
babe2f07b91560f68300b06dfe27264c163195d446980c35bca0b48f7806626a
e72636593a05ba403ce1c0f8b2cea3ecd586e90ac17d034ba4af708304f23131
3459fbbbfb97d4834d0395754ab3f22d6495d2144087d448616fa1ce27bc50d3
46543287e3860d99b433624119bb9920a2113604c0e260fd275ba55e0fd19c83
e19addc3baa1f32f6b7284038845ccee71a3311ddb17b84975f7a984bed7c6ec
2a06e5b335a763d081c6273f86a46632fd9141a27902074fc860df3a2eb59b89
774c767022dbb577e30da128bd7706a43af886d0c256b50fa968ef06776aac0b
a5387e9011eb2334c1f42c090f06a1125c207ea6324e87f46414050d88004e87
79bd39f94399c3f1de84b8aae5edc6c3611e8ac49460509e672000d0afd94568
4ab67ff5c6bf2301522775398e192532677826b8cc7821a3a6a2765ee6edd840
b30d07f445681d61f0af1154c46147dfea6f3500f327b50eb05b5007e9e2a5e1
50be9f8fb62b781a609cfc01a10c69b3c05cb9368d5080db5967cb19b03aeb8a
38d5229ecec9a0453df594e38df4004c27fbd2230371a01fa865070b1de53b95
3c9422ec87ff72882f150c22a5d364ca8c1f2723231101b6ac7f8506f5d25825
91b9aa77d893bfea886d0dc93a91c7fccb621382bd048902b63c0591b53cbd3d
2b903f9c238b4fb0c6058d440a99382b19b6106ad6bded9212047956271f9286
e11085d68eb8e326934ef9387d8a3fbf0fabd865583b67fe0c0d0f092e027cdb
9142f804cadce96ed16395d94068f9c3174e611e4c3eb8c1b68968d6f283aed7
9e4aef56967926992399851406049e4737a7bc821c645859d1a3b1c93521b07a
ed69c51942702b4b8b0ed6a21761d44f479fd8cd36f722437986d0a96b89dfaa
4c92468831418d3fcc7a8d5b60d1aabe0c457b14a1bcedf7487fd0e5ff576f28
fe2514acf0a8905aa6ad3b4cf4aa92831a266ce77284a6f9e8789eb028a5b30c
92a8c95ee3797c5ef1a17e5f49a80bd68c01d3e522a5daf0e38fa43e5eac385e
1e43bb869fbe0bd7249f725d3e44c1525dbfcba2199bd75787a051584e78842f
0470ecb70e58d9607d621dd25b62b1e860167ec88c51bb2a58b486134d6121cc
e6e5bbbd749f4eacb7e98b3b53b92f52b826b4049f412354c27153afda044829
8b084c3f2f49606d021e4edd18ee00c192c870c989296ca4e2f4dc5d09df7081
e1b9fe94ba849a493c59eeaab08b7fd0023a7921ccedb12835bd9053baf698a0
27a3a2f46521b8b30791658d4d216be71e01c23837b01be275f9210e33ddac30
c72c3993f07a6c4bcc24eb1d8b4f3dee1551b1e396ea0fc7bfd63a65101f67f6
ba050170e97de7528447a8ef2313ca5fd5d2cde3d914ede3612e7f6c17d4567b
5fb523af25288ba0455793c27018d6fca2f273cf2a4c01c4e2c70e0f321f6161
ff2232116dce33e72c48755c5f501df1b711917dedd3081db313339d5eff6321
ffdfcc8003d3e5f94f82cc03c0e9b4440be6b9fe6575f8a94dca89cd4870a0e4
37a516e9159ead46d3bce8410d470578c36a93b8c723941dade755cbdd6f56c7
6b22adebb29a2e553b2d0ac956c252682c6718e024743843371cd6199aa8e309
de9697bcc38dffba758765f263d2d0babe50e346800765933f998b3ed375c015
58bd9049999f59f4f98b506f4214239b3fc9114a2ee3ffe0fdf6aef392e89c47
65bd69865565cfafa53200f2ec57ca2f93d9d3c8e8c0262a60912cc256d0c8af
31a8ed3a8c36c7db604c32daa38ba48f9c006d0763563728d80d58cd96d43887
94cc2b9423a4cfeaf043b327151008a56010a1e9426c7e21400e49e6affe955a
552c1e94190ddc20ebdb56435bc54f57d73308886b464027c3625e910eb48221
f324e11c7cb99a61b10b9f9b289ad445a4669dea029e836fb46917a80f8b5d9e
b6373c2f5cf1c035b1b379ca8ec795852478df5dc2e0586a9e4123584e5a6803
df628b6bbd3a0ea8588d092467d4d52eb25974685ac93116d6281613fe8ad264
e933c666ea503175d04b6f2f83ec60de6e18813342e15ceb6b1b87da70d80a37
fa745ded07c4e72d3fc53af658548496d129995bb1cf49dadf0dfcb90d975734
76efffdc5a856aedb77ab6081ff57ebbb23b6f3c9e090c123964c80ef1e45d87
42fbb305cd1881d9a5cb4b3cb4c943889993aefeac95196ad56e5cdfeb59c2c9
badb41ad3bfb7a165a5abd716201c2f59c74086b51a99b239a18c6124aa93a37
26ef3b70b83330fbca90506db98ff04fab0fd1b10f70ff90564f40f96fc0093e
2d467e51faef9df94f8ac4c2fc163b8d233e340929bf35f0b0e60e1d3dd339d9
659c72a831425a99e22d9f51aabae64947a026e32c4985f9e6e3ee983cfae5a5
31d2585c99b5c31349db4586dcf89c35b88a8364fb45058af353d78990612e14
db2e9b1e596ffcf7b4c90a8d4e577cf18814aec9a5c3f5ee07543c60abf70d64
8cd84ef5138c52737bb442a3644fa6dc9df2acd734952dbf03412a9e30f3e0bf
5dc98070c1b51d710fe0147b04444b89e64a83c09225ac8e484ab111ffe112c8
79a4d2fcc4d4102d62619fe0dd838f9d7e5aa603828576fdc9c157428e648d1c
b043f9bb3eef9f00a21ab48244e837afedc0be64d3f7b28f98c484dfffeed94e
fefa5c5b231767a4a1c128af25529b0c3bbab6ed907bfd455c671e14d4e5edab
e90a8965faaada81648667c8a70917ad0591af82e9375a74521dc8939751ca7d
058e7a5da56618ac7c0c657440bd0514af9b735d1e40725699d4c522e34daedc
996b19fb76a451e24989820c015229cf372da26a9f9971d93cb5bbf367a8c151
7e314001a3c8c627244450d42ef34834bf742fff94e9528157818b94288a2c50
3b5d40e0d5f770eaca69a957b2a42a17406ffa02bf8e428b892aa4a0837a0db4
a7a961d08e8762219190c8d0e22957d18eb9c563b7c963df1c64edb8ac4ca2f1
948eaef5efb347f9b475d4c6dc80fd19f6cab7d847174d776dc089fdc71d6609
4b298341d1dbb203fa49a1787810fa3e49a57a1432590f7deb5ed3d827762658
14cc832cd7b557f8adc69ce23ed817dff3b7fbf8e994a7e732571bee3cba130a
652688346aa7dfe877065d0fd2207db65c2efa74cd5095166e2123b38723a4ed
9f451edae6c800e24d9c0397c2cd94d5dcb3261b09ff623e1b32b8c317dade2b
40d35f9f5c5f9196f73ced6cfc1015e5c1d66cf6a538e0de4e4344fe5d3f04aa
430048a739dc12bc471333b358e0e9efb4d69c8bba8849965f562ef39100f3e1
8481b11f9515dbc33c4f4101d4d5197147996281718408d8d183821c2e6ca2ab
b676ae122c8dc5a7ce0ca0042704e425eebfb6f5ea5ac259f23a18e9fffa5f01
8332e373d8e6c4c4cb1b457ede40324d22c11f2649da84fe02b24b3b286bbe6a
47fda3e2bc2c46628032cc750e7a2f2ea198ef9c20c9680fe08384ee97f6951b
606ad66797f6664ab38ac6a4490a3e416a77af69d3d2e023d455ef7654a52b2e
bde757e55915076aa01d68c1b84bfdbc8bae9ebd86580e8b8095a4b6085c9322
147bdebf713c46848418e8f7cbf453ef1e853e3d7d0de275c994a67e32b79cfe
67fb5d27c9abc855d1cd0c35aa286bdef7712f93aba90ed79901991ade55de81
44864f0c8e414cb3f58e89bbdaa1590c2098cd6761fbd99288c230eeb01fe44c
b93991f5f4c2f1479d22c9eaf5ae7f18c96ecfe181208bccea7d11abf5934f5c
3b9bbfcc23967a1356543d8246ce5c24a137ffd6f4960a93c37fa061ced901c8
8010b4b3c563a031557595cd9d9a4b85f5b145dceaa2bf8e36999d40f588cc0a
5987d1c7b7dba23e4fe16f5bc8fbccb633b8eec759d2fe3c911d4d0407734cdd
4235b10c21272bb438d67510577a609e2d61b118547c9ab53377e2fca833f521
5e0387407067ffc85af5987ab4a6f68a6cf7b6df918b3061b803c23c5b6b4a80
c1da9e7290e62ab399e79cd070fa8654f569c14ec80f3864dd3c418aaee2c030
cdb1b79e040d8311460b8c8d0c9aca22d1f2f822d58e6953e755243918f46530
18186a4275a43b2bb0ac79905348d90815273294df7cb5bcb38e9d9c1cf93dfd
f5eb27d5bba38dddcfc6c58388dc0dc3ddf8ed161f8ac763df2a3fc850dee363
159a728a74884a45ca8a2933d6a279ba136e40c80a8d29e4dae831f414b80e71
4303753465ef01387da89ef752138e62fc5658c20c5b0c4af1c1bd49ef7f048d
1bd92fd39d70df5b58b944942119f3da4dc3b87f7a34e41a16b054a5fa8e13eb
43a19b8ec8d012201ecbbf37d44760ee0ce8d270de8a920afd07f41b29fbde53
88a8a00da53ee2a0d03ed3b2b74421f1433fd6dcbc554a9b156476db2f6ddfb0
20a3718bf59b6c792fdca0febd533330df9ee959322c51a814018b5bd277419d
16be997c1bd70f78a15084aa0db01adf9ff5bc346d547e07eac0e7461cf7cd85
8538c04e05baf9a58b0b924aeb95d3a1242d3271997843544dd46ac10ce4e549
2212305c6026fdd280d6da64a8a73138eaa7273a71b0805169ebbc7d3c98d920
34de6921a5abce22e2c2d3fbcef534e674d862e5ff8ac833de09b98d919b2611
71526191147f9e7705b9aacea955bafcb1d1b820b741b0e87ff3111fc6d5427a
527af9221a6876182af61299242c9a799f09649c116deeccdda14901ea7b1592
ff92604cc5c765abbd20c111c241ba6b99b0d9fd785a924b65153b2ffab72f8d
ebc15dec776b3a21b541a41b6d078a73e270253dc0568918856f47c4eb60d859
9367cc00224e2cbdcbaec26298d57049f296000603389031494255546722db0f
1402cd1db9ea50ef2f024aa2df734c2aacacf022839190ef465e769955d51497
3fb13ffe05811275ee663e2cc957c27430fd5930a6070c2040a78b9da90999dd
d4c44b691220b462ae7c42b70babf942433b0ea19baba76413382d705da13bb7
c85b23f629aaa5abb81770bcd76bd72f287be198b7508cb478b93b8d08087df1
0b875cc70a49fb89dbfcb81bc5bde14cfd96310709043a184d0a3d028f93c14a
400c31d6f807e08c9bdffc3b0c7ddf617145e8d6c07e3f57c755ba77acd9961e
16ff4e4c53314ed451c47abea5d62167c1897a1a81b0d92185f818274c3a1430
90ef219fe1eb94a4322eb87e3fa1e7c0b8e75149879120403b4aa6954b7f5c49
b248136405f1094a9925b5fe815c2008c060f8ac92bd998d98f68c0e440ab961
ac4c11c92403dd36e7edb8b9e730820ab9b924e8b9be75b916f0ba3f8a9638ad
551c36560c9d1844148e92bf6c28f57f88d282973cc6cda90ca51615fa4b7e09
bbb71b22fc582d29598700377b125ce6bdfc4e1bbfc362a6ab013b7ed486fa6c
85ab334c07a75179576e30c82eb37806b277187b7880a7f231f28dc2b2f965e1
85342259d22372266a2c939909d15e28a6a3a142db0c76ebbc9e01c5bd8d0fa5
40a94896d6b9bb875fbc6a247b31fb91e9cb4b4784fa91c2b4379673e296ce1b
6aa83db8119199fca0e58578190666f225f84abaad0eeb8ce0b30ddc98b3580b
84bb9ea83dab753c3ed2fda51f0d51f868efc19bfc4d2c3a817e4f6b70cc3fa5
9d36b9bcadbfea1fc3161c6840914252fe7d7d2b7a8420f1cc1e868ca73ac4bd
e4109bfc7c7f6c78fd24de43bb73b1d33483c14579a0e02237c71aa7372236d1
72678e370a4a8b129663503bcecf05064fce6a8a5d6cbef83fed84551eeba9c9
fa492a85bac19ca062b5a8cb97a55e8fe1877c1432f7991de07bd818ce331163
fe927e1e65ce6e1849fddef35cc774ba39aeea9760db599a4a77219a5c6b2df7
85754def4999f4d2df52b2d48c858964101127a16ee245f6deabbad20f5a9221
b8ce7fc82413ba671875b10cec6a2a408bcc4d0fc3fa4c16688d39de74b37a38
920b9a66c548c151b73845c103a2f96dc3a5ea89fae666c471f8b2c887e21971
8a342d5f54913e6a51fd72f3a3f4b4bb176a8bf954373df0d6ea1a6923b0d4b2
e3a02ca599d81aacbf3f8b377ea252b42ed88db1487d206d0a5fe21e957402af
759ba5668f5d01136a7d5437f86a400f7bec0e554e9605474b8dd6b570687bba
cce2429ccfdad32a0998120e1620d6506a1ac529968a81ef41a8460df7edaf4a
30f5a8ca22a06b20123a0fd6b61013fa61d2b678a9888f9c82f756f88a2437f1
1bada72ffdc342189b9373b2d02a017f81bc784f26aa23c08a6a18c64838c4c7
570dd1f29a5e89e941d5e57a404be620ce7b092cfd22fe6f7f0a6701f70879a1
d107bd5a0abaa736705dd2511dc729d19404f83a907bce88158d81082b277230
b757a85da2caeab8c124b02f64ff1cba500b8a48e0a40e000be15a12b447b4c4
10501def51ea67700f85b2aa33e359225b0fb89aa9269947ffb513e6e7aec3c3
a882c41ac8a47fe88eb291139d5772f971c81b4c776559d61d7c4a5f0f6794ce
d88e1e5a4822ed2389fd06a96e9c4067799f00b45fd7b2867aa3756d0c35e017
673e317021c4df9dcf07953f1b3abe9e30fcc30ae65a950514025a60e7aeb811
5f104c188b0ebd2cd7a88e32498c484b7c4d3fa752e31820c2ecc8fa9a1871e1
230cc477eb6bc496145347963094c619bd98c3dd9a336446f7b49337eea37710
0e66c11da58854050b64b203e1e04b908e1cd134434f5f45c9eb91c483299134
95c1f7c827b745867174038c0ee5cbb3b3e831d637bb018447fb7a71bac218e8
b1588a080b3d499c81050a5e8f971d43897c922f28bdc5876e0a3a2ac838ef3b
0d92b6e41acbe274f89ecd695cb0d65e662aa5b6f2ea290cff03471d08ba5ac3
916decb9fe9ea7662f5ee6398c1552b9ca4bff755d5c7d63bcd15c3f2611140b
8f5d10b570b69e6b11293b6425ece41cdb65840e778d3ffc0b5c6620e68fd4bf
7fa3895b1476cb9230a9c85eb975b4eeae6f12b6ca929d439f9c3df2609a8f52
157a0cfaf33eb64796d5d3d573595a7c3280ce11c4ea5fc2092190c18280a1ee
79568e407ddf97e0631d8f692245f3e8384a3c5b9d942209ba12ed06f2d016b0
0d46942f7bfae62f3eb6754339f6ea79f11ae68176235c1778d308ba67ba00da
ec25e0f235e9b8337e61394a6e044910b6c2285ce22f5a0b3daff8443a7e77ac
1347dc6dad00407689557406c35431f9b0b409584038f09076d41f5f603d9e72
cf50c0482ae7c529410ec82f43772fca41f5e11c7746676f42e4b572b0979e29
eb2a519ca941af5ff95e8a2b984e1c42ff26811b77674124c40ae668f51a2f59
321b2b832e4e522089814c47178edc67bca4f2f3771cc18ea6ebb9f3b59c3bc1
0d956ff645ea11840d34c4797ac4bbff8574592771232d517f1222b38c55a06c
5815a4e0bfc74b3f025ef33d2371ecaf13247c5b5e9a747f30b20e2216fa2f7d
46764a946fa4588e64733b2e130457517c21c854438c778cf847650c984d6f0a
f9a17c80abfbb63c9e218002813d303a21bf965f60a3c0ebfe84023d410a4ea2
154ceadec6d30f8b56b20d28b6d057c2f4a71cc0260579c79bb859b06aef6876
285c62485e45efa7703b58f594b392512d9f50bbd139af4c47ffb028d37e5f60
6b5dbd72ba99252c669209bb556240acdb29d71704eaf56f73bab3b53602e2c5
3bacf253a740c8197e64d9af3e144bc3154ecda4fa61e4836f6bc28b6929c300
ec349959df51c3294b02
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark

%%EndFont 
%%BeginFont: CMR12
%!PS-AdobeFont-1.1: CMR12 1.0
%%CreationDate: 1991 Aug 20 16:38:05

% Copyright (C) 1997 American Mathematical Society.  All Rights Reserved.

11 dict begin
/FontInfo 7 dict dup begin
/version (1.0) readonly def
/Notice (Copyright (C) 1997 American Mathematical Society. All Rights Reserved) readonly def
/FullName (CMR12) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
end readonly def
/FontName /CMR12 def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 161 /Gamma put
dup 164 /Lambda put
dup 174 /ff put
dup 175 /fi put
dup 176 /fl put
dup 177 /ffi put
dup 178 /ffl put
dup 182 /acute put
dup 183 /caron put
dup 34 /quotedblright put
dup 35 /numbersign put
dup 37 /percent put
dup 39 /quoteright put
dup 40 /parenleft put
dup 41 /parenright put
dup 44 /comma put
dup 45 /hyphen put
dup 46 /period put
dup 47 /slash put
dup 48 /zero put
dup 49 /one put
dup 50 /two put
dup 51 /three put
dup 52 /four put
dup 53 /five put
dup 54 /six put
dup 55 /seven put
dup 56 /eight put
dup 57 /nine put
dup 58 /colon put
dup 59 /semicolon put
dup 61 /equal put
dup 65 /A put
dup 66 /B put
dup 67 /C put
dup 68 /D put
dup 69 /E put
dup 70 /F put
dup 71 /G put
dup 72 /H put
dup 73 /I put
dup 74 /J put
dup 75 /K put
dup 76 /L put
dup 77 /M put
dup 78 /N put
dup 79 /O put
dup 80 /P put
dup 81 /Q put
dup 82 /R put
dup 83 /S put
dup 84 /T put
dup 85 /U put
dup 86 /V put
dup 87 /W put
dup 89 /Y put
dup 90 /Z put
dup 91 /bracketleft put
dup 92 /quotedblleft put
dup 93 /bracketright put
dup 97 /a put
dup 98 /b put
dup 99 /c put
dup 100 /d put
dup 101 /e put
dup 102 /f put
dup 103 /g put
dup 104 /h put
dup 105 /i put
dup 106 /j put
dup 107 /k put
dup 108 /l put
dup 109 /m put
dup 110 /n put
dup 111 /o put
dup 112 /p put
dup 113 /q put
dup 114 /r put
dup 115 /s put
dup 116 /t put
dup 117 /u put
dup 118 /v put
dup 119 /w put
dup 120 /x put
dup 121 /y put
dup 122 /z put
dup 123 /endash put
dup 196 /dieresis put
readonly def
/FontBBox{-34 -251 988 750}readonly def
/UniqueXX 5000794 def
currentdict end
currentfile eexec
9b9c1569015f2c1d2bf560f4c0d52257bacdd6500abda5ed9835f6a016cfc8f0
0b6c052ed76a87856b50f4d80dfaeb508c97f8281f3f88b17e4d3b90c0f65ec3
79791aacdc162a66cbbc5be2f53aad8de72dd113b55a022fbfee658cb95f5bb3
2ba0357b5e050fddf264a07470bef1c52119b6fbd5c77ebed964ac5a2bbec9d8
b3e48ae5bb003a63d545774b922b9d5ff6b0066ece43645a131879b032137d6d
823385fe55f3402d557fd3b4486858b2a4b5a0cc2e1bf4e2a4a0e748483c3bcf
5de47cc5260a3a967cac70a7a35b88b54315191d0423b4065c7a432987938c6b
edad3b72ad63c2918b6e5a2017457e0d4ebc204a520640fd7c4d05e35ea5486f
a43d0e970787203855daccb1ed0b16325828b13b7c767a1a58c87902f0546ea5
404440fa6526975783c2d7a9572b8e5d5176bac598b8960609f49016aebf3763
89c1adfe6a1ffc0c53b3acd9d168ec3a278fd4f1d9b085dc2df701346c9d0887
3d230a161692b42a45bb5da343b4edd839dd60685a59aaa49fc65cd8e2ad2a9c
5cab953495172a1a9f40d5f38e922443a519dd96f667201a408bd1d89e35f4ab
98e2f68c3366efc14b5afe1018d9c845d808d4f8e07ea8168518a171ab4d6e21
70eeac099eb7ef46eb9781384da1fac3b3133bb718bc80082eaea88759745188
f266b31d0c7e791d633f16ed94e05517a32163e74cbd96dc5db066f2a5313d6d
7f09465608cb404613e0f058073af000e5bdfafbbf9da0c0d5c02a3447f2cdc1
f56481901e34265c26d331ac3f85bdcbc7c51ef9eddf2b9c189c5253f8e74282
d6f053d7d183ae17ea175e5ebc401e67d21a9fea139cbbf3bb1358c713a75843
b39a69aa2b1a7b975f53ff22d1dc3bdf7acd17afa1da21568310c68241b31d3d
03bf404bd30baf9cc19c75b958bce7155f03cb0cfe2cae0327aad4b603284a51
7c26de75b8c6f6aaa9debe4aec08ca4b646d787bab1e702054272909211e814c
1d2c33152bda973de70ec02436551ff9be604d16ffa29b93380b5a04a493f00a
c1d3c429bd6c92508652f7ab7347e9dab047409e478b59e22a73993a96ad13f7
3a58f110ca20a1d65e0577f470498b6faed25a690fcb92f9f19bac5ac431c893
607dfdc528e7d7ccd1a953ffda264220271f146682ae3af7b7d80807576dcb76
0e5c25929b3a4ac45cc6fa965b8ba72eb5f411d089e080b28c17e3345b0fd6ca
888eec4d404e64cd13f2572ab02df0fd67b1baf91d4efdb1b1b2c2ec5f368b2a
68af9b3993f0dcd53428bc22ee41611c39764a6de0c0aa13a3e73dcf02dece23
debd92b916363d82ac3abe84945bf021b097609c4d8028f98b3c51aaf74106d3
8f33710d0dec8636c08bc6615751a1efe433d662e7df639a26658d0dfe255444
9caea4d437421d2d300d81b087a180326a89b60e0b04907ea5c80bafbc349684
70311b8287241c4404a6b6449cf98345ebce09857dd33913a89361ab6a23278e
8a3e14762bf029886585212c42e22b1f0e453a7c385fc3ae9928757abbe2cd82
82ccd905e72ac2e21f7afafe6e3be1dd55b7b207e257fa4c2c3b1a09a40e36b9
51aa00864e5561fe09aa825bc0014cde545af904cbd307a2ae23f9ec2286f3f2
30d73e4571ddaa9fb4d17e3bf230cff169f5b42bc960d5974304f2f293b9c5ce
c7e120c95efea1fadb133d56e747e6b142ae241d64e28c368d24bd2ff45ded9a
b13f89449e3db6d82509af7014224a9b8d228b8611bd6797784eb8332213cb09
6f52ac7b7434f648947b720e802e9c7566baed1c0c6933d29f44e15ffcd5101c
d03a7d80e13cd3f292906b90985e3e7c6723283c3413d455889efb68591465a3
103048f6dbd60df90cfa1c5792b20977c9311eff3f574c1570747cb2a7f3b3b2
06a0601d555177c17749d583b64444c8c6c8635d713ac7c971350fed4ce4c466
f6640cf0c2160e19d67672afa1f4435b3f31afa8a0adfa6e7cb291e75fbe8fad
808e0c1931d59b0f0b91fb4b8a0ef26f5bbacb1b0d697ceb42abf820f987a30b
879ff7771f325612ab339f25c885c537dfc2324cb3c7e6d848b4f1f0425fb402
80191256a4a6485f358520837b19f9397c56fc6397a928bb2742481adc64454b
174856711350e5215580c276cd183c9649da30283c8685a77bac9eaa37496a2e
dbe90dd02a342d110438fcdafb62406b7a7cb96095f6c195f0fe2094dc45c4ae
c71675d854c6a830acae8d9007c74563377d8d6292c87b587034c7401ef5a520
0acfdf2aa342a936f99397ac082679baa8566b65e1a1535c495677cf43fe8035
882ed29ebd06063958148cb7035f6621400a219ef6c7f36843a431b55a5511f2
0f9d0aca2dc55904ce61138aadd8d0f5da08acd4e271e74e50cfccaa82ac0872
4390c3ccf7cdfcba36b79614dc9b6903235b82f394196e0cf6b99c6128adb8cc
9cb7dd6e29bc358e4aed7119bf0242acb40f6ad0750e382dd7af158461bc0acd
89febb876b3b11730eaa9ecf54f711deed8db4062c0dab4d38e7adf3b674a357
52f6a36570a2c9455032a38af718cecc1564a4efb37945665e62345ae9e00108
62a6ea64a0e6087af63c44fa140c9057d016e6e1d9bcc5ae8ddc6f83c5a637e2
790b116bd3788c647b8b74cb2bc436394b62197f9f913382a1d48b572b03570d
15d02c2d27aa090ef0ca0451c9035f3df58b4cd43309bcd917a574b6216c8565
4997960cea31a2efd6395dff5c6f4d666f25a973e4fce0dfa8d4b940576a9eef
0302163d9746315a4a82a9a38c505ae67842b89df111b9c3f5ae511ad335eddb
eaae6be7c2472b90548636a08bd2e4a091aead2def1728dbc8a0fb1140f0c8a6
cce6166a8e061650b4cc2cf438b44cb5b86825ab3dfadcbb0b4fa26070c2ddec
3c52aff89814ff5f3f16da0a313a3f18a806c20cc1e9cc780f72886320f875ae
bbc757db35ccaf1ca17585e79803d22fe32ef7629bfea7fa20fcd26f42ed876e
c7950faf4fafd59cd36fbf4e9a92b0dbe9202c8d299a2aa5e1f0d4437cff8861
86680a587c64cdbc648574612a7ff5b8cd02d825e01781fd697988d49da76989
6ee35660393ffcff5aae76ff83171fc6337d2c5780db884f2bf46c7e3b06e23b
6f25599eb9a287ce03c5fc1f52effabd9b80182d9d529c0705b83207d8805470
c38f8747b94ac36187554e351b08a6835b101a279a1bb70fd4aff4f55947769b
1d4386948327564ab483f692c96cd6e55dc15bc6b20a8c3a97db213151e64371
fd577ebcf179f7130a46d68dbda86fb73a33de5350f6697846e1e16be828f799
865cd6c2c2c69bb45c89fc98920ac65f33ac37b7629f9d14d5c6bcaf3f85ba47
01d4bb90f272fc1e0b125f0b86afbe08f4bc606259f48a271d2401377b3fd436
463ef4a93f37c32b0cd0391d6f71fc815a2d18d43951b97e767d659886583456
3cbbba1b25127feb33311af47059c568f8d64bab09f00ccc69172aea59213356
d7f463406c53327960c2fb0d2709b611431080a8e59daf85d36e712ec33a5f81
2e489153901ee31764bb8eea4977446526b274d91a09d927e575ce0c815d1345
270467688719072f5a615dd5cbbd612be461b4ec2b0d48f9071c8b5d219dfa8b
894b827ab094cf258e4fcdbfea8ecb99a94db62423cf8f0d11473a91b31b34df
b882b566ff03d9b35a1133e65aec4491f283d91443e9309aa5046c3c95b02382
06e01e41144c0e356f4e345469b3c7c06dcdc8f06042dc418885ce516e82b653
bba05e917585968a49e0510c10811cd5b60ad82df6245778899ea290f3dddc15
efd6682f242e1c43a916225fcc1f90282c2dbe25f899a3f74be5fed4baea2b43
39e6a4a19d4f9b6ee39544d1e5319c4232531e54b03bfbba7b1eff301bf08d2b
647cf0bdfb3463b0499077fe01be0b53dbf3a60d660702b268d2b9d209416f1f
eaf9bae76a814787d7413ad04dfe97e088960db40baf44e04efdbcc8812756df
6d211533e19ee1545fd6b3c52d7e165356b206480a27f66844569a45e5c9a60b
2724fca8f7f3a11ec3b752e18e965a2e1668356461337c7a3f74eb055e89c61e
0485c68f275895430144e14252f60e81c82558c4c04b265c5dbe797b8727dea9
6f4c1537115996d8e2241bd2a1bad4e158059722a1d142cf1bd20a46711aaadd
5b483e417e0122180ceaa8e1766c4becb611fa7861a6d99276cf1b7ae06c14dc
df3d832e6c09144d8f93a7598a2e699b9786ecbd8c7c6d74529cd7f83e67fec9
3cdb392069db425c589f48ffc41a1b475ed84cdc392dfedd338722a1ead352af
a717f88715ca3696459b3749c802432fe87213b3917fe602a15c4eb76cf621ba
81128c0bc132166c62cda591b529fbacd9bc925bd3b34d0f4f800c2451fe61fd
8a5cb85692ce6389fd3a7dabc68c697077c455f3c26c3f54acf1b602ee919b64
f2b844bfa0b44496824710024ec305947b46771a33edcc15b4e02ed33d49a767
8e1f15803ce15c0c8da46cf8c85186e4301e774322632594d01b4c8412ab3cca
cd83ddbc25de10af1873dc4e2df68a9d61597c2687e3bc0895a93927f8a6ef87
8172c0d366804b281fde7984673ab0de60f8d85fe785d09389720ea238722028
fb42484ecc2ef18125dc05980abeff7ae9777951aa8779991ac52280f7c183a7
fc3316714a05f18b3ba559e64b892f1ef5f79c4dfd071cc1084f31fee0633274
2439a3db51940c82adabd8822e33078a51a07cc651592f71162f902f6588d9d1
c32da1c214de30242a35357426669ada73629d2dfe2e02ab343099cfaf181f14
4e38e852ab4821f5b8f4322fa001ad22068cad4adefcceab07b39321ab7f36cb
f5256f78572920a033688d0283babed91dd6923010abdc42e94421e7b9ae0727
eba564a0f0d55657ea5bb9af88d006083113acb6034e86759f5e45e14c21d681
ab6b16f33eb0978c98a765ffdc8a747d810fd7c29f99cd751d8b4e77d269ce78
eaf1d06d9ef1020e52fe0c506ec0dd372b1143be512ac23502f4a568ee3fa350
d475109d2cde9084898129f43919fee1c277ea10e63f2b90501d566c00f03309
a447d02c9b801a6595738035a1f2c1f7382177e66f879c80e45c64cd651090f9
58e5f0ec7357445e16e5c0f4356b32a0417a4670fbf0271b1142fcfbf70bcd9e
4bbfb4dffbca616ae8cb699a9ca1e5dcbef828cec011592ead65d2a604c0a3bc
b160e835ecde9f814d4b7ffd8c4a732191b4125fbddbeaa009dae110ee41f6d0
89ddd1c34e1e1e2a94b6fb64d4e26700d682ef4901e6a137d353333ff5c246d0
3fc5c1056ba3fcf05a35eb8cbddb51815649f4f90bdfcb241521786ff8d59df7
f883b16ecea651f6d79a2b30d4b838cfc965e57c6b7e77eff9f46f9e2a8bc67b
71f6665a97ecf61b2eb094e498c40c7fdf6c2de4910a48be861996300a2a84ce
fc7c3ef6c944a4d7613aa7b09b78ff2855d539984d4770ba4d286e2796a821ba
4b130d6b5021901f4dd0956e8852d476b6277661b3937ce4a7ba3544da126887
4dd60abb5affc44ec8b836c2d8d39771f186a054582cddea61acf225c0e72f0f
359afa9b3b5053721b6934d90d2c1fd32c7454d803a28cd313d4b9d1c9710e59
5b165fa314fc27eb958c4b371180bd84b850f492c05e1c65c2f974ce3bff1786
75619353df2c37e732c738f2681c50f02f0ad609c129448fdff449b1b275daf1
3cdb36250b720ee28892db13aacf507151670692271eb2d1da16807315db35da
a02c0c5fe3c6bdfa0f4a82b1553f8a635f004739860a78f7d984383e17d6ba2b
6927e27f763d293c7866295f40da6318b6770fec11080c10c67dec21e76fc453
7261d3a5bcd9a53e43a75db54c2129a1f464b023364980465e8cc3e91e18447f
f52c3aa6040cf4ec7287c3c10ba66660db093ed7f9c965e12c093815f5cfb06d
ea49841b161065657b5e57946b695f3c35054cca3edd26d8b26884a23ea3f87c
08021367b0e5dfa379a36e1ddce0ea361ecef509cf69b98511265940efff0064
b3f566bdbf522bb07bf05f8a66bc392b1ea97c04664c824363b8c2a854c8aed5
bd98aa80b85befcb51a8779d8625b3c8ee2e610b9c89d9dca6fbc516ff21400e
1df7ac1d42e07c5d2f9fb42147f4256f1f26e50b921b802a0a8d38460d1b05d5
94cde39eb489ba2d216ae748cfaab400536ab8239d4df642caee34bd69d15964
3d6363407c24dde6d64a07675f0bde6db96ca5a9158168ed5adcd49ee22c5b1e
a13e93bc6d9ca29d79d0ea1665f1e1abe82c89610afbda153050632d727614da
bd129622a731c6ad14d121e42eb358d6f2176a3237563dc98ce91fec6f962fc4
67ef1afd311f57629779bfe84611576a723501f6fbd085b184cf0048adf4b487
1698af03b5aa5270e7244bdaf0c17122c712c9e6facdafb4603b3bab776bbf77
7d2c312c0f4d5cbdc19e49fb83065f3d5a216c126d4ea9444a7b8fce5365e1a0
ca461193d31f3c97987845d2f3e02c755a1d467069c4c30995004d45e627be4a
1a296e4e6ec9b552ca43448d8633ecd883ce2ad32db2e213d1d90393503e0ca3
914e5d75886fc16501e836fa1ed344fd8b461652fb285678bf1d12e413205c2e
36b77331922f414f3f24d8969bb990e3375043ed06d6dc8c6d6cbdc1f28d2079
de2119e8a4ec4ee0e8d157a0e7dde674215a1f888fb7f33d9204ccea5ed69cc1
f576fe6da90056bde2b07a02f12c4e9b8aa805dbee876e8133db7d54ed33f29d
ec7c067d336ae99aea32f8832ebbc25bf952f0d6c6ef872ff21e71b985ef98fd
d536b8713d8669c41b1c47c9d72f87f25e4736204704d6a7099c1ea5fc91ab47
040a99b97ff931b2c33b103534be32123e8eb1f8bb01c9f7c9809a28d104939f
d967a315e6b1898ceaaf992edeb860541d76ce0f0d3ac7ad5c547fb2964e896e
65c63cff0660b6cbfc256fc699eea40b956bdf0cc82fc46276b704b4ac24d2ba
e06b534f4ebf2ec5772353260686f81cf8aca8697777179e8b2cf88a334ff5ac
7cb46008476a41b054ced1475354bf9bda9ada7825cd3725c2e02deb146da23f
945abcf53f59db9829dd65687f48537ea34585c4c08eb5977a8a8507b518e994
8c91ce2d1597b235f333b07b1f537b2a2e0299a9d1a30625cf09deee5b6d4665
d844df19fc72c24f9d5bf121017517607462f2ffff81d457129b3fcb6ece7c02
199f35fbdbd2ac93a7cda3714856db78579e8c23c35c01f4ec3fb8b868959c92
9b7b4232cd926c6b8eb5c40a8017730d21282ddce6721d932df93ccbf5729328
6df53030b5c11d7a3e733ae08688029d16c467e0deb4596b5a13bc10f6b34472
776e12c30f3464f0ae5030a5b783e3e678fd54c922d02df2a56c84bb44c7c6ba
17e3a7d8877a39dc449d57a88c79da985dd461794dd29554274622de5dddb114
9582cce1a0e7e909f4dcd6dd464dbb44e331472eb117b41824fb52eea4e72ea3
b50aa0e507d8d940cba301cc4c73bc790332361249931464e458bfcb1ba0df8a
a0066551c292f70f27dc8644dc0b3faba452ea74d1b321f4058966b7ddfa012f
b1ecf4f56305bae76cf3baea06bb3dacbfcf0a09f86cea982f733dbda7723592
cf37bd688244138324061113f6bdcb3472855504752280be3f1fd0598dfc3180
2aa63cfc82b91f77d2ccb8ae4453677fdf7fd4214e35f84e5b00c79b9b45ee16
5f1a05afbd06aef54a1cb10c0977847d04177ee9b6c0688e9b89b365748662cf
e6b8c22df6252f5be74d7311b1366be67ab71be6835d64ef5bac2a3701f56e46
6acc485b12da9b0ed2520b531fb142d46149ae79e89c8db73315ed03f7afcc0c
d38d0eeb30936b99229377192ffb2efd018d30d301d2da50950852389b9b65ac
d86c5a6c23dd09341445d19c7df2e610cee0f63360b63726a351bc140f03445a
d1741472602a4a462c1a7308ed37a0ccb60d30627641d97b00dc14365721d79f
de016c66d5e654f3c2a86f8a9c0723003563ff334b6ccab12d9c0692435b09ed
e254022f0f14e6e21202f641a98eebefa61bcab4de4c0c0b0c47fafecd1b9f4b
70f395f4864f76e696af1de15ffd7d1c5226fafbaf3604a4e11ab139f6587276
8a0940aa5b2d78995deb5244590a42036e6741c8f799e1cdf1f56d189cf1c34c
dfff9898412eb58994c0c05154c678673b01386b1572e103d873c5a38153dcce
c2d33d11b895ddaa67d8b04ca8bcf3f1b9bf4a6701c1ec9084fe5d7243e22130
f41e9618dbdb7f3b8a5cb10eb24649e8ba493eddf7642c84340715fe86bfef74
8b41d439537bb0a8a39fd59b6b55b0a9d069c0aaa65309bdc4666a0a4852bc81
e1f505f7d19a9b598ce1e40fb826de9f45b8e8b1859b665f8d2b7fa3e77c83e1
e6f2bfeae0a7820fb703cc8607c4dd3321a2a9a079ded7247b7f8c7d7a9bdebe
b90cefa8c43e1d2f887f7b7b556c8f7038766047776182a57e649374a0994494
40203e51046197e4ad80425c0e6ea4fc33fdc600ab799dfc2a1c86db764a7e65
da73f6bc5f7bf2779dd4979a69fefdf1e40df1d2e76407a16890c8ce15ac34ca
ae34587efd5fd8d6a4abfdbb4eb169544facbeda0118f3a4a92ae9f86d7c0686
1b43c2a923e0c556ddcbe4646b496b7538d98c1751049a1721bc5f6cdfda7e93
8e8eb5fca0c2a8dba4b3755f94239f2da8935e81d4744f1ccc16595e6e6240b5
0540e634dc9f0c3df7a8da9603fc1e294099dd5857459fb905812ebbf8216796
95059f10e738520fbf93d9fb8609175afdd5312d380b315fac77cdc211c5276d
9cca2a7eaf1c3bad41dc6351761b9978b9bc09231596652714b6092880972c1b
ae6911d72f8b75cd8eda1da6309a045fbee2f31823fde24b5b7155ec2e2f4ccc
bac8624d774a73e0c5328d04a0df16932616e8353fbb7f42bc91a0bb5f531dca
adbdadd0dca81dc6e061c2c55ce5fb6ea47331d9bab5cee8cb537f5733962aba
5bab88307041d180c86f4b9ee6dcf78339a2b8893ef71e180a8c0151f9bd37b6
be7f1cb51bc7e2c7e2726ab7e6c1be08aa090e91b3ef5013e7e7bc8b7eeec6a7
5d0b49ddad7a0f94697e1e950b228f004811ee637b4a8dd4172e4984289941b8
da834d6c827d5dda43242039dda14d453ce0b2996bf1206c410a9009e39e8308
726caf16b050386dfd7d3c5a92c829890c57393a7f94fc69d5fc3ffe6d778cd5
675d9244c84b77efe8a614987d09bd1943e9546fc2d9362eb1de2435e3348933
7351ef6bfa2eca97226582cc39d694798cbb061b780defc6ce983f8dde308c14
5318ba5df2a8980f9a29e5ba4dca01c5840e7f928e78e9fab2349982ba8de38f
c766fc25791bbec99a083a646791ce96fceb341a3a12e3b4151f3caf4fdc26d4
e39e76824007a8eb776a01d811e355d61d986a29026ca5b652c59226685f0806
3ce9a9d0d3f4de248642b3d91743cd6c150b0f0d2c3926557c4640becc6fea4d
d0a8f91793c549e5461437fe975e99fc470ca8e0c064486a2380b76be5257dae
ba94e97f6da5115d1a70346a180996356cf8a77cae1e3093d1185b78fc051e7b
f4d0d9e646b68292e14bca7c10c7464f1bfe70e99897cb5bc337a9485a802992
57cec96589c24a2d288043953b6dca8f3acfaef8a8b817e0b60cefe604ab9819
3eee003731c18b2130feb7fc8efd99c4e1780e67dd4fbd55b87007abf1b15cf1
7f0b45dec9df28d5438d367509a7153b5c85709a9b38cdccc2ce5195283479cd
aeb4fad03bd770660a9268962ecdbbed4bdab13e92ed34402adfbb9380ba8a76
0fdc98872fe5051a84d7be15faaabf4c3d2aeac8e0eab129642305e415fba160
89a7ef4e01d08b783c56d08a9fd20160c65d274bdf84e5063122e648e8be6ace
d2e55b2aea8205fcc8234affad34a14d46caca24c091efa360bd301ace062dec
a55b622e2d8f1dd0490089f3215ec5c0f62c4949003a9ea030d820de6aca4359
45050f412e836e20d234c15bec6a6c110ca8117a2794b46bb89e29c744da14d8
9f54ac3c6a794bfcc5cf045db940aa8ed513bee984d33317a1903e6dcef9faf0
721426c5f32dd9ea070574a0de83a4b2985e16c2c14f8e5cc66b97f94d310fde
1f83af72b3e04e20c2b47d5d2d073afc231141a8d525156d24f1ea72ff019106
a7ad8635b5588cd81eddcb74b83d6d7ece140f3b5c1469be3b7abc35e4d92920
0f3aa012dcd2ac35cba6fbd004457d2dd5b3ea54059d97b50c78a921c202a1b2
2ce99eb10dfa70be2b7356cb1e7441bdeb61e955d4efcd90c398298d1a107f34
0f4d735b29e232b1e59568007b8d8ec409de0364d65e494ba85b4f537f6c5611
c8dc50cad83b848ef5a4c843ea0f17d42a64bb69a3a13b59d792490a8a91fd1a
5cea7c17714f20e78cdb73473fe44f2a5bdd14adcd2ad43103c69ea6c01a757e
2875318933a1418c9681c2b37cbc6cf1e721d053c67ba2d1a67b1e4bb37ce6bd
d3e533831523075ebe3ed66042ed21fb44fba93e2dce07cd5b1fbd139b39bcac
82dfa5efe0b91f20accbd9fb343947d43be20e396b12ea30bda879b3f8216b22
d6039a9d25bacb7dc4728189c74e700552d8136cb20f25ef2390785ae77ca286
b6fda65b7ac560b8447985a63759bb2ad1d3b630f192878ff28b89992fdd68aa
379bfc03da28700961bd36ce9b6124b7d1cf65dc148dc3ea750efe02f297eac4
5dad9ba621f36d69f9a7cb25fa51fc2484a7fcc0b7474f43b10c197fb294c5f5
fc65ee5d866ebba45f1cc4c748286e284a016a02fd0b2f5c0f3a8ecdce14e8ed
ecdb8382b5ae24d6796c8298f5d45d8e2513c80da4b771ddcaaf1ed2ed1ec7b9
8bd9c013d20649d7ad46d9cdf04904168d74f18bfef1c7fa63fd2dc031012eb2
5d9dd502893be97307f8488564758060e1a089c2c1ba243082a13cf3118b086a
9eedfe423155769775d2a8c6ee33482a821b820530ac40ebb602ccc8b4ef7344
ac4e5ef7f68c8d9cdd78bc6bd1ade19d79880e38ea8007958b8931c5b89543c3
e392df41f255c54403ee64351641350e2dfe097e3bbbd2c182150bbdf4b32193
12fc505bd836dafff38439adacfc2cea64481c82e15c12ed8fac75edf464699a
5f708425c8bc260eba19c671429164ca726c974cb57a2ad1ab8db1c73efa2902
946822dbdf2a42cabb58df91fad9d8c530c4d31f25e819f96dfb2db0185d4697
102970c171661844245106e923ddfaa2c4a36ea75c305c2da604a9bc7bf4a905
b068043e2799234b233d4fcfddb0fee9f374615af5f5d0525f1f76a040afe08e
3cc3d386a037c8ad99fdbad446ead0ce19b98a31bcd3f577f3592fe4a75c0bc8
69843968003680628a6217f7f488c814c4d2a8090b62c11d0b4352be49fb028d
3f59c46b8ca74ff472ac7b1944c5997f2ff3be4ec1b4d468f44e2325099c426d
6e9d0e9b8c93a32015ae10fd32eb53241b2be27b80dc4803d46dc9fb3aa24fdd
8572b42783b5e1e1394bda61676e11669b818583f93ffc8ba04e716270525888
9ebe58978d675f1cd3e85a3842b26ce70fa925548ff3ea9b57da62d69ef4cbfd
5208dce2a58a901434e0c11265168071371e0844c391f310879c3d7e4d91f2c7
cf7b6d353c8bf738498102ba78279deab6a68d47d49af1c6e1ffc5c9b7540324
b1c3afe9b6338a89281f3896d26cd83fa1e5cd0d2251b97b2d771fa33cc913aa
f3d47bc507c7be0e955824db7e98e78e43dfa348cbe3e5b47c24e0f84ef30f3d
e9e8a125d21411938eba1df7b999cf5e4ca19ca3fa0fa16bef6dece657f427c2
6a1c6645d7daa90787e94fb88bfa416d1dbd440b5d5a0437d8a5bd8f5e19c7a9
f087c4eaf013d37e964a2f03b1500a7341f8b3e881802f6c6682d597c033ded0
a58dd1cfa1d7a85aeb9e7a1344401a4b1807f6370214c8b2a087a3599aa57c5a
8bbba6514366b3862f9bf5a316ad3f65838acaf5deb35722516f6fc9fd3d2c2f
ca43d2880c52f05bf67906118b0ea16d032a551d24e3c2c99516f6264117d83f
eeac8ebd762c348b16ba2ede2a8f9fd02f825787e11b7a2dddf56d50e7b37ce5
088a925dc010f9f9c8dfc848606de6d5300b701bf3a65b14f466f581e21f4a71
dc96216e4043f712e1331bbea7468c8ccd6332c39f0984e392e75991208e8351
9b0eca9927acf44f9aea5fcef35772c99a419bae883c3388c24e26efc0e5c3ea
ebf96be00e14e46cc54dd7c5ed9b4981727bbd23359bcad958019fd81fae2b30
7ae32405c63186b500d632d57a89fcfc0bc883b5fc58284bd19ef829a5bcf6f6
514d7cc80e4815717f20cd82c37794bbb75078778bca753ffc3c4b35a3d15e9d
924cc2ddf2478e2efe8e78e24613dc7d1d7ceb14690cd9b5f738a68da876d834
88eddcd54f13865d47709e3657f7483a025e8962a26bfb929f99ddd8fdeca38c
279c2d81fed0ca10acdf76237a1ae6958c352d7d52d56746e0dc7bfb7b747c76
3199ce66109302a88a9040fde497f35d96d05dee9a006d54744e683bb1cb7137
795e82603be193ffd23e51acf50da34339218e6b2598592dcda67d1117b667cd
7b1057b593a989f387f603378b533fc1dfb7699fddaaa46246449344ddad33d1
f622c35d2540cfbd577a7a917994c11c8cb7331a1d76da03fee731ee8847ad0a
033044980014cd2ff4057df540512f079353f1057ab7b4516f8e8d46df13c530
6bb47fe5a8bd07682b1d312d8218e1fd79666f7e745e02cd134e283753bffd5f
d24962b81728fd639ec32cb0345a690e42c1142cbe1c6e1eb7da512f9b620e4e
e616fe75691dfb787808338d9ff611f351b1dc1a31b2b6bcb6378eba0a9b251a
c063c9284ddaf7a1bd54395d00064107dfe77a6b9f972069cc52d8ef39fa9434
2fc07b54da71759192cbdd8acb55d447e87e0ce666917f9e516d17f066843ee9
f6739ce7830279787c1a7981a7e15ab287e27be4228bc90ccfd07e78ae6f4117
0332ef7e89e637632a4d64181855b04bbeec03271b97361cc4f18d65d1095f91
2852e1214d0f652dfc18dc2a2c7f98a726ee040a4904d7a2b589f64e54a56e88
11cef838ab2527ca95da1c0e073aec9b1894a5bfeb6bf75c102fd554131fe9d4
23b2571ad3332ca3349d066f3e1ae5fb703005063be2cf16ca8f88c6752df020
e3ca0461acfa3abb487ebfacca9b79628d35eee2cb71141135e42df85af318ac
4657b2c35799f82b1dff3aa13c855730a470f9946ed39fba875fe82e4d0cb3fe
13a9ee12752444026b1b1d6e5db886a2f9f0c8928cf2af0a894628d16e154b94
6fe65b16ba4e8d5e160bf084628895eccf8c70ab11481fb047fd873688dc1791
b2c4b7d1659fded51be39fb73c790cdbbb7294489b510b8d7021e2ae8a275185
996c1df1799e522136500c7130083104a16dc292fac558fe9acc7b65fb4879a0
90d4d5552a288310e50f0c8443fef40af364c11b071a98960f9b86bb540683b4
e5ec140b51b950872bc713ad75b6c48593cea497a74614f8106538874925163b
91c7735e204a9a9397ca8a3dbacfbe626b062905c12ff163fb23ece35c9abbab
ae79da2183c9504704edfdfb48bf5dd81d3de463539ed9a7b2928b663ad62e97
5708266e73dae3e9f2b2a5ab11bb3290e92504a3fbce31789799c9c356aa26f4
178950153fb02b220e2867c7e996af67f61a9166b1a62cd395620720afff8404
64b8a33144d72f7cea1a600940ed4eda42c1264cf7eb2d9db5fc8995f9f3e2ff
8b40abc2c1280b56f890a96a42bbf14aa6063675dc2cd122b1c57501e639b497
d025d28bc96335a8a4b2f15ed40e8e27d0066597fa95393f32a886c1479e6451
521b0cb292c1f9962b3b3186d25d8148a8adffee980124f2ad7ec6de23866708
262389c1084fc67a2569d3b8e87cf6592e42ef59ea6c4c891a0b37455d416992
2ec08ab878a3fdca7ad729cb29a250d6567d5034744d50d53c36f94cf60637ba
b5851b09306e5ad2f22903237ee2ca90af2eef68cfd134c160d33f5c02e92594
8d6037dda004988aafea9efc79acb57e7deafbc72a4115cb013638fa6e3b2974
47f2e5684148112f8f0c33f4d40a3c5ad33d85bdd2f62e07c13bc1401c279024
ec3f1b10a4c3d3fb4d89f9be2be165572e51b33d512887e55afbb236d9e74e4b
d4eedee3a746bf65ea8daec91a885ff889fb04571276797f16d23e77bef1b113
74a7c87fa9255cc023dd8342b8d37e3cdd546632c6c9df67b5645387652b1a83
7421c9d5bad1781cace4796b03b1be4260c157957ff001dee5c4f390e8ebc869
f083f2ae5af2385de4b3f240201edff86305024dde5a1b24dd7e595bb43fbf77
04faa900c3a902b05a766fb71d272e40cbb320178b407ab6f6303b6a6568b003
0b4d49c9d330a8e6eabc54847d049dbbe392f5aba3a88c00720f4bb144ee2d3e
14cabc2d604f39cb272b5e03029c741d1a5a867674fed2eebca38d17c2270048
98412193bdd6e172019226e3cf67c8a6c3e824b22c91775d289113ef00ea09dd
767c10091423706a78a0c72138927031a84975f181622d6a8752c8c46d8255a1
da04a73f40ca1f2bad75f3c78da2fe0ee543d3a76fcbe6c0d5a8812d06405f47
679d1885381673b7b463d53744be4d89c5f28d0a2572a54dbfa0d3e69c868e64
403e7ab0cb19ccd3dff5009f47310723068e1fa06b7ce995e63ed709abb687f2
15f2432f4295d77952b3cdff3d3bb8a99b08043d401375a80e158cf579785e8e
a00943752b27efed73c14024a80d26acc9e448a6c2be78d4322bdc6a1c193a98
c5df2dfbf7ac2402206b6ed1be5e3ef754b29d697517bc2992ec00265e60656f
e8aed357a7086271d01539b0c39db2f2339beeda99768c3d5273c70a5720ca74
e1c2e26e20f1574818a9a82c6d9af6c5d1eeb1a7a1077137783d8dbb1ee2c894
ee6cfbe530f881caa609907e33e4263012146737cb3ce331bd6ae6a595f9e6d3
f565324c04529bfc53def9ce6dcd9066387c8eaf4b089693b497555f36644622
74266022987d89302268d2738101b31018c1a1b31923072eea056ae4a456c71e
30033c2ca47dc081ebed2907476a8299345d88242adce83ac9fd79f37e0af032
ff5723d0e33e9099faa35b40c3b5245254970ab04df7b026345045e3ce64f61d
586acba56b1f7635573d211869578b10a5d27710a6d1522a6c05e6ab44062f07
8aab9e0e50124384cf58c079e1f09094eeea5c9cdc6d7a0033c72f794c002a7b
37688f1f713fd1d1057d9c3a2c7c4345d7220c77d2866236eb2af783d005d03d
0c91735de6005831be8c8edb636be058573417ad77c8dbe27f172f27ce89e55d
b824b1cf3a99c5e276decce0889ad34def9cd650d948fb19aacc266c37860dc6
b385e973571b8ee410bb7c9d6245ff417bf5d59f6be88788f2c99a2727164aff
4f7e20d4e67cb4ff7ea3bb8a0edd0c2a3a9fb4594bab961d479813e84a345e04
9d44ee02ef8f8d338c391b3a8a113625f734686d91a622f2a42095893980d423
642319625681ea782a847bd2282054517181efa2205bb43005e8b341b6383c72
a5af57a0a13f4bb53b36f9f28b07de5ee0f43306081910e7823a641e1fd03e06
cda49720b4fa050485b0a2daf662b06d2bc47efd29846ce5c305c0e76d55f21f
fc07c4f542f7f065792822558cdc1c6b402de8c8fb436782ed46613d4cf0b590
f67b9de01c08dc8b25df8e341401b6f0b5d4cceb22be9e96fdf079aa14164b84
ff60581fdfb813d3e6592e11c1992af981cd6f70625d81532241c7f779d9173c
69f7bb043ce6b6f6a5cf30167c0e294b4befb8a32b8b370eb6385960d974fff6
72873c78092f8e03415f7e36c66bbe8ae0acf3c0dabd9d2b607e5f0b9d9e9694
3fcc08c3ca347743f2acc49ffcc31834bfb6fb6207577f14349ffbfc21bdea1a
7e0060f0872d0a9588c41048179ffe8c9aad2186a4902fd3735a79324fbccfed
0b29751ea92ccf2b10da09989c934542db9530c4d1fc7aa34b9227380096c96c
64d9b132919553b53ffe04c31b90bfac6f2e962b8e8e6ff13624760c33829e1f
c53668bbb6b44e152a471a0f32ae39f6cfb280a5c7ed62aa36f3988fe51a6f37
24e2667bb23d23c3c94ad17c0079d0e1bdb2522e0fa26c65625168022cff73c9
b1fd3edd363979c94e83480e99b1b249e361d0f2e253d571c713ed358d93586d
9c6ad963c442f98a4f14d88b2686f18a6eaef410cbd598c1618bec97e1b48f24
67c6d06c12ed8ab37f6e6bc721fc4e25ded9d75877232a55e0b8a2f1aa7207fe
68b5462558fffe72af389423aa141a200a7df6b3ed8db9cdb80c39195494de9b
e35a09965e2958c1e7299a1df57bfc70fcfd59bfa52d95edd2ecb8aef5bcf0e2
14c8d7352bc1b25062a21c3515030769ee19adea85809e9c655e1a47c23a7c5c
5e2fd498b3b64190246b838e7852e75d0d43bac05c0879dce9a82dddeaba56dc
87cbf70be37ac021c0a8180596cbffa1efd2c0cf2e0cc60d6c77d1f3ca04fbba
86c3ffed8aa2400fd2ac8ce1a3349c560a7412603e893f182e33711ef4fe77c1
a4d55df867f6ca1609f87847918a4ce41be61478bb73503e49dd974ddbc61081
f8b2bf465772a8729fc92bca3fd7e877e21a3605052945d76a2ea20b8efe807e
43e8f9c7a3973b1b2a3a902b7f20076739c8fe699984f5e33b25074734f125c4
bc1629b7ca6a3db1edbde3b245ae4fd11a49dd7d426fca630dd0421b04d3208b
14060e41bf6e9fc905718d1a6e9fb2a1e0417ad5486e03cc6ba741502ab2f7d5
c1d2ca1cd0ccf29533faa0b6325030e19249c637d1511daa6801a9cb509cbdd7
dd9a86823f4a598acfb6bcfedcc748d5f8766fb7700f5532f091b6ab58192871
f53dcf8991431e198a4536c95e9458d8692568d9417630191900cb0eb0c3e946
92cc63ac3b197f3683a0d7a93f5e6445d6190baa6365e387dc82a648303f2681
0583789fe330b9cadadb5ba8c7f4184cd37acdd2f36226fe666cddf8924d19b5
749b5044942e3fbb9e3537723858c4804ba023bcd9628cbbf49c6f5fa8f51156
5d2cc9226e3c9013e77af2f2ecad461e83e6c3d00b7821ba3cf89578a9d1f9bd
892b689e797bf3aacfdb8bc73eccf893a0e81b3d521b5d63f67c5ba2a4838259
0bf025a06e51f6ef7aeb75483528a37af5b3f5bc6dee58393181425b0ab195bc
9987b68da6a0ec9418f772fd3613d126aef8c7817a4e06f7b0dd4bc9db19f640
8e7bfb46f63081315609ff007d4f4f5507b3c52836e8240cecdefbb83ddbfe3f
2797139bfd39ad067f21bafd9140f24cbe1aa223b6972542e58d33b0a4907965
0a0f1d51fbe66b165b14100da4d92339b75cf1e5e6fc2b07862114a7708ee07c
a806157184a2119a491d4b3f576da059d8e3da33745d4bb30d8cf4f2cb0e0c82
7a6a13b93fa91adfa4c2c27937a9079a4dc3f75742f521b2c0b4aa5a5093f517
2246e03a181623dfff5b1b7fb2f790cc6b82e986ed03b76c1a5dd359c33a295a
791aede4fe319d7bc235c8ff16861d9fca524c12d95a4518a340d29f44f5de45
3e4c3e3e10ea0eae22170a43d96acc221246a9fe008e097d9326c7af7626779c
29a009fc0d9d69e52566f7978bab7ff5d9a8c950e6eb03e74d9e6dd494842130
ee1ba711810157db8412460b01ccb93b3e15f9d0b6cd980c9f8856b858d11d14
9966abf65d77f38ef498109c47afd097c1ae12e2043155cb8b738ca9bc99bba5
f4e6b4617bce93afbaac1cf6412076ac70ae79b509239b2c69b9abd7432ac44a
db2fc8a888f60f663daa98eca7e3830a1539e04d4b98f1dbe1260f0c8c7886a1
306ce8ff825bcc91c5b84786048776bfffd44079fa4396f4e138a7ef9cdf8eaa
f2291e2c8ecc59f50681271e7c1f591e2b81400812b6ccaf27401ba43fcc275c
360e55ff4542c957499853ec95958d13a052e3a44ab488f13fae4bc27aef34bc
8a0cb4654c762a9cc46d354a55218c8ca63ea48906a1541847d5a7129d088461
c8c71cf1ad7b8f5fc48d0d4c028f623c1928b2daf502c994b9bc46c82ccc64be
27bd10f2e3ddc64d8e037b788574a8f709fedecebc47aa8f777d59d61b224539
664808869793a10225fe6a847ef9be5513fb7225ebf7d631ea556ac0e1c1393a
88e062bd44717bdf8988ddf45c951ec38887804c3bffaac06518f0a9c386bd63
57ff2ee8dc761e153040ada52e84ab38def3a464e3ce36953940ba3fe00396a3
8f177a9501cf6af1524e134a6a1246986ee63efc2b9e85052d48fae2f66f6f05
f7ab30176bd9db2dbff5036a0eac2afb1b2ac7cc6b8671016cd810b92205c70b
6446a241a26f06b47c9bc4c60bac17a1a0a219af50bd9c1c1f37cecc3588d88a
5969eb998109827b0e21f2d89409748167572cb986f6c61ef1c2b7bf73613e9e
327a62ef4f47e3a731cbc2dee7af879e837f3d93897d3631079a990bf13e5011
a6c16a1c42cc60ed96e20e2931b2f07f35d416cbf85d547993fd18b59d2d1f98
fa2496f2b2d22470d50b80ecd1c9ffce8ec961d3699bcdd963e79accb898cfb3
cde4c4981db739f2e9ba4a421de8e83fe60b52b1bf42187159dc2542281d0aaf
3d25beff11634282f6266e2ff54a6f556c66c89093e4e4383ec39b362bcad1c4
f91abba761d7433a3b5289cf58479feae1c79445daeaa43da72b3bdd3cf5218a
deb704dd99fbe403fe8d615e020aa6e759286b4a9c6a7d2804de56a173113f06
94d551894a518d1be58a72a085053533cf6f88cbfb1c67b7b891ee59fa8b6dc1
a92a688269b059700e6497a05cdf82c3585e116c3578f90cc1250ffc293aa164
85f49e09632373a643960da8f43a4f3e31e608de7f41f534567ef8a23d28c54d
c6bf11d88cb958523b146edc46fa900524a62927d96124830d5dde2b8f0bec35
3c6a0ec5d1ef797db1ca61efef64f332f86676c1eeeed478d6131b24ba4429a0
2b84ee1cfe4f42e23f474623390852b966affe83d120da29a1e4d469f0f218ed
a6a43c7a07490d1fc344143c6c8f655efda3ce30df140716cb941454af8e921b
51dfea35f25f3d73bcb9d980a2217612620312a8fdd149d2153d2f65d2d6b478
3ee0ec36590275b1cfbd60287cdbe093330b6ec34b69540520b36f391d837ab9
72059422a11f3c49599318c039f73078e8b6f767a79036098ea2da7bc42bbc3b
fdfa07fed9be701162d66ecde917efe1299f30444d1adb624ce4719dfd30a2da
67ca72583451a5be2adf77d59a961e0f0e31a2f5975b6b5d567ecf3a1fcea63c
f0d36a6a68500efb39a1451c2136964fa78c27992495d9afe4a29c1eed9aabe6
5ffee13b97918c56a623e87d4ec8dbdfb98b5d665def29558a8c3050447a8887
d4f6e1e9809cd00e39f9712d4a205984425130aa0da5d00387864dd7d0613949
b61a79cbe0285f10b79433d8213dd413d1bafdb80eddbca398ea78c9ddbcb881
e70a09cf1a8ca6115df90bd4d03a9fdd9afa822c8bda183289e8621f951b5523
d1e3969bf1fccee37ce36583425bd96fd812babbc45a6703863a1f21a0dbd8bd
c323f42fd06cac61f28e06e22b9c2449c1b255d713e77cd1a6da78fbe73cb7db
0fa3760e13ee038d0f5d78924d4c8bdcf0ec4ca948a739d61e8b668792bd6f37
aa5041f80ca57fa5d28b33464fc9149f4bcbfb729079f24d6606a2cdb03f04e0
9cbebc56c7b445795bb93b8eca8c5f60cc41b2c0151764f51a4a11ff6a6cd27d
5acd78d486e2c6fe19a9557dcf789c4e3b0963f1215baef34faabf3bdd1fd0d8
a00c15e58f5a3f1185262383a964c0ce1a6e5b6bf7e6e4db0d174926bd43ede2
d2ff3e509712a21ee64d070013aac4232aa29d6db5de05aac4ae034fa035b1a0
3c2822a4407b78d26746c81003581bd406fd179daf14589829376a88a2b71d4c
183f2fe93770691eee2564663c38d790c8c8ed13307d5e7edac440c9f924bb24
089bea9eb0ab0c276d372171cffdf0955b49665a938761a491378f40d0af51aa
35c452a4afd801cef064bbf936688231d2591ca45a52f4548fe6eacbf901516a
d82418bb08c0acd41d45c1eb3e17905c3dfa11e3e61557d4b17c618ab607e65d
9cc4c035de39be5c34175d6d6034ad5053aedd34fd7222b878bc189e093edf7c
70e90d62d3ffa43b2116007a3a7b79f51bf4cf6ee02a9816247f14db97ae0cb4
a72cf49eb692314aadb25554d5885f747d21f9af7bdaa52d7dbf66bd9a357635
f4cb085b486370debb8508fc6ebe76d5613b832472c86d23941474fcf9668916
36cf3400b0f9d1a7709bbbfa00e519e70687b873547009ec56f8a9b13bdf7f52
7d067259500e5dab06ddbc96ff3611097f8b3d54f8d954b06d0a5bfad36ec4a8
e719145ef0189fd2a69a1b3c4307d9eda2640971875ac78bf06112ce6daf901a
151ec0c27c243f967e5bf75846632b7868d8ad904439e58e6a129666f321151a
0c6633bd9d16537acadb8ce28bcba2d56eb46bc33941e485155b8a48cc4fa7a5
21f387cde6b9c64854aa899efe3dafe69cf751e4670bca3faa285b72d3ffa3d5
ca369c06347affcc50d193c8d1854f4f1abcf62644667fb2cc5edbb62e365d7c
f7aa7707b892455c7926675f5833869c2aa7c5ff72d896766d100d63485daf85
cff1c56419108a1ac7644136d51d69f1690115fad1c45dad281cc3d8a8c5c41d
dbc98ed7bc10e1ec18ed03aafba5a8f295336cd8e23b1d9e4d06f714529b82bf
de044572cb04d845a6e35bb2d9812f0f02f2a1a4e4a79958f26190d94ec17c32
7dda3d3d79f119c0c5bad46371f5a26b24fd4d2f5b13be6007be252dff8fd942
2b4c638c18b801abc745b17d591ee3868d1ddbb87b041c14c4388e8466a8f60f
839a22f7261643f2d88ab720be224ca5f336b3d512498202d391630a0b8149b4
756bdddb4eff586545f71d229cdc7982ed3f27fc46c060d089d21a27a4310466
4160929b0d8da7cf226df8648c88aa2f499522dedf2b0801d21de5c9fc138d69
c932b488277c6da96fd776b91da0a0e0054227e326f3ed662b3478f05d5df1b4
c8aee5ce84aadd1de8
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark

%%EndFont 
%%BeginFont: CMTI10
%!PS-AdobeFont-1.1: CMTI10 1.00B
%%CreationDate: 1992 Feb 19 19:56:16

% Copyright (C) 1997 American Mathematical Society.  All Rights Reserved.

11 dict begin
/FontInfo 7 dict dup begin
/version (1.00B) readonly def
/Notice (Copyright (C) 1997 American Mathematical Society. All Rights Reserved) readonly def
/FullName (CMTI10) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle -14.04 def
/isFixedPitch false def
end readonly def
/FontName /CMTI10 def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 161 /Gamma put
dup 164 /Lambda put
dup 174 /ff put
dup 175 /fi put
dup 176 /fl put
dup 177 /ffi put
dup 178 /ffl put
dup 182 /acute put
dup 183 /caron put
dup 90 /Z put
dup 97 /a put
dup 108 /l put
dup 110 /n put
dup 111 /o put
dup 116 /t put
dup 196 /dieresis put
readonly def
/FontBBox{-163 -250 1146 969}readonly def
/UniqueXX 5000828 def
currentdict end
currentfile eexec
8053514d28ec28da1630165fab262882d3ffd20326947b1065649b533eb5e9e3
a88a87fe987918a687950b26f647d6e08bf14d983ed1d4a8ca1e2da8d985f944
2eb916f5b6ed0697ac7c33e1e36a3bf460d34ce45f1631871097cb04f18e3889
4cf4ac1538eb19481311d24fe3be7beaa4a3730e8b4831fe59d6d9ce2e46116b
629c7ba2f9ce3ecba2f43bc162a5a077ca1b2882a42afdcec3f4b75b5d63e0bc
8e5dc95257766d8ea467ad9cbaf47be60f797580cced6884b3a68f70c91f4fdf
80fd00ed9139e7f480dc3a76af72ad9b434187730bdfaefe4cbfe5c7edcaaf24
9204fd703011932e5a3c27be468b7dab69daa18dbbb6335ab8ddfdc607961c7c
02582763fa069d43563ba17704029945cf42fcb19cf78c51df0ec4d851086d43
c1ab38e865ef36865fff3a08b01cbcb070ba4893f7482dc7819ad03d337e520e
7d8cd83bb8ac7aff4df36751f4f12aaaea2b6d7260c09a26e987c904003e0723
7dbcc4a8e4e85cd3259f40d3caf55c742cbb40ad0db1044c20a4f122a63f7b81
1d945bfa69662189ce4d089464d2ead9f6ed60b581b04114d5d45e97be27a576
35154e9b8464f2a0df18da855eb51b8f64d3054b0b2e84621f025a0776d16fed
b988a43d2d64c32768dd106b9f541ae8e68ac0bb7399e16f4d4ba074b2152d0a
4e9b5bfc21bfa0d531e28165e518ffc054dd4ed0d74eca079d20e79670419f92
e03bcbfeecf3554d661596f6f29e12170804d15a250d917ffe7a8b6e8fa53047
1ed97ba56481589a65ca13619129f1e26affe6c22f0c38540f8ce37efb6e9e9b
60b51a5a9cb4454fd7c7f92f2f9437159687ab590f35b946a54491a7739c9269
e0f1fb48b129811c82edb3171cbd5105fe65906974db8a7da92f4f43dc7f6b36
6981146d86d23613a0b38d9d6191db9fea0172e982cb1cc50e382f69da1b377c
1be9407f88a2a761b56f398467a057f35d18c01cc377e0061d3d42ce273b1118
f0bf5d37b697e36eb768262623d6e413c1999cd2bcf7179ed3a8b2f1d9679ca6
ddba2b6c5c5400f5aed8193f43df06064fb2bf5b366cdb4ddfdad7922e56cd84
c6e56e61050bb8de08e5eadd8c384dd2856b3c21f9264921a825f30b42d24f08
0a4d01d45d3f84eb63f8dbe04ef3a35e45719ecdc5b9579a9fa303bc1bf40678
e646e4ba5dd93a25c40ff8d338010bc15b74ae98411c7cacda1b0fee5545c81c
5478d9a26f35bdbb7e6dcca617ab185e6d57c65515ebee286ec5380abed8c6e5
20cc07e8665a04b085fe4cb3c663f4bda2da71bca1763702807ed7ee6e1efca4
55f351e9de0dc07ca6f812668ace8f0974a02c6d48473ea67fa98e8f6c6bbad7
84b8a2ca7fa9e4e19472b785f7abb4b4c913747fde2fce1878c8b998154fcab2
c9c72453173a215f64805f64cef6a6535f27465798a78b2a3c81ac12d690dc81
77e02fd71de49bc9fe9f1755084e86f12a9385735deeca6b82d795e9c4305005
ffc712647cdb83b90d45b1c9f7a7855aff18dce2cf163fe9363df8ecd16147d5
1d5580e09715e82bad2894d75ccdb3fc5eecfaa1808cc98f639712ed5eadbd77
64d5362489ba13c37eb15f983c6b9c6b372ef94d2580d1334f4d49b419d14682
f65671981a8f5d90ff5103cbb491a9113bc009802183d9143df0f9cdd201dabb
f0a7ed0e1882c474e7037ffbdedc2d13849e793cc832010e03e3dbc84df86c8b
2fc9fe39406b6a5065de4f075ee4dfc9b6021a33253e279dadf62c8f3ce4d71f
3f20ff5735e90c9f8d5512851d1ac375e357caa954c3c3bf4e63bb6948baaf39
2108628bc42a763df394919f09384d24867bee0b98f114f659c266e3acd43cfb
bee530e3813478103abefae666c9d305cca7d6573c98167065176dc396132189
ecc93c0af96f5c776715c5b1fc1d0e82d36eb0e7311272f1b786ec3db75ff64b
c4bc94e6a14f0a195c10e523954afa3faae72de24d27232c946df941606683e4
ef20f23bf49c5caefee88ce4da781eb398dd0efdc8f28a4876c79ebd1de3b98c
55726c301f6b580565d99a17668b194fb3c5f273b8d4377cce9e87c53a55c529
ca904f2e20c132406740e059d6ccd963a26053ab95600dd743b93b8026e5acbb
b6542eb91a62bd52ac9c363a337c2a5e2add920fa59b9efb43d14f5fa6ad331d
e17d9b802f645455b6645617f17ffff65d1989fc287c0e51a242cfbd94c4458e
e6d8cb65fa3f5a13c3d8ee63f712a3721b7b9a2c403a927d031e7179193075e3
522b11e49f5cf6a3ef19e5acf54ac1dc6862fa54f86c16fb7804c20c7ec243b1
ae437e7ea37a8b76d916575f7e75ce880aa43970a7c31ca57420f529d5350c2e
4db1ee5667414a5897ee00f7ab8a8a464cc961edf5a95c4df83783383875c74c
0e406e005a4863133c7bb79f436179e2893670dc36e471bae9e317759f3db675
095e649908ce020fb9cf59942b4377b7813f39ea88ec33b9110aea1a75b19e0e
271fadea5b143093ccdc151024155f2433b226241ad1ab04cf722075a6812fbe
f5f32e297fde84e563c452ccda5700759d4ed743c62c75a7984129269773432c
6f50bc8e19732540a918853584fa0f872d136be0346bf9983534c3950fb40189
f528114523a363559f0be108b00636f9a7f6479f50456b814c9cc7da1ae3e1ce
f53e11012a2ccc474a9eb0f5a36e7eb2ff6fcf487ef6393dba1d2ae274458abe
717c4679cde6fee69d9ad2b0062cd7b5044d147582aa9dcf3806b651f8fc775d
dbcded967d2a70761ab80236c76a137e2e6cd1c51f149f5642f112ed113dab12
5a2239e90a16eb762901a505f7a417c501c22cad7b11bca984d8b145204ddb8d
10ee86cde257a9e3a39bcceb6cab1a3fa56a4f7cfcdc9fcf2c708e97e00e6e45
61af4de1342db20ba0ab8961951d931991d265d75a008520816f2c8d27c1c1e3
48549aca26cb9acd96b5eec7d25775685ddb37345f9a910d39dd1b4cb370059c
7a2991e0ff54dd867ffccacaf03e2470da2047962729bc9e73322c667bddc96b
71cf27412bba7baa67d52d5fde5b7562bd2e2378a3c3d785ef1571434beb450a
680304741a1039b9eefa0465b62de2ab1ab2d0dfb54ad4df866c2f7374a1d18d
67372bc9b733092cb3cd01d76192cabf10cf092e852b5c970d18ee39fac3659a
1e0c9d1cbe630a84807c8913cfbb787bfe06d2055bc6150598e1b3d7bbac96b1
a00ebe6aafb81e595ef20efc96c71a9a66427b0f108d7dafdf5965873cfcdda1
f2ac34491ed2d31c61348700ec32f6983cf7bed877874928a55c2a2bb787a55e
40c53aaca8952bda4c7fcdf50f10a0358c727390b7479f5bdc045464bcd9768f
9c32cb0c89e13cbcb80bca490d6ee5cea42a47e25e90029a860e9fd6524db0a1
01f713860957a9eadcdec05817a807978599080db4574762eab43987821ad9e6
0822aef1694d815284a442f25fa98a49dd4d74a23a85ad70c1fedb2b8254a2a5
2b811ede76400f79caf2adedbdf420691b56fd37cdec32972e77f51fb5ae1a92
14c942b599f76d8be2a813a8fc8ac72f9f16087f0f9a59c46baed952a7682a99
8edb6477cf41eebeea6d7875436102e06c4b22fd182d6fbde30174c92aff742d
5a6d4746198ce70efe2a00cb0ebed682816d86bc8f72df481484d1a1d297bee2
7a4d558304aef5134fec2da8418bafad6ee224a85769c62470c2656277f26813
141386c1a0fbab5edd4ee5b5ca652d8aae839340887df42530ba7cc0da0c1702
2fdf35877c7967913fb4a78cef8a7e6d9d4318d2e26eac259b1d0e3276c27cef
df69984b994b089d41299cac62a6119fc8ffec9552c1bd87c59969eafe994a4a
dd9740b27f215abf5844fcb80b5c2466eb54db725bd7093b286064ec405aa69f
5be328a5ef0fc072dddea38148e530e1589561c3e38e59dcaa0e5a2afde7897d
54ab91c723dfc8c36e82c7492189abbd65ddeeec4241740f2153486d4c91c91f
9cc8261743c7cb6e64dee26094e76c0f6dd80ec391562c0b33daed21028f9940
6851b87111cc79ca8ec1d5a0fad66ddb2ff1d9e94f4496f35c532e43b27683c9
5bee38143b140c3dd8667f8ca8015d5cec4c2671f3134fcb8c5a9a3d14b8d3d1
ee85e614a7f79f5a234b30140dae59ef1568193a92b1e67f500c768e67b75bce
a6de5f676b37cbd6feafba34d08903196a155d0368c24f2468cbdb90c497e9c2
fb7e1b77df77099b2958ea9a64f8be88731b18cb971fd41947c2fea8063974ea
9940d00034d95a89f9647f2589717ce8580a42893fc13a00a2cb385730a2d6c7
3cc447049d19e03661506f169c9dfd93ff4f076013307a1361b24cb8d158a366
063efadf3238b411ab2fd9338fa3bd9fc0f5a8d774985d66e62d8bcca367e4c6
664737ef4ae471568f5d669cd3ecac90af8937edbca14fb699bddb73372a39f5
da3584528b05121461a2aebd9e9194102c20f6a92a50fd405a87686f5137260c
622e72c0ac59d7a729ae8d5d1fe3a50e200c31c8fe71514e881e311c15ae7a44
9b359a10b0b8ef34d4d10b53e2e9ab534c136186f9f87fe674ddc1b495c46f4e
49d9e132fa7c63d180ae2a106bdc926a7b3777301a232ac2d6c46e1cce78638e
6c5b4b7595b2fd213626f55a71e480b6ea50b26fabde279539c2386ef032fbea
f56155b6c1c6617a6e56daeb9cf3b7cb9c416a1e00be1f3c126fa7d8de162f40
9e0f5a3302e918d2d3a36d93b311550a2d2d024f9e33df03b523a442935be612
d759b80f53abcd0ce5d35d0eea3d20bb1ca3c2ed37a1ffe23c2f051dc8960f75
738ee96a25fa1c4d43167bd41ab943795ec4318c75f402b1f7a59c8d8861e800
5f01ca9cece44eb4539dabbc04479c4cd3d481c99db35f2371548a6190a92d17
d0965a9eb3ee095b3959c6100809ada76c0fca2258306a7fb410a9a06bd554a7
392e1271f3aa678af5bac3cddfd81c687639135e3436daeaac7146f76b8fb14c
6748e62dd6413a983ca71780c6b4e1d99dceb1f457adf8e55bcd96f401a60d90
bdd5fab65caa019243a7155f16c9646f0f4a515fc7bb3d5afb477f37f0c15dcb
0724c2d9fc09fa6731517cdb9a2e1d51a13121ed3cd903cd978e1a715de088ed
81197103e03095d3081ee238d2390495abba740e0c3514e03a9a31caee7d53f0
ea2c3cfd824b8f5b79809c96355ffdb1f5ea7ce3edc0980519259e6a7f3d6b54
af9daf6cc39ab64b936ad327d796b9bc810ee2f444f06a4201eb648df54a6948
a1d47ad42911b3eb7e06b6a5eaf71ee864707e734bbdb9660060ecb3faf400f5
bdcad408430a9983b89edfd7d49ea819fee46ea7eec658c406b91b4a21eac97d
4073bb4ed5b68efc54e2bf23b73c9750cf348dd6b4dcd65a6997ea79d4859a5a
17067094ae1288098c5e9b40991720cf262de1f16b2520d608da0ce9193bb0ba
1483f1a41f799c8683d6dd38d30bedf5c5f39184649ba3a54e1d894cd59dfdcc
cc85b57df258b0e9053826206f43badce33db6059c01e56c3423143e120c988b
0b8a2482ca6b678e32fbf49abb5efea7a30a7c7d4c330c6ce0073196137500f0
c25002f8d4a686feb82eafc575b08c140aa7660e83de0e751ec47230825a9a0b
7fc0f4a5affc727ae23ddaabe2627e939852522417027a2a27cba6744c3144b3
1c86b1570385e107be58425b32be7622ebe8e6c9b5e1c6b153d478a0b6ae3840
5dbbe46ca4ab5ca831b87f9d7ac0e24d2d7e7d5fb18c4bbee24987c4689f8927
3e4def71afef8558af8d7bd79dcd551b6fbaf47a25322dec817bfe3a0928dcd3
963542489b21c3a011ce9fbc0e3cb82a5006df91e9975c136714becfbfcbfb41
742c8fb8f69a1eb29d23f56e4fba96a32b66591670344edb90670a63305e31aa
6b24a3273a815245b7d0c460e7987197210df4a7184874456a44cd96051977bc
e9f30a8f71c226de608c23be7d098c905d16f36b58d7e1b9cff15ca21fb70bb6
673a383a44c8bbe18a3f7bc0c50d485616e15343a21d2b2a68f6cd79e9122c8f
7517fc70695071a1cb8e1a38dbcf6368abbbbdf033e7b6bc02c8e6b7db8442dc
9066e95a73fa2f98a207313392760b395a61e348477155b306e6267e95a2b493
2cf9e8618f2f66d0b9f96075e0129620cc55c84ed332475e3da7948dbee3cef1
2596d39abfd500f7ce905bc8ab200b8c2d97bb9ad503df610fb6c92ae4fb9c30
b919a25697cefec9c8b1ff1b308d1b474c3efbf68fc24c7d5e16fb83d5b4595b
afe27080dcf3f76e1af8c48919afe100bc7fe9ff4ee3b2ca2a0bd43deb478c55
e1812cbf8ddcc8390205ece256d102a6e408a161c591b44e0b0d91ef80ac7b68
c9874966ee0eedf383ce6c3b
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark

%%EndFont 
%%BeginFont: CMBX10
%!PS-AdobeFont-1.1: CMBX10 1.00B
%%CreationDate: 1992 Feb 19 19:54:06

% Copyright (C) 1997 American Mathematical Society.  All Rights Reserved.

11 dict begin
/FontInfo 7 dict dup begin
/version (1.00B) readonly def
/Notice (Copyright (C) 1997 American Mathematical Society. All Rights Reserved) readonly def
/FullName (CMBX10) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Bold) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
end readonly def
/FontName /CMBX10 def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 161 /Gamma put
dup 164 /Lambda put
dup 174 /ff put
dup 175 /fi put
dup 176 /fl put
dup 177 /ffi put
dup 178 /ffl put
dup 182 /acute put
dup 183 /caron put
dup 65 /A put
dup 97 /a put
dup 98 /b put
dup 99 /c put
dup 114 /r put
dup 115 /s put
dup 116 /t put
dup 196 /dieresis put
readonly def
/FontBBox{-301 -250 1164 946}readonly def
/UniqueXX 5000768 def
currentdict end
currentfile eexec
8053514d28ec28da1630165fab262882d3fca78881823c5537fe6c3dda8ee5b8
97e17cb027f5c73fdbb56b0a7c25fc3512b55fe8f3acfbffcc7f4a382d8299cc
8fd37d3cea49dabdca92847af0560b404ef71134b0f3d99934fc9d0b4e602011
b9cfb856c23f958f3c5a2fbe0ef8587d1f5774879c324e51fcb22888b74f2415
50d7401eb990d4f3a7af635198422283cac1b6cd446ddbcbd915db9bff88844e
784c6bf7389803d9450b0c21756a017306462c563d51ece66fcc9c831843ecae
1fefc1a232e2724f7baee428ae03aadb95c3035345c15e9922fe49e1f2cfc980
237316572dbc57064edac9b0db8913a5e2d45e97e19a91435ccf8adfc835b585
48e74b291446d689c7f2f8c4325e8356e974ae30c3e2977477baeaa33d141fb7
80f59351e84bfc88c87b3a4a1d25e168b9d134554f6a581378c7d2d6eca8ac09
045cc3a5e0ed86f147133f094029e3483bebc81cfde69942cf645ea20d0a2b64
5140ccc2f9cb4a3d969f4b0a79cd3329b440dfcff5285494406f3dd08d804c86
df191e57232f6f1f83df6430f214e03fa5412b1e13d83c60c52a698bc9a38159
19a64162af7b83a9468fae9507c6cb55ea80df8c696dfbc3296c663902d77e89
a181502627281181ac8624f65be9de5fb32f056cc7dd7cbc7366a91717b5892a
34ef6b441871c6993da3a81afc9bf70ff3842a21a29c0e49da1ccba37dd6b920
2702db510b8b1109acf4c27ee8d676bdbd16abe189f34a9b61532eb777457698
cee0561838eaab2d3939c5093afbb215bac433d1918c739b62566906bb2187f3
378521fb52e70c18886e1aa15f53a1f8a169528cf2ddd54c203613ff88e619f2
6c9c50c2c3b8b8c868a88afab1dc8472e7b6f3f992a161723a3c0904865a7c42
3281601eee91f35222c4a71f343739f102eb43145a47e4fac3bd666e4c114a90
5950618ecb1bdc29f90f6ebed1d8325fe6b52e14a8870e9b4bb088e585c71b91
493c12845a101937e3473ac5e9ae24f7c358f06c8b42dee8ef2a1a7a9f536037
57517f2fb6da0ea305d9d20cc74d922ec4b95b8b299459b71825f6f67abee3a6
f5267c6283c7c62aa8d36663071f18e1a3f0b35dcd88d739caf8dbc344630a28
7f583f037768d861f37d7929f248146b5f31ed9f61ef0a9659b50f47ec328516
9fd999b19687e50303557945476fe9845e5c4780045d84d7df253fe61bf69607
fd277a265531dc6f4364a8ce51a4c6e3d2776da07e950db6a70197d481253686
a929268833eea6bb05f9f8cf3dbe456ad60eaa431a2f11aeee4e7a5b47e6e813
45b8176c6caeb15a0494d3a53645df31ae64b3bea3409e50cc499e0814c07aba
d468f88225e7d2f4c07156a2a5c3b4a0293006d1cb2a4c510a141b5029ba8658
505b1cbf345ff0a657662472bf3bc2dfa23caf27cf913abee28b8e906936b4a3
5f3f8f01d58af060a1dcb6c5dc5bf5304b056724a3212f0860a801d931860499
6d550c5c73aa50814da9d5863518fb31146256f056cf936d7eab76c13cf90968
213b2bc297e30d689573b02ebf6cbdf89b782d8eee5cc16602e00b1e17e96a9f
fd601d7a400b78af4b58faa192d97e7f72a611299b58dabbfcba9ae09a1cfb74
8105537e9409cdf3577357b09040a22dbb26759695acffa1cd024f284eb47aa5
97fa218bbc9f97d893c94794fe3f327c9eec49b66ade61e2125ffabed7a5492c
26182b7acb7daa60d53bc756b3dfaf1c63e05cdd77519b023d7a72eb9c604c11
8b13f91904ced168ec96a7c42397cc55ff6084bdf783200f8fc482b91913eb9b
9335356a827aad973f2875ffd0e9b69ef385995bb60c84132b63469afee6345a
d92f4d380f6c48e591e9eea7e05364910242b464197b35400cd9f9052db2435b
7ef4f34437e7c541d7a8c6f41ae1d0fcc7e4fbcfa3caa7b92ea00d5250a8b3f9
9f0e7326e1a07abaaea2c10ce6d678daaa5e15c7b23d28d8a642f9aefe69c141
4816e893ac1dbf54b462ce48c1151f992f173fe7e1b742cb353e9811669c1f15
c5527763a80223255536ec5765da1fb9bbc8c850f4e3317a77867a918b333bf8
02f1c673a07684d1fcba5125c9bada60ecf19326028fad5a5cd0c058cb019b8a
f6b3dc769dd1a785f0e411bd4b886b8764787498d8c99f4ddd837dea49eaf63a
5f290e20454989283afe457aab82e2579bb7cab2b1a079f30b71b7c87b62fdc3
fe15337d98118cb5efc41223d192612fada778f9132fa4899c046273a45efc04
1e808ce2d8c115e3ca858557be05b4df3e3af8d68bf6be4d5768abb6cbb90aa7
7d21e010631d629f15781f9b4ddc2f92a9026a46c7ab8ba74695bb6ba2b29d0b
d072f83ff38966729d67b455c8a4eeb10b75720f2ee13fc7c8aefe0b49ab87f6
be4c265a56bf32a92ee6a3fcf73e456f9def95c3012b50bb2ed5792b11172d20
9655584c5c37ffdb97420ec53aca8f235578e9e4295522436c844c09e877ed97
d4658009a03dc4dd27cf2d98006be59728df0df560dfed34631d9bafa266e931
65c759e49afefa877e431c139988851da54b0ef9b2bb63b46c7cf378c4da354a
cd8159c9b64630e17966628720aae4f52ce9804111ed948bc3dc21a20ff8b015
73e2e25212e3634d4feba73748aa183f5490dcf1e43a4d1c9ae8aa5710003f67
8cfe1c7b1aaa877bd34b1a736ba65d34a932c93924c8a50d86e9e8b2e6696c7b
f0592dd6fecd03dd9c61e9ffaae02badab02a7fccf78ef0cdfae729b13b97a94
501996dd754b6f2a79bdcc4bddbf97dbd922397c5c13274ccfc1c7929f852a31
bf64090d837ef80255eabae6d5c1c9dec561466591bbc0d6199cf7a44583dd9a
12bec516b2fb6834713a85587ebea0bdb1cc444c789e1206f036413e786de174
0d3900e57fc270329314f929edbaab685479b07f626dd50c6fd8ac9044bb4e18
46ac90826127da719715e7a7830e53240db587def5305322fb504b48be99faf5
428e547612b03f6cec82c0201762737cd0ce3c934e78a9bb5d48a37ca420eca4
ac41ea2dcca0dcbf9f459110975b8b66b7eec0a89750e18a326246bebdfd5414
324e5368cba4f5971eb0deb20a42d573451d0db72048ec816788bf8a48f71806
7fc86cc4227153c170f422e5f82f77a6a51141578c63675d14d7a233d00e9a62
e63fcd5fa43d3c53b9b70876066e2b31f596e2c81ba2a62de49acc61ac5e2e5e
3d9580615870b04275d7a74998b94c84af114f6844923a671389fbf855c1b75c
eef1fd59f4865929a51b02e48d43dd9b1fd5d14c8d120bc4f501a884cdf60e37
a09c7b9337b16b51dbc319bbaa85f7df1a21a9c3484818a6df86b7ff5dd1bb7c
0d4f5df4fd694b322314fc1b6b3188d303346743c74026ae724c2cb60bde2d8a
8ba78dc4e0e439c98b0ba734a1ed54f8ca6495d4720eb894d9f8c91810292213
4b54d6d1c49aac9a9cb4e19e42f898177b07db8f961496d7b2edbcf4b5d5a9a3
a69697387558e185d04b24f5e0dfab34bc0cbfb0f0441f79271fb8416b0a1977
872404af1400c101c861bbb55d5406df02bedde287be8a19edf3cf973581865d
a4ab47bbc3839c3c46c3f48747d1b38464c1f9885487e2c93744abeaf7744da0
ccc7cea5e6f41b29603b7952c5605d1005fa8ab9969ab3f9a03ddca2dd4f3381
5ca050babba6cb493a3193827db904a00c5647b48462ae9ccaad5d7883c190ee
bfe30c3de5a1eeac4a990ea3e935e5b5aeb13374ffa334e4df854e6e318deb83
9b27d11291c2c89e93f4f61bf9488a033e94691dfb1137c3433494a72dfb62ac
4059705d20b1867a54320b3159a09d140ec5251996d64659f7d685e901a0e8ce
3a67f08131d3bbf698160e143cce62f0c7e0c89efe8e7a91dcf2322c90841240
06b24d9c7cc295f3dd4bac5c0219e455b33c34a1f8eb88861a6a21402ff32038
57e01f5cce5aef8bbab4b351986fb5d424dfdc4a82ae84329644feb40b3b9457
68a9c325c8cbdca4eef043d21b5cbe1da6fc613aac4cd2269d53dc5aa84f744f
3639f164be2e5af4900d380de8a76d3063bcfff39ec9241153fd154ff3cc48b0
317410768ed925ec27795e73c36dcac4daa3367176101b0af3da54961b6548e6
e859efbd7f073c91379aef18d9be82a995474ce69b018a0314223b01d687197c
c67a150734a29b29270107e47ec5b63336673fb16aa0aff358fcf79d4f2748fd
9878bcb0ed87d5725212f0f9ed78f2fbe5e22fe7a3ae06cb5b9d337295e49ef4
fe5c6968644d407545f5a00be7b386f0975a38c8808de237b20cc199edab5ec2
5ed7d6be8373af212dff03a4c9a83a781bdd7d0847aa18afaee449f09c22f86e
720ceab87904d11d77343cc174e831818485f8368ea99ef2cc070a8e4ced1361
1cbc645a07b2f3016031c9d8882782e8e30f052743dda94dad1d53be20425393
11b60a41f6e0687e1cf9bdb943cf64386a48a2a304947c4a3bf578e56b8eff4f
c0a5162eaedb56d38a6aab7caf98276b79c9b39bcccf54c3089b84c76b959137
3c20f0759e08393aa661a4c57f782b6b9923e9d8e6ebd1de087501058bfcede9
bffce545c8aa9e4ebf0e050901af2989a65caf30a39701820a6239319e0ff422
31252b00ef5072f7204c5d427498be9781793a394ff821a54756f4d5ca47c682
897c3f31285d92ce8279737a1425721eb85f0ddb8643d3fed3061a2df604b9da
b602b09e40ebe7b1dcfd16c7a267ad53b36cf2a9f3b9e14d8b8813927d0fdf04
e01d1ced4950fff913db7ff14594c9662221e1c2c8f736d6e3026a2e3d87bc44
6acdf00f9251608e39bea30902b867142a482dab067935e3e822845f11cabb57
a62a2751468c023aff3fbcacf0e4105297490c5181837a5184254527869638f1
ad705a444ac6198fa7a0eeea30871764f515f87b337954a9f8944341087b12d6
225c2bbd28e736d30aebb90ac3871da71df9f596c524dd6b4f6e5fa4a50f0a94
7cc9966150a2a020659785eca96d0ff1177b0e2e7f913f81b6266f0826931afb
7e3db761e3437766e0734078802fd3aa406a94c5a0ce13f5a2730b707607688e
170788c97a6655064710b349e37f4d20e1fc9def9da192668ffc198035ec96d0
f82faaa641ee46afae969fa15b498c9ad53b51af6c7275861747aaccbd8f496d
75248e88c5e909c01492acfe4ada3bd1bd7215c2cf378b13b8fe994f1c0c3a10
b5972b14ea088243207aedc943392525759195c9a0d40dd403c79423e5d5c5de
287e95dca56f92f7cb02645485eb7e6c36a3c63f213af0a290dde078bdf31a25
aba37deb4aedc9346a62b6a754b886258688660ee167e8c8cec8c9f8a7fde745
03780ace8b67348b6bd136fdc2797911c6753b01876681011b85f62ca81abab6
933ff43f220c32abad746470013bb4e2b2b062de05802fe27be480345fcdb4f4
7dc6d66df6a51addab9f69d55f592e04783035f05ec1a9f2607e6fdb50c0fca9
2d856d41ba42065131c309ffbe186000b4710011248e0e33c5087b69b960efcc
ac34c5c0feab5480e71048049f1a4ee55c975c930d4af100254cbc65c9ea5214
aa073d9662cf5dc5cbc952fa1bb107c3f442e432dbeb2f047ba4c3a1eef13b93
1ee3ecfed4fdce311ed9225068c9b694508aab45ccac33ac855477b6bd3ba4f8
714fe10a7a8b108bfda3f10f1dc2bbff01988e212d75dd5a5ba333b3da1eae1b
11b10290ce94192dbadf379ba6dbc6de
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark

%%EndFont 
%%BeginFont: CMR17
%!PS-AdobeFont-1.1: CMR17 1.0
%%CreationDate: 1991 Aug 20 16:38:24

% Copyright (C) 1997 American Mathematical Society.  All Rights Reserved.

11 dict begin
/FontInfo 7 dict dup begin
/version (1.0) readonly def
/Notice (Copyright (C) 1997 American Mathematical Society. All Rights Reserved) readonly def
/FullName (CMR17) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
end readonly def
/FontName /CMR17 def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 161 /Gamma put
dup 164 /Lambda put
dup 174 /ff put
dup 175 /fi put
dup 176 /fl put
dup 177 /ffi put
dup 178 /ffl put
dup 182 /acute put
dup 183 /caron put
dup 65 /A put
dup 66 /B put
dup 67 /C put
dup 68 /D put
dup 76 /L put
dup 90 /Z put
dup 97 /a put
dup 99 /c put
dup 100 /d put
dup 101 /e put
dup 102 /f put
dup 105 /i put
dup 108 /l put
dup 109 /m put
dup 110 /n put
dup 111 /o put
dup 112 /p put
dup 114 /r put
dup 115 /s put
dup 116 /t put
dup 117 /u put
dup 118 /v put
dup 121 /y put
dup 196 /dieresis put
readonly def
/FontBBox{-33 -250 945 749}readonly def
/UniqueXX 5000795 def
currentdict end
currentfile eexec
9b9c1569015f2c1d2bf560f4c0d52257bacdd6500abda5ed9835f6a016cfc8f0
0b6c052ed76a87856b50f4d80dfaeb508c97f8281f3f88b17e4d3b90c0f65ec3
79791aacdc162a66cbbc5be2f53aad8de72dd113b55a022fbfee658cb95f5bb3
2ba0357b5e050fddf264a07470bef1c52119b6fbd5c77ebed964ac5a2bbec9d8
b3e48ae5bb003a63d545774b922b9d5ff6b0066ece43645a131879b032137d6d
823385fe55f3402d557fd3b4486be356c29c3aec91ef17f5d31183b1e489f1fa
559a6693fbdd04d4f7e99886d8cb7cca13d4aa9ceb34a708af22e69ccef0e504
c3997075243585edf60b6447c8d01cffb04b6e3ddbaa7da5891286861322a795
e9d990fd56af2f5c2b35801a0b07874e4ac3170481d232e150443253c92a8b05
513d4a4154a99d91f629ccd30376500f5d16aaa9b203bad6350e4b19424c0e33
75f2949bc1927a6f6221252f8a96618e646aa1b0810753c98becc26b37837775
24bca72b818d314074c1c91f4e1f4148d3d703d12d179ee6970bd55d04aa9a9d
97f63f2c7dbd129ec2ed3ba5f8080270ea5854ea165dbcc061e2f47f1aaf0997
2ac9a689a2a9620b91b53f6b5092884372f5f7afca495f331138d85a97c5bb83
d8072dc88010fc89108b60bc06d4f93c722e8908d7ce3c1ea3c70e9e65edd769
7db17ce0e012ad37d4030f33d30a73fd655b7a2e572f3378ac933dd75082f2f1
68702be19bc60cef6bd5f0ada180d21408c04b7f7db9b6dbaefe09e809a80ddf
a5366d10930d3e68ca53e4721ff525853f4c784f2c2c3aa0129a34d9df00debc
ae4037e4c0fbdce3989f35964b4c07e7817b805bfe8c15f0c0ebf226cff606b6
2954f0f42dff8c214a6537ab666d25389c44db7b5866440bbfc137712bcdcc89
c68cd1adfd85648b1ed29bfb45a564b02172137feef782d604e0d7e1f1737c96
719cca9e4b9dfdc87e5999b886a15ac572183dfafd8c4176cd98430c204d4e7c
e989e1dea814d3088a21d9ae6c5fe7ab3d399b2982fd605e65509a8ed6790c21
a08a23e53dbe70f676d0e7b2e8261b092dc3415ac785635d133d309ac670c0c5
5868fd863ce42542ff1e83e1fa20a7a0e5d680dec3a22700f7f48d2582b8411d
757d17ab7530ceec0c6727c6a80f2493196b0b36e727bd670a95e808ad9371a6
25ca1e9c57fd0e3d3fa4ff4743c84ac4ca04f7820f0d263aea85613f5694c3ea
a40271a5288290b56708fec88e7084591eb014170f884b99aebb9512d254052b
10176e90c744ff924b9035e6d49f4a26ed7aff2e20cedabfc2d700841f45b464
cc462f67dfab88b7245b8de6a6913e72afe0506a48b7ffd62372e8c42312a41b
8d3e127f53b92a12b34587a8fade25c6263c466621f1aab9a26af06c52d944f7
66d240d70609e18b5c2fd5bc1d152ca9c42eaa3b1b96dbaea5ec76fd2e14e17b
f8e77c5da562d516138aa48314e57dd05c24b62e6fca8bc3f70f4621ddf23393
1ff1ae3b167d2c5a9542961d8ff77313f5652952f501af6cb447013c80a0ca99
5b67c0d09f9f3e1f6bed47ad7b5a292c1726716d755d02b23890c423fb089f35
d5a14cbb5c51a13213fce70b00ef3be18ec98c88c2118ab55c8b5692a1b7326e
009a25d6c8a7b7d811545c317b5200a8466e4428912f66493858817c28717e9d
92417cb6aac8d75feffef18fe58871117c8819b5c80a9826d1c768dcf28b3457
08311c52d85f4a7ea1234165313f5b3813cbf1c75f0335f8a40cbbf4f32c2107
a7211f8160d6206e3ba7fcb96634049e7663fe2b358c49bcb1542b0b2627be3e
dee27c630d468a5eefdf2c947b5f1dbece4ff5a1552cfaa714b05489ebdb9aaf
51d3a0a79275eb5d895d7b7a3884b5eaa1f4e7072cd9165591e6bbb21cf586bc
e41c56953a5a2cd69c6a3763f6a3904456ffe4e81e150fbdc4ac977387054344
b3aa877c94996de8c6cadfc58b91d856c67ce593ae55bf7548b774de0dd9e8de
b9b15b4ac3a78361a2a6db45ff9fe09965307353a8b89bbb7d98e92209b7dc47
226abc67b9edd76acc81d106c942ddb71cedd28b20eba503497b8dadda586efd
76bf6711bc8a162e3adfdf87aa3b9563a746599bd59265fb37e09f43d8c4d524
6d05ef41983edec81816f1a12c8c29553b4cd8391a1f57391b6b7d4eff91c5fc
c46a0b821353677d90f6a29c26099ea98606cda5c539fc18844e21a64f1448ec
2a1f41e967558c86de5e7f16f0aae7ae2dfead26fa2170cf4fa1ec08031d77fa
a9a22dfd4088adf53af55985875aeb3be6ad3e92eed8e458ca9842a9c79608bf
9423f8d9897f32fcc0dbe50fad994eebf6043c7f4577ee59a8b0614f9bc4ae0d
e0dbb259173a8f570c70afeed85cea33569e9925510dd5a4ce2cfaec75e9482c
59a55ead0ddb84a7ce2b758fb8c22fbdb6247cb96f823737c66e9a5000ba2b51
8ed68c0d518948d7f7c10cb820b4bc17970d254e7a62e8d71789ef183a562d16
2122d720a3fe5513d3063f07165f53e08617042bc7535db4bfbd031144bef252
8376fb22d57713fc3705b0324e210474d3593e4a73294c240a96c43e9df70c95
f5264d76f823557e53e96ab5a9792654d098433c95b1aa4d7b9107ba51cf238b
08612a20bd91ea361d373b76b5eb49d1675a538c10eb71ea1677edc27773d919
7683ac6e2ebf3a1fae6c468f54e3aad751bab52b6f80eb7a10c0dbfb4962960e
405294bc0491cca5493ddbcca4887cebabeee21c66fa84b1e851d5edd2b86a15
560a8ee3c1b3343f628f82cd06b10ea7a2d9523e21c6471e67e706ffa89dc8ff
8a8f4fb059fb388f068bfa4e54db1c7e5776e33e27a8044605464a6fa929973e
654ec9e6f3c4bf121ffab7997430776fa71b55ada06b9c1346c973b29e995b9f
32b8c68c0276509474219558cd272a195dfd9867154a0285dbc53c8e588a877b
2e846ae33db63f41a2bf3a93ea392b84a6666182f4f718ae5facce20ec792ec5
c75a4b27fad6ee29eafa207b78b2367491e82eb6210c9ae3e68afeba2c009dcd
a563c8b54ea8b12ee56e4482d62c00111c94a24f8f89676cf3aa09e51cf3b082
467b15cd9574caf76e9e907f04292ea781d545dd6abd212aa46ed4713714cfba
09447c5519e5add16fcfc4f8c167158fdc630a380fc38084d95b1ab996033e27
13da29729d190f4fc589973fd19d84931228da1803cb28de3b56100e274287f6
4c428aea61addfe3c72b2fec0323e48b9c32acd3b091a45f4cd8053e9c9391fe
851e3f29366cea336dc5adc79bc4d420f4759670768413dd51d9965879e46830
8af7f644205a1b7831e6a16a432d5fc788844d0d4715011f3f4766bd65cb0f78
48b150627136308fb9dbb2b10c63ef93a324fb58d82632249093ac02553983a7
7a65919f2ff8414ee06a20e7956ef731ff28b678bb5e2468391df6bfcb27923b
8e57597f3d47542ff57bcf3a337475cdee91b13a7450ffe669c06e064d9d6e17
379777f3dec0442f53dfa1dc7fa16ff822a31ea57339ca32b85db8bbf980b525
bda5497cbc4c89ecda5950f327ae61bbb0407161f54c0b64efba145d292cbdd1
655b12d0738fe0a669692ef8168a3fd7f34ee468ca711536df7c703b4ab101ce
28033f1b6dcad0cfe2d85ef16369a3ed44efd876e0523d7080265f9781cee0ff
e86d3ae7801df9350a4a0dbcdb73556dd8bcf001079d4e01a7f2f0b001419dd2
99692ebbb910516c22fd725693fb12b8163ba3969f326153cd5c1e3e1ea7fcd2
b9d505187120e4dc52d34efd2afb9147c1754924dc8c807af7adf02b1f1087ca
f0652ffe181072759a44afcd43c916f7b71b4d1009f62e43c04b3410b3fa8dc4
49ac94657f7171989f0873ba029881cf13725af869b6a45d0ca3811e2f70ca91
8876dd0b4784b101d610d7d305eac8cbbd6cc93acb6860ee663aa66f8b7b330b
9a111df855e0ce79c5a4be0242a42046ef90d7e556938be272525e01ca43e98b
d681c5a277db7ad6ecf615200cc4e0f556f166ed066d00f7670bca01a1de8cd4
f6a7cfd52d9de4805dfe19df9f37b8c193da3e6cc65baa433ad49cc7a48e8597
6484560fc87aa8a43b6af7d8923a712b2c315394e99fb716b52ac5faceb98d75
add7effb1e3ddb8a38fb24856ab1e15b7c710becd3cde7b2f7983f94a9cdc9ed
5b9a2c62e0be875568378b2d3bd2401eeedbb33c4964d8df92ab3c634aca4fe2
8fe2cdd7e7fbad86faf74f1b2cfa094e76debc4be6716fcd933758e49b625ec0
5252cc419dedf7c11c9577609d38804c5e1f0f413ce6b15cb077ae0b303b94d9
3fc203c5ea3f2071871062f4522eed91ef500ed2da54789d55bef7d2aa090d68
ac7294e1ad1603db2b1b5b759415bf3f341bc6c2e891657bb286ece54e2cbe14
e035edfd07ce78cd8e4f32afd8ddffe652e2a22fc2fe7249b44deadf547a3aae
8b23e29c95d4f07e0eeedc7d2df883038e754db2913a9636c10ead0e57f042a5
d2d0ce01098847c846fa95d6285f594bdd1fc8e2e2232871bacb7aa420b22d1e
abda8e544af14a244789efbbf11524542fcdf466728c4976c87703e55450a24f
15283ee50257bf26e2cf8313bc757c40fd16c8a4a78020f7b247ddfedaf4c558
64a54b764ce8ac24b5a9c526ba8f0bd58325ca61d7512194df94d6a7339ad5d0
e18f64d87adb9dfd53eedbd06212b3668da429a6ac8c5fd28e463acd54026ce1
8bcfb271b20c722ebbeae69a18434c7ce4aa8ff7f70af96d4f418ae5f4660e84
f7a6c030cbddf813f85143cdc12d770c065194accf33de02e92a73b97b24d5ba
25a2aeba155a602311699cd4f5ccf31a05f33717b6195f539cb34080af11ccee
9819037c591023dafa5c9709b43fbd431567377c89116843c974014606f052f6
9e580259cffa2188859631d404ef99596f69192a23493dba0746f89cc3ada3e6
45057ea864ddf57c51ab433ee9db4d86f8ee0ac2b61208898c8c663b3dfb5da7
85ab751921e09a9b09aa6f3c457ab397c0a8aca176fa00c92f1f128bf223e238
b0d6746a9586fdc0f7b9c972195be2d2d0a77c4be06ed740199c997154b0a3a6
f7c62446b9679ad2bd609d03e100ce521a74affc2f0ba67f639dc29eaa9c6dfe
9d4f02405a657b228b2d328eaadec5df789ce8409f7086daac45ec980383bb12
6ffe29bebee59df6a1086ba1c610240ad1c419dca36bb6c0ba30f0532c769e8b
ba3972350af1c6a3c8ba0b98ad03901882bfc7efc2331718cb298863769872f4
94a7e0228240b9209d873caf08872cc38f86b1971be98ac3dd32c7746df673b9
0b23afb33e6f4d6fbbee35c91c17c13ad0cd6dc2c752d2286c331c07e5b44526
4b0c09fa006c659c29a2eddaedbae8f0008365627edcbc7da14946b6a97ac659
5829390751e894b68d88ce10522af08eb89bbf7fb68825075698389de21bb628
4048df2d048be0cedd9b3536bf7abe7a810f6961149bf2eddd8547c0922a10ce
8f8d743f2f83a6ff11f1c047f06efb49f2e17ae7156fa7832eea7564e027aff5
89aaf31037634d17f6ce32c686f6845f28e29c6ed69fba4891bb7a2831555c34
4f9256e8161db47b74f9e8e1069ebc64f63a1539fe6a59f3aa76a284f233736e
bd4205f5e385e281e5346c0cde354a5e756558a3e10b0040f3fb339576200944
88281a70a49ae4519b21205f155e1a10b9c4193230956e0dd68b723e0d266712
f0a83138bb92cd09bb829e62312f0e4b8c9f168402fcd9369766df1cb1d45cc1
93ab040dd5320d0d28d2ece5c58f93898f4d5b37eda7f713dc74178854092e44
f71f2220f7e127be78c9e0ae8cc46f605ec077b76cd7d3a3fba73114de13a749
d4cf363b27afa998298fff70bc8b1810368825b946d9a319bfebf39462b86d8c
271d4dd798a630d8cc26c918b0ca87d2bcc842fe7e9ff213ff191bf980562615
9784979fd64c4111cb575c05358ae8c7c04d734eefbc7f74527dd73a6cba964f
05c86c7ceebd492e5b2483944eba5edefe2be550f9a07ba9f2af975ad96cd7cd
82671d614f6d1b4f9a011031ff6fe3a0f5c942ec5365f45ffbce5973c2cd9a72
d7ec54ababc9faadbebe6ebfef475e934c8f8899410b1fcf188745d301ae29be
df59637ec67a59764662cb84787bfb7be8887f3f8dda5d2999cbb4bea7b82efc
a0accc0a2401f13b66b8b0714efef2c305f07ae38fe061ba208ee937d75cf295
0003b7ae98d7a7d774e74744040ede942f6a6a4be12d7b2ae6378ef2f07ca7a9
e9999b43745757c3d5e01f7fa6ee29be58da347946e7dceb868cad5ae413c894
27fa100606ec146db200ec36742a48c7b4a511d670e3da668bac3ae95e62c463
0d610090a0844ebebbbc0f649c8ac2b0fed2343075f361bc8cacf44e8e68b370
e5bf949c90c95264ed0eca9a41e81876974fcc0fdbcab2eaa3704470ef4dcb38
1b001f4a510f9125e616d2e17609a13de4a29d3dabbd7a8483d6f145e3a4d6c8
4ff12b5e4454071e352e00c8949cff8f9bed641d7dffe651d1d2e4d7e782dca9
1ef2b33574de463a917ff1cdb69f504fef7e4d1fbfda63072726754c85deb494
c57944dc854a9ad4bb9b6deaa78794a4b0d110a6559f5148b50a9d3598107bf2
e05811a59734d6e3fe456e66d171ea7335b63cdf5272883218c693ce16988d94
ba4b0362885e5f32484c29f06f40a7814a33b68555d7ea4d5a00f858d98024fe
558ad52f7dd502593bc2b39f4355323e1a2262cc7c0e91c82de6a56ab34c05e6
acd2e132a55948de2da5f49f2a3a921437b455fd727ef6ea9a12c15ff910e16d
f8377625f4ed2fb7a39cfe6f0a038f0dcdb42b03ef834aba1a820d2e23f24499
3f8581c87d425dfc32389f2c3fcb62baf6d3aaf43b42582d6ecf1c1ba6c6a556
6aa60e253e6131777aceb6688fac315b7be1c1d9ee5b1741e115b48aaf5b30c9
fceed7c8c0fd0d981e0b7b31e0c30ad1fa1490645ff2853b68ca4276e336fe13
96227aa6192f8a49a0cc0aa572556490104c4b9901325b4b6a0e5ec409bce3b1
270c1186e68adc6db96a9b33360e21c09901b8a53ebc960ff5eb06e1075d3230
497deffb8d7aefcef505f07388d911b589c77863ae3f305ee0659a243a1722c2
736fa38357e8eb9b9b9059acaf7f82bfb1f7707cc51a5c3f5341a2e882eb4ec5
c2d6938d8a0fc8ebea3cce59025da9301929394cb05da864f06a410043954f18
4ae872e239a7fa3b3d665e42b5ecfbcde17994871720c2ee907e73550d1244a8
f9b2783344363004af83bd5400c1c12d6566f895b9ba61714b8bf01ef7648a3c
fbd529606617243867fc8803e10e9c444939934635d0bb65ae59f69924e97be4
3cdb523be5c9fa221b4c4d97907f6efe0cfccb117aca8548f4be38aa1da23f2b
317c47a08ae45b74f55450e18fce19513f81cc4c6591db6c433215527a48cfeb
8c4c13b6e2a915e3da331753d5b56c3790be51355d174fe3782954be100aeb19
321da0ba5a5d07a7f6cadf3fa77ce80b4ccf5364851b21579d7024ce43c84e3e
0487df4eefd11931ae4d279b01915456482d72cdc7ca1b29563090bce37eb36c
9617dfbd463b221c4d618f755fab9e573aabc812912a8b8b9d5f9ec181a36785
2c77a316b1a2900922f825abf5a8fcce6125bbd2857f5b1515a44cb50b581910
70b97891cd44d5171302a14130ef455d0b9e90966f9a54fb3cc1223797f260b6
ddf4b08b5f4b57d6448959ca3b7f9299528424b9ffbf238318d9c97a9d72c4f0
a30f1fd7b402052ba38884edbb7f6c349576727b3d542ed02d8d3ba26898112f
3e0395401b46e53b2c06a62c292242fd782e98028b02ac58d11123dc0af54197
a79c42d0c4d3832989c7cf2f06b20f4d83f4ba3dff60be7397f80f272e5104bb
1d5c661bd503f224fa4c6d52f568d010b91fd5ab84eedf91c0deca486a5308d3
161d760e89e6ad7b2684f094041dfa26580c74fcc4a888d57a3a22c532a7f031
db93b6ad6e6a0bb7145725a118f63d61cf2517767b18c00b4af9846a869a9bc4
d1c1c16ad04e4930ce406c60a9a4e7ac53d57f0d3fcf1dec17294d2d5b0c1524
4dc23f7c71d6f5b1ba6a206a2254263a4a4076c1e820f37eeba83f3062abaffa
5c41ee1a7283a43709b172a39d4f734edf2c86c574c71b8e173b183952d82b60
871bed17c3c65e9ad56aae14d41e8021bcdad123d193d34f43a5bf8d9bf60bc1
1a0cfa6ad13f76778300da9d91c370caff22431939a7161d9997cfef2aa8b07c
bd37463aed684c3955f39cdf1a7a2135c04ba4394e925fd23498e554ae31237f
361c0652c2a00ec05bc11500e1821f0d37640ab8db517ba1208cb94fcb25c84b
2f81b40fde6dcac25fe4335803d1e6d810197ef7b2a74ed2ad8bbef183ee3e7e
daba1a3abc047a70ecb00442ae7dff162e28d87de1c5c2794acc7293eaf2c746
d97947b10230af8507e61284f710a002fdc556a743625fd091a2484c9df1ab22
13b72888f662d51411ef7f7fa221b22ba2c4299858a414974026e79c3ec13216
a90dd00201a01f7332817d93d96d591f65f5fefde81569561d7b26b4765e7bd3
43114c09f6a1d952613e48ea7eaa9334dd66c57074bfa7927df2949b92ba5eb1
b7821adb5525
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark

%%EndFont 
TeXDict begin 40258431 52099146 1000 8000 8000 (root.dvi)
@start /Fa 167[1599 88[{}1 1106.96 /CMEX10 rf /Fb 139[340
10[320 24[597 1[747 904 5[733 5[705 5[261 261 58[{}9
885.568 /CMMI8 rf /Fc 194[732 10[470 470 49[{}3 885.568
/CMR8 rf /Fd 133[664 789 1[1079 1[830 581 589 610 1[830
747 830 1[415 1[457 415 2[457 682 830 664 1[726 12[1039
830 1[1122 1021 2[1418 3[557 5[1079 1[1128 12[747 1[747
747 2[415 46[{}30 1328.35 /CMBX12 rf /Fe 134[946 1[1295
946 996 697 707 732 1[996 897 996 1494 498 2[498 996
897 548 818 996 797 1[872 13[996 1[1347 1225 2[1701 1077
6[1177 1[1295 1275 1354 11[897 897 897 897 897 2[498
46[{}35 1594.02 /CMBX12 rf /Ff 135[590 104[664 14[1033{}3
1328.35 /CMSY10 rf /Fg 134[631 598 863 598 697 432 531
548 598 664 664 731 1063 332 598 399 399 664 598 399
598 664 598 598 664 6[797 2[1298 966 966 930 731 948
1[881 996 966 1165 815 1[682 501 966 1005 848 881 981
930 914 966 5[399 399 664 1[664 2[664 664 664 664 2[399
465 399 2[531 531 399 996 25[731 797 11[{}64 1328.35
/CMTI12 rf /Fh 135[584 799 1[615 430 437 434 1[615 553
615 922 307 1[338 307 615 553 338 492 615 492 1[553 9[1138
2[799 615 815 11[723 753 846 799 2[861 5[307 553 1[553
1[553 553 553 553 553 553 1[307 369 307 2[430 430 40[{}43
1106.96 /CMR10 rf /Fi 134[406 117[454 3[{}2 774.872 /CMSY7
rf /Fj 133[604 634 739 5[586 1[653 4[676 538 444 749
1[641 1[676 560 553 683 16[838 1[1042 18[361 361 58[{}18
1328.35 /CMMI12 rf /Fk 128[650 3[650 578 686 686 939
686 723 506 513 506 686 723 650 723 1084 361 686 397
361 723 650 397 578 723 578 723 650 3[361 650 361 795
975 1[1336 975 975 939 723 957 1012 885 1012 975 1192
813 1011 668 469 975 1021 849 885 993 939 921 975 3[1012
1[361 361 650 650 650 650 650 650 650 650 650 650 650
361 434 361 2[506 506 361 1[1084 1[1084 650 13[650 650
4[1084 723 723 759 11[{}85 1328.35 /CMR12 rf /Fl 134[1136
1[1554 1136 1196 837 849 879 1[1196 1076 1196 1793 598
1136 1[598 1[1076 658 982 1196 956 1[1046 12[1497 1196
1605 1[1470 1616 2[1293 2[801 1[1691 2[1649 1554 1530
1625 9[1076 1076 1076 1076 1076 1076 1076 49[{}39 1912.83
/CMBX12 rf /Fm 139[403 4[620 681 1[310 10[620 6[743 90[{}6
1212.12 /CMTI10 rf /Fn 133[539 640 640 875 640 673 471
478 475 640 673 606 673 1010 337 640 370 337 673 606
370 539 673 539 673 606 4[606 1[741 2[1246 2[875 3[825
6[438 4[926 20[606 337 404 337 9[606 21[673 707 11[{}40
1212.12 /CMR10 rf /Fo 139[542 550 574 14[620 774 678
31[1054 65[{}7 1212.12 /CMBX10 rf /Fp 134[492 121[{}1
1106.96 /CMSY10 rf /Fq 134[824 1[1127 1[867 607 616 607
1[867 780 867 1301 434 2[434 1[780 477 694 867 694 1[780
9[1604 1[1170 1127 867 2[1062 2[1430 975 1[802 5[1192
1127 1[1170 8[780 780 780 2[780 780 780 780 1[434 1[434
44[{}38 1594.02 /CMR12 rf /Fr 252[797 3[{}1 1594.02 /CMSY10
rf /Fs 134[1113 2[1113 1173 813 825 813 1[1173 1053 1173
1773 573 2[573 2[633 933 1173 933 1[1053 6[1293 13[1322
7[1622 1533 1502 1592 65[{}23 2295.84 /CMR17 rf end
%%EndProlog
%%BeginSetup
%%Feature: *Resolution 8000dpi
TeXDict begin
%%BeginPaperSize: Letter
letter
%%EndPaperSize

%%EndSetup
%%Page: 1 1
1 0 bop 1347 6793 a Fs(A)693 b(Comparison)f(of)h(Zoltan)g(Dynamic)f
(Load)i(Balancers)f(for)15381 9560 y(Adaptiv)-60 b(e)693
b(Computation)36620 8727 y Fr(\244)15721 13504 y Fq(J.)520
b(D.)g(T)-130 b(eresco)24705 12925 y Fp(y)25224 13504
y Fq(and)521 b(L.)f(P)-130 b(.)520 b(Ungar)14609 15496
y(Departmen)-43 b(t)519 b(of)i(Computer)f(Science)20251
17489 y(Williams)e(College)17325 19481 y(Williamsto)-43
b(wn,)518 b(MA)j(01267)20180 22580 y(Jan)-43 b(uary)520
b(28,)h(2003)23333 28292 y Fo(Abstract)5070 30228 y Fn(Dynamic)460
b(load)h(balancing)h(is)f(an)g(essen)-34 b(tial)461 b(to)34
b(ol)461 b(for)g(parallel)f(adaptiv)-34 b(e)462 b(computation.)710
b(It)3252 31733 y(has)561 b(b)34 b(een)561 b(an)g(imp)34
b(ortan)-34 b(t)562 b(researc)-34 b(h)561 b(topic)g(for)g(more)g(than)h
(a)f(decade.)1009 b(The)561 b Fm(Zoltan)f Fn(library)3252
33239 y(pro)-34 b(vides)273 b(applications)h(with)g(a)g(reusable,)299
b(ob)67 b(ject-orien)-34 b(ted)275 b(in)-34 b(terface)273
b(to)h(sev)-34 b(eral)272 b(load)i(balancing)3252 34744
y(algorithms,)649 b(including)601 b(co)34 b(ordinate)601
b(bisection,)649 b(o)34 b(ctree/space)600 b(\257lling)g(curv)-34
b(e)600 b(metho)34 b(ds,)650 b(and)3252 36250 y(m)-34
b(ultilev)g(el)335 b(graph)h(partitioners.)516 b(It)336
b(allo)-34 b(ws)336 b(run-time)g(selection)f(among)h(balancing)g(tec)
-34 b(hniques,)3252 37755 y(facilitating)559 b(comparisons.)1004
b(It)559 b(also)g(pro)-34 b(vides)559 b(a)g(framew)-34
b(ork)560 b(in)f(whic)-34 b(h)560 b(to)f(mo)34 b(dify)560
b(existing)3252 39261 y(algorithms)456 b(or)f(to)h(implemen)-34
b(t)457 b(new)f(algorithms.)694 b(W)-101 b(e)455 b(compare)g(the)i(p)34
b(erformance)455 b(of)h(sev)-34 b(eral)3252 40766 y(a)g(v)-67
b(ailable)382 b(metho)34 b(ds)384 b(as)g(mesh)g(partitioners)g(and)g
(as)g(dynamic)f(load)h(balancers)f(for)h(an)g(adaptiv)-34
b(e)3252 42272 y(computation.)887 b(P)-34 b(artition)521
b(qualit)-34 b(y)520 b(metrics)g(and)g(running)h(times)f(of)h(the)f
(balancers)g(and)h(the)3252 43777 y(solution)304 b(pro)34
b(cess)304 b(are)g(measured)g(for)g(sev)-34 b(eral)303
b(metho)34 b(ds.)506 b(W)-101 b(e)303 b(also)h(examine)g(the)g
(e\256ect)g(of)g(o)34 b(ctan)-34 b(t)3252 45283 y(gran)g(ularit)g(y)474
b(for)h(the)g(Zoltan)f(o)34 b(ctree)473 b(partitioning)i(algorithm,)492
b(and)475 b(describ)34 b(e)473 b(a)i(mo)34 b(di\257cation)3252
46788 y(of)422 b(the)h(recursiv)-34 b(e)421 b(co)34 b(ordinate)422
b(bisection)h(algorithm)f(that)i(bisects)e(along)h(only)f(one)g(co)34
b(ordinate)3252 48293 y(axis,)403 b(to)h(ac)-34 b(hiev)g(e)404
b(a)g(\\slice")f(partitioning,)i(designed)g(to)f(minimize)f(in)-34
b(terpro)34 b(cessor)404 b(adjacency)-101 b(.)0 52690
y Fl(1)2152 b(In)-60 b(tro)60 b(duction)0 55611 y Fk(Adaptiv)-36
b(e)401 b(computational)h(tec)-36 b(hniques)400 b(pro)-36
b(vide)401 b(a)h(reliable,)408 b(robust,)f(and)401 b(e\261cien)-36
b(t)401 b(means)g(of)h(solving)0 57216 y(problems)490
b(in)-36 b(v)g(olving)492 b(partial)f(di\256eren)-36
b(tial)491 b(equations)g(\(PDEs\))f(b)-36 b(y)491 b(\257nite)f
(di\256erence,)504 b(\257nite)490 b(v)-36 b(olume,)0
58821 y(or)553 b(\257nite)e(elemen)-36 b(t)552 b(tec)-36
b(hnologies)554 b([11].)936 b(With)552 b(adaptivit)-36
b(y)-108 b(,)583 b(the)552 b(initial)h(discretization)g(of)g(the)f
(com-)0 60426 y(putational)499 b(domain)g(and)f(the)g(n)-36
b(umerical)499 b(metho)36 b(d)498 b(are)h(enhanced)f(during)g(the)g
(solution)h(pro)36 b(cess)499 b(to)0 62031 y(concen)-36
b(trate)464 b(computational)g(e\256ort)g(in)g(areas)h(of)g(in)-36
b(terest)463 b(or)i(activit)-36 b(y)-108 b(.)671 b(The)464
b(enhancemen)-36 b(t)463 b(ma)-36 b(y)465 b(in-)0 63636
y(v)-36 b(olv)g(e)434 b Fj(h)p Fk(-re\257nemen)-36 b(t)430
b([38)q(],)j(where)f(a)h(mesh)f(is)g(re\257ned)f(or)i(coarsened,)g
(resp)36 b(ectiv)-36 b(ely)-108 b(,)433 b(in)f(regions)h(of)g(lo)-36
b(w)0 65241 y(or)504 b(high)g(accuracy;)540 b Fj(r)36
b Fk(-re\257nemen)-36 b(t)502 b([1)q(,)i(2],)523 b(where)504
b(a)g(mesh)f(of)i(a)f(\257xed)g(top)36 b(ology)506 b(is)e(mo)-36
b(v)g(ed)504 b(to)g(follo)-36 b(w)0 66847 y(ev)g(olving)394
b(dynamic)e(phenomena;)405 b(and)391 b Fj(p)p Fk(-re\257nemen)-36
b(t)390 b([3)q(,)i(36)q(],)401 b(where)391 b(the)h(metho)36
b(d)391 b(order)h(is)g(increased)0 68452 y(or)434 b(decreased,)f(resp)
36 b(ectiv)-36 b(ely)-108 b(,)435 b(in)e(regions)h(of)h(lo)-36
b(w)434 b(or)g(high)f(accuracy)-108 b(.)p 0 69540 20800
45 v 1484 70356 a Fi(\244)1993 70757 y Fh(Williams)371
b(College)g(Departmen)-31 b(t)370 b(of)g(Computer)g(Science)g(T)-92
b(ec)-31 b(hnical)371 b(Rep)31 b(ort)369 b(CS-03-02)1531
71694 y Fi(y)1993 72096 y Fh(Corresp)31 b(onding)369
b(author.)494 b(E-mail:)h(teresco)61 b(j@cs.williams.edu,)373
b(T)-92 b(el:)494 b(\(413\)597-4251,)375 b(F)-92 b(ax:)492
b(\(413\)597-4250)25675 75417 y Fk(1)p eop
%%Page: 2 2
2 1 bop 1951 1424 a Fk(P)-36 b(arallelism)476 b(greatly)g(complicates)g
(an)e(adaptiv)-36 b(e)475 b(computation.)702 b(Domain)475
b(decomp)36 b(osition,)486 b(data)0 3029 y(managemen)-36
b(t,)640 b(and)597 b(in)-36 b(terpro)36 b(cessor)598
b(comm)-36 b(unication)599 b(m)-36 b(ust)597 b(b)36 b(e)598
b(dynamic)h(since)f(adaptiv)-36 b(e)599 b Fj(h)p Fk(-)e(and)0
4634 y Fj(p)p Fk(-re\257nemen)-36 b(t)528 b(in)-36 b(tro)36
b(duce)530 b(computational)h(im)-36 b(balance.)871 b(The)531
b(dynamic)g(data)f(structures)g(used)g(with)0 6239 y(adaptiv)-36
b(e)422 b(soft)-36 b(w)g(are)422 b(sev)-36 b(erely)423
b(limit)f(automatic)g(parallel)g(optimization.)575 b(A)422
b(dynamic)g(load)g(balancing)0 7844 y(pro)36 b(cedure)326
b(is)i(needed)e(to)h(compute)f(a)i(new)f(decomp)36 b(osition)328
b(follo)-36 b(wing)329 b(an)e(adaptiv)-36 b(e)327 b(step.)543
b(The)327 b(qualit)-36 b(y)0 9450 y(of)453 b(the)f(decomp)36
b(osition)453 b(a\256ects)g(the)f(e\261ciency)h(of)h(the)e(solution,)
458 b(and)452 b(di\256eren)-36 b(t)451 b(algorithms)j(pro)36
b(duce)0 11055 y(decomp)g(ositions)434 b(with)g(di\256eren)-36
b(t)432 b(prop)36 b(erties)433 b(and)g(costs)h([9)q(].)1951
12660 y(A)f(large)h(n)-36 b(um)g(b)36 b(er)432 b(of)i(dynamic)f
(load-balancing)h(algorithms)g(ha)-36 b(v)g(e)433 b(b)36
b(een)433 b(dev)-36 b(elop)36 b(ed.)578 b(The)433 b Fg(Zoltan)0
14265 y Fk(library)441 b([14)q(,)g(16,)g(17)q(])f(pro)-36
b(vides)441 b(implemen)-36 b(tations)440 b(of)h(or)g(in)-36
b(terfaces)440 b(to)h(sev)-36 b(eral)441 b(state-of-the-art)e(load)0
15870 y(balancers,)351 b(including)329 b(co)36 b(ordinate)330
b(bisection)f(metho)36 b(ds)329 b([6)q(,)h(19,)g(38)q(],)351
b(o)36 b(ctree/space)330 b(\257lling)g(curv)-36 b(e)329
b(meth-)0 17475 y(o)36 b(ds)457 b([4)q(,)h(15,)g(23)q(,)f(24)q(,)h(29,)
g(30)q(,)f(32)q(,)h(35],)464 b(re\257nemen)-36 b(t)456
b(tree)h(metho)36 b(ds)457 b([31)q(],)464 b(and)456 b(m)-36
b(ultilev)g(el)459 b(graph)e(parti-)0 19080 y(tioning)397
b([26)q(,)g(27)q(,)g(39)q(,)g(43)q(].)566 b(Zoltan)397
b(allo)-36 b(ws)399 b(an)d(application)i(to)f(c)-36 b(ho)36
b(ose)397 b(from)g(among)h(these)e(algorithms)0 20685
y(through)489 b(a)i(consisten)-36 b(t)490 b(in)-36 b(terface)491
b(and)f(the)g(sp)36 b(eci\257cation)491 b(of)g(a)f(n)-36
b(um)g(b)36 b(er)489 b(of)j(callbac)-36 b(k)491 b(functions)f(that)0
22290 y(pro)-36 b(vide)628 b(necessary)g(application-sp)36
b(eci\257c)628 b(information)g(to)g(Zoltan.)1161 b(W)-108
b(e)627 b(tak)-36 b(e)629 b(adv)-72 b(an)-36 b(tage)628
b(of)g(this)0 23895 y(\260exibilit)-36 b(y)435 b(to)e(compare)h
(balancing)g(algorithms.)1951 25500 y(W)-108 b(e)341
b(b)36 b(egin)340 b(b)-36 b(y)341 b(describing)g(the)f(soft)-36
b(w)g(are,)360 b(load)342 b(balancing)f(algorithms,)360
b(meshes,)f(partition)341 b(qualit)-36 b(y)0 27106 y(metrics,)387
b(and)376 b(the)f(computer)g(system)g(used)g(in)h(our)f(studies)g(\()p
Ff(x)p Fk(2\).)560 b(W)-108 b(e)375 b(next)h(presen)-36
b(t)374 b(a)i(comparison)g(of)0 28711 y(the)436 b(Zoltan)g(load)g
(balancers,)i(used)d(b)36 b(oth)436 b(as)g(initial)h(partitioning)f
(pro)36 b(cedures)435 b(\()p Ff(x)p Fk(3\))i(and)e(as)i(dynamic)0
30316 y(rebalancers)535 b(for)h(an)f(adaptiv)-36 b(e)535
b(computation)g(\()p Ff(x)p Fk(4\).)883 b(W)-108 b(e)535
b(consider)g(partition)g(qualit)-36 b(y)537 b(and)d(running)0
31921 y(times)558 b(for)h(the)f(partitioning)h(examples.)953
b(F)-108 b(or)558 b(the)g(adaptiv)-36 b(e)559 b(computations,)589
b(total)559 b(solution)g(times)0 33526 y(are)476 b(also)h(compared.)705
b(W)-108 b(e)476 b(con)-36 b(tin)g(ue)475 b(with)h(a)g(study)g(of)g(o)
36 b(ctan)-36 b(t)476 b(gran)-36 b(ularit)g(y)-108 b(,)487
b(the)475 b(maxim)-36 b(um)477 b(n)-36 b(um)g(b)36 b(er)0
35131 y(of)528 b(ob)72 b(jects)528 b(\()p Fg(e)p Fk(.)p
Fg(g)p Fk(.)f(mesh)g(elemen)-36 b(ts\))527 b(that)g(are)g(allo)-36
b(w)g(ed)529 b(in)e(a)h(terminal)f(o)36 b(ctan)-36 b(t,)551
b(in)527 b(the)g(o)36 b(ctree)528 b(parti-)0 36736 y(tioning)434
b(algorithm)h(\()p Ff(x)p Fk(5\).)579 b(Our)433 b(\257nal)h(study)f
(describ)36 b(es)434 b(a)g(mo)36 b(di\257cation)434 b(to)g(the)g
(recursiv)-36 b(e)434 b(co)36 b(ordinate)0 38341 y(bisection)403
b(\(R)-36 b(CB\))403 b(algorithm)g(that)f(\257xes)h(all)g(cuts)g(along)
g(one)g(co)36 b(ordinate)403 b(axis)h(\()p Ff(x)p Fk(6\).)568
b(This)403 b(leads)g(to)g(a)0 39946 y(\\slice")454 b(partitioning)f
(that)f(ma)-36 b(y)453 b(b)36 b(e)453 b(useful)f(to)h(minimize)g(the)f
(in)-36 b(terpro)36 b(cess)452 b(adjacency)-108 b(,)458
b(the)453 b(n)-36 b(um)g(b)36 b(er)0 41551 y(of)515 b(pro)36
b(cesses)514 b(with)g(whic)-36 b(h)514 b(eac)-36 b(h)514
b(pro)36 b(cess)514 b(m)-36 b(ust)513 b(comm)-36 b(unicate)514
b(during)f(a)h(solution)h(phase.)819 b(Finally)-108 b(,)0
43156 y(w)-36 b(e)434 b(discuss)f(the)g(results)g(and)g(future)g
(researc)-36 b(h)434 b(directions)f(\()p Ff(x)p Fk(7\).)0
47594 y Fl(2)2152 b(Bac)-60 b(kground)0 50514 y Fk(This)611
b(section)f(describ)36 b(es)610 b(the)g(soft)-36 b(w)g(are)611
b(to)36 b(ols,)656 b(meshes,)e(partition)610 b(qualit)-36
b(y)611 b(metrics,)655 b(and)610 b(parallel)0 52119 y(computer)433
b(system)h(used)e(in)i(the)f(studies)g(that)g(follo)-36
b(w.)0 55970 y Fe(2.1)1793 b(P)-50 b(arallel)598 b(Adaptiv)-50
b(e)600 b(Soft)-50 b(w)g(are)0 58433 y Fk(W)-108 b(e)550
b(apply)g(the)f(Zoltan)h(load)g(balancers)g(to)g(sev)-36
b(eral)551 b(soft)-36 b(w)g(are)550 b(pac)-36 b(k)-72
b(ages)551 b(dev)-36 b(elop)36 b(ed)550 b(at)f(Rensselaer)0
60039 y(P)-36 b(olytec)g(hnic)454 b(Institute.)639 b(The)454
b Fg(R)-66 b(ensselaer)482 b(Partition)h(Mo)-66 b(del)453
b Fk(\(RPM\))h([41)q(,)g(42])h(pro)-36 b(vides)453 b(distributed)0
61644 y(mesh)304 b(data)g(structures)f(and)h(information)h(ab)36
b(out)304 b(the)g(parallel)i(computational)e(en)-36 b(vironmen)g(t)304
b(in)g(whic)-36 b(h)0 63249 y(a)440 b(program)g(is)g(executing.)597
b(The)440 b(basic)g(mesh)f(data)h(structures)e(in)i(RPM)f(are)h(pro)-36
b(vided)440 b(b)-36 b(y)439 b(the)g Fg(SCO-)0 64854 y(REC)361
b(Mesh)g(Datab)-66 b(ase)320 b Fk(\(MDB\))h([5)q(];)359
b(ho)-36 b(w)g(ev)g(er,)343 b(man)-36 b(y)321 b(of)h(the)e(ideas)h(ma)
-36 b(y)321 b(b)36 b(e)321 b(applied)f(to)h(other)f(systems.)0
66459 y(MDB)361 b(includes)g(op)36 b(erators)361 b(to)g(query)h(and)e
(up)36 b(date)360 b(a)i(mesh)e(data)i(structure)d(consisting)j(of)f(a)h
(full)f(mesh)0 68064 y(en)-36 b(tit)g(y)531 b(hierarc)-36
b(h)g(y:)773 b(three-dimensional)530 b Fg(r)-66 b(e)g(gions)p
Fk(,)554 b(and)531 b(their)f(b)36 b(ounding)530 b Fg(fac)-66
b(es)p Fk(,)555 b Fg(e)-66 b(dges)p Fk(,)555 b(and)531
b Fg(vertic)-66 b(es)p Fk(,)0 69669 y(with)484 b(bidirectional)g(links)
g(b)36 b(et)-36 b(w)g(een)483 b(mesh)g(en)-36 b(tities)483
b(of)i(consecutiv)-36 b(e)483 b(order.)728 b(Regions)485
b(serv)-36 b(e)484 b(as)g(\257nite)0 71274 y(elemen)-36
b(ts)463 b(in)g(three)g(dimensions)f(while)i(faces)g(are)g(\257nite)e
(elemen)-36 b(ts)463 b(in)g(t)-36 b(w)g(o)464 b(dimensions,)470
b(or)464 b(in)-36 b(terface)25675 75417 y(2)p eop
%%Page: 3 3
3 2 bop 0 1424 a Fk(elemen)-36 b(ts)531 b(in)h(three)f(dimensions.)872
b(The)531 b(full)i(en)-36 b(tit)g(y)531 b(hierarc)-36
b(h)g(y)531 b(allo)-36 b(ws)533 b(e\261cien)-36 b(t)532
b(mesh)f(mo)36 b(di\257cation)0 3029 y(during)443 b Fj(h)p
Fk(-re\257nemen)-36 b(t)441 b([37)q(])j(and)f(facilitates)j
Fj(p)p Fk(-re\257nemen)-36 b(t)441 b([36)q(])j(b)-36
b(y)444 b(allo)-36 b(wing)445 b(attac)-36 b(hmen)g(t)443
b(of)h(degrees)0 4634 y(of)434 b(freedom)g(to)g(the)f(mesh)g(en)-36
b(tities)433 b(and)g(b)-36 b(y)434 b(pro)-36 b(viding)434
b(necessary)g(geometric)g(information.)1951 6239 y(P)-36
b(artitioning)587 b(studies)g(are)g(done)g(using)g(PMDBto)36
b(ol)588 b([41)q(],)626 b(a)587 b(program)h(that)e(reads)h(a)h(script)e
(of)0 7844 y(commands,)429 b(eac)-36 b(h)427 b(of)i(whic)-36
b(h)427 b(results)g(in)h(a)g(call)g(to)g(an)g(appropriate)f(library)h
(function.)576 b(The)428 b(input)e(\257le)0 9450 y(is)436
b(pro)36 b(cessed)436 b(using)g(the)f(standard)g(Unix)h(to)36
b(ols)437 b(for)g(compiler)f(and)f(in)-36 b(terpreter)435
b(implemen)-36 b(tation,)436 b Fg(lex)0 11055 y Fk(and)525
b Fg(yac)-66 b(c)524 b Fk([28)q(].)854 b(Lex)526 b(con)-36
b(v)g(erts)525 b(the)g(input)f(script)h(in)-36 b(to)525
b(tok)-36 b(ens,)549 b(whic)-36 b(h)525 b(are)g(parsed)g(b)-36
b(y)525 b(y)-36 b(acc.)855 b(Y)-108 b(acc)0 12660 y(calls)339
b(PMDBto)36 b(ol)339 b(C)g(functions)f(with)g(appropriate)g(argumen)-36
b(ts.)545 b(Eac)-36 b(h)338 b(PMDBto)36 b(ol)340 b(function,)357
b(in)338 b(turn,)0 14265 y(calls)435 b(the)e(necessary)h(functions)f
(in)g(RPM,)h(Zoltan,)g(or)g(other)f(libraries.)1951 15870
y(Our)374 b(adaptiv)-36 b(e)376 b(computation)f(studies)g(use)g
Fg(LOCO)h Fk([24)q(,)g(29)q(],)387 b(whic)-36 b(h)375
b(implemen)-36 b(ts)375 b(a)h(parallel)h(adap-)0 17475
y(tiv)-36 b(e)382 b(discon)-36 b(tin)g(uous)381 b(Galerkin)h([8)q(,)g
(12)q(,)g(13])h(solution)f(of)g(the)g(compressible)f(Euler)h
(equations.)562 b(W)-108 b(e)381 b(con-)0 19080 y(sider)544
b(the)f(\\p)36 b(erforated)544 b(sho)36 b(c)-36 b(k)544
b(tub)36 b(e")543 b(problem,)572 b(whic)-36 b(h)543 b(mo)36
b(dels)544 b(the)f(three-dimensional)h(unsteady)0 20685
y(compressible)560 b(\260o)-36 b(w)560 b(in)g(a)g(cylinder)g(con)-36
b(taining)560 b(a)h(cylindrical)g(v)-36 b(en)g(t)559
b([22)q(].)958 b(This)560 b(problem)g(w)-36 b(as)560
b(mo-)0 22290 y(tiv)-72 b(ated)538 b(b)-36 b(y)538 b(\260o)-36
b(w)538 b(studies)g(in)g(p)36 b(erforated)538 b(m)-36
b(uzzle)538 b(brak)-36 b(es)538 b(for)g(large)h(calibre)g(guns)e([18)q
(].)892 b(Our)537 b(fo)36 b(cus)0 23895 y(is)546 b(on)f(the)g
(quasisteady)i(\260o)-36 b(w)545 b(that)h(exists)g(b)36
b(ehind)544 b(the)h(con)-36 b(tact)546 b(surface)f(for)h(a)g(short)f
(time.)915 b(Using)0 25500 y(symmetry)-108 b(,)531 b(the)510
b(\260o)-36 b(w)512 b(ma)-36 b(y)511 b(b)36 b(e)511 b(solv)-36
b(ed)512 b(in)f(one)g(half)h(of)f(the)g(domain)g(b)36
b(ounded)510 b(b)-36 b(y)511 b(a)g(plane)g(through)0
27106 y(the)541 b(v)-36 b(en)g(t.)901 b(The)541 b(initial)h(mesh)f(con)
-36 b(tains)541 b(69,572)i(tetrahedral)e(elemen)-36 b(ts,)568
b(and)541 b(has)g(b)36 b(een)541 b(prere\257ned)0 28711
y(near)505 b(the)g(in)-36 b(terface)506 b(b)36 b(et)-36
b(w)g(een)505 b(the)g(sho)36 b(c)-36 b(k)506 b(tub)36
b(e)505 b(and)g(v)-36 b(en)g(t.)794 b(The)505 b(larger)h(cylinder)g
(\(the)f(sho)36 b(c)-36 b(k)506 b(tub)36 b(e\))0 30316
y(initially)462 b(con)-36 b(tains)461 b(air)g(mo)-36
b(ving)461 b(at)g(Mac)-36 b(h)460 b(1.23)i(while)f(the)f(smaller)h
(cylinder)g(\(the)f(v)-36 b(en)g(t\))460 b(is)g(quiet.)660
b(A)0 31921 y(Mac)-36 b(h)498 b(1.23)i(\260o)-36 b(w)498
b(is)h(prescrib)36 b(ed)497 b(at)i(the)f(tub)36 b(e's)497
b(inlet)i(and)f(outlet.)772 b(The)499 b(w)-36 b(alls)499
b(of)g(the)f(cylinders)h(are)0 33526 y(giv)-36 b(en)390
b(re\260ected)e(b)36 b(oundary)389 b(conditions,)398
b(and)389 b(a)h(far)g(\257eld)e(condition)i(is)f(applied)g(at)h(the)f
(v)-36 b(en)g(t)389 b(exit)g([23)q(].)0 35131 y(Flo)-36
b(w)455 b(b)36 b(egins)454 b(as)h(if)g(a)g(diaphragm)f(b)36
b(et)-36 b(w)g(een)453 b(the)h(t)-36 b(w)g(o)455 b(cylinders)f(w)-36
b(ere)455 b(ruptured.)638 b(After)455 b(19)g(adaptiv)-36
b(e)0 36736 y(steps,)433 b(the)g(mesh)h(con)-36 b(tains)433
b(451,692)j(elemen)-36 b(ts.)0 40587 y Fe(2.2)1793 b(Meshes)0
43050 y Fk(The)379 b(follo)-36 b(wing)381 b(tetrahedral)e(meshes)f(w)
-36 b(ere)380 b(selected)f(for)g(our)g(studies)g(to)g(represen)-36
b(t)377 b(a)j(v)-72 b(ariet)-36 b(y)380 b(of)f(mesh)0
44656 y(sizes)434 b(and)f(geometric)h(complexit)-36 b(y)-108
b(.)1937 47700 y Ff(\262)651 b Fd(Cone)p Fk(:)c(This)468
b(is)g(a)g(42,786-elemen)-36 b(t)469 b(mesh,)477 b(used)467
b(to)h(mo)36 b(del)468 b(a)g(sho)36 b(c)-36 b(k)468 b(w)-36
b(a)g(v)g(e)469 b(in)f(a)g(compressible)3252 49305 y(\260o)-36
b(w)433 b(impacting)h(the)f(side)h(of)g(the)f(cone.)579
b(Only)433 b(half)h(of)h(the)e(cone)g(is)h(mo)36 b(deled)434
b([21)q(].)1937 52017 y Ff(\262)651 b Fd(Muzzle)p Fk(:)593
b(This)442 b(is)f(a)h(69,572-elemen)-36 b(t)442 b(mesh)f(used)f(in)h
(the)g(p)36 b(erforated)441 b(sho)36 b(c)-36 b(k)441
b(tub)36 b(e)441 b(sim)-36 b(ulation)3252 53622 y(describ)36
b(ed)566 b(ab)36 b(o)-36 b(v)g(e.)980 b(This)567 b(mesh)g(is)h(a)f
(quarter)g(cylinder)g(with)h(half)f(of)h(a)g(cylindrical)g(v)-36
b(en)g(ting)3252 55227 y(hole)434 b([22].)1937 57939
y Ff(\262)651 b Fd(Tw)-42 b(o)499 b(Pip)42 b(es)p Fk(:)578
b(This)434 b(is)g(a)g(3240-elemen)-36 b(t)434 b(mesh)f(that)g(represen)
-36 b(ts)433 b(the)g(junction)g(of)h(t)-36 b(w)g(o)434
b(pip)36 b(es.)1937 60651 y Ff(\262)651 b Fd(Quartercone)p
Fk(:)566 b(This)406 b(is)g(a)g(32,866-elemen)-36 b(t)407
b(mesh,)k(used)404 b(to)i(mo)36 b(del)406 b(the)f(steady)h(\260o)-36
b(w)406 b(at)f(Mac)-36 b(h)3252 62256 y(5)434 b(past)f(a)h(cone)f(ha)
-36 b(ving)434 b(a)g(half-angle)h(of)f(10)g(degrees)g([20)q(].)0
66107 y Fe(2.3)1793 b(Load)598 b(Balancing)f(Pro)50 b(cedures)0
68570 y Fk(Our)504 b(studies)h(consider)f(four)i(geometric)f
(algorithms,)524 b(where)505 b(the)g(partitioning)g(is)g(determined)f
(only)0 70176 y(b)-36 b(y)461 b(ob)72 b(ject)461 b(co)36
b(ordinates.)660 b Fg(R)-66 b(e)g(cursive)488 b(Co)-66
b(or)g(dinate)488 b(Bise)-66 b(ction)459 b Fk(\(R)-36
b(CB\))460 b([6)q(])h(pro)36 b(ceeds)460 b(b)-36 b(y)461
b(bisecting)g(the)25675 75417 y(3)p eop
%%Page: 4 4
4 3 bop 0 1424 a Fk(domain)365 b(along)h(the)f(Cartesian)h(co)36
b(ordinate)366 b(of)g(its)f(longest)h(dimension.)555
b(Elemen)-36 b(ts)365 b(are)g(sorted)g(accord-)0 3029
y(ing)526 b(to)f(the)g(bisecting)h(co)36 b(ordinate,)549
b(and)525 b(half)h(of)h(the)e(elemen)-36 b(ts)525 b(are)g(assigned)h
(to)g(eac)-36 b(h)525 b(sub)36 b(domain.)0 4634 y Fg(R)-66
b(e)g(cursive)416 b(Inertial)g(Bise)-66 b(ction)380 b
Fk(\(RIB\))i([19)q(,)h(38,)g(40])g(pro)36 b(ceeds)382
b(similarly)-108 b(,)394 b(but)381 b(in)h(a)g(direction)g(orthogo-)0
6239 y(nal)365 b(to)g(the)f(sub)36 b(domain's)365 b(principal)g(axis)h
(of)f(inertia)g(at)g(eac)-36 b(h)365 b(step)f(rather)g(than)h(along)g
(the)g(co)36 b(ordinate)0 7844 y(axes.)671 b Fg(Octr)-66
b(e)g(e)492 b(Partitioning)462 b Fk(\(OCTP)-108 b(AR)g(T\))464
b([10)q(,)g(15)q(,)g(23)q(,)h(30,)g(32])g(uses)f(an)g(o)36
b(ctree)465 b(decomp)36 b(osition)464 b(of)0 9450 y(the)k
(computational)g(domain)g(in)g(whic)-36 b(h)468 b(the)g(ro)36
b(ot)468 b(of)h(the)f(tree,)476 b(represen)-36 b(ting)467
b(the)h(en)-36 b(tire)468 b(domain,)477 b(is)0 11055
y(recursiv)-36 b(ely)357 b(divided)g(in)-36 b(to)356
b(eigh)-36 b(t)357 b(\\c)-36 b(hild")356 b(o)36 b(ctan)-36
b(ts)357 b(un)-36 b(til)356 b(eac)-36 b(h)356 b(subregion)g(\(leaf)i(o)
36 b(ctan)-36 b(t\))356 b(holds)g(at)h(most)0 12660 y(an)414
b(application-sp)36 b(eci\257ed)415 b(n)-36 b(um)g(b)36
b(er)413 b(of)i(ob)72 b(jects.)573 b(T)-108 b(o)415 b(ac)-36
b(hiev)g(e)415 b(a)g(partitioning,)j(a)d(Hilb)36 b(ert)415
b(space-\257lling)0 14265 y(curv)-36 b(e)439 b([7)q(,)g(33)q(,)g(34)q
(])h(tree)f(tra)-36 b(v)g(ersal)439 b(is)h(used)e(to)i(de\257ne)e(a)h
(global)i(ordering)e(on)g(leaf)h(o)36 b(ctan)-36 b(ts.)596
b(Eac)-36 b(h)439 b(par-)0 15870 y(tition)473 b(is)g(assigned)f(a)h
(con)-36 b(tiguous)473 b(segmen)-36 b(t)472 b(of)h(this)f(global)i
(ordering.)695 b Fg(Hilb)-66 b(ert)499 b(Sp)-66 b(ac)g(e-Fil)66
b(ling)498 b(Curve)0 17475 y Fk(\(HSF)-36 b(C\))447 b(partitioning)g
([16)q(])g(pro)36 b(ceeds)447 b(in)g(a)h(manner)e(similar)j(to)e(OCTP)
-108 b(AR)g(T,)448 b(except)f(that)g(the)f(SF)-36 b(C)0
19080 y(is)434 b(constructed)e(directly)i(on)g(the)f(ob)72
b(jects)434 b(to)g(b)36 b(e)433 b(partitioned)g(rather)g(than)g(on)g(a)
h(tree)g(structure.)1951 20685 y(W)-108 b(e)571 b(also)g(consider)g(t)
-36 b(w)g(o)571 b(graph)f(partitioning)h(algorithms,)606
b(where)570 b(the)g(graph)h(v)-36 b(ertices)571 b(are)g(the)0
22290 y(ob)72 b(jects)409 b(to)g(b)36 b(e)408 b(partitioned)g(and)g
(the)g(graph)g(edges)g(are)h(the)f(connections)g(b)36
b(et)-36 b(w)g(een)408 b(them)g(\()p Fg(e)p Fk(.)p Fg(g)p
Fk(.)g(a)h(face)0 23895 y(shared)466 b(b)-36 b(y)466
b(t)-36 b(w)g(o)467 b(mesh)f(regions\).)677 b Fg(Jostle)466
b Fk([39)q(,)h(43])g(and)f Fg(Parmetis)g Fk([26)q(,)g(27)q(])g(eac)-36
b(h)467 b(utilize)g(a)f(m)-36 b(ultilev)g(el)0 25500
y(approac)g(h.)564 b(These)390 b(are)h(libraries)g(separate)f(from)h
(Zoltan.)564 b(Zoltan)391 b(pro)-36 b(vides)390 b(an)h(in)-36
b(terface)390 b(that)g(allo)-36 b(ws)0 27106 y(Zoltan)460
b(load)h(balancing)f(calls)h(and)f(callbac)-36 b(ks)461
b(to)g(b)36 b(e)459 b(used)h(to)g(construct)f(the)h(input)f(arra)-36
b(ys)460 b(required)0 28711 y(b)-36 b(y)433 b(these)h(pac)-36
b(k)-72 b(ages.)0 32562 y Fe(2.4)1793 b(P)-50 b(artition)599
b(Qualit)-50 b(y)599 b(Metrics)0 35025 y Fk(The)558 b(qualit)-36
b(y)559 b(of)g(the)f(partitions)g(used)f(to)i(distribute)e(a)h
(computation)g(has)g(a)g(signi\257can)-36 b(t)558 b(e\256ect)g(on)0
36630 y(solution)383 b(time)f(for)h(man)-36 b(y)382 b(applications)h
([9].)562 b(While)383 b(man)-36 b(y)382 b(factors)h(ma)-36
b(y)383 b(b)36 b(e)382 b(imp)36 b(ortan)-36 b(t)382 b(when)g(consid-)0
38235 y(ering)442 b(the)f(\\qualit)-36 b(y")444 b(of)f(a)f
(partitioning)g([25)q(],)j(the)c(most)h(common)g(are)g(computational)g
(balance)g(and)0 39840 y(partition)385 b(b)36 b(oundary)385
b(size.)563 b(W)-108 b(e)385 b(will)i(quan)-36 b(tify)386
b(partition)f(qualit)-36 b(y)386 b(using)f(t)-36 b(w)g(o)386
b(metrics:)554 b(\()p Fj(i)p Fk(\))385 b(surface)h(in-)0
41445 y(dex,)409 b(and)401 b(\()p Fj(ii)p Fk(\))h(in)-36
b(terpro)36 b(cess)401 b(adjacency)-108 b(.)569 b(Our)401
b(examples)i(assign)f(exactly)i(one)e(partition)g(p)36
b(er)402 b(pro)36 b(cess,)0 43050 y(so)434 b(the)f(terms)g(\\pro)36
b(cess")434 b(and)g(\\partition")g(are)f(used)g(in)-36
b(terc)g(hangeably)-108 b(.)0 46514 y Fd(2.4.1)1495 b(Surface)499
b(Indices)0 48977 y Fk(Surface)620 b(indices)g(measure)g(in)-36
b(terpro)36 b(cess)620 b(comm)-36 b(unication)620 b(v)-36
b(olume.)1139 b(In)620 b(our)g(examples,)668 b(they)620
b(are)0 50582 y(analogous)389 b(to)f(surface)g(to)f(v)-36
b(olume)389 b(ratios,)397 b(with)388 b(the)f(n)-36 b(um)g(b)36
b(er)386 b(of)j(elemen)-36 b(t)387 b(faces)i(on)e(partition)h(b)36
b(ound-)0 52187 y(aries)399 b(b)36 b(eing)399 b(view)-36
b(ed)399 b(as)g(\\surface)g(area")h(relativ)-36 b(e)399
b(to)g(the)f(\\v)-36 b(olume")400 b(of)f(elemen)-36 b(t)398
b(faces)i(in)e(a)h(partition.)0 53793 y(A)514 b(large)g(ratio)h(of)f
(faces)h(on)f(partition)f(b)36 b(oundaries)513 b(to)h(total)h(faces)f
(indicates)g(a)g(large)h(in)-36 b(ter-pro)36 b(cess)0
55398 y(comm)-36 b(unication)434 b(v)-36 b(olume.)1951
57003 y(Th)g(us,)681 b(for)632 b Fj(N)139 b(P)811 b Fk(partitions)632
b Fj(P)886 b Fk(=)706 b Fj(P)21281 57202 y Fc(1)21807
57003 y Fj(;)221 b(P)23227 57202 y Fc(2)23754 57003 y
Fj(;)g(:::;)g(P)26839 57202 y Fb(N)94 b(P)28465 57003
y Fk(,)681 b(let)632 b Fj(b)32137 57202 y Fb(i)33144
57003 y Fk(denote)f(the)g(n)-36 b(um)g(b)36 b(er)629
b(of)k(partition-)0 58608 y(b)36 b(oundary)487 b(faces)h(and)f
Fj(f)12335 58807 y Fb(i)13198 58608 y Fk(denote)f(the)h(total)h(n)-36
b(um)g(b)36 b(er)486 b(of)i(faces)g(of)g Fj(P)34796 58807
y Fb(i)35172 58608 y Fk(.)739 b(The)488 b Fg(maximum)513
b(lo)-66 b(c)g(al)513 b(surfac)-66 b(e)0 60213 y(index)p
Fk(,)21174 62403 y Fj(r)21760 62602 y Fb(M)23182 62403
y Fk(=)1358 b(max)24563 63193 y Fb(i)p Fc(=1)p Fb(;:::;N)94
b(P)29359 61504 y Fj(b)29912 61703 y Fb(i)p 29315 62093
1017 45 v 29315 63314 a Fj(f)29956 63513 y Fb(i)30465
62403 y Fj(;)19512 b Fk(\(1\))0 65325 y(measures)608
b(the)g(maxim)-36 b(um)609 b(comm)-36 b(unication)608
b(v)-36 b(olume)609 b(on)f(an)-36 b(y)609 b(pro)36 b(cess.)1102
b(Let)608 b Fj(b)41542 65524 y Fb(t)42546 65325 y Fk(denote)g(the)f
(total)0 66930 y(n)-36 b(um)g(b)36 b(er)409 b(of)i(b)36
b(oundary)410 b(faces)h(in)g(all)g(partitions)g(and)f
Fj(f)27460 67129 y Fb(t)28265 66930 y Fk(the)g(total)h(n)-36
b(um)g(b)36 b(er)409 b(of)j(faces)f(in)f(all)i(partitions.)0
68535 y(The)434 b Fg(glob)-66 b(al)464 b(surfac)-66 b(e)465
b(index)p Fk(,)23606 70725 y Fj(r)24192 70924 y Fb(G)25350
70725 y Fk(=)26907 69827 y Fj(b)27460 70026 y Fb(t)p
26863 70415 1037 45 v 26863 71637 a Fj(f)27504 71836
y Fb(t)28032 70725 y Fj(;)21945 b Fk(\(2\))25675 75417
y(4)p eop
%%Page: 5 5
5 4 bop 0 1424 a Fk(measures)455 b(the)f(total)i(comm)-36
b(unication)454 b(v)-36 b(olume.)643 b(This)455 b(can)g(b)36
b(e)455 b(the)f(most)h(imp)36 b(ortan)-36 b(t)455 b(measure)f(when)0
3029 y(the)433 b(comm)-36 b(unication)434 b(net)-36 b(w)g(ork)433
b(is)h(shared)f(among)h(all)h(compute)e(no)36 b(des.)0
6437 y Fd(2.4.2)1495 b(In)-42 b(terpro)42 b(cess)500
b(Adjacency)0 8900 y Fk(In)-36 b(terpro)36 b(cess)537
b(adjacency)h(is)g(the)f(p)36 b(ercen)-36 b(tage)537
b(of)h(other)f(pro)36 b(cesses)537 b(with)h(whic)-36
b(h)537 b(eac)-36 b(h)537 b(pro)36 b(cess)538 b(m)-36
b(ust)0 10505 y(comm)g(unicate.)709 b(This)477 b(correlates)h(to)f(the)
g(n)-36 b(um)g(b)36 b(er)475 b(of)j(message)g(startups)e(needed)g
(during)g(a)i(solution)0 12110 y(pro)36 b(cedure.)544
b(Th)-36 b(us,)352 b(for)333 b Fj(N)139 b(P)513 b Fk(pro)36
b(cesses)333 b Fj(P)550 b Fk(=)368 b Fj(P)23626 12309
y Fc(1)24153 12110 y Fj(;)221 b(P)25573 12309 y Fc(2)26100
12110 y Fj(;)g(:::;)g(P)29185 12309 y Fb(N)94 b(P)30811
12110 y Fk(,)353 b(let)333 b Fj(c)33863 12309 y Fb(i)34571
12110 y Fk(denote)f(the)g(n)-36 b(um)g(b)36 b(er)331
b(of)i(pro)36 b(cesses)0 13715 y(with)434 b(whic)-36
b(h)433 b(pro)36 b(cess)434 b Fj(i)f Fk(m)-36 b(ust)433
b(comm)-36 b(unicate.)578 b(The)433 b Fg(maximum)464
b(interpr)-66 b(o)g(c)g(ess)463 b(adjac)-66 b(ency)432
b Fk(is)18863 16500 y Fj(ad)-145 b(j)20615 16699 y Fb(M)22037
16500 y Fk(=)1357 b(max)23418 17290 y Fb(i)p Fc(=1)p
Fb(;:::;N)94 b(P)29939 15602 y Fj(c)30499 15801 y Fb(i)p
28170 16190 4474 45 v 28170 17412 a Fj(N)139 b(P)475
b Ff(\241)296 b Fk(1)32776 16500 y Fj(;)17201 b Fk(\(3\))0
19552 y(and)433 b(the)g Fg(aver)-66 b(age)464 b(interpr)-66
b(o)g(c)g(ess)463 b(adjac)-66 b(ency)432 b Fk(is)19066
23022 y Fj(ad)-145 b(j)20818 23221 y Fb(A)21947 23022
y Fk(=)24235 22123 y(1)p 23460 22712 2200 45 v 23460
23933 a Fj(N)139 b(P)26029 21583 y Fb(N)94 b(P)26014
21915 y Fa(X)26052 24345 y Fb(i)p Fc(=1)29736 22123 y
Fj(c)30296 22322 y Fb(i)p 27967 22712 4474 45 v 27967
23933 a Fj(N)139 b(P)476 b Ff(\241)295 b Fk(1)32573 23022
y Fj(:)17404 b Fk(\(4\))0 26435 y(These)450 b(measures)g(are)h(esp)36
b(ecially)452 b(imp)36 b(ortan)-36 b(t)449 b(for)i(an)f(in)-36
b(terconnection)450 b(net)-36 b(w)g(ork)450 b(with)g(high)g(message)0
28040 y(latency)-108 b(.)862 b(Exc)-36 b(hanging)528
b(information)h(with)f(a)g(n)-36 b(um)g(b)36 b(er)527
b(of)h(neigh)-36 b(b)36 b(oring)528 b(pro)36 b(cesses)528
b(often)h(requires)f(a)0 29645 y(serialization)351 b(of)g(message)g
(setup,)366 b(making)351 b Fj(ad)-145 b(j)23491 29844
y Fb(M)24894 29645 y Fk(an)350 b(imp)36 b(ortan)-36 b(t)349
b(measure)h(of)g(scalabilit)-36 b(y)-108 b(.)552 b(These)350
b(mea-)0 31250 y(sures)408 b(can)h(also)g(b)36 b(e)408
b(signi\257can)-36 b(t)409 b(when)f(net)-36 b(w)g(ork)408
b(top)36 b(ology)411 b(allo)-36 b(ws)410 b(nearest-neigh)-36
b(b)36 b(or)407 b(comm)-36 b(unication)0 32855 y(to)434
b(b)36 b(e)433 b(signi\257can)-36 b(tly)434 b(faster)g(than)f(more)h
(general)g(comm)-36 b(unication.)0 36650 y Fe(2.5)1793
b(Computing)599 b(En)-50 b(vironmen)g(t)0 39113 y Fk(Our)361
b(studies)h(w)-36 b(ere)362 b(p)36 b(erformed)362 b(using)g(a)g
(cluster)g(of)h(Sun)e(Microsystems)i(serv)-36 b(ers)362
b(at)g(Williams)i(College.)0 40718 y(The)510 b(compute)g(no)36
b(des)510 b(consist)g(of)h(t)-36 b(w)g(o)510 b(En)-36
b(terprise)510 b(420R)h(serv)-36 b(ers,)530 b(eac)-36
b(h)510 b(with)g(four)g(450MHz)i(Sparc)0 42323 y(UltraI)36
b(I)310 b(pro)36 b(cessors)310 b(and)e(4)i(GB)f(memory)-108
b(,)334 b(and)309 b(six)h(En)-36 b(terprise)308 b(220R)i(serv)-36
b(ers,)335 b(eac)-36 b(h)309 b(with)h(t)-36 b(w)g(o)309
b(450MHz)0 43928 y(Sparc)461 b(UltraI)36 b(I)462 b(pro)36
b(cessors,)469 b(and)461 b(512)i(MB)e(or)h(1)f(GB)g(memory)-108
b(.)663 b(All)462 b(no)36 b(des)461 b(are)h(connected)e(b)-36
b(y)462 b(a)f(fast)0 45534 y(\(100)528 b(Mbit\))f(Ethernet.)859
b(F)-108 b(our)526 b(of)i(the)f(no)36 b(des)527 b(ha)-36
b(v)g(e)528 b(a)g(gigab)-36 b(yte)528 b(in)-36 b(terconnect)526
b(from)i(Dolphin,)552 b(Inc.,)0 47139 y(but)433 b(only)h(the)f(fast)h
(Ethernet)e(is)i(used)f(for)h(our)f(studies.)1951 48744
y(Most)469 b(studies)g(w)-36 b(ere)470 b(run)e(for)i(ev)-36
b(en)470 b(n)-36 b(um)g(b)36 b(ers)468 b(of)i(pro)36
b(cesses)470 b(ranging)f(from)h(t)-36 b(w)g(o)470 b(to)g(t)-36
b(w)g(en)g(t)g(y)-108 b(.)685 b(Mul-)0 50349 y(tiple)543
b(com)-36 b(binations)543 b(w)-36 b(ere)543 b(used)f(for)i(the)e(t)-36
b(w)g(o)543 b(to)g(eigh)-36 b(t)543 b(pro)36 b(cessor)543
b(runs.)905 b(F)-108 b(or)543 b(t)-36 b(w)g(o)543 b(pro)36
b(cesses,)571 b(t)-36 b(w)g(o)0 51954 y(no)36 b(des)501
b(with)g(one)g(pro)36 b(cessor)502 b(p)36 b(er)500 b(no)36
b(de)501 b(\(2,1\))h(and)f(one)g(no)36 b(de)501 b(with)g(t)-36
b(w)g(o)501 b(pro)36 b(cessors)502 b(p)36 b(er)501 b(no)36
b(de)500 b(\(1,2\))0 53559 y(w)-36 b(ere)587 b(used.)1039
b(F)-108 b(or)587 b(four)g(pro)36 b(cesses,)626 b(one)587
b(no)36 b(de)587 b(with)h(four)f(pro)36 b(cessors)588
b(p)36 b(er)586 b(no)36 b(de)587 b(\(1,4\),)627 b(t)-36
b(w)g(o)587 b(no)36 b(des)0 55164 y(with)465 b(t)-36
b(w)g(o)464 b(pro)36 b(cessors)465 b(p)36 b(er)464 b(no)36
b(de)464 b(\(2,2\),)474 b(and)464 b(four)g(no)36 b(des)465
b(with)f(one)h(pro)36 b(cessor)464 b(p)36 b(er)464 b(no)36
b(de)465 b(\(4,1\))g(w)-36 b(ere)0 56769 y(used.)587
b(Similar)438 b(com)-36 b(binations)436 b(w)-36 b(ere)437
b(used)f(for)i(six)f(\(\(3,2\))g(and)g(\(6,1\)\))g(and)f(eigh)-36
b(t)437 b(\(\(2,4\),)h(\(4,2\),)h(\(8,1\)\))0 58374 y(pro)36
b(cesses.)579 b(This)433 b(results)h(in)f(sixteen)h(com)-36
b(binations.)0 62755 y Fl(3)2152 b(Initial)716 b(P)-60
b(artitioning)0 65675 y Fk(W)-108 b(e)423 b(\257rst)g(examine)h(the)f
(e\256ectiv)-36 b(eness)424 b(of)g(the)f(Zoltan)h(load)g(balancers)f
(as)h(initial)g(partitioners)g(for)g(the)0 67280 y(meshes)433
b(describ)36 b(ed)433 b(in)h Ff(x)p Fk(2.2.)579 b(Default)435
b(Zoltan)e(parameter)h(v)-72 b(alues)434 b(w)-36 b(ere)434
b(used.)1951 68886 y(F)-108 b(or)503 b(eac)-36 b(h)503
b(run,)520 b(the)502 b(total)i(run)e(time,)521 b(surface)504
b(index,)521 b(and)502 b(in)-36 b(terpro)36 b(cessor)503
b(adjacency)h(statistics)0 70491 y(w)-36 b(ere)614 b(gathered.)1117
b(Run)613 b(time)g(w)-36 b(as)614 b(not)f(included)g(for)h(the)e(HSF)
-36 b(C)613 b(partitioning,)659 b(as)614 b(an)f(optimized)0
72096 y(v)-36 b(ersion)434 b(w)-36 b(as)434 b(una)-36
b(v)-72 b(ailable,)435 b(making)f(an)-36 b(y)434 b(comparison)g
(unfair.)25675 75417 y(5)p eop
%%Page: 6 6
6 5 bop 888 140 50657 45 v 866 17422 45 17282 v 1553
16940 a @beginspecial 50 @llx 50 @lly 410 @urx 302 @ury
2160 @rwi @setspecial
%%BeginDocument: graphs/methods/times/muzzle_times.eps
%!PS-Adobe-2.0 EPSF-2.0
%%Title: muzzle-times.eps
%%Creator: gnuplot 3.7 patchlevel 1
%%CreationDate: Mon Jul 22 17:20:32 2002
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 410 302
%%Orientation: Portrait
%%EndComments
/gnudict 256 dict def
gnudict begin
/Color false def
/Solid false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
/vshift -60 def
/dl {10 mul} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow { currentpoint stroke M
  0 vshift R show } def
/Rshow { currentpoint stroke M
  dup stringwidth pop neg vshift R show } def
/Cshow { currentpoint stroke M
  dup stringwidth pop -2 div vshift R show } def
/UP { dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def } def
/DL { Color {setrgbcolor Solid {pop []} if 0 setdash }
 {pop pop pop Solid {pop []} if 0 setdash} ifelse } def
/BL { stroke userlinewidth 2 mul setlinewidth } def
/AL { stroke userlinewidth 2 div setlinewidth } def
/UL { dup gnulinewidth mul /userlinewidth exch def
      10 mul /udl exch def } def
/PL { stroke userlinewidth setlinewidth } def
/LTb { BL [] 0 0 0 DL } def
/LTa { AL [1 udl mul 2 udl mul] 0 setdash 0 0 0 setrgbcolor } def
/LT0 { PL [] 1 0 0 DL } def
/LT1 { PL [4 dl 2 dl] 0 1 0 DL } def
/LT2 { PL [2 dl 3 dl] 0 0 1 DL } def
/LT3 { PL [1 dl 1.5 dl] 1 0 1 DL } def
/LT4 { PL [5 dl 2 dl 1 dl 2 dl] 0 1 1 DL } def
/LT5 { PL [4 dl 3 dl 1 dl 3 dl] 1 1 0 DL } def
/LT6 { PL [2 dl 2 dl 2 dl 4 dl] 0 0 0 DL } def
/LT7 { PL [2 dl 2 dl 2 dl 2 dl 2 dl 4 dl] 1 0.3 0 DL } def
/LT8 { PL [2 dl 2 dl 2 dl 2 dl 2 dl 2 dl 2 dl 4 dl] 0.5 0.5 0.5 DL } def
/Pnt { stroke [] 0 setdash
   gsave 1 setlinecap M 0 0 V stroke grestore } def
/Dia { stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt } def
/Pls { stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
  } def
/Box { stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt } def
/Crs { stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke } def
/TriU { stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt  } def
/Star { 2 copy Pls Crs } def
/BoxF { stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V  hpt2 0 V  0 vpt2 V
  hpt2 neg 0 V  closepath fill } def
/TriUF { stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill } def
/TriD { stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt  } def
/TriDF { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF { stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill } def
/Pent { stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt } def
/PentF { stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore } def
/Circle { stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt } def
/CircleF { stroke [] 0 setdash hpt 0 360 arc fill } def
/C0 { BL [] 0 setdash 2 copy moveto vpt 90 450  arc } bind def
/C1 { BL [] 0 setdash 2 copy        moveto
       2 copy  vpt 0 90 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C2 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 90 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C3 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C4 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 180 270 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C5 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 90 arc
       2 copy moveto
       2 copy  vpt 180 270 arc closepath fill
               vpt 0 360 arc } bind def
/C6 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 90 270 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C7 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 0 270 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C8 { BL [] 0 setdash 2 copy moveto
      2 copy vpt 270 360 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C9 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 270 450 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C10 { BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
       2 copy moveto
       2 copy vpt 90 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C11 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 180 arc closepath fill
       2 copy moveto
       2 copy  vpt 270 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C12 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 180 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C13 { BL [] 0 setdash  2 copy moveto
       2 copy  vpt 0 90 arc closepath fill
       2 copy moveto
       2 copy  vpt 180 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C14 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 90 360 arc closepath fill
               vpt 0 360 arc } bind def
/C15 { BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/Rec   { newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
       neg 0 rlineto closepath } bind def
/Square { dup Rec } bind def
/Bsquare { vpt sub exch vpt sub exch vpt2 Square } bind def
/S0 { BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare } bind def
/S1 { BL [] 0 setdash 2 copy vpt Square fill Bsquare } bind def
/S2 { BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare } bind def
/S3 { BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare } bind def
/S4 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare } bind def
/S5 { BL [] 0 setdash 2 copy 2 copy vpt Square fill
       exch vpt sub exch vpt sub vpt Square fill Bsquare } bind def
/S6 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare } bind def
/S7 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
       2 copy vpt Square fill
       Bsquare } bind def
/S8 { BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare } bind def
/S9 { BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare } bind def
/S10 { BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
       Bsquare } bind def
/S11 { BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
       Bsquare } bind def
/S12 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare } bind def
/S13 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
       2 copy vpt Square fill Bsquare } bind def
/S14 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
       2 copy exch vpt sub exch vpt Square fill Bsquare } bind def
/S15 { BL [] 0 setdash 2 copy Bsquare fill Bsquare } bind def
/D0 { gsave translate 45 rotate 0 0 S0 stroke grestore } bind def
/D1 { gsave translate 45 rotate 0 0 S1 stroke grestore } bind def
/D2 { gsave translate 45 rotate 0 0 S2 stroke grestore } bind def
/D3 { gsave translate 45 rotate 0 0 S3 stroke grestore } bind def
/D4 { gsave translate 45 rotate 0 0 S4 stroke grestore } bind def
/D5 { gsave translate 45 rotate 0 0 S5 stroke grestore } bind def
/D6 { gsave translate 45 rotate 0 0 S6 stroke grestore } bind def
/D7 { gsave translate 45 rotate 0 0 S7 stroke grestore } bind def
/D8 { gsave translate 45 rotate 0 0 S8 stroke grestore } bind def
/D9 { gsave translate 45 rotate 0 0 S9 stroke grestore } bind def
/D10 { gsave translate 45 rotate 0 0 S10 stroke grestore } bind def
/D11 { gsave translate 45 rotate 0 0 S11 stroke grestore } bind def
/D12 { gsave translate 45 rotate 0 0 S12 stroke grestore } bind def
/D13 { gsave translate 45 rotate 0 0 S13 stroke grestore } bind def
/D14 { gsave translate 45 rotate 0 0 S14 stroke grestore } bind def
/D15 { gsave translate 45 rotate 0 0 S15 stroke grestore } bind def
/DiaE { stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke } def
/BoxE { stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke } def
/TriUE { stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke } def
/TriDE { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke } def
/PentE { stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore } def
/CircE { stroke [] 0 setdash 
  hpt 0 360 arc stroke } def
/Opaque { gsave closepath 1 setgray fill grestore 0 setgray closepath } def
/DiaW { stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke } def
/BoxW { stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke } def
/TriUW { stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke } def
/TriDW { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke } def
/PentW { stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore } def
/CircW { stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke } def
/BoxFill { gsave Rec 1 setgray fill grestore } def
/MFshow {{dup dup 0 get findfont exch 1 get scalefont setfont
     [ currentpoint ] exch dup 2 get 0 exch rmoveto dup dup 5 get exch 4 get
     {show} {stringwidth pop 0 rmoveto}ifelse dup 3 get
     {2 get neg 0 exch rmoveto pop} {pop aload pop moveto}ifelse} forall} bind def
/MFwidth {0 exch {dup 3 get{dup dup 0 get findfont exch 1 get scalefont setfont
      5 get stringwidth pop add}
    {pop} ifelse} forall} bind def
/MLshow { currentpoint stroke M
  0 exch R MFshow } bind def
/MRshow { currentpoint stroke M
  exch dup MFwidth neg 3 -1 roll R MFshow } def
/MCshow { currentpoint stroke M
  exch dup MFwidth -2 div 3 -1 roll R MFshow } def
end
%%EndProlog
gnudict begin
gsave
50 50 translate
0.050 0.050 scale
0 setgray
newpath
(Times-Roman) findfont 180 scalefont setfont
1.000 UL
LTb
702 540 M
63 0 V
6129 0 R
-63 0 V
 stroke
594 540 M
[ [(Times-Roman) 180.0 0.0 true true (0)]
] -60.0 MRshow
702 1302 M
63 0 V
6129 0 R
-63 0 V
 stroke
594 1302 M
[ [(Times-Roman) 180.0 0.0 true true (5)]
] -60.0 MRshow
702 2063 M
63 0 V
6129 0 R
-63 0 V
 stroke
594 2063 M
[ [(Times-Roman) 180.0 0.0 true true (10)]
] -60.0 MRshow
702 2825 M
63 0 V
6129 0 R
-63 0 V
 stroke
594 2825 M
[ [(Times-Roman) 180.0 0.0 true true (15)]
] -60.0 MRshow
702 3586 M
63 0 V
6129 0 R
-63 0 V
 stroke
594 3586 M
[ [(Times-Roman) 180.0 0.0 true true (20)]
] -60.0 MRshow
702 4348 M
63 0 V
6129 0 R
-63 0 V
 stroke
594 4348 M
[ [(Times-Roman) 180.0 0.0 true true (25)]
] -60.0 MRshow
1197 540 M
0 63 V
0 3897 R
0 -63 V
 stroke
1197 360 M
[ [(Times-Roman) 180.0 0.0 true true (\(1,2\))]
] -60.0 MCshow
1940 540 M
0 63 V
0 3897 R
0 -63 V
 stroke
1940 360 M
[ [(Times-Roman) 180.0 0.0 true true (\(2,1\))]
] -60.0 MCshow
2683 540 M
0 63 V
0 3897 R
0 -63 V
 stroke
2683 360 M
[ [(Times-Roman) 180.0 0.0 true true (\(1,4\))]
] -60.0 MCshow
3426 540 M
0 63 V
0 3897 R
0 -63 V
 stroke
3426 360 M
[ [(Times-Roman) 180.0 0.0 true true (\(2,2\))]
] -60.0 MCshow
4170 540 M
0 63 V
0 3897 R
0 -63 V
 stroke
4170 360 M
[ [(Times-Roman) 180.0 0.0 true true (\(4,1\))]
] -60.0 MCshow
4913 540 M
0 63 V
0 3897 R
0 -63 V
 stroke
4913 360 M
[ [(Times-Roman) 180.0 0.0 true true (\(3,2\))]
] -60.0 MCshow
5656 540 M
0 63 V
0 3897 R
0 -63 V
 stroke
5656 360 M
[ [(Times-Roman) 180.0 0.0 true true (\(6,1\))]
] -60.0 MCshow
6399 540 M
0 63 V
0 3897 R
0 -63 V
 stroke
6399 360 M
[ [(Times-Roman) 180.0 0.0 true true (\(2,4\))]
] -60.0 MCshow
1.000 UL
LTb
702 540 M
6192 0 V
0 3960 V
-6192 0 V
702 540 L
 stroke
180 2520 M
currentpoint gsave translate 90 rotate 0 0 moveto
[ [(Times-Roman) 180.0 0.0 true true (Time \(seconds\))]
] -60.0 MCshow
grestore
3798 90 M
[ [(Times-Roman) 180.0 0.0 true true (Number of Processors)]
] -60.0 MCshow
3798 4770 M
[ [(Times-Roman) 180.0 0.0 true true (Total Balancing Times \(Muzzle-Refined Mesh: 2-8 processors\))]
] -60.0 MCshow
1197 2520 M
[ [(Times-Roman) 180.0 0.0 true true (2)]
] -60.0 MCshow
1940 2520 M
[ [(Times-Roman) 180.0 0.0 true true (2)]
] -60.0 MCshow
2683 2901 M
[ [(Times-Roman) 180.0 0.0 true true (4)]
] -60.0 MCshow
3426 2901 M
[ [(Times-Roman) 180.0 0.0 true true (4)]
] -60.0 MCshow
4170 2901 M
[ [(Times-Roman) 180.0 0.0 true true (4)]
] -60.0 MCshow
4913 3129 M
[ [(Times-Roman) 180.0 0.0 true true (6)]
] -60.0 MCshow
5656 3129 M
[ [(Times-Roman) 180.0 0.0 true true (6)]
] -60.0 MCshow
6399 3129 M
[ [(Times-Roman) 180.0 0.0 true true (8)]
] -60.0 MCshow
1.000 UL
LT0
1832 4348 M
[ [(Times-Roman) 180.0 0.0 true true (JOSTLE)]
] -60.0 MRshow
1940 4348 M
495 0 V
974 540 M
0 1485 V
50 0 V
0 -1485 V
-50 0 V
743 0 R
0 1690 V
50 0 V
0 -1690 V
-50 0 V
744 0 R
0 1919 V
49 0 V
0 -1919 V
-49 0 V
743 0 R
0 2159 V
49 0 V
0 -2159 V
-49 0 V
743 0 R
0 2430 V
49 0 V
0 -2430 V
-49 0 V
743 0 R
0 2412 V
49 0 V
0 -2412 V
-49 0 V
743 0 R
0 2494 V
49 0 V
0 -2494 V
-49 0 V
743 0 R
0 2464 V
49 0 V
0 -2464 V
-49 0 V
1.000 UL
LT1
1832 4168 M
[ [(Times-Roman) 180.0 0.0 true true (OCTPART)]
] -60.0 MRshow
1940 4168 M
495 0 V
1074 540 M
0 1599 V
49 0 V
0 -1599 V
-49 0 V
743 0 R
0 1858 V
49 0 V
0 -1858 V
-49 0 V
743 0 R
0 1910 V
49 0 V
0 -1910 V
-49 0 V
743 0 R
0 2228 V
49 0 V
0 -2228 V
-49 0 V
743 0 R
0 2315 V
49 0 V
0 -2315 V
-49 0 V
743 0 R
0 2480 V
49 0 V
0 -2480 V
-49 0 V
743 0 R
0 2529 V
49 0 V
0 -2529 V
-49 0 V
743 0 R
0 2269 V
49 0 V
0 -2269 V
-49 0 V
1.000 UL
LT2
1832 3988 M
[ [(Times-Roman) 180.0 0.0 true true (PARMETIS)]
] -60.0 MRshow
1940 3988 M
495 0 V
1173 540 M
0 1383 V
49 0 V
0 -1383 V
-49 0 V
743 0 R
0 1599 V
49 0 V
0 -1599 V
-49 0 V
743 0 R
0 1672 V
49 0 V
0 -1672 V
-49 0 V
743 0 R
0 1869 V
49 0 V
0 -1869 V
-49 0 V
743 0 R
0 1970 V
49 0 V
0 -1970 V
-49 0 V
743 0 R
0 2156 V
49 0 V
0 -2156 V
-49 0 V
743 0 R
0 2291 V
49 0 V
0 -2291 V
-49 0 V
743 0 R
0 2172 V
49 0 V
0 -2172 V
-49 0 V
1.000 UL
LT3
1832 3808 M
[ [(Times-Roman) 180.0 0.0 true true (RCB)]
] -60.0 MRshow
1940 3808 M
495 0 V
1272 540 M
0 1276 V
49 0 V
0 -1276 V
-49 0 V
743 0 R
0 1490 V
49 0 V
0 -1490 V
-49 0 V
743 0 R
0 1628 V
49 0 V
0 -1628 V
-49 0 V
743 0 R
0 1878 V
49 0 V
0 -1878 V
-49 0 V
743 0 R
0 1994 V
49 0 V
0 -1994 V
-49 0 V
743 0 R
0 2090 V
49 0 V
0 -2090 V
-49 0 V
743 0 R
0 2191 V
49 0 V
0 -2191 V
-49 0 V
743 0 R
0 2028 V
49 0 V
0 -2028 V
-49 0 V
1.000 UL
LT4
1832 3628 M
[ [(Times-Roman) 180.0 0.0 true true (RIB)]
] -60.0 MRshow
1940 3628 M
495 0 V
1371 540 M
0 1194 V
49 0 V
0 -1194 V
-49 0 V
743 0 R
0 1433 V
49 0 V
0 -1433 V
-49 0 V
743 0 R
0 1612 V
49 0 V
0 -1612 V
-49 0 V
743 0 R
0 1764 V
49 0 V
0 -1764 V
-49 0 V
743 0 R
0 1935 V
49 0 V
0 -1935 V
-49 0 V
743 0 R
0 1947 V
49 0 V
0 -1947 V
-49 0 V
743 0 R
0 2252 V
50 0 V
0 -2252 V
-50 0 V
743 0 R
0 1996 V
50 0 V
0 -1996 V
-50 0 V
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Times-Roman

%%EndDocument
 @endspecial 25328 w @beginspecial 50 @llx 50 @lly 410
@urx 302 @ury 2160 @rwi @setspecial
%%BeginDocument: graphs/methods/times/muzzle_times_8.eps
%!PS-Adobe-2.0 EPSF-2.0
%%Title: muzzle-times-8.eps
%%Creator: gnuplot 3.7 patchlevel 1
%%CreationDate: Mon Jul 22 17:20:37 2002
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 410 302
%%Orientation: Portrait
%%EndComments
/gnudict 256 dict def
gnudict begin
/Color false def
/Solid false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
/vshift -60 def
/dl {10 mul} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow { currentpoint stroke M
  0 vshift R show } def
/Rshow { currentpoint stroke M
  dup stringwidth pop neg vshift R show } def
/Cshow { currentpoint stroke M
  dup stringwidth pop -2 div vshift R show } def
/UP { dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def } def
/DL { Color {setrgbcolor Solid {pop []} if 0 setdash }
 {pop pop pop Solid {pop []} if 0 setdash} ifelse } def
/BL { stroke userlinewidth 2 mul setlinewidth } def
/AL { stroke userlinewidth 2 div setlinewidth } def
/UL { dup gnulinewidth mul /userlinewidth exch def
      10 mul /udl exch def } def
/PL { stroke userlinewidth setlinewidth } def
/LTb { BL [] 0 0 0 DL } def
/LTa { AL [1 udl mul 2 udl mul] 0 setdash 0 0 0 setrgbcolor } def
/LT0 { PL [] 1 0 0 DL } def
/LT1 { PL [4 dl 2 dl] 0 1 0 DL } def
/LT2 { PL [2 dl 3 dl] 0 0 1 DL } def
/LT3 { PL [1 dl 1.5 dl] 1 0 1 DL } def
/LT4 { PL [5 dl 2 dl 1 dl 2 dl] 0 1 1 DL } def
/LT5 { PL [4 dl 3 dl 1 dl 3 dl] 1 1 0 DL } def
/LT6 { PL [2 dl 2 dl 2 dl 4 dl] 0 0 0 DL } def
/LT7 { PL [2 dl 2 dl 2 dl 2 dl 2 dl 4 dl] 1 0.3 0 DL } def
/LT8 { PL [2 dl 2 dl 2 dl 2 dl 2 dl 2 dl 2 dl 4 dl] 0.5 0.5 0.5 DL } def
/Pnt { stroke [] 0 setdash
   gsave 1 setlinecap M 0 0 V stroke grestore } def
/Dia { stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt } def
/Pls { stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
  } def
/Box { stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt } def
/Crs { stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke } def
/TriU { stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt  } def
/Star { 2 copy Pls Crs } def
/BoxF { stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V  hpt2 0 V  0 vpt2 V
  hpt2 neg 0 V  closepath fill } def
/TriUF { stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill } def
/TriD { stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt  } def
/TriDF { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF { stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill } def
/Pent { stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt } def
/PentF { stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore } def
/Circle { stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt } def
/CircleF { stroke [] 0 setdash hpt 0 360 arc fill } def
/C0 { BL [] 0 setdash 2 copy moveto vpt 90 450  arc } bind def
/C1 { BL [] 0 setdash 2 copy        moveto
       2 copy  vpt 0 90 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C2 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 90 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C3 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C4 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 180 270 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C5 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 90 arc
       2 copy moveto
       2 copy  vpt 180 270 arc closepath fill
               vpt 0 360 arc } bind def
/C6 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 90 270 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C7 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 0 270 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C8 { BL [] 0 setdash 2 copy moveto
      2 copy vpt 270 360 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C9 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 270 450 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C10 { BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
       2 copy moveto
       2 copy vpt 90 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C11 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 180 arc closepath fill
       2 copy moveto
       2 copy  vpt 270 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C12 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 180 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C13 { BL [] 0 setdash  2 copy moveto
       2 copy  vpt 0 90 arc closepath fill
       2 copy moveto
       2 copy  vpt 180 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C14 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 90 360 arc closepath fill
               vpt 0 360 arc } bind def
/C15 { BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/Rec   { newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
       neg 0 rlineto closepath } bind def
/Square { dup Rec } bind def
/Bsquare { vpt sub exch vpt sub exch vpt2 Square } bind def
/S0 { BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare } bind def
/S1 { BL [] 0 setdash 2 copy vpt Square fill Bsquare } bind def
/S2 { BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare } bind def
/S3 { BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare } bind def
/S4 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare } bind def
/S5 { BL [] 0 setdash 2 copy 2 copy vpt Square fill
       exch vpt sub exch vpt sub vpt Square fill Bsquare } bind def
/S6 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare } bind def
/S7 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
       2 copy vpt Square fill
       Bsquare } bind def
/S8 { BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare } bind def
/S9 { BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare } bind def
/S10 { BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
       Bsquare } bind def
/S11 { BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
       Bsquare } bind def
/S12 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare } bind def
/S13 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
       2 copy vpt Square fill Bsquare } bind def
/S14 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
       2 copy exch vpt sub exch vpt Square fill Bsquare } bind def
/S15 { BL [] 0 setdash 2 copy Bsquare fill Bsquare } bind def
/D0 { gsave translate 45 rotate 0 0 S0 stroke grestore } bind def
/D1 { gsave translate 45 rotate 0 0 S1 stroke grestore } bind def
/D2 { gsave translate 45 rotate 0 0 S2 stroke grestore } bind def
/D3 { gsave translate 45 rotate 0 0 S3 stroke grestore } bind def
/D4 { gsave translate 45 rotate 0 0 S4 stroke grestore } bind def
/D5 { gsave translate 45 rotate 0 0 S5 stroke grestore } bind def
/D6 { gsave translate 45 rotate 0 0 S6 stroke grestore } bind def
/D7 { gsave translate 45 rotate 0 0 S7 stroke grestore } bind def
/D8 { gsave translate 45 rotate 0 0 S8 stroke grestore } bind def
/D9 { gsave translate 45 rotate 0 0 S9 stroke grestore } bind def
/D10 { gsave translate 45 rotate 0 0 S10 stroke grestore } bind def
/D11 { gsave translate 45 rotate 0 0 S11 stroke grestore } bind def
/D12 { gsave translate 45 rotate 0 0 S12 stroke grestore } bind def
/D13 { gsave translate 45 rotate 0 0 S13 stroke grestore } bind def
/D14 { gsave translate 45 rotate 0 0 S14 stroke grestore } bind def
/D15 { gsave translate 45 rotate 0 0 S15 stroke grestore } bind def
/DiaE { stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke } def
/BoxE { stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke } def
/TriUE { stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke } def
/TriDE { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke } def
/PentE { stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore } def
/CircE { stroke [] 0 setdash 
  hpt 0 360 arc stroke } def
/Opaque { gsave closepath 1 setgray fill grestore 0 setgray closepath } def
/DiaW { stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke } def
/BoxW { stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke } def
/TriUW { stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke } def
/TriDW { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke } def
/PentW { stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore } def
/CircW { stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke } def
/BoxFill { gsave Rec 1 setgray fill grestore } def
/MFshow {{dup dup 0 get findfont exch 1 get scalefont setfont
     [ currentpoint ] exch dup 2 get 0 exch rmoveto dup dup 5 get exch 4 get
     {show} {stringwidth pop 0 rmoveto}ifelse dup 3 get
     {2 get neg 0 exch rmoveto pop} {pop aload pop moveto}ifelse} forall} bind def
/MFwidth {0 exch {dup 3 get{dup dup 0 get findfont exch 1 get scalefont setfont
      5 get stringwidth pop add}
    {pop} ifelse} forall} bind def
/MLshow { currentpoint stroke M
  0 exch R MFshow } bind def
/MRshow { currentpoint stroke M
  exch dup MFwidth neg 3 -1 roll R MFshow } def
/MCshow { currentpoint stroke M
  exch dup MFwidth -2 div 3 -1 roll R MFshow } def
end
%%EndProlog
gnudict begin
gsave
50 50 translate
0.050 0.050 scale
0 setgray
newpath
(Times-Roman) findfont 180 scalefont setfont
1.000 UL
LTb
702 540 M
63 0 V
6129 0 R
-63 0 V
 stroke
594 540 M
[ [(Times-Roman) 180.0 0.0 true true (0)]
] -60.0 MRshow
702 1302 M
63 0 V
6129 0 R
-63 0 V
 stroke
594 1302 M
[ [(Times-Roman) 180.0 0.0 true true (5)]
] -60.0 MRshow
702 2063 M
63 0 V
6129 0 R
-63 0 V
 stroke
594 2063 M
[ [(Times-Roman) 180.0 0.0 true true (10)]
] -60.0 MRshow
702 2825 M
63 0 V
6129 0 R
-63 0 V
 stroke
594 2825 M
[ [(Times-Roman) 180.0 0.0 true true (15)]
] -60.0 MRshow
702 3586 M
63 0 V
6129 0 R
-63 0 V
 stroke
594 3586 M
[ [(Times-Roman) 180.0 0.0 true true (20)]
] -60.0 MRshow
702 4348 M
63 0 V
6129 0 R
-63 0 V
 stroke
594 4348 M
[ [(Times-Roman) 180.0 0.0 true true (25)]
] -60.0 MRshow
1197 540 M
0 63 V
0 3897 R
0 -63 V
 stroke
1197 360 M
[ [(Times-Roman) 180.0 0.0 true true (\(8,1\))]
] -60.0 MCshow
1940 540 M
0 63 V
0 3897 R
0 -63 V
 stroke
1940 360 M
[ [(Times-Roman) 180.0 0.0 true true (\(4,2\))]
] -60.0 MCshow
2683 540 M
0 63 V
0 3897 R
0 -63 V
 stroke
2683 360 M
[ [(Times-Roman) 180.0 0.0 true true (\(5,2\))]
] -60.0 MCshow
3426 540 M
0 63 V
0 3897 R
0 -63 V
 stroke
3426 360 M
[ [(Times-Roman) 180.0 0.0 true true (\(6,2\))]
] -60.0 MCshow
4170 540 M
0 63 V
0 3897 R
0 -63 V
 stroke
4170 360 M
[ [(Times-Roman) 180.0 0.0 true true (\(7,2\))]
] -60.0 MCshow
4913 540 M
0 63 V
0 3897 R
0 -63 V
 stroke
4913 360 M
[ [(Times-Roman) 180.0 0.0 true true (\(8,2\))]
] -60.0 MCshow
5656 540 M
0 63 V
0 3897 R
0 -63 V
 stroke
5656 360 M
[ [(Times-Roman) 180.0 0.0 true true (\(1,4\)+\(7,2\))]
] -60.0 MCshow
6399 540 M
0 63 V
0 3897 R
0 -63 V
 stroke
6399 360 M
[ [(Times-Roman) 180.0 0.0 true true (\(2,4\)+\(6,2\))]
] -60.0 MCshow
1.000 UL
LTb
702 540 M
6192 0 V
0 3960 V
-6192 0 V
702 540 L
 stroke
180 2520 M
currentpoint gsave translate 90 rotate 0 0 moveto
[ [(Times-Roman) 180.0 0.0 true true (Time \(seconds\))]
] -60.0 MCshow
grestore
3798 90 M
[ [(Times-Roman) 180.0 0.0 true true (Number of Processors)]
] -60.0 MCshow
3798 4770 M
[ [(Times-Roman) 180.0 0.0 true true (Total Balancing Times \(Muzzle-Refined Mesh: 8-20 processors\))]
] -60.0 MCshow
1197 3129 M
[ [(Times-Roman) 180.0 0.0 true true (8)]
] -60.0 MCshow
1940 3129 M
[ [(Times-Roman) 180.0 0.0 true true (8)]
] -60.0 MCshow
2683 3358 M
[ [(Times-Roman) 180.0 0.0 true true (10)]
] -60.0 MCshow
3426 3815 M
[ [(Times-Roman) 180.0 0.0 true true (12)]
] -60.0 MCshow
4170 3586 M
[ [(Times-Roman) 180.0 0.0 true true (14)]
] -60.0 MCshow
4913 3738 M
[ [(Times-Roman) 180.0 0.0 true true (16)]
] -60.0 MCshow
5656 3738 M
[ [(Times-Roman) 180.0 0.0 true true (18)]
] -60.0 MCshow
6399 3738 M
[ [(Times-Roman) 180.0 0.0 true true (20)]
] -60.0 MCshow
1.000 UL
LT0
1832 4348 M
[ [(Times-Roman) 180.0 0.0 true true (JOSTLE)]
] -60.0 MRshow
1940 4348 M
495 0 V
974 540 M
0 2503 V
50 0 V
0 -2503 V
-50 0 V
743 0 R
0 2749 V
50 0 V
0 -2749 V
-50 0 V
744 0 R
0 2718 V
49 0 V
0 -2718 V
-49 0 V
743 0 R
0 3123 V
49 0 V
0 -3123 V
-49 0 V
743 0 R
0 3142 V
49 0 V
0 -3142 V
-49 0 V
743 0 R
0 3387 V
49 0 V
0 -3387 V
-49 0 V
743 0 R
0 3843 V
49 0 V
0 -3843 V
-49 0 V
743 0 R
0 3560 V
49 0 V
0 -3560 V
-49 0 V
1.000 UL
LT1
1832 4168 M
[ [(Times-Roman) 180.0 0.0 true true (OCTPART)]
] -60.0 MRshow
1940 4168 M
495 0 V
1074 540 M
0 2410 V
49 0 V
0 -2410 V
-49 0 V
743 0 R
0 2526 V
49 0 V
0 -2526 V
-49 0 V
743 0 R
0 2640 V
49 0 V
0 -2640 V
-49 0 V
743 0 R
0 3163 V
49 0 V
0 -3163 V
-49 0 V
743 0 R
0 2867 V
49 0 V
0 -2867 V
-49 0 V
743 0 R
0 2933 V
49 0 V
0 -2933 V
-49 0 V
743 0 R
0 2998 V
49 0 V
0 -2998 V
-49 0 V
743 0 R
0 2951 V
49 0 V
0 -2951 V
-49 0 V
1.000 UL
LT2
1832 3988 M
[ [(Times-Roman) 180.0 0.0 true true (PARMETIS)]
] -60.0 MRshow
1940 3988 M
495 0 V
1173 540 M
0 2333 V
49 0 V
0 -2333 V
-49 0 V
743 0 R
0 2317 V
49 0 V
0 -2317 V
-49 0 V
743 0 R
0 2529 V
49 0 V
0 -2529 V
-49 0 V
743 0 R
0 2693 V
49 0 V
0 -2693 V
-49 0 V
743 0 R
0 2800 V
49 0 V
0 -2800 V
-49 0 V
743 0 R
0 3034 V
49 0 V
0 -3034 V
-49 0 V
743 0 R
0 3010 V
49 0 V
0 -3010 V
-49 0 V
743 0 R
0 3097 V
49 0 V
0 -3097 V
-49 0 V
1.000 UL
LT3
1832 3808 M
[ [(Times-Roman) 180.0 0.0 true true (RCB)]
] -60.0 MRshow
1940 3808 M
495 0 V
1272 540 M
0 2167 V
49 0 V
0 -2167 V
-49 0 V
743 0 R
0 2262 V
49 0 V
0 -2262 V
-49 0 V
743 0 R
0 2440 V
49 0 V
0 -2440 V
-49 0 V
743 0 R
0 2581 V
49 0 V
0 -2581 V
-49 0 V
743 0 R
0 2614 V
49 0 V
0 -2614 V
-49 0 V
743 0 R
0 2685 V
49 0 V
0 -2685 V
-49 0 V
743 0 R
0 2959 V
49 0 V
0 -2959 V
-49 0 V
743 0 R
0 2930 V
49 0 V
0 -2930 V
-49 0 V
1.000 UL
LT4
1832 3628 M
[ [(Times-Roman) 180.0 0.0 true true (RIB)]
] -60.0 MRshow
1940 3628 M
495 0 V
1371 540 M
0 2157 V
49 0 V
0 -2157 V
-49 0 V
743 0 R
0 2233 V
49 0 V
0 -2233 V
-49 0 V
743 0 R
0 2296 V
49 0 V
0 -2296 V
-49 0 V
743 0 R
0 2333 V
49 0 V
0 -2333 V
-49 0 V
743 0 R
0 2449 V
49 0 V
0 -2449 V
-49 0 V
743 0 R
0 2532 V
49 0 V
0 -2532 V
-49 0 V
743 0 R
0 2745 V
50 0 V
0 -2745 V
-50 0 V
743 0 R
0 2806 V
50 0 V
0 -2806 V
-50 0 V
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Times-Roman

%%EndDocument
 @endspecial 51523 17422 V 888 17466 50657 45 v 0 19606
a Fk(Figure)374 b(1:)549 b(T)-108 b(otal)376 b(initial)f(partitioning)g
(times)f(for)h(the)f(Muzzle)g(mesh.)559 b(Jostle)375
b(and)f(P)-36 b(armetis)374 b(are)h(often)0 21211 y(the)451
b(slo)-36 b(w)g(est)453 b(and)f(the)f(recursiv)-36 b(e)452
b(bisection)g(pro)36 b(cedures)452 b(are)g(usually)g(the)g(fastest.)634
b(The)452 b(notation)g(for)0 22816 y(the)433 b(n)-36
b(um)g(b)36 b(er)432 b(of)i(pro)36 b(cessors)434 b(along)h(the)e
Fj(x)p Fk(-axis)h(is)g(\(#)f(no)36 b(des,)434 b(#)f(pro)36
b(cesses)434 b(p)36 b(er)433 b(no)36 b(de\).)1951 26691
y(Figure)597 b(1)h(sho)-36 b(ws)598 b(total)g(balancing)g(times)g(for)g
(the)f(initial)h(partitioning)g(of)g(the)f(Muzzle)g(mesh.)0
28296 y(This)366 b(includes)f(setup)f(time,)380 b(the)364
b(time)i(for)g(Zoltan)g(to)f(compute)g(the)g(decomp)36
b(osition,)380 b(and)364 b(the)h(time)h(to)0 29901 y(migrate)308
b(the)f(mesh)f(to)i(ac)-36 b(hiev)g(e)308 b(the)f(decomp)36
b(osition.)536 b(In)307 b(most)h(cases,)333 b(the)307
b(metho)36 b(ds)307 b(w)-36 b(ere)307 b(rank)-36 b(ed)307
b(RIB,)0 31506 y(R)-36 b(CB,)321 b(P)-36 b(armetis,)344
b(OCTP)-108 b(AR)g(T,)321 b(and)f(Jostle,)344 b(fastest)321
b(to)g(slo)-36 b(w)g(est,)344 b(though)320 b(R)-36 b(CB)320
b(w)-36 b(as)322 b(sometimes)f(faster)0 33111 y(than)432
b(RIB)i(and)f(Jostle)g(w)-36 b(as)434 b(sometimes)f(faster)h(than)e
(OCTP)-108 b(AR)g(T)434 b(for)f(small)h(n)-36 b(um)g(b)36
b(ers)432 b(of)i(pro)36 b(cesses.)0 34716 y(Timings)477
b(for)h(the)e(other)g(meshes)g(are)h(not)g(sho)-36 b(wn,)487
b(but)476 b(sho)-36 b(w)476 b(the)h(same)f(trends.)707
b(P)-36 b(artitioning)477 b(time)0 36321 y(increased)419
b(with)h(the)f(n)-36 b(um)g(b)36 b(er)417 b(of)k(pro)36
b(cesses,)422 b(since)e(the)f(timings)g(include)g(migration)h(time,)j
(and)c(more)0 37926 y(partitions)598 b(require)h(a)f(larger)h(p)36
b(ercen)-36 b(tage)598 b(of)i(the)d(mesh)h(to)h(b)36
b(e)598 b(migrated.)1073 b(Runs)597 b(with)i(the)f(same)0
39531 y(n)-36 b(um)g(b)36 b(er)439 b(of)i(pro)36 b(cesses)440
b(but)g(with)g(in)-36 b(trano)36 b(de)440 b(comm)-36
b(unication)440 b(ran)h(faster)f(than)g(those)g(that)g(required)0
41137 y(Ethernet)432 b(comm)-36 b(unication.)p 888 42731
V 866 60012 45 17282 v 1553 59531 a @beginspecial 50
@llx 50 @lly 410 @urx 302 @ury 2160 @rwi @setspecial
%%BeginDocument: graphs/methods/partition/gsi/muzzle_gsi.eps
%!PS-Adobe-2.0 EPSF-2.0
%%Title: muzzle_global_percent.eps
%%Creator: gnuplot 3.7 patchlevel 1
%%CreationDate: Mon Jul 15 11:43:10 2002
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 410 302
%%Orientation: Portrait
%%EndComments
/gnudict 256 dict def
gnudict begin
/Color false def
/Solid false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
/vshift -60 def
/dl {10 mul} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow { currentpoint stroke M
  0 vshift R show } def
/Rshow { currentpoint stroke M
  dup stringwidth pop neg vshift R show } def
/Cshow { currentpoint stroke M
  dup stringwidth pop -2 div vshift R show } def
/UP { dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def } def
/DL { Color {setrgbcolor Solid {pop []} if 0 setdash }
 {pop pop pop Solid {pop []} if 0 setdash} ifelse } def
/BL { stroke userlinewidth 2 mul setlinewidth } def
/AL { stroke userlinewidth 2 div setlinewidth } def
/UL { dup gnulinewidth mul /userlinewidth exch def
      10 mul /udl exch def } def
/PL { stroke userlinewidth setlinewidth } def
/LTb { BL [] 0 0 0 DL } def
/LTa { AL [1 udl mul 2 udl mul] 0 setdash 0 0 0 setrgbcolor } def
/LT0 { PL [] 1 0 0 DL } def
/LT1 { PL [4 dl 2 dl] 0 1 0 DL } def
/LT2 { PL [2 dl 3 dl] 0 0 1 DL } def
/LT3 { PL [1 dl 1.5 dl] 1 0 1 DL } def
/LT4 { PL [5 dl 2 dl 1 dl 2 dl] 0 1 1 DL } def
/LT5 { PL [4 dl 3 dl 1 dl 3 dl] 1 1 0 DL } def
/LT6 { PL [2 dl 2 dl 2 dl 4 dl] 0 0 0 DL } def
/LT7 { PL [2 dl 2 dl 2 dl 2 dl 2 dl 4 dl] 1 0.3 0 DL } def
/LT8 { PL [2 dl 2 dl 2 dl 2 dl 2 dl 2 dl 2 dl 4 dl] 0.5 0.5 0.5 DL } def
/Pnt { stroke [] 0 setdash
   gsave 1 setlinecap M 0 0 V stroke grestore } def
/Dia { stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt } def
/Pls { stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
  } def
/Box { stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt } def
/Crs { stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke } def
/TriU { stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt  } def
/Star { 2 copy Pls Crs } def
/BoxF { stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V  hpt2 0 V  0 vpt2 V
  hpt2 neg 0 V  closepath fill } def
/TriUF { stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill } def
/TriD { stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt  } def
/TriDF { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF { stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill } def
/Pent { stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt } def
/PentF { stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore } def
/Circle { stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt } def
/CircleF { stroke [] 0 setdash hpt 0 360 arc fill } def
/C0 { BL [] 0 setdash 2 copy moveto vpt 90 450  arc } bind def
/C1 { BL [] 0 setdash 2 copy        moveto
       2 copy  vpt 0 90 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C2 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 90 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C3 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C4 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 180 270 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C5 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 90 arc
       2 copy moveto
       2 copy  vpt 180 270 arc closepath fill
               vpt 0 360 arc } bind def
/C6 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 90 270 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C7 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 0 270 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C8 { BL [] 0 setdash 2 copy moveto
      2 copy vpt 270 360 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C9 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 270 450 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C10 { BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
       2 copy moveto
       2 copy vpt 90 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C11 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 180 arc closepath fill
       2 copy moveto
       2 copy  vpt 270 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C12 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 180 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C13 { BL [] 0 setdash  2 copy moveto
       2 copy  vpt 0 90 arc closepath fill
       2 copy moveto
       2 copy  vpt 180 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C14 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 90 360 arc closepath fill
               vpt 0 360 arc } bind def
/C15 { BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/Rec   { newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
       neg 0 rlineto closepath } bind def
/Square { dup Rec } bind def
/Bsquare { vpt sub exch vpt sub exch vpt2 Square } bind def
/S0 { BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare } bind def
/S1 { BL [] 0 setdash 2 copy vpt Square fill Bsquare } bind def
/S2 { BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare } bind def
/S3 { BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare } bind def
/S4 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare } bind def
/S5 { BL [] 0 setdash 2 copy 2 copy vpt Square fill
       exch vpt sub exch vpt sub vpt Square fill Bsquare } bind def
/S6 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare } bind def
/S7 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
       2 copy vpt Square fill
       Bsquare } bind def
/S8 { BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare } bind def
/S9 { BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare } bind def
/S10 { BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
       Bsquare } bind def
/S11 { BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
       Bsquare } bind def
/S12 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare } bind def
/S13 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
       2 copy vpt Square fill Bsquare } bind def
/S14 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
       2 copy exch vpt sub exch vpt Square fill Bsquare } bind def
/S15 { BL [] 0 setdash 2 copy Bsquare fill Bsquare } bind def
/D0 { gsave translate 45 rotate 0 0 S0 stroke grestore } bind def
/D1 { gsave translate 45 rotate 0 0 S1 stroke grestore } bind def
/D2 { gsave translate 45 rotate 0 0 S2 stroke grestore } bind def
/D3 { gsave translate 45 rotate 0 0 S3 stroke grestore } bind def
/D4 { gsave translate 45 rotate 0 0 S4 stroke grestore } bind def
/D5 { gsave translate 45 rotate 0 0 S5 stroke grestore } bind def
/D6 { gsave translate 45 rotate 0 0 S6 stroke grestore } bind def
/D7 { gsave translate 45 rotate 0 0 S7 stroke grestore } bind def
/D8 { gsave translate 45 rotate 0 0 S8 stroke grestore } bind def
/D9 { gsave translate 45 rotate 0 0 S9 stroke grestore } bind def
/D10 { gsave translate 45 rotate 0 0 S10 stroke grestore } bind def
/D11 { gsave translate 45 rotate 0 0 S11 stroke grestore } bind def
/D12 { gsave translate 45 rotate 0 0 S12 stroke grestore } bind def
/D13 { gsave translate 45 rotate 0 0 S13 stroke grestore } bind def
/D14 { gsave translate 45 rotate 0 0 S14 stroke grestore } bind def
/D15 { gsave translate 45 rotate 0 0 S15 stroke grestore } bind def
/DiaE { stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke } def
/BoxE { stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke } def
/TriUE { stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke } def
/TriDE { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke } def
/PentE { stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore } def
/CircE { stroke [] 0 setdash 
  hpt 0 360 arc stroke } def
/Opaque { gsave closepath 1 setgray fill grestore 0 setgray closepath } def
/DiaW { stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke } def
/BoxW { stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke } def
/TriUW { stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke } def
/TriDW { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke } def
/PentW { stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore } def
/CircW { stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke } def
/BoxFill { gsave Rec 1 setgray fill grestore } def
/MFshow {{dup dup 0 get findfont exch 1 get scalefont setfont
     [ currentpoint ] exch dup 2 get 0 exch rmoveto dup dup 5 get exch 4 get
     {show} {stringwidth pop 0 rmoveto}ifelse dup 3 get
     {2 get neg 0 exch rmoveto pop} {pop aload pop moveto}ifelse} forall} bind def
/MFwidth {0 exch {dup 3 get{dup dup 0 get findfont exch 1 get scalefont setfont
      5 get stringwidth pop add}
    {pop} ifelse} forall} bind def
/MLshow { currentpoint stroke M
  0 exch R MFshow } bind def
/MRshow { currentpoint stroke M
  exch dup MFwidth neg 3 -1 roll R MFshow } def
/MCshow { currentpoint stroke M
  exch dup MFwidth -2 div 3 -1 roll R MFshow } def
end
%%EndProlog
gnudict begin
gsave
50 50 translate
0.050 0.050 scale
0 setgray
newpath
(Times-Roman) findfont 180 scalefont setfont
1.000 UL
LTb
594 540 M
63 0 V
6237 0 R
-63 0 V
 stroke
486 540 M
[ [(Times-Roman) 180.0 0.0 true true (0)]
] -60.0 MRshow
594 980 M
63 0 V
6237 0 R
-63 0 V
 stroke
486 980 M
[ [(Times-Roman) 180.0 0.0 true true (1)]
] -60.0 MRshow
594 1420 M
63 0 V
6237 0 R
-63 0 V
 stroke
486 1420 M
[ [(Times-Roman) 180.0 0.0 true true (2)]
] -60.0 MRshow
594 1860 M
63 0 V
6237 0 R
-63 0 V
 stroke
486 1860 M
[ [(Times-Roman) 180.0 0.0 true true (3)]
] -60.0 MRshow
594 2300 M
63 0 V
6237 0 R
-63 0 V
 stroke
486 2300 M
[ [(Times-Roman) 180.0 0.0 true true (4)]
] -60.0 MRshow
594 2740 M
63 0 V
6237 0 R
-63 0 V
 stroke
486 2740 M
[ [(Times-Roman) 180.0 0.0 true true (5)]
] -60.0 MRshow
594 3180 M
63 0 V
6237 0 R
-63 0 V
 stroke
486 3180 M
[ [(Times-Roman) 180.0 0.0 true true (6)]
] -60.0 MRshow
594 3620 M
63 0 V
6237 0 R
-63 0 V
 stroke
486 3620 M
[ [(Times-Roman) 180.0 0.0 true true (7)]
] -60.0 MRshow
594 4060 M
63 0 V
6237 0 R
-63 0 V
 stroke
486 4060 M
[ [(Times-Roman) 180.0 0.0 true true (8)]
] -60.0 MRshow
594 4500 M
63 0 V
6237 0 R
-63 0 V
 stroke
486 4500 M
[ [(Times-Roman) 180.0 0.0 true true (9)]
] -60.0 MRshow
594 540 M
0 63 V
0 3897 R
0 -63 V
 stroke
594 360 M
[ [(Times-Roman) 180.0 0.0 true true (2)]
] -60.0 MCshow
1294 540 M
0 63 V
0 3897 R
0 -63 V
 stroke
1294 360 M
[ [(Times-Roman) 180.0 0.0 true true (4)]
] -60.0 MCshow
1994 540 M
0 63 V
0 3897 R
0 -63 V
 stroke
1994 360 M
[ [(Times-Roman) 180.0 0.0 true true (6)]
] -60.0 MCshow
2694 540 M
0 63 V
0 3897 R
0 -63 V
 stroke
2694 360 M
[ [(Times-Roman) 180.0 0.0 true true (8)]
] -60.0 MCshow
3394 540 M
0 63 V
0 3897 R
0 -63 V
 stroke
3394 360 M
[ [(Times-Roman) 180.0 0.0 true true (10)]
] -60.0 MCshow
4094 540 M
0 63 V
0 3897 R
0 -63 V
 stroke
4094 360 M
[ [(Times-Roman) 180.0 0.0 true true (12)]
] -60.0 MCshow
4794 540 M
0 63 V
0 3897 R
0 -63 V
 stroke
4794 360 M
[ [(Times-Roman) 180.0 0.0 true true (14)]
] -60.0 MCshow
5494 540 M
0 63 V
0 3897 R
0 -63 V
 stroke
5494 360 M
[ [(Times-Roman) 180.0 0.0 true true (16)]
] -60.0 MCshow
6194 540 M
0 63 V
0 3897 R
0 -63 V
 stroke
6194 360 M
[ [(Times-Roman) 180.0 0.0 true true (18)]
] -60.0 MCshow
6894 540 M
0 63 V
0 3897 R
0 -63 V
 stroke
6894 360 M
[ [(Times-Roman) 180.0 0.0 true true (20)]
] -60.0 MCshow
1.000 UL
LTb
594 540 M
6300 0 V
0 3960 V
-6300 0 V
594 540 L
 stroke
180 2520 M
currentpoint gsave translate 90 rotate 0 0 moveto
[ [(Times-Roman) 180.0 0.0 true true (GSI)]
] -60.0 MCshow
grestore
3744 90 M
[ [(Times-Roman) 180.0 0.0 true true (Number of Processors)]
] -60.0 MCshow
3744 4770 M
[ [(Times-Roman) 180.0 0.0 true true (Global Surface Index \(Muzzle-Refined Mesh\))]
] -60.0 MCshow
1.000 UP
1.000 UL
LT0
1536 4060 M
[ [(Times-Roman) 180.0 0.0 true true (HSFC)]
] -60.0 MRshow
1644 4060 M
495 0 V
594 857 M
700 789 V
700 313 V
700 357 V
700 214 V
700 170 V
700 93 V
700 303 V
700 38 V
700 309 V
594 857 Pls
1294 1646 Pls
1994 1959 Pls
2694 2316 Pls
3394 2530 Pls
4094 2700 Pls
4794 2793 Pls
5494 3096 Pls
6194 3134 Pls
6894 3443 Pls
1891 4060 Pls
1.000 UP
1.000 UL
LT1
1536 3880 M
[ [(Times-Roman) 180.0 0.0 true true (JOSTLE)]
] -60.0 MRshow
1644 3880 M
495 0 V
594 731 M
700 136 V
700 197 V
700 118 V
700 167 V
700 91 V
700 99 V
700 11 V
700 140 V
700 23 V
594 731 Crs
1294 867 Crs
1994 1064 Crs
2694 1182 Crs
3394 1349 Crs
4094 1440 Crs
4794 1539 Crs
5494 1550 Crs
6194 1690 Crs
6894 1713 Crs
1891 3880 Crs
1.000 UP
1.000 UL
LT2
1536 3700 M
[ [(Times-Roman) 180.0 0.0 true true (OCTPART)]
] -60.0 MRshow
1644 3700 M
495 0 V
594 842 M
700 656 V
700 624 V
700 49 V
700 334 V
700 286 V
700 -2 V
700 146 V
700 304 V
700 210 V
594 842 Star
1294 1498 Star
1994 2122 Star
2694 2171 Star
3394 2505 Star
4094 2791 Star
4794 2789 Star
5494 2935 Star
6194 3239 Star
6894 3449 Star
1891 3700 Star
1.000 UP
1.000 UL
LT3
1536 3520 M
[ [(Times-Roman) 180.0 0.0 true true (PARMETIS)]
] -60.0 MRshow
1644 3520 M
495 0 V
594 855 M
700 496 V
700 545 V
700 272 V
700 394 V
700 413 V
700 244 V
700 506 V
700 -17 V
700 -36 V
594 855 Box
1294 1351 Box
1994 1896 Box
2694 2168 Box
3394 2562 Box
4094 2975 Box
4794 3219 Box
5494 3725 Box
6194 3708 Box
6894 3672 Box
1891 3520 Box
1.000 UP
1.000 UL
LT4
1536 3340 M
[ [(Times-Roman) 180.0 0.0 true true (RCB)]
] -60.0 MRshow
1644 3340 M
495 0 V
594 877 M
700 1111 V
700 220 V
700 327 V
700 555 V
700 29 V
700 251 V
700 -118 V
700 674 V
700 182 V
594 877 BoxF
1294 1988 BoxF
1994 2208 BoxF
2694 2535 BoxF
3394 3090 BoxF
4094 3119 BoxF
4794 3370 BoxF
5494 3252 BoxF
6194 3926 BoxF
6894 4108 BoxF
1891 3340 BoxF
1.000 UP
1.000 UL
LT5
1536 3160 M
[ [(Times-Roman) 180.0 0.0 true true (RIB)]
] -60.0 MRshow
1644 3160 M
495 0 V
594 914 M
700 498 V
700 146 V
700 352 V
700 105 V
700 66 V
700 30 V
700 277 V
700 182 V
700 22 V
594 914 Circle
1294 1412 Circle
1994 1558 Circle
2694 1910 Circle
3394 2015 Circle
4094 2081 Circle
4794 2111 Circle
5494 2388 Circle
6194 2570 Circle
6894 2592 Circle
1891 3160 Circle
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Times-Roman

%%EndDocument
 @endspecial 25328 w @beginspecial 50 @llx 50 @lly 410
@urx 302 @ury 2160 @rwi @setspecial
%%BeginDocument: graphs/methods/partition/msi/muzzle_msi.eps
%!PS-Adobe-2.0 EPSF-2.0
%%Title: muzzle_max_percent.eps
%%Creator: gnuplot 3.7 patchlevel 1
%%CreationDate: Mon Jul 15 14:48:13 2002
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 410 302
%%Orientation: Portrait
%%EndComments
/gnudict 256 dict def
gnudict begin
/Color false def
/Solid false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
/vshift -60 def
/dl {10 mul} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow { currentpoint stroke M
  0 vshift R show } def
/Rshow { currentpoint stroke M
  dup stringwidth pop neg vshift R show } def
/Cshow { currentpoint stroke M
  dup stringwidth pop -2 div vshift R show } def
/UP { dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def } def
/DL { Color {setrgbcolor Solid {pop []} if 0 setdash }
 {pop pop pop Solid {pop []} if 0 setdash} ifelse } def
/BL { stroke userlinewidth 2 mul setlinewidth } def
/AL { stroke userlinewidth 2 div setlinewidth } def
/UL { dup gnulinewidth mul /userlinewidth exch def
      10 mul /udl exch def } def
/PL { stroke userlinewidth setlinewidth } def
/LTb { BL [] 0 0 0 DL } def
/LTa { AL [1 udl mul 2 udl mul] 0 setdash 0 0 0 setrgbcolor } def
/LT0 { PL [] 1 0 0 DL } def
/LT1 { PL [4 dl 2 dl] 0 1 0 DL } def
/LT2 { PL [2 dl 3 dl] 0 0 1 DL } def
/LT3 { PL [1 dl 1.5 dl] 1 0 1 DL } def
/LT4 { PL [5 dl 2 dl 1 dl 2 dl] 0 1 1 DL } def
/LT5 { PL [4 dl 3 dl 1 dl 3 dl] 1 1 0 DL } def
/LT6 { PL [2 dl 2 dl 2 dl 4 dl] 0 0 0 DL } def
/LT7 { PL [2 dl 2 dl 2 dl 2 dl 2 dl 4 dl] 1 0.3 0 DL } def
/LT8 { PL [2 dl 2 dl 2 dl 2 dl 2 dl 2 dl 2 dl 4 dl] 0.5 0.5 0.5 DL } def
/Pnt { stroke [] 0 setdash
   gsave 1 setlinecap M 0 0 V stroke grestore } def
/Dia { stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt } def
/Pls { stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
  } def
/Box { stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt } def
/Crs { stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke } def
/TriU { stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt  } def
/Star { 2 copy Pls Crs } def
/BoxF { stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V  hpt2 0 V  0 vpt2 V
  hpt2 neg 0 V  closepath fill } def
/TriUF { stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill } def
/TriD { stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt  } def
/TriDF { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF { stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill } def
/Pent { stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt } def
/PentF { stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore } def
/Circle { stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt } def
/CircleF { stroke [] 0 setdash hpt 0 360 arc fill } def
/C0 { BL [] 0 setdash 2 copy moveto vpt 90 450  arc } bind def
/C1 { BL [] 0 setdash 2 copy        moveto
       2 copy  vpt 0 90 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C2 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 90 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C3 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C4 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 180 270 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C5 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 90 arc
       2 copy moveto
       2 copy  vpt 180 270 arc closepath fill
               vpt 0 360 arc } bind def
/C6 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 90 270 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C7 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 0 270 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C8 { BL [] 0 setdash 2 copy moveto
      2 copy vpt 270 360 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C9 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 270 450 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C10 { BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
       2 copy moveto
       2 copy vpt 90 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C11 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 180 arc closepath fill
       2 copy moveto
       2 copy  vpt 270 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C12 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 180 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C13 { BL [] 0 setdash  2 copy moveto
       2 copy  vpt 0 90 arc closepath fill
       2 copy moveto
       2 copy  vpt 180 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C14 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 90 360 arc closepath fill
               vpt 0 360 arc } bind def
/C15 { BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/Rec   { newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
       neg 0 rlineto closepath } bind def
/Square { dup Rec } bind def
/Bsquare { vpt sub exch vpt sub exch vpt2 Square } bind def
/S0 { BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare } bind def
/S1 { BL [] 0 setdash 2 copy vpt Square fill Bsquare } bind def
/S2 { BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare } bind def
/S3 { BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare } bind def
/S4 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare } bind def
/S5 { BL [] 0 setdash 2 copy 2 copy vpt Square fill
       exch vpt sub exch vpt sub vpt Square fill Bsquare } bind def
/S6 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare } bind def
/S7 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
       2 copy vpt Square fill
       Bsquare } bind def
/S8 { BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare } bind def
/S9 { BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare } bind def
/S10 { BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
       Bsquare } bind def
/S11 { BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
       Bsquare } bind def
/S12 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare } bind def
/S13 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
       2 copy vpt Square fill Bsquare } bind def
/S14 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
       2 copy exch vpt sub exch vpt Square fill Bsquare } bind def
/S15 { BL [] 0 setdash 2 copy Bsquare fill Bsquare } bind def
/D0 { gsave translate 45 rotate 0 0 S0 stroke grestore } bind def
/D1 { gsave translate 45 rotate 0 0 S1 stroke grestore } bind def
/D2 { gsave translate 45 rotate 0 0 S2 stroke grestore } bind def
/D3 { gsave translate 45 rotate 0 0 S3 stroke grestore } bind def
/D4 { gsave translate 45 rotate 0 0 S4 stroke grestore } bind def
/D5 { gsave translate 45 rotate 0 0 S5 stroke grestore } bind def
/D6 { gsave translate 45 rotate 0 0 S6 stroke grestore } bind def
/D7 { gsave translate 45 rotate 0 0 S7 stroke grestore } bind def
/D8 { gsave translate 45 rotate 0 0 S8 stroke grestore } bind def
/D9 { gsave translate 45 rotate 0 0 S9 stroke grestore } bind def
/D10 { gsave translate 45 rotate 0 0 S10 stroke grestore } bind def
/D11 { gsave translate 45 rotate 0 0 S11 stroke grestore } bind def
/D12 { gsave translate 45 rotate 0 0 S12 stroke grestore } bind def
/D13 { gsave translate 45 rotate 0 0 S13 stroke grestore } bind def
/D14 { gsave translate 45 rotate 0 0 S14 stroke grestore } bind def
/D15 { gsave translate 45 rotate 0 0 S15 stroke grestore } bind def
/DiaE { stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke } def
/BoxE { stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke } def
/TriUE { stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke } def
/TriDE { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke } def
/PentE { stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore } def
/CircE { stroke [] 0 setdash 
  hpt 0 360 arc stroke } def
/Opaque { gsave closepath 1 setgray fill grestore 0 setgray closepath } def
/DiaW { stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke } def
/BoxW { stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke } def
/TriUW { stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke } def
/TriDW { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke } def
/PentW { stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore } def
/CircW { stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke } def
/BoxFill { gsave Rec 1 setgray fill grestore } def
/MFshow {{dup dup 0 get findfont exch 1 get scalefont setfont
     [ currentpoint ] exch dup 2 get 0 exch rmoveto dup dup 5 get exch 4 get
     {show} {stringwidth pop 0 rmoveto}ifelse dup 3 get
     {2 get neg 0 exch rmoveto pop} {pop aload pop moveto}ifelse} forall} bind def
/MFwidth {0 exch {dup 3 get{dup dup 0 get findfont exch 1 get scalefont setfont
      5 get stringwidth pop add}
    {pop} ifelse} forall} bind def
/MLshow { currentpoint stroke M
  0 exch R MFshow } bind def
/MRshow { currentpoint stroke M
  exch dup MFwidth neg 3 -1 roll R MFshow } def
/MCshow { currentpoint stroke M
  exch dup MFwidth -2 div 3 -1 roll R MFshow } def
end
%%EndProlog
gnudict begin
gsave
50 50 translate
0.050 0.050 scale
0 setgray
newpath
(Times-Roman) findfont 180 scalefont setfont
1.000 UL
LTb
702 540 M
63 0 V
6129 0 R
-63 0 V
 stroke
594 540 M
[ [(Times-Roman) 180.0 0.0 true true (0)]
] -60.0 MRshow
702 1035 M
63 0 V
6129 0 R
-63 0 V
 stroke
594 1035 M
[ [(Times-Roman) 180.0 0.0 true true (5)]
] -60.0 MRshow
702 1530 M
63 0 V
6129 0 R
-63 0 V
 stroke
594 1530 M
[ [(Times-Roman) 180.0 0.0 true true (10)]
] -60.0 MRshow
702 2025 M
63 0 V
6129 0 R
-63 0 V
 stroke
594 2025 M
[ [(Times-Roman) 180.0 0.0 true true (15)]
] -60.0 MRshow
702 2520 M
63 0 V
6129 0 R
-63 0 V
 stroke
594 2520 M
[ [(Times-Roman) 180.0 0.0 true true (20)]
] -60.0 MRshow
702 3015 M
63 0 V
6129 0 R
-63 0 V
 stroke
594 3015 M
[ [(Times-Roman) 180.0 0.0 true true (25)]
] -60.0 MRshow
702 3510 M
63 0 V
6129 0 R
-63 0 V
 stroke
594 3510 M
[ [(Times-Roman) 180.0 0.0 true true (30)]
] -60.0 MRshow
702 4005 M
63 0 V
6129 0 R
-63 0 V
 stroke
594 4005 M
[ [(Times-Roman) 180.0 0.0 true true (35)]
] -60.0 MRshow
702 4500 M
63 0 V
6129 0 R
-63 0 V
 stroke
594 4500 M
[ [(Times-Roman) 180.0 0.0 true true (40)]
] -60.0 MRshow
702 540 M
0 63 V
0 3897 R
0 -63 V
 stroke
702 360 M
[ [(Times-Roman) 180.0 0.0 true true (2)]
] -60.0 MCshow
1390 540 M
0 63 V
0 3897 R
0 -63 V
 stroke
1390 360 M
[ [(Times-Roman) 180.0 0.0 true true (4)]
] -60.0 MCshow
2078 540 M
0 63 V
0 3897 R
0 -63 V
 stroke
2078 360 M
[ [(Times-Roman) 180.0 0.0 true true (6)]
] -60.0 MCshow
2766 540 M
0 63 V
0 3897 R
0 -63 V
 stroke
2766 360 M
[ [(Times-Roman) 180.0 0.0 true true (8)]
] -60.0 MCshow
3454 540 M
0 63 V
0 3897 R
0 -63 V
 stroke
3454 360 M
[ [(Times-Roman) 180.0 0.0 true true (10)]
] -60.0 MCshow
4142 540 M
0 63 V
0 3897 R
0 -63 V
 stroke
4142 360 M
[ [(Times-Roman) 180.0 0.0 true true (12)]
] -60.0 MCshow
4830 540 M
0 63 V
0 3897 R
0 -63 V
 stroke
4830 360 M
[ [(Times-Roman) 180.0 0.0 true true (14)]
] -60.0 MCshow
5518 540 M
0 63 V
0 3897 R
0 -63 V
 stroke
5518 360 M
[ [(Times-Roman) 180.0 0.0 true true (16)]
] -60.0 MCshow
6206 540 M
0 63 V
0 3897 R
0 -63 V
 stroke
6206 360 M
[ [(Times-Roman) 180.0 0.0 true true (18)]
] -60.0 MCshow
6894 540 M
0 63 V
0 3897 R
0 -63 V
 stroke
6894 360 M
[ [(Times-Roman) 180.0 0.0 true true (20)]
] -60.0 MCshow
1.000 UL
LTb
702 540 M
6192 0 V
0 3960 V
-6192 0 V
702 540 L
 stroke
180 2520 M
currentpoint gsave translate 90 rotate 0 0 moveto
[ [(Times-Roman) 180.0 0.0 true true (MSI)]
] -60.0 MCshow
grestore
3798 90 M
[ [(Times-Roman) 180.0 0.0 true true (Number of Processors)]
] -60.0 MCshow
3798 4770 M
[ [(Times-Roman) 180.0 0.0 true true (Maximum Surface Index \(Muzzle-Refined Mesh\))]
] -60.0 MCshow
1.000 UP
1.000 UL
LT0
1970 4005 M
[ [(Times-Roman) 180.0 0.0 true true (HSFC)]
] -60.0 MRshow
2078 4005 M
495 0 V
702 682 M
688 410 V
688 246 V
688 233 V
688 116 V
688 219 V
688 -60 V
688 466 V
688 -174 V
688 174 V
702 682 Pls
702 682 Pls
1390 1092 Pls
1390 1092 Pls
1390 1092 Pls
2078 1338 Pls
2078 1338 Pls
2766 1571 Pls
2766 1571 Pls
2766 1571 Pls
3454 1687 Pls
4142 1906 Pls
4830 1846 Pls
5518 2312 Pls
6206 2138 Pls
6894 2312 Pls
2325 4005 Pls
1.000 UP
1.000 UL
LT1
1970 3825 M
[ [(Times-Roman) 180.0 0.0 true true (JOSTLE)]
] -60.0 MRshow
2078 3825 M
495 0 V
702 626 M
688 154 V
688 91 V
688 39 V
688 162 V
688 9 V
688 207 V
688 17 V
688 10 V
688 37 V
702 626 Crs
702 626 Crs
1390 780 Crs
1390 780 Crs
1390 780 Crs
2078 871 Crs
2078 871 Crs
2766 910 Crs
2766 910 Crs
2766 910 Crs
3454 1072 Crs
4142 1081 Crs
4830 1288 Crs
5518 1305 Crs
6206 1315 Crs
6894 1352 Crs
2325 3825 Crs
1.000 UP
1.000 UL
LT2
1970 3645 M
[ [(Times-Roman) 180.0 0.0 true true (OCTPART)]
] -60.0 MRshow
2078 3645 M
495 0 V
702 675 M
688 343 V
688 464 V
688 -61 V
688 316 V
688 239 V
688 -197 V
688 288 V
688 355 V
688 -155 V
702 675 Star
702 675 Star
1390 1018 Star
1390 1018 Star
1390 1018 Star
2078 1482 Star
2078 1482 Star
2766 1421 Star
2766 1421 Star
2766 1421 Star
3454 1737 Star
4142 1976 Star
4830 1779 Star
5518 2067 Star
6206 2422 Star
6894 2267 Star
2325 3645 Star
1.000 UP
1.000 UL
LT3
1970 3465 M
[ [(Times-Roman) 180.0 0.0 true true (PARMETIS)]
] -60.0 MRshow
2078 3465 M
495 0 V
702 686 M
688 387 V
688 310 V
688 82 V
688 444 V
688 344 V
688 55 V
688 288 V
688 -42 V
688 43 V
702 686 Box
702 686 Box
1390 1073 Box
1390 1073 Box
1390 1073 Box
2078 1383 Box
2078 1383 Box
2766 1465 Box
2766 1465 Box
2766 1465 Box
3454 1909 Box
4142 2253 Box
4830 2308 Box
5518 2596 Box
6206 2554 Box
6894 2597 Box
2325 3465 Box
1.000 UP
1.000 UL
LT4
1970 3285 M
[ [(Times-Roman) 180.0 0.0 true true (RCB)]
] -60.0 MRshow
2078 3285 M
495 0 V
702 692 M
688 714 V
688 216 V
688 125 V
688 1101 V
688 -699 V
688 954 V
688 -712 V
688 1883 V
688 -612 V
702 692 BoxF
702 692 BoxF
1390 1406 BoxF
1390 1406 BoxF
1390 1406 BoxF
2078 1622 BoxF
2078 1622 BoxF
2766 1747 BoxF
2766 1747 BoxF
2766 1747 BoxF
3454 2848 BoxF
4142 2149 BoxF
4830 3103 BoxF
5518 2391 BoxF
6206 4274 BoxF
6894 3662 BoxF
2325 3285 BoxF
1.000 UP
1.000 UL
LT5
1970 3105 M
[ [(Times-Roman) 180.0 0.0 true true (RIB)]
] -60.0 MRshow
2078 3105 M
495 0 V
702 708 M
688 529 V
688 -68 V
688 661 V
688 134 V
688 -159 V
688 -169 V
688 494 V
688 44 V
688 -161 V
702 708 Circle
702 708 Circle
1390 1237 Circle
1390 1237 Circle
1390 1237 Circle
2078 1169 Circle
2078 1169 Circle
2766 1830 Circle
2766 1830 Circle
2766 1830 Circle
3454 1964 Circle
4142 1805 Circle
4830 1636 Circle
5518 2130 Circle
6206 2174 Circle
6894 2013 Circle
2325 3105 Circle
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Times-Roman

%%EndDocument
 @endspecial 51523 60012 V 888 60057 50657 45 v 0 62270
a(Figure)453 b(2:)617 b Fj(r)6334 62469 y Fb(G)7575 62270
y Fk(\(left\))454 b(and)e Fj(r)14017 62469 y Fb(M)15523
62270 y Fk(\(righ)-36 b(t\))452 b(for)i(the)e(Muzzle)h(mesh.)635
b(P)-36 b(armetis)453 b(consisten)-36 b(tly)453 b(ac)-36
b(hiev)g(ed)454 b(the)0 63876 y(lo)-36 b(w)g(est)434
b(surface)g(indices.)1951 67030 y(Figure)313 b(2)h(compares)f(surface)g
(indices)g(for)h(the)f(Muzzle)g(mesh.)538 b(Jostle)313
b(pro)36 b(duced)312 b(the)h(lo)-36 b(w)g(est)314 b(surface)0
68635 y(indices,)516 b(R)-36 b(CB)500 b(the)f(highest,)516
b(with)499 b(the)g(others)g(clustered)g(in)g(the)g(middle.)776
b(Statistics)499 b(for)h(the)f(other)0 70241 y(meshes)373
b(are)h(not)f(sho)-36 b(wn,)386 b(but)372 b(Jostle)i(consisten)-36
b(tly)374 b(ac)-36 b(hiev)g(ed)374 b(the)f(b)36 b(est)373
b(surface)g(indices.)559 b(P)-36 b(artitioning)0 71846
y(the)463 b(same)h(size)g(mesh)f(in)-36 b(to)463 b(more)h(parts)f(will)
h(almost)g(alw)-36 b(a)g(ys)465 b(increase)f(surface)g(indices.)668
b(This)464 b(is)g(the)25675 75417 y(6)p eop
%%Page: 7 7
7 6 bop 0 1424 a Fk(case)434 b(in)g(our)f(studies.)p
888 3018 50657 45 v 866 20300 45 17282 v 1553 19818 a
@beginspecial 50 @llx 50 @lly 410 @urx 302 @ury 2160
@rwi @setspecial
%%BeginDocument: graphs/methods/partition/avg_proc_adj/muzzle_avg_proc_adj.eps
%!PS-Adobe-2.0 EPSF-2.0
%%Title: muzzle_avg_percent.eps
%%Creator: gnuplot 3.7 patchlevel 1
%%CreationDate: Mon Jul 15 11:42:05 2002
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 410 302
%%Orientation: Portrait
%%EndComments
/gnudict 256 dict def
gnudict begin
/Color false def
/Solid false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
/vshift -60 def
/dl {10 mul} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow { currentpoint stroke M
  0 vshift R show } def
/Rshow { currentpoint stroke M
  dup stringwidth pop neg vshift R show } def
/Cshow { currentpoint stroke M
  dup stringwidth pop -2 div vshift R show } def
/UP { dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def } def
/DL { Color {setrgbcolor Solid {pop []} if 0 setdash }
 {pop pop pop Solid {pop []} if 0 setdash} ifelse } def
/BL { stroke userlinewidth 2 mul setlinewidth } def
/AL { stroke userlinewidth 2 div setlinewidth } def
/UL { dup gnulinewidth mul /userlinewidth exch def
      10 mul /udl exch def } def
/PL { stroke userlinewidth setlinewidth } def
/LTb { BL [] 0 0 0 DL } def
/LTa { AL [1 udl mul 2 udl mul] 0 setdash 0 0 0 setrgbcolor } def
/LT0 { PL [] 1 0 0 DL } def
/LT1 { PL [4 dl 2 dl] 0 1 0 DL } def
/LT2 { PL [2 dl 3 dl] 0 0 1 DL } def
/LT3 { PL [1 dl 1.5 dl] 1 0 1 DL } def
/LT4 { PL [5 dl 2 dl 1 dl 2 dl] 0 1 1 DL } def
/LT5 { PL [4 dl 3 dl 1 dl 3 dl] 1 1 0 DL } def
/LT6 { PL [2 dl 2 dl 2 dl 4 dl] 0 0 0 DL } def
/LT7 { PL [2 dl 2 dl 2 dl 2 dl 2 dl 4 dl] 1 0.3 0 DL } def
/LT8 { PL [2 dl 2 dl 2 dl 2 dl 2 dl 2 dl 2 dl 4 dl] 0.5 0.5 0.5 DL } def
/Pnt { stroke [] 0 setdash
   gsave 1 setlinecap M 0 0 V stroke grestore } def
/Dia { stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt } def
/Pls { stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
  } def
/Box { stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt } def
/Crs { stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke } def
/TriU { stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt  } def
/Star { 2 copy Pls Crs } def
/BoxF { stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V  hpt2 0 V  0 vpt2 V
  hpt2 neg 0 V  closepath fill } def
/TriUF { stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill } def
/TriD { stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt  } def
/TriDF { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF { stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill } def
/Pent { stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt } def
/PentF { stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore } def
/Circle { stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt } def
/CircleF { stroke [] 0 setdash hpt 0 360 arc fill } def
/C0 { BL [] 0 setdash 2 copy moveto vpt 90 450  arc } bind def
/C1 { BL [] 0 setdash 2 copy        moveto
       2 copy  vpt 0 90 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C2 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 90 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C3 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C4 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 180 270 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C5 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 90 arc
       2 copy moveto
       2 copy  vpt 180 270 arc closepath fill
               vpt 0 360 arc } bind def
/C6 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 90 270 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C7 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 0 270 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C8 { BL [] 0 setdash 2 copy moveto
      2 copy vpt 270 360 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C9 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 270 450 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C10 { BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
       2 copy moveto
       2 copy vpt 90 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C11 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 180 arc closepath fill
       2 copy moveto
       2 copy  vpt 270 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C12 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 180 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C13 { BL [] 0 setdash  2 copy moveto
       2 copy  vpt 0 90 arc closepath fill
       2 copy moveto
       2 copy  vpt 180 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C14 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 90 360 arc closepath fill
               vpt 0 360 arc } bind def
/C15 { BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/Rec   { newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
       neg 0 rlineto closepath } bind def
/Square { dup Rec } bind def
/Bsquare { vpt sub exch vpt sub exch vpt2 Square } bind def
/S0 { BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare } bind def
/S1 { BL [] 0 setdash 2 copy vpt Square fill Bsquare } bind def
/S2 { BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare } bind def
/S3 { BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare } bind def
/S4 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare } bind def
/S5 { BL [] 0 setdash 2 copy 2 copy vpt Square fill
       exch vpt sub exch vpt sub vpt Square fill Bsquare } bind def
/S6 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare } bind def
/S7 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
       2 copy vpt Square fill
       Bsquare } bind def
/S8 { BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare } bind def
/S9 { BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare } bind def
/S10 { BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
       Bsquare } bind def
/S11 { BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
       Bsquare } bind def
/S12 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare } bind def
/S13 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
       2 copy vpt Square fill Bsquare } bind def
/S14 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
       2 copy exch vpt sub exch vpt Square fill Bsquare } bind def
/S15 { BL [] 0 setdash 2 copy Bsquare fill Bsquare } bind def
/D0 { gsave translate 45 rotate 0 0 S0 stroke grestore } bind def
/D1 { gsave translate 45 rotate 0 0 S1 stroke grestore } bind def
/D2 { gsave translate 45 rotate 0 0 S2 stroke grestore } bind def
/D3 { gsave translate 45 rotate 0 0 S3 stroke grestore } bind def
/D4 { gsave translate 45 rotate 0 0 S4 stroke grestore } bind def
/D5 { gsave translate 45 rotate 0 0 S5 stroke grestore } bind def
/D6 { gsave translate 45 rotate 0 0 S6 stroke grestore } bind def
/D7 { gsave translate 45 rotate 0 0 S7 stroke grestore } bind def
/D8 { gsave translate 45 rotate 0 0 S8 stroke grestore } bind def
/D9 { gsave translate 45 rotate 0 0 S9 stroke grestore } bind def
/D10 { gsave translate 45 rotate 0 0 S10 stroke grestore } bind def
/D11 { gsave translate 45 rotate 0 0 S11 stroke grestore } bind def
/D12 { gsave translate 45 rotate 0 0 S12 stroke grestore } bind def
/D13 { gsave translate 45 rotate 0 0 S13 stroke grestore } bind def
/D14 { gsave translate 45 rotate 0 0 S14 stroke grestore } bind def
/D15 { gsave translate 45 rotate 0 0 S15 stroke grestore } bind def
/DiaE { stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke } def
/BoxE { stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke } def
/TriUE { stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke } def
/TriDE { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke } def
/PentE { stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore } def
/CircE { stroke [] 0 setdash 
  hpt 0 360 arc stroke } def
/Opaque { gsave closepath 1 setgray fill grestore 0 setgray closepath } def
/DiaW { stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke } def
/BoxW { stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke } def
/TriUW { stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke } def
/TriDW { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke } def
/PentW { stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore } def
/CircW { stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke } def
/BoxFill { gsave Rec 1 setgray fill grestore } def
/MFshow {{dup dup 0 get findfont exch 1 get scalefont setfont
     [ currentpoint ] exch dup 2 get 0 exch rmoveto dup dup 5 get exch 4 get
     {show} {stringwidth pop 0 rmoveto}ifelse dup 3 get
     {2 get neg 0 exch rmoveto pop} {pop aload pop moveto}ifelse} forall} bind def
/MFwidth {0 exch {dup 3 get{dup dup 0 get findfont exch 1 get scalefont setfont
      5 get stringwidth pop add}
    {pop} ifelse} forall} bind def
/MLshow { currentpoint stroke M
  0 exch R MFshow } bind def
/MRshow { currentpoint stroke M
  exch dup MFwidth neg 3 -1 roll R MFshow } def
/MCshow { currentpoint stroke M
  exch dup MFwidth -2 div 3 -1 roll R MFshow } def
end
%%EndProlog
gnudict begin
gsave
50 50 translate
0.050 0.050 scale
0 setgray
newpath
(Times-Roman) findfont 180 scalefont setfont
1.000 UL
LTb
810 540 M
63 0 V
6021 0 R
-63 0 V
 stroke
702 540 M
[ [(Times-Roman) 180.0 0.0 true true (30)]
] -60.0 MRshow
810 1106 M
63 0 V
6021 0 R
-63 0 V
 stroke
702 1106 M
[ [(Times-Roman) 180.0 0.0 true true (40)]
] -60.0 MRshow
810 1671 M
63 0 V
6021 0 R
-63 0 V
 stroke
702 1671 M
[ [(Times-Roman) 180.0 0.0 true true (50)]
] -60.0 MRshow
810 2237 M
63 0 V
6021 0 R
-63 0 V
 stroke
702 2237 M
[ [(Times-Roman) 180.0 0.0 true true (60)]
] -60.0 MRshow
810 2803 M
63 0 V
6021 0 R
-63 0 V
 stroke
702 2803 M
[ [(Times-Roman) 180.0 0.0 true true (70)]
] -60.0 MRshow
810 3369 M
63 0 V
6021 0 R
-63 0 V
 stroke
702 3369 M
[ [(Times-Roman) 180.0 0.0 true true (80)]
] -60.0 MRshow
810 3934 M
63 0 V
6021 0 R
-63 0 V
 stroke
702 3934 M
[ [(Times-Roman) 180.0 0.0 true true (90)]
] -60.0 MRshow
810 4500 M
63 0 V
6021 0 R
-63 0 V
 stroke
702 4500 M
[ [(Times-Roman) 180.0 0.0 true true (100)]
] -60.0 MRshow
810 540 M
0 63 V
0 3897 R
0 -63 V
 stroke
810 360 M
[ [(Times-Roman) 180.0 0.0 true true (2)]
] -60.0 MCshow
1486 540 M
0 63 V
0 3897 R
0 -63 V
 stroke
1486 360 M
[ [(Times-Roman) 180.0 0.0 true true (4)]
] -60.0 MCshow
2162 540 M
0 63 V
0 3897 R
0 -63 V
 stroke
2162 360 M
[ [(Times-Roman) 180.0 0.0 true true (6)]
] -60.0 MCshow
2838 540 M
0 63 V
0 3897 R
0 -63 V
 stroke
2838 360 M
[ [(Times-Roman) 180.0 0.0 true true (8)]
] -60.0 MCshow
3514 540 M
0 63 V
0 3897 R
0 -63 V
 stroke
3514 360 M
[ [(Times-Roman) 180.0 0.0 true true (10)]
] -60.0 MCshow
4190 540 M
0 63 V
0 3897 R
0 -63 V
 stroke
4190 360 M
[ [(Times-Roman) 180.0 0.0 true true (12)]
] -60.0 MCshow
4866 540 M
0 63 V
0 3897 R
0 -63 V
 stroke
4866 360 M
[ [(Times-Roman) 180.0 0.0 true true (14)]
] -60.0 MCshow
5542 540 M
0 63 V
0 3897 R
0 -63 V
 stroke
5542 360 M
[ [(Times-Roman) 180.0 0.0 true true (16)]
] -60.0 MCshow
6218 540 M
0 63 V
0 3897 R
0 -63 V
 stroke
6218 360 M
[ [(Times-Roman) 180.0 0.0 true true (18)]
] -60.0 MCshow
6894 540 M
0 63 V
0 3897 R
0 -63 V
 stroke
6894 360 M
[ [(Times-Roman) 180.0 0.0 true true (20)]
] -60.0 MCshow
1.000 UL
LTb
810 540 M
6084 0 V
0 3960 V
-6084 0 V
810 540 L
 stroke
180 2520 M
currentpoint gsave translate 90 rotate 0 0 moveto
[ [(Times-Roman) 180.0 0.0 true true (Interprocessor Adjacency)]
] -60.0 MCshow
grestore
3852 90 M
[ [(Times-Roman) 180.0 0.0 true true (Number of Processors)]
] -60.0 MCshow
3852 4770 M
[ [(Times-Roman) 180.0 0.0 true true (Average Interprocessor Adjacency \(Muzzle-Refined Mesh\))]
] -60.0 MCshow
1.000 UP
1.000 UL
LT0
6110 4330 M
[ [(Times-Roman) 180.0 0.0 true true (HSFC)]
] -60.0 MRshow
6218 4330 M
495 0 V
810 4500 M
676 0 V
676 -754 V
676 -256 V
676 -750 V
676 -383 V
676 -281 V
676 -263 V
676 -234 V
676 3 V
810 4500 Pls
1486 4500 Pls
2162 3746 Pls
2838 3490 Pls
3514 2740 Pls
4190 2357 Pls
4866 2076 Pls
5542 1813 Pls
6218 1579 Pls
6894 1582 Pls
6465 4330 Pls
1.000 UP
1.000 UL
LT1
6110 4150 M
[ [(Times-Roman) 180.0 0.0 true true (JOSTLE)]
] -60.0 MRshow
6218 4150 M
495 0 V
810 4500 M
676 -943 V
676 -943 V
676 -538 V
676 -216 V
676 -189 V
676 -279 V
5542 870 L
676 117 V
6894 689 L
810 4500 Crs
1486 3557 Crs
2162 2614 Crs
2838 2076 Crs
3514 1860 Crs
4190 1671 Crs
4866 1392 Crs
5542 870 Crs
6218 987 Crs
6894 689 Crs
6465 4150 Crs
1.000 UP
1.000 UL
LT2
6110 3970 M
[ [(Times-Roman) 180.0 0.0 true true (OCTPART)]
] -60.0 MRshow
6218 3970 M
495 0 V
810 4500 M
676 0 V
676 -754 V
676 148 V
676 -903 V
676 -462 V
676 -453 V
676 -169 V
676 -32 V
676 -204 V
810 4500 Star
1486 4500 Star
2162 3746 Star
2838 3894 Star
3514 2991 Star
4190 2529 Star
4866 2076 Star
5542 1907 Star
6218 1875 Star
6894 1671 Star
6465 3970 Star
1.000 UP
1.000 UL
LT3
6110 3790 M
[ [(Times-Roman) 180.0 0.0 true true (PARMETIS)]
] -60.0 MRshow
6218 3790 M
495 0 V
810 4500 M
676 0 V
676 0 V
676 -202 V
676 -427 V
676 -314 V
676 11 V
676 -435 V
676 -260 V
676 -368 V
810 4500 Box
1486 4500 Box
2162 4500 Box
2838 4298 Box
3514 3871 Box
4190 3557 Box
4866 3568 Box
5542 3133 Box
6218 2873 Box
6894 2505 Box
6465 3790 Box
1.000 UP
1.000 UL
LT4
6110 3610 M
[ [(Times-Roman) 180.0 0.0 true true (RCB)]
] -60.0 MRshow
6218 3610 M
495 0 V
810 4500 M
1486 2614 L
676 377 V
676 -107 V
676 -647 V
676 -223 V
676 -249 V
676 189 V
676 -486 V
676 -273 V
810 4500 BoxF
1486 2614 BoxF
2162 2991 BoxF
2838 2884 BoxF
3514 2237 BoxF
4190 2014 BoxF
4866 1765 BoxF
5542 1954 BoxF
6218 1468 BoxF
6894 1195 BoxF
6465 3610 BoxF
1.000 UP
1.000 UL
LT5
6110 3430 M
[ [(Times-Roman) 180.0 0.0 true true (RIB)]
] -60.0 MRshow
6218 3430 M
495 0 V
810 4500 M
1486 1671 L
676 -188 V
676 188 V
676 -440 V
676 -160 V
676 134 V
676 -146 V
6218 913 L
6894 629 L
810 4500 Circle
1486 1671 Circle
2162 1483 Circle
2838 1671 Circle
3514 1231 Circle
4190 1071 Circle
4866 1205 Circle
5542 1059 Circle
6218 913 Circle
6894 629 Circle
6465 3430 Circle
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Times-Roman

%%EndDocument
 @endspecial 25328 w @beginspecial 50 @llx 50 @lly 410
@urx 302 @ury 2160 @rwi @setspecial
%%BeginDocument: graphs/methods/partition/max_proc_adj/muzzle_max_proc_adj.eps
%!PS-Adobe-2.0 EPSF-2.0
%%Title: muzzle_max_adj_percent.eps
%%Creator: gnuplot 3.7 patchlevel 1
%%CreationDate: Mon Jul 15 14:53:06 2002
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 410 302
%%Orientation: Portrait
%%EndComments
/gnudict 256 dict def
gnudict begin
/Color false def
/Solid false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
/vshift -60 def
/dl {10 mul} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow { currentpoint stroke M
  0 vshift R show } def
/Rshow { currentpoint stroke M
  dup stringwidth pop neg vshift R show } def
/Cshow { currentpoint stroke M
  dup stringwidth pop -2 div vshift R show } def
/UP { dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def } def
/DL { Color {setrgbcolor Solid {pop []} if 0 setdash }
 {pop pop pop Solid {pop []} if 0 setdash} ifelse } def
/BL { stroke userlinewidth 2 mul setlinewidth } def
/AL { stroke userlinewidth 2 div setlinewidth } def
/UL { dup gnulinewidth mul /userlinewidth exch def
      10 mul /udl exch def } def
/PL { stroke userlinewidth setlinewidth } def
/LTb { BL [] 0 0 0 DL } def
/LTa { AL [1 udl mul 2 udl mul] 0 setdash 0 0 0 setrgbcolor } def
/LT0 { PL [] 1 0 0 DL } def
/LT1 { PL [4 dl 2 dl] 0 1 0 DL } def
/LT2 { PL [2 dl 3 dl] 0 0 1 DL } def
/LT3 { PL [1 dl 1.5 dl] 1 0 1 DL } def
/LT4 { PL [5 dl 2 dl 1 dl 2 dl] 0 1 1 DL } def
/LT5 { PL [4 dl 3 dl 1 dl 3 dl] 1 1 0 DL } def
/LT6 { PL [2 dl 2 dl 2 dl 4 dl] 0 0 0 DL } def
/LT7 { PL [2 dl 2 dl 2 dl 2 dl 2 dl 4 dl] 1 0.3 0 DL } def
/LT8 { PL [2 dl 2 dl 2 dl 2 dl 2 dl 2 dl 2 dl 4 dl] 0.5 0.5 0.5 DL } def
/Pnt { stroke [] 0 setdash
   gsave 1 setlinecap M 0 0 V stroke grestore } def
/Dia { stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt } def
/Pls { stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
  } def
/Box { stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt } def
/Crs { stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke } def
/TriU { stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt  } def
/Star { 2 copy Pls Crs } def
/BoxF { stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V  hpt2 0 V  0 vpt2 V
  hpt2 neg 0 V  closepath fill } def
/TriUF { stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill } def
/TriD { stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt  } def
/TriDF { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF { stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill } def
/Pent { stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt } def
/PentF { stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore } def
/Circle { stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt } def
/CircleF { stroke [] 0 setdash hpt 0 360 arc fill } def
/C0 { BL [] 0 setdash 2 copy moveto vpt 90 450  arc } bind def
/C1 { BL [] 0 setdash 2 copy        moveto
       2 copy  vpt 0 90 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C2 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 90 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C3 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C4 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 180 270 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C5 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 90 arc
       2 copy moveto
       2 copy  vpt 180 270 arc closepath fill
               vpt 0 360 arc } bind def
/C6 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 90 270 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C7 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 0 270 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C8 { BL [] 0 setdash 2 copy moveto
      2 copy vpt 270 360 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C9 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 270 450 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C10 { BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
       2 copy moveto
       2 copy vpt 90 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C11 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 180 arc closepath fill
       2 copy moveto
       2 copy  vpt 270 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C12 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 180 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C13 { BL [] 0 setdash  2 copy moveto
       2 copy  vpt 0 90 arc closepath fill
       2 copy moveto
       2 copy  vpt 180 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C14 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 90 360 arc closepath fill
               vpt 0 360 arc } bind def
/C15 { BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/Rec   { newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
       neg 0 rlineto closepath } bind def
/Square { dup Rec } bind def
/Bsquare { vpt sub exch vpt sub exch vpt2 Square } bind def
/S0 { BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare } bind def
/S1 { BL [] 0 setdash 2 copy vpt Square fill Bsquare } bind def
/S2 { BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare } bind def
/S3 { BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare } bind def
/S4 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare } bind def
/S5 { BL [] 0 setdash 2 copy 2 copy vpt Square fill
       exch vpt sub exch vpt sub vpt Square fill Bsquare } bind def
/S6 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare } bind def
/S7 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
       2 copy vpt Square fill
       Bsquare } bind def
/S8 { BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare } bind def
/S9 { BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare } bind def
/S10 { BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
       Bsquare } bind def
/S11 { BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
       Bsquare } bind def
/S12 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare } bind def
/S13 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
       2 copy vpt Square fill Bsquare } bind def
/S14 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
       2 copy exch vpt sub exch vpt Square fill Bsquare } bind def
/S15 { BL [] 0 setdash 2 copy Bsquare fill Bsquare } bind def
/D0 { gsave translate 45 rotate 0 0 S0 stroke grestore } bind def
/D1 { gsave translate 45 rotate 0 0 S1 stroke grestore } bind def
/D2 { gsave translate 45 rotate 0 0 S2 stroke grestore } bind def
/D3 { gsave translate 45 rotate 0 0 S3 stroke grestore } bind def
/D4 { gsave translate 45 rotate 0 0 S4 stroke grestore } bind def
/D5 { gsave translate 45 rotate 0 0 S5 stroke grestore } bind def
/D6 { gsave translate 45 rotate 0 0 S6 stroke grestore } bind def
/D7 { gsave translate 45 rotate 0 0 S7 stroke grestore } bind def
/D8 { gsave translate 45 rotate 0 0 S8 stroke grestore } bind def
/D9 { gsave translate 45 rotate 0 0 S9 stroke grestore } bind def
/D10 { gsave translate 45 rotate 0 0 S10 stroke grestore } bind def
/D11 { gsave translate 45 rotate 0 0 S11 stroke grestore } bind def
/D12 { gsave translate 45 rotate 0 0 S12 stroke grestore } bind def
/D13 { gsave translate 45 rotate 0 0 S13 stroke grestore } bind def
/D14 { gsave translate 45 rotate 0 0 S14 stroke grestore } bind def
/D15 { gsave translate 45 rotate 0 0 S15 stroke grestore } bind def
/DiaE { stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke } def
/BoxE { stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke } def
/TriUE { stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke } def
/TriDE { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke } def
/PentE { stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore } def
/CircE { stroke [] 0 setdash 
  hpt 0 360 arc stroke } def
/Opaque { gsave closepath 1 setgray fill grestore 0 setgray closepath } def
/DiaW { stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke } def
/BoxW { stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke } def
/TriUW { stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke } def
/TriDW { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke } def
/PentW { stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore } def
/CircW { stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke } def
/BoxFill { gsave Rec 1 setgray fill grestore } def
/MFshow {{dup dup 0 get findfont exch 1 get scalefont setfont
     [ currentpoint ] exch dup 2 get 0 exch rmoveto dup dup 5 get exch 4 get
     {show} {stringwidth pop 0 rmoveto}ifelse dup 3 get
     {2 get neg 0 exch rmoveto pop} {pop aload pop moveto}ifelse} forall} bind def
/MFwidth {0 exch {dup 3 get{dup dup 0 get findfont exch 1 get scalefont setfont
      5 get stringwidth pop add}
    {pop} ifelse} forall} bind def
/MLshow { currentpoint stroke M
  0 exch R MFshow } bind def
/MRshow { currentpoint stroke M
  exch dup MFwidth neg 3 -1 roll R MFshow } def
/MCshow { currentpoint stroke M
  exch dup MFwidth -2 div 3 -1 roll R MFshow } def
end
%%EndProlog
gnudict begin
gsave
50 50 translate
0.050 0.050 scale
0 setgray
newpath
(Times-Roman) findfont 180 scalefont setfont
1.000 UL
LTb
810 540 M
63 0 V
6021 0 R
-63 0 V
 stroke
702 540 M
[ [(Times-Roman) 180.0 0.0 true true (40)]
] -60.0 MRshow
810 1200 M
63 0 V
6021 0 R
-63 0 V
 stroke
702 1200 M
[ [(Times-Roman) 180.0 0.0 true true (50)]
] -60.0 MRshow
810 1860 M
63 0 V
6021 0 R
-63 0 V
 stroke
702 1860 M
[ [(Times-Roman) 180.0 0.0 true true (60)]
] -60.0 MRshow
810 2520 M
63 0 V
6021 0 R
-63 0 V
 stroke
702 2520 M
[ [(Times-Roman) 180.0 0.0 true true (70)]
] -60.0 MRshow
810 3180 M
63 0 V
6021 0 R
-63 0 V
 stroke
702 3180 M
[ [(Times-Roman) 180.0 0.0 true true (80)]
] -60.0 MRshow
810 3840 M
63 0 V
6021 0 R
-63 0 V
 stroke
702 3840 M
[ [(Times-Roman) 180.0 0.0 true true (90)]
] -60.0 MRshow
810 4500 M
63 0 V
6021 0 R
-63 0 V
 stroke
702 4500 M
[ [(Times-Roman) 180.0 0.0 true true (100)]
] -60.0 MRshow
810 540 M
0 63 V
0 3897 R
0 -63 V
 stroke
810 360 M
[ [(Times-Roman) 180.0 0.0 true true (2)]
] -60.0 MCshow
1486 540 M
0 63 V
0 3897 R
0 -63 V
 stroke
1486 360 M
[ [(Times-Roman) 180.0 0.0 true true (4)]
] -60.0 MCshow
2162 540 M
0 63 V
0 3897 R
0 -63 V
 stroke
2162 360 M
[ [(Times-Roman) 180.0 0.0 true true (6)]
] -60.0 MCshow
2838 540 M
0 63 V
0 3897 R
0 -63 V
 stroke
2838 360 M
[ [(Times-Roman) 180.0 0.0 true true (8)]
] -60.0 MCshow
3514 540 M
0 63 V
0 3897 R
0 -63 V
 stroke
3514 360 M
[ [(Times-Roman) 180.0 0.0 true true (10)]
] -60.0 MCshow
4190 540 M
0 63 V
0 3897 R
0 -63 V
 stroke
4190 360 M
[ [(Times-Roman) 180.0 0.0 true true (12)]
] -60.0 MCshow
4866 540 M
0 63 V
0 3897 R
0 -63 V
 stroke
4866 360 M
[ [(Times-Roman) 180.0 0.0 true true (14)]
] -60.0 MCshow
5542 540 M
0 63 V
0 3897 R
0 -63 V
 stroke
5542 360 M
[ [(Times-Roman) 180.0 0.0 true true (16)]
] -60.0 MCshow
6218 540 M
0 63 V
0 3897 R
0 -63 V
 stroke
6218 360 M
[ [(Times-Roman) 180.0 0.0 true true (18)]
] -60.0 MCshow
6894 540 M
0 63 V
0 3897 R
0 -63 V
 stroke
6894 360 M
[ [(Times-Roman) 180.0 0.0 true true (20)]
] -60.0 MCshow
1.000 UL
LTb
810 540 M
6084 0 V
0 3960 V
-6084 0 V
810 540 L
 stroke
180 2520 M
currentpoint gsave translate 90 rotate 0 0 moveto
[ [(Times-Roman) 180.0 0.0 true true (Interprocessor Adjacency)]
] -60.0 MCshow
grestore
3852 90 M
[ [(Times-Roman) 180.0 0.0 true true (Number of Processors)]
] -60.0 MCshow
3852 4770 M
[ [(Times-Roman) 180.0 0.0 true true (Maximum Interprocessor Adjacency \(Muzzle-Refined Mesh\))]
] -60.0 MCshow
1.000 UP
1.000 UL
LT0
2054 1662 M
[ [(Times-Roman) 180.0 0.0 true true (HSFC)]
] -60.0 MRshow
2162 1662 M
495 0 V
810 4500 M
676 0 V
676 0 V
676 0 V
676 -733 V
676 133 V
676 -415 V
676 135 V
676 -285 V
676 -224 V
810 4500 Pls
810 4500 Pls
1486 4500 Pls
1486 4500 Pls
1486 4500 Pls
2162 4500 Pls
2162 4500 Pls
2838 4500 Pls
2838 4500 Pls
2838 4500 Pls
3514 3767 Pls
4190 3900 Pls
4866 3485 Pls
5542 3620 Pls
6218 3335 Pls
6894 3111 Pls
2409 1662 Pls
1.000 UP
1.000 UL
LT1
2054 1482 M
[ [(Times-Roman) 180.0 0.0 true true (JOSTLE)]
] -60.0 MRshow
2162 1482 M
495 0 V
810 4500 M
676 0 V
2162 3180 L
676 -566 V
676 419 V
676 267 V
676 185 V
5542 2300 L
676 -518 V
676 634 V
810 4500 Crs
810 4500 Crs
1486 4500 Crs
1486 4500 Crs
1486 4500 Crs
2162 3180 Crs
2162 3180 Crs
2838 2614 Crs
2838 2614 Crs
2838 2614 Crs
3514 3033 Crs
4190 3300 Crs
4866 3485 Crs
5542 2300 Crs
6218 1782 Crs
6894 2416 Crs
2409 1482 Crs
1.000 UP
1.000 UL
LT2
2054 1302 M
[ [(Times-Roman) 180.0 0.0 true true (OCTPART)]
] -60.0 MRshow
2162 1302 M
495 0 V
810 4500 M
676 0 V
676 0 V
676 0 V
676 -733 V
676 133 V
676 92 V
676 -372 V
676 -285 V
676 -572 V
810 4500 Star
810 4500 Star
1486 4500 Star
1486 4500 Star
1486 4500 Star
2162 4500 Star
2162 4500 Star
2838 4500 Star
2838 4500 Star
2838 4500 Star
3514 3767 Star
4190 3900 Star
4866 3992 Star
5542 3620 Star
6218 3335 Star
6894 2763 Star
2409 1302 Star
1.000 UP
1.000 UL
LT3
2054 1122 M
[ [(Times-Roman) 180.0 0.0 true true (PARMETIS)]
] -60.0 MRshow
2162 1122 M
495 0 V
810 4500 M
676 0 V
676 0 V
676 0 V
676 0 V
676 0 V
676 0 V
676 0 V
676 -388 V
676 -654 V
810 4500 Box
810 4500 Box
1486 4500 Box
1486 4500 Box
1486 4500 Box
2162 4500 Box
2162 4500 Box
2838 4500 Box
2838 4500 Box
2838 4500 Box
3514 4500 Box
4190 4500 Box
4866 4500 Box
5542 4500 Box
6218 4112 Box
6894 3458 Box
2409 1122 Box
1.000 UP
1.000 UL
LT4
2054 942 M
[ [(Times-Roman) 180.0 0.0 true true (RCB)]
] -60.0 MRshow
2162 942 M
495 0 V
810 4500 M
676 0 V
676 0 V
676 0 V
676 -733 V
676 -467 V
676 185 V
676 -305 V
676 -233 V
676 -531 V
810 4500 BoxF
810 4500 BoxF
1486 4500 BoxF
1486 4500 BoxF
1486 4500 BoxF
2162 4500 BoxF
2162 4500 BoxF
2838 4500 BoxF
2838 4500 BoxF
2838 4500 BoxF
3514 3767 BoxF
4190 3300 BoxF
4866 3485 BoxF
5542 3180 BoxF
6218 2947 BoxF
6894 2416 BoxF
2409 942 BoxF
1.000 UP
1.000 UL
LT5
2054 762 M
[ [(Times-Roman) 180.0 0.0 true true (RIB)]
] -60.0 MRshow
2162 762 M
495 0 V
810 4500 M
1486 2300 L
676 -440 V
676 754 V
676 -314 V
676 400 V
676 -738 V
676 -102 V
676 -78 V
676 -61 V
810 4500 Circle
810 4500 Circle
1486 2300 Circle
1486 2300 Circle
1486 2300 Circle
2162 1860 Circle
2162 1860 Circle
2838 2614 Circle
2838 2614 Circle
2838 2614 Circle
3514 2300 Circle
4190 2700 Circle
4866 1962 Circle
5542 1860 Circle
6218 1782 Circle
6894 1721 Circle
2409 762 Circle
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Times-Roman

%%EndDocument
 @endspecial 51523 20300 V 866 37582 V 1553 37100 a @beginspecial
50 @llx 50 @lly 410 @urx 302 @ury 2160 @rwi @setspecial
%%BeginDocument: graphs/methods/partition/avg_proc_adj/cone_avg_proc_adj.eps
%!PS-Adobe-2.0 EPSF-2.0
%%Title: cone_avg_percent.eps
%%Creator: gnuplot 3.7 patchlevel 1
%%CreationDate: Mon Jul 15 11:40:16 2002
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 410 302
%%Orientation: Portrait
%%EndComments
/gnudict 256 dict def
gnudict begin
/Color false def
/Solid false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
/vshift -60 def
/dl {10 mul} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow { currentpoint stroke M
  0 vshift R show } def
/Rshow { currentpoint stroke M
  dup stringwidth pop neg vshift R show } def
/Cshow { currentpoint stroke M
  dup stringwidth pop -2 div vshift R show } def
/UP { dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def } def
/DL { Color {setrgbcolor Solid {pop []} if 0 setdash }
 {pop pop pop Solid {pop []} if 0 setdash} ifelse } def
/BL { stroke userlinewidth 2 mul setlinewidth } def
/AL { stroke userlinewidth 2 div setlinewidth } def
/UL { dup gnulinewidth mul /userlinewidth exch def
      10 mul /udl exch def } def
/PL { stroke userlinewidth setlinewidth } def
/LTb { BL [] 0 0 0 DL } def
/LTa { AL [1 udl mul 2 udl mul] 0 setdash 0 0 0 setrgbcolor } def
/LT0 { PL [] 1 0 0 DL } def
/LT1 { PL [4 dl 2 dl] 0 1 0 DL } def
/LT2 { PL [2 dl 3 dl] 0 0 1 DL } def
/LT3 { PL [1 dl 1.5 dl] 1 0 1 DL } def
/LT4 { PL [5 dl 2 dl 1 dl 2 dl] 0 1 1 DL } def
/LT5 { PL [4 dl 3 dl 1 dl 3 dl] 1 1 0 DL } def
/LT6 { PL [2 dl 2 dl 2 dl 4 dl] 0 0 0 DL } def
/LT7 { PL [2 dl 2 dl 2 dl 2 dl 2 dl 4 dl] 1 0.3 0 DL } def
/LT8 { PL [2 dl 2 dl 2 dl 2 dl 2 dl 2 dl 2 dl 4 dl] 0.5 0.5 0.5 DL } def
/Pnt { stroke [] 0 setdash
   gsave 1 setlinecap M 0 0 V stroke grestore } def
/Dia { stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt } def
/Pls { stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
  } def
/Box { stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt } def
/Crs { stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke } def
/TriU { stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt  } def
/Star { 2 copy Pls Crs } def
/BoxF { stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V  hpt2 0 V  0 vpt2 V
  hpt2 neg 0 V  closepath fill } def
/TriUF { stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill } def
/TriD { stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt  } def
/TriDF { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF { stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill } def
/Pent { stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt } def
/PentF { stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore } def
/Circle { stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt } def
/CircleF { stroke [] 0 setdash hpt 0 360 arc fill } def
/C0 { BL [] 0 setdash 2 copy moveto vpt 90 450  arc } bind def
/C1 { BL [] 0 setdash 2 copy        moveto
       2 copy  vpt 0 90 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C2 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 90 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C3 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C4 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 180 270 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C5 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 90 arc
       2 copy moveto
       2 copy  vpt 180 270 arc closepath fill
               vpt 0 360 arc } bind def
/C6 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 90 270 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C7 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 0 270 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C8 { BL [] 0 setdash 2 copy moveto
      2 copy vpt 270 360 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C9 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 270 450 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C10 { BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
       2 copy moveto
       2 copy vpt 90 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C11 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 180 arc closepath fill
       2 copy moveto
       2 copy  vpt 270 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C12 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 180 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C13 { BL [] 0 setdash  2 copy moveto
       2 copy  vpt 0 90 arc closepath fill
       2 copy moveto
       2 copy  vpt 180 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C14 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 90 360 arc closepath fill
               vpt 0 360 arc } bind def
/C15 { BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/Rec   { newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
       neg 0 rlineto closepath } bind def
/Square { dup Rec } bind def
/Bsquare { vpt sub exch vpt sub exch vpt2 Square } bind def
/S0 { BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare } bind def
/S1 { BL [] 0 setdash 2 copy vpt Square fill Bsquare } bind def
/S2 { BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare } bind def
/S3 { BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare } bind def
/S4 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare } bind def
/S5 { BL [] 0 setdash 2 copy 2 copy vpt Square fill
       exch vpt sub exch vpt sub vpt Square fill Bsquare } bind def
/S6 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare } bind def
/S7 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
       2 copy vpt Square fill
       Bsquare } bind def
/S8 { BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare } bind def
/S9 { BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare } bind def
/S10 { BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
       Bsquare } bind def
/S11 { BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
       Bsquare } bind def
/S12 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare } bind def
/S13 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
       2 copy vpt Square fill Bsquare } bind def
/S14 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
       2 copy exch vpt sub exch vpt Square fill Bsquare } bind def
/S15 { BL [] 0 setdash 2 copy Bsquare fill Bsquare } bind def
/D0 { gsave translate 45 rotate 0 0 S0 stroke grestore } bind def
/D1 { gsave translate 45 rotate 0 0 S1 stroke grestore } bind def
/D2 { gsave translate 45 rotate 0 0 S2 stroke grestore } bind def
/D3 { gsave translate 45 rotate 0 0 S3 stroke grestore } bind def
/D4 { gsave translate 45 rotate 0 0 S4 stroke grestore } bind def
/D5 { gsave translate 45 rotate 0 0 S5 stroke grestore } bind def
/D6 { gsave translate 45 rotate 0 0 S6 stroke grestore } bind def
/D7 { gsave translate 45 rotate 0 0 S7 stroke grestore } bind def
/D8 { gsave translate 45 rotate 0 0 S8 stroke grestore } bind def
/D9 { gsave translate 45 rotate 0 0 S9 stroke grestore } bind def
/D10 { gsave translate 45 rotate 0 0 S10 stroke grestore } bind def
/D11 { gsave translate 45 rotate 0 0 S11 stroke grestore } bind def
/D12 { gsave translate 45 rotate 0 0 S12 stroke grestore } bind def
/D13 { gsave translate 45 rotate 0 0 S13 stroke grestore } bind def
/D14 { gsave translate 45 rotate 0 0 S14 stroke grestore } bind def
/D15 { gsave translate 45 rotate 0 0 S15 stroke grestore } bind def
/DiaE { stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke } def
/BoxE { stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke } def
/TriUE { stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke } def
/TriDE { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke } def
/PentE { stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore } def
/CircE { stroke [] 0 setdash 
  hpt 0 360 arc stroke } def
/Opaque { gsave closepath 1 setgray fill grestore 0 setgray closepath } def
/DiaW { stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke } def
/BoxW { stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke } def
/TriUW { stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke } def
/TriDW { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke } def
/PentW { stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore } def
/CircW { stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke } def
/BoxFill { gsave Rec 1 setgray fill grestore } def
/MFshow {{dup dup 0 get findfont exch 1 get scalefont setfont
     [ currentpoint ] exch dup 2 get 0 exch rmoveto dup dup 5 get exch 4 get
     {show} {stringwidth pop 0 rmoveto}ifelse dup 3 get
     {2 get neg 0 exch rmoveto pop} {pop aload pop moveto}ifelse} forall} bind def
/MFwidth {0 exch {dup 3 get{dup dup 0 get findfont exch 1 get scalefont setfont
      5 get stringwidth pop add}
    {pop} ifelse} forall} bind def
/MLshow { currentpoint stroke M
  0 exch R MFshow } bind def
/MRshow { currentpoint stroke M
  exch dup MFwidth neg 3 -1 roll R MFshow } def
/MCshow { currentpoint stroke M
  exch dup MFwidth -2 div 3 -1 roll R MFshow } def
end
%%EndProlog
gnudict begin
gsave
50 50 translate
0.050 0.050 scale
0 setgray
newpath
(Times-Roman) findfont 180 scalefont setfont
1.000 UL
LTb
810 540 M
63 0 V
6021 0 R
-63 0 V
 stroke
702 540 M
[ [(Times-Roman) 180.0 0.0 true true (30)]
] -60.0 MRshow
810 1106 M
63 0 V
6021 0 R
-63 0 V
 stroke
702 1106 M
[ [(Times-Roman) 180.0 0.0 true true (40)]
] -60.0 MRshow
810 1671 M
63 0 V
6021 0 R
-63 0 V
 stroke
702 1671 M
[ [(Times-Roman) 180.0 0.0 true true (50)]
] -60.0 MRshow
810 2237 M
63 0 V
6021 0 R
-63 0 V
 stroke
702 2237 M
[ [(Times-Roman) 180.0 0.0 true true (60)]
] -60.0 MRshow
810 2803 M
63 0 V
6021 0 R
-63 0 V
 stroke
702 2803 M
[ [(Times-Roman) 180.0 0.0 true true (70)]
] -60.0 MRshow
810 3369 M
63 0 V
6021 0 R
-63 0 V
 stroke
702 3369 M
[ [(Times-Roman) 180.0 0.0 true true (80)]
] -60.0 MRshow
810 3934 M
63 0 V
6021 0 R
-63 0 V
 stroke
702 3934 M
[ [(Times-Roman) 180.0 0.0 true true (90)]
] -60.0 MRshow
810 4500 M
63 0 V
6021 0 R
-63 0 V
 stroke
702 4500 M
[ [(Times-Roman) 180.0 0.0 true true (100)]
] -60.0 MRshow
810 540 M
0 63 V
0 3897 R
0 -63 V
 stroke
810 360 M
[ [(Times-Roman) 180.0 0.0 true true (2)]
] -60.0 MCshow
1486 540 M
0 63 V
0 3897 R
0 -63 V
 stroke
1486 360 M
[ [(Times-Roman) 180.0 0.0 true true (4)]
] -60.0 MCshow
2162 540 M
0 63 V
0 3897 R
0 -63 V
 stroke
2162 360 M
[ [(Times-Roman) 180.0 0.0 true true (6)]
] -60.0 MCshow
2838 540 M
0 63 V
0 3897 R
0 -63 V
 stroke
2838 360 M
[ [(Times-Roman) 180.0 0.0 true true (8)]
] -60.0 MCshow
3514 540 M
0 63 V
0 3897 R
0 -63 V
 stroke
3514 360 M
[ [(Times-Roman) 180.0 0.0 true true (10)]
] -60.0 MCshow
4190 540 M
0 63 V
0 3897 R
0 -63 V
 stroke
4190 360 M
[ [(Times-Roman) 180.0 0.0 true true (12)]
] -60.0 MCshow
4866 540 M
0 63 V
0 3897 R
0 -63 V
 stroke
4866 360 M
[ [(Times-Roman) 180.0 0.0 true true (14)]
] -60.0 MCshow
5542 540 M
0 63 V
0 3897 R
0 -63 V
 stroke
5542 360 M
[ [(Times-Roman) 180.0 0.0 true true (16)]
] -60.0 MCshow
6218 540 M
0 63 V
0 3897 R
0 -63 V
 stroke
6218 360 M
[ [(Times-Roman) 180.0 0.0 true true (18)]
] -60.0 MCshow
6894 540 M
0 63 V
0 3897 R
0 -63 V
 stroke
6894 360 M
[ [(Times-Roman) 180.0 0.0 true true (20)]
] -60.0 MCshow
1.000 UL
LTb
810 540 M
6084 0 V
0 3960 V
-6084 0 V
810 540 L
 stroke
180 2520 M
currentpoint gsave translate 90 rotate 0 0 moveto
[ [(Times-Roman) 180.0 0.0 true true (Interprocessor Adjacency)]
] -60.0 MCshow
grestore
3852 90 M
[ [(Times-Roman) 180.0 0.0 true true (Number of Processors)]
] -60.0 MCshow
3852 4770 M
[ [(Times-Roman) 180.0 0.0 true true (Average Interprocessor Adjacency \(Cone Mesh\))]
] -60.0 MCshow
1.000 UP
1.000 UL
LT0
2054 1954 M
[ [(Times-Roman) 180.0 0.0 true true (HSFC)]
] -60.0 MRshow
2162 1954 M
495 0 V
810 4500 M
676 0 V
676 -377 V
676 -633 V
676 130 V
676 -577 V
676 -470 V
676 -713 V
676 163 V
676 -262 V
810 4500 Pls
1486 4500 Pls
2162 4123 Pls
2838 3490 Pls
3514 3620 Pls
4190 3043 Pls
4866 2573 Pls
5542 1860 Pls
6218 2023 Pls
6894 1761 Pls
2409 1954 Pls
1.000 UP
1.000 UL
LT1
2054 1774 M
[ [(Times-Roman) 180.0 0.0 true true (JOSTLE)]
] -60.0 MRshow
2162 1774 M
495 0 V
810 4500 M
676 0 V
2162 2991 L
676 -511 V
676 -117 V
676 -520 V
676 -78 V
676 -329 V
676 -375 V
6894 897 L
810 4500 Crs
1486 4500 Crs
2162 2991 Crs
2838 2480 Crs
3514 2363 Crs
4190 1843 Crs
4866 1765 Crs
5542 1436 Crs
6218 1061 Crs
6894 897 Crs
2409 1774 Crs
1.000 UP
1.000 UL
LT2
2054 1594 M
[ [(Times-Roman) 180.0 0.0 true true (OCTPART)]
] -60.0 MRshow
2162 1594 M
495 0 V
810 4500 M
676 0 V
676 -377 V
676 -835 V
676 206 V
676 -451 V
676 -346 V
676 -366 V
676 -123 V
676 -269 V
810 4500 Star
1486 4500 Star
2162 4123 Star
2838 3288 Star
3514 3494 Star
4190 3043 Star
4866 2697 Star
5542 2331 Star
6218 2208 Star
6894 1939 Star
2409 1594 Star
1.000 UP
1.000 UL
LT3
2054 1414 M
[ [(Times-Roman) 180.0 0.0 true true (PARMETIS)]
] -60.0 MRshow
2162 1414 M
495 0 V
810 4500 M
676 0 V
676 0 V
676 -202 V
676 -49 V
676 -6 V
676 -489 V
676 -291 V
676 113 V
676 -327 V
810 4500 Box
1486 4500 Box
2162 4500 Box
2838 4298 Box
3514 4249 Box
4190 4243 Box
4866 3754 Box
5542 3463 Box
6218 3576 Box
6894 3249 Box
2409 1414 Box
1.000 UP
1.000 UL
LT4
2054 1234 M
[ [(Times-Roman) 180.0 0.0 true true (RCB)]
] -60.0 MRshow
2162 1234 M
495 0 V
810 4500 M
676 0 V
2162 3369 L
676 -889 V
676 -494 V
676 -229 V
676 -365 V
676 -3 V
676 -180 V
6894 897 L
810 4500 BoxF
1486 4500 BoxF
2162 3369 BoxF
2838 2480 BoxF
3514 1986 BoxF
4190 1757 BoxF
4866 1392 BoxF
5542 1389 BoxF
6218 1209 BoxF
6894 897 BoxF
2409 1234 BoxF
1.000 UP
1.000 UL
LT5
2054 1054 M
[ [(Times-Roman) 180.0 0.0 true true (RIB)]
] -60.0 MRshow
2162 1054 M
495 0 V
810 4500 M
1486 2614 L
676 377 V
676 -713 V
676 -41 V
676 -394 V
676 -140 V
676 -267 V
676 -301 V
676 0 V
810 4500 Circle
1486 2614 Circle
2162 2991 Circle
2838 2278 Circle
3514 2237 Circle
4190 1843 Circle
4866 1703 Circle
5542 1436 Circle
6218 1135 Circle
6894 1135 Circle
2409 1054 Circle
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Times-Roman

%%EndDocument
 @endspecial 25328 w @beginspecial 50 @llx 50 @lly 410
@urx 302 @ury 2160 @rwi @setspecial
%%BeginDocument: graphs/methods/partition/max_proc_adj/cone_max_proc_adj.eps
%!PS-Adobe-2.0 EPSF-2.0
%%Title: cone_max_adj_percent.eps
%%Creator: gnuplot 3.7 patchlevel 1
%%CreationDate: Mon Jul 15 14:39:38 2002
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 410 302
%%Orientation: Portrait
%%EndComments
/gnudict 256 dict def
gnudict begin
/Color false def
/Solid false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
/vshift -60 def
/dl {10 mul} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow { currentpoint stroke M
  0 vshift R show } def
/Rshow { currentpoint stroke M
  dup stringwidth pop neg vshift R show } def
/Cshow { currentpoint stroke M
  dup stringwidth pop -2 div vshift R show } def
/UP { dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def } def
/DL { Color {setrgbcolor Solid {pop []} if 0 setdash }
 {pop pop pop Solid {pop []} if 0 setdash} ifelse } def
/BL { stroke userlinewidth 2 mul setlinewidth } def
/AL { stroke userlinewidth 2 div setlinewidth } def
/UL { dup gnulinewidth mul /userlinewidth exch def
      10 mul /udl exch def } def
/PL { stroke userlinewidth setlinewidth } def
/LTb { BL [] 0 0 0 DL } def
/LTa { AL [1 udl mul 2 udl mul] 0 setdash 0 0 0 setrgbcolor } def
/LT0 { PL [] 1 0 0 DL } def
/LT1 { PL [4 dl 2 dl] 0 1 0 DL } def
/LT2 { PL [2 dl 3 dl] 0 0 1 DL } def
/LT3 { PL [1 dl 1.5 dl] 1 0 1 DL } def
/LT4 { PL [5 dl 2 dl 1 dl 2 dl] 0 1 1 DL } def
/LT5 { PL [4 dl 3 dl 1 dl 3 dl] 1 1 0 DL } def
/LT6 { PL [2 dl 2 dl 2 dl 4 dl] 0 0 0 DL } def
/LT7 { PL [2 dl 2 dl 2 dl 2 dl 2 dl 4 dl] 1 0.3 0 DL } def
/LT8 { PL [2 dl 2 dl 2 dl 2 dl 2 dl 2 dl 2 dl 4 dl] 0.5 0.5 0.5 DL } def
/Pnt { stroke [] 0 setdash
   gsave 1 setlinecap M 0 0 V stroke grestore } def
/Dia { stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt } def
/Pls { stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
  } def
/Box { stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt } def
/Crs { stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke } def
/TriU { stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt  } def
/Star { 2 copy Pls Crs } def
/BoxF { stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V  hpt2 0 V  0 vpt2 V
  hpt2 neg 0 V  closepath fill } def
/TriUF { stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill } def
/TriD { stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt  } def
/TriDF { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF { stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill } def
/Pent { stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt } def
/PentF { stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore } def
/Circle { stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt } def
/CircleF { stroke [] 0 setdash hpt 0 360 arc fill } def
/C0 { BL [] 0 setdash 2 copy moveto vpt 90 450  arc } bind def
/C1 { BL [] 0 setdash 2 copy        moveto
       2 copy  vpt 0 90 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C2 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 90 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C3 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C4 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 180 270 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C5 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 90 arc
       2 copy moveto
       2 copy  vpt 180 270 arc closepath fill
               vpt 0 360 arc } bind def
/C6 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 90 270 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C7 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 0 270 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C8 { BL [] 0 setdash 2 copy moveto
      2 copy vpt 270 360 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C9 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 270 450 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C10 { BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
       2 copy moveto
       2 copy vpt 90 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C11 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 180 arc closepath fill
       2 copy moveto
       2 copy  vpt 270 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C12 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 180 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C13 { BL [] 0 setdash  2 copy moveto
       2 copy  vpt 0 90 arc closepath fill
       2 copy moveto
       2 copy  vpt 180 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C14 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 90 360 arc closepath fill
               vpt 0 360 arc } bind def
/C15 { BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/Rec   { newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
       neg 0 rlineto closepath } bind def
/Square { dup Rec } bind def
/Bsquare { vpt sub exch vpt sub exch vpt2 Square } bind def
/S0 { BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare } bind def
/S1 { BL [] 0 setdash 2 copy vpt Square fill Bsquare } bind def
/S2 { BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare } bind def
/S3 { BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare } bind def
/S4 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare } bind def
/S5 { BL [] 0 setdash 2 copy 2 copy vpt Square fill
       exch vpt sub exch vpt sub vpt Square fill Bsquare } bind def
/S6 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare } bind def
/S7 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
       2 copy vpt Square fill
       Bsquare } bind def
/S8 { BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare } bind def
/S9 { BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare } bind def
/S10 { BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
       Bsquare } bind def
/S11 { BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
       Bsquare } bind def
/S12 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare } bind def
/S13 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
       2 copy vpt Square fill Bsquare } bind def
/S14 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
       2 copy exch vpt sub exch vpt Square fill Bsquare } bind def
/S15 { BL [] 0 setdash 2 copy Bsquare fill Bsquare } bind def
/D0 { gsave translate 45 rotate 0 0 S0 stroke grestore } bind def
/D1 { gsave translate 45 rotate 0 0 S1 stroke grestore } bind def
/D2 { gsave translate 45 rotate 0 0 S2 stroke grestore } bind def
/D3 { gsave translate 45 rotate 0 0 S3 stroke grestore } bind def
/D4 { gsave translate 45 rotate 0 0 S4 stroke grestore } bind def
/D5 { gsave translate 45 rotate 0 0 S5 stroke grestore } bind def
/D6 { gsave translate 45 rotate 0 0 S6 stroke grestore } bind def
/D7 { gsave translate 45 rotate 0 0 S7 stroke grestore } bind def
/D8 { gsave translate 45 rotate 0 0 S8 stroke grestore } bind def
/D9 { gsave translate 45 rotate 0 0 S9 stroke grestore } bind def
/D10 { gsave translate 45 rotate 0 0 S10 stroke grestore } bind def
/D11 { gsave translate 45 rotate 0 0 S11 stroke grestore } bind def
/D12 { gsave translate 45 rotate 0 0 S12 stroke grestore } bind def
/D13 { gsave translate 45 rotate 0 0 S13 stroke grestore } bind def
/D14 { gsave translate 45 rotate 0 0 S14 stroke grestore } bind def
/D15 { gsave translate 45 rotate 0 0 S15 stroke grestore } bind def
/DiaE { stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke } def
/BoxE { stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke } def
/TriUE { stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke } def
/TriDE { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke } def
/PentE { stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore } def
/CircE { stroke [] 0 setdash 
  hpt 0 360 arc stroke } def
/Opaque { gsave closepath 1 setgray fill grestore 0 setgray closepath } def
/DiaW { stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke } def
/BoxW { stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke } def
/TriUW { stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke } def
/TriDW { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke } def
/PentW { stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore } def
/CircW { stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke } def
/BoxFill { gsave Rec 1 setgray fill grestore } def
/MFshow {{dup dup 0 get findfont exch 1 get scalefont setfont
     [ currentpoint ] exch dup 2 get 0 exch rmoveto dup dup 5 get exch 4 get
     {show} {stringwidth pop 0 rmoveto}ifelse dup 3 get
     {2 get neg 0 exch rmoveto pop} {pop aload pop moveto}ifelse} forall} bind def
/MFwidth {0 exch {dup 3 get{dup dup 0 get findfont exch 1 get scalefont setfont
      5 get stringwidth pop add}
    {pop} ifelse} forall} bind def
/MLshow { currentpoint stroke M
  0 exch R MFshow } bind def
/MRshow { currentpoint stroke M
  exch dup MFwidth neg 3 -1 roll R MFshow } def
/MCshow { currentpoint stroke M
  exch dup MFwidth -2 div 3 -1 roll R MFshow } def
end
%%EndProlog
gnudict begin
gsave
50 50 translate
0.050 0.050 scale
0 setgray
newpath
(Times-Roman) findfont 180 scalefont setfont
1.000 UL
LTb
810 540 M
63 0 V
6021 0 R
-63 0 V
 stroke
702 540 M
[ [(Times-Roman) 180.0 0.0 true true (50)]
] -60.0 MRshow
810 936 M
63 0 V
6021 0 R
-63 0 V
 stroke
702 936 M
[ [(Times-Roman) 180.0 0.0 true true (55)]
] -60.0 MRshow
810 1332 M
63 0 V
6021 0 R
-63 0 V
 stroke
702 1332 M
[ [(Times-Roman) 180.0 0.0 true true (60)]
] -60.0 MRshow
810 1728 M
63 0 V
6021 0 R
-63 0 V
 stroke
702 1728 M
[ [(Times-Roman) 180.0 0.0 true true (65)]
] -60.0 MRshow
810 2124 M
63 0 V
6021 0 R
-63 0 V
 stroke
702 2124 M
[ [(Times-Roman) 180.0 0.0 true true (70)]
] -60.0 MRshow
810 2520 M
63 0 V
6021 0 R
-63 0 V
 stroke
702 2520 M
[ [(Times-Roman) 180.0 0.0 true true (75)]
] -60.0 MRshow
810 2916 M
63 0 V
6021 0 R
-63 0 V
 stroke
702 2916 M
[ [(Times-Roman) 180.0 0.0 true true (80)]
] -60.0 MRshow
810 3312 M
63 0 V
6021 0 R
-63 0 V
 stroke
702 3312 M
[ [(Times-Roman) 180.0 0.0 true true (85)]
] -60.0 MRshow
810 3708 M
63 0 V
6021 0 R
-63 0 V
 stroke
702 3708 M
[ [(Times-Roman) 180.0 0.0 true true (90)]
] -60.0 MRshow
810 4104 M
63 0 V
6021 0 R
-63 0 V
 stroke
702 4104 M
[ [(Times-Roman) 180.0 0.0 true true (95)]
] -60.0 MRshow
810 4500 M
63 0 V
6021 0 R
-63 0 V
 stroke
702 4500 M
[ [(Times-Roman) 180.0 0.0 true true (100)]
] -60.0 MRshow
810 540 M
0 63 V
0 3897 R
0 -63 V
 stroke
810 360 M
[ [(Times-Roman) 180.0 0.0 true true (2)]
] -60.0 MCshow
1486 540 M
0 63 V
0 3897 R
0 -63 V
 stroke
1486 360 M
[ [(Times-Roman) 180.0 0.0 true true (4)]
] -60.0 MCshow
2162 540 M
0 63 V
0 3897 R
0 -63 V
 stroke
2162 360 M
[ [(Times-Roman) 180.0 0.0 true true (6)]
] -60.0 MCshow
2838 540 M
0 63 V
0 3897 R
0 -63 V
 stroke
2838 360 M
[ [(Times-Roman) 180.0 0.0 true true (8)]
] -60.0 MCshow
3514 540 M
0 63 V
0 3897 R
0 -63 V
 stroke
3514 360 M
[ [(Times-Roman) 180.0 0.0 true true (10)]
] -60.0 MCshow
4190 540 M
0 63 V
0 3897 R
0 -63 V
 stroke
4190 360 M
[ [(Times-Roman) 180.0 0.0 true true (12)]
] -60.0 MCshow
4866 540 M
0 63 V
0 3897 R
0 -63 V
 stroke
4866 360 M
[ [(Times-Roman) 180.0 0.0 true true (14)]
] -60.0 MCshow
5542 540 M
0 63 V
0 3897 R
0 -63 V
 stroke
5542 360 M
[ [(Times-Roman) 180.0 0.0 true true (16)]
] -60.0 MCshow
6218 540 M
0 63 V
0 3897 R
0 -63 V
 stroke
6218 360 M
[ [(Times-Roman) 180.0 0.0 true true (18)]
] -60.0 MCshow
6894 540 M
0 63 V
0 3897 R
0 -63 V
 stroke
6894 360 M
[ [(Times-Roman) 180.0 0.0 true true (20)]
] -60.0 MCshow
1.000 UL
LTb
810 540 M
6084 0 V
0 3960 V
-6084 0 V
810 540 L
 stroke
180 2520 M
currentpoint gsave translate 90 rotate 0 0 moveto
[ [(Times-Roman) 180.0 0.0 true true (Interprocessor Adjacency)]
] -60.0 MCshow
grestore
3852 90 M
[ [(Times-Roman) 180.0 0.0 true true (Number of Processors)]
] -60.0 MCshow
3852 4770 M
[ [(Times-Roman) 180.0 0.0 true true (Maximum Interprocessor Adjacency \(Cone Mesh\))]
] -60.0 MCshow
1.000 UP
1.000 UL
LT0
2054 1728 M
[ [(Times-Roman) 180.0 0.0 true true (HSFC)]
] -60.0 MRshow
2162 1728 M
495 0 V
810 4500 M
676 0 V
676 0 V
676 0 V
676 0 V
676 -720 V
676 -498 V
676 -894 V
676 1180 V
676 -319 V
810 4500 Pls
810 4500 Pls
1486 4500 Pls
1486 4500 Pls
1486 4500 Pls
2162 4500 Pls
2162 4500 Pls
2838 4500 Pls
2838 4500 Pls
2838 4500 Pls
3514 4500 Pls
4190 3780 Pls
4866 3282 Pls
5542 2388 Pls
6218 3568 Pls
6894 3249 Pls
2409 1728 Pls
1.000 UP
1.000 UL
LT1
2054 1548 M
[ [(Times-Roman) 180.0 0.0 true true (JOSTLE)]
] -60.0 MRshow
2162 1548 M
495 0 V
810 4500 M
676 0 V
676 0 V
2838 3369 L
676 251 V
676 -560 V
676 -997 V
676 325 V
6218 1239 L
6894 748 L
810 4500 Crs
810 4500 Crs
1486 4500 Crs
1486 4500 Crs
1486 4500 Crs
2162 4500 Crs
2162 4500 Crs
2838 3369 Crs
2838 3369 Crs
2838 3369 Crs
3514 3620 Crs
4190 3060 Crs
4866 2063 Crs
5542 2388 Crs
6218 1239 Crs
6894 748 Crs
2409 1548 Crs
1.000 UP
1.000 UL
LT2
2054 1368 M
[ [(Times-Roman) 180.0 0.0 true true (OCTPART)]
] -60.0 MRshow
2162 1368 M
495 0 V
810 4500 M
676 0 V
676 0 V
676 0 V
676 0 V
676 -720 V
676 -498 V
676 -894 V
676 248 V
676 197 V
810 4500 Star
810 4500 Star
1486 4500 Star
1486 4500 Star
1486 4500 Star
2162 4500 Star
2162 4500 Star
2838 4500 Star
2838 4500 Star
2838 4500 Star
3514 4500 Star
4190 3780 Star
4866 3282 Star
5542 2388 Star
6218 2636 Star
6894 2833 Star
2409 1368 Star
1.000 UP
1.000 UL
LT3
2054 1188 M
[ [(Times-Roman) 180.0 0.0 true true (PARMETIS)]
] -60.0 MRshow
2162 1188 M
495 0 V
810 4500 M
676 0 V
676 0 V
676 0 V
676 0 V
676 0 V
676 0 V
676 0 V
676 0 V
676 0 V
810 4500 Box
810 4500 Box
1486 4500 Box
1486 4500 Box
1486 4500 Box
2162 4500 Box
2162 4500 Box
2838 4500 Box
2838 4500 Box
2838 4500 Box
3514 4500 Box
4190 4500 Box
4866 4500 Box
5542 4500 Box
6218 4500 Box
6894 4500 Box
2409 1188 Box
1.000 UP
1.000 UL
LT4
2054 1008 M
[ [(Times-Roman) 180.0 0.0 true true (RCB)]
] -60.0 MRshow
2162 1008 M
495 0 V
810 4500 M
676 0 V
676 0 V
676 0 V
676 0 V
676 0 V
4866 2672 L
676 -812 V
676 311 V
6894 1165 L
810 4500 BoxF
810 4500 BoxF
1486 4500 BoxF
1486 4500 BoxF
1486 4500 BoxF
2162 4500 BoxF
2162 4500 BoxF
2838 4500 BoxF
2838 4500 BoxF
2838 4500 BoxF
3514 4500 BoxF
4190 4500 BoxF
4866 2672 BoxF
5542 1860 BoxF
6218 2171 BoxF
6894 1165 BoxF
2409 1008 BoxF
1.000 UP
1.000 UL
LT5
2054 828 M
[ [(Times-Roman) 180.0 0.0 true true (RIB)]
] -60.0 MRshow
2162 828 M
495 0 V
810 4500 M
676 0 V
676 0 V
676 0 V
676 0 V
676 -720 V
4866 2063 L
676 325 V
676 -683 V
676 -540 V
810 4500 Circle
810 4500 Circle
1486 4500 Circle
1486 4500 Circle
1486 4500 Circle
2162 4500 Circle
2162 4500 Circle
2838 4500 Circle
2838 4500 Circle
2838 4500 Circle
3514 4500 Circle
4190 3780 Circle
4866 2063 Circle
5542 2388 Circle
6218 1705 Circle
6894 1165 Circle
2409 828 Circle
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Times-Roman

%%EndDocument
 @endspecial 51523 37582 V 888 37626 50657 45 v 0 39840
a(Figure)441 b(3:)593 b Fj(ad)-145 b(j)7464 40039 y Fb(A)8665
39840 y Fk(\(left\))441 b(and)f Fj(ad)-145 b(j)16248
40039 y Fb(M)17743 39840 y Fk(\(righ)-36 b(t\))440 b(for)h(the)f
(Muzzle)h(mesh)f(\(top\))g(and)h(Cone)g(mesh)f(\(b)36
b(ottom\).)0 41445 y(RIB)511 b(and)f(Jostle)i(pro)36
b(duced)509 b(the)h(lo)-36 b(w)g(est)512 b(adjacencies)f(in)g(most)f
(cases)i(for)f(the)f(Muzzle)h(mesh,)529 b(while)0 43050
y(R)-36 b(CB)434 b(also)h(p)36 b(erformed)433 b(w)-36
b(ell)434 b(for)g(the)g(Cone)f(mesh.)1951 46463 y(Figures)340
b(3)h(and)f(4)h(sho)-36 b(w)340 b(in)-36 b(terpro)36
b(cess)340 b(adjacency)h(v)-72 b(alues)341 b(for)g(the)f(four)g
(meshes.)547 b(Adjacency)341 b(v)-72 b(alues)0 48068
y(generally)310 b(decrease)f(and)f(b)36 b(ecome)309 b(more)f
(meaningful)i(as)f(the)f(n)-36 b(um)g(b)36 b(er)307 b(of)i(pro)36
b(cesses)309 b(increases.)537 b(F)-108 b(or)309 b(the)0
49673 y(Muzzle)401 b(mesh,)408 b(RIB)401 b(usually)h(had)f(the)f(lo)-36
b(w)g(est)402 b Fj(ad)-145 b(j)25578 49872 y Fb(A)26338
49673 y Fk(,)408 b(follo)-36 b(w)g(ed)403 b(b)-36 b(y)401
b(Jostle)h(and)e(R)-36 b(CB,)402 b(while)g(P)-36 b(armetis)0
51278 y(w)g(as)520 b(consisten)-36 b(tly)519 b(the)g(highest)g(for)h(b)
36 b(oth)518 b(a)-36 b(v)g(erage)521 b(and)e(maxim)-36
b(um)519 b(adjacency)-108 b(.)836 b(Jostle,)541 b(R)-36
b(CB,)520 b(and)0 52883 y(RIB)353 b(ac)-36 b(hiev)g(ed)354
b(the)e(b)36 b(est)353 b(adjacency)h(v)-72 b(alues)353
b(for)h(the)f(Cone)g(mesh)g(and)f(P)-36 b(armetis)353
b(remained)g(the)f(w)-36 b(orst.)0 54488 y(Jostle)444
b(had)e(the)g(lo)-36 b(w)g(est)444 b(v)-72 b(alues)443
b(for)h(the)e(Tw)-36 b(o)444 b(Pip)36 b(es)443 b(mesh)g(and)f(Jostle)i
(and)e(R)-36 b(CB)443 b(w)-36 b(ere)444 b(the)e(b)36
b(est)442 b(for)0 56094 y(the)366 b(Quartercone)f(mesh.)555
b(As)366 b(these)g(studies)g(sho)-36 b(w,)380 b(in)-36
b(terpro)36 b(cess)365 b(adjacency)i(statistics)g(often)f(dep)36
b(end)0 57699 y(hea)-36 b(vily)587 b(on)f(mesh)g(structure.)1034
b(Consider)586 b(RIB,)h(whic)-36 b(h)586 b(p)36 b(erformed)586
b(w)-36 b(ell)587 b(in)e(this)h(measure)g(for)h(the)0
59304 y(Muzzle)433 b(and)h(Cone)f(meshes,)h(but)f(not)g(as)h(w)-36
b(ell)434 b(for)g(Quartercone)f(and)g(Tw)-36 b(o)435
b(Pip)36 b(es.)0 63741 y Fl(4)2152 b(Dynamic)717 b(Load)g(Balancing)f
(for)h(an)g(Adaptiv)-60 b(e)716 b(Analysis)0 66661 y
Fk(T)-108 b(o)629 b(examine)h(dynamic)f(load)h(balancing)f(p)36
b(erformance,)679 b(w)-36 b(e)629 b(solv)-36 b(e)630
b(the)f(\\p)36 b(erforated)629 b(sho)36 b(c)-36 b(k)629
b(tub)36 b(e")0 68266 y(problem)481 b(describ)36 b(ed)480
b(in)h Ff(x)p Fk(2.1.)722 b(W)-108 b(e)481 b(compare)h(Jostle,)493
b(P)-36 b(armetis,)494 b(R)-36 b(CB,)482 b(and)e(RIB,)i(with)f(the)g
(default)0 69872 y(parameter)476 b(v)-72 b(alues)477
b(for)g(eac)-36 b(h)476 b(algorithm.)707 b(Load)477 b(balancing)f(uses)
g(elemen)-36 b(t)476 b(w)-36 b(eigh)g(ts)477 b(sp)36
b(eci\257ed)476 b(as)h(the)0 71477 y(in)-36 b(v)g(erse)425
b(of)h(the)e(radius)h(of)h(a)f(sphere)g(inscrib)36 b(ed)424
b(in)h(eac)-36 b(h)425 b(elemen)-36 b(t)425 b(to)g(accoun)-36
b(t)425 b(for)g(the)g(computational)25675 75417 y(7)p
eop
%%Page: 8 8
8 7 bop 888 140 50657 45 v 866 17422 45 17282 v 1553
16940 a @beginspecial 50 @llx 50 @lly 410 @urx 302 @ury
2160 @rwi @setspecial
%%BeginDocument: graphs/methods/partition/avg_proc_adj/twoPipes_avg_proc_adj.eps
%!PS-Adobe-2.0 EPSF-2.0
%%Title: twoPipes_avg_percent.eps
%%Creator: gnuplot 3.7 patchlevel 1
%%CreationDate: Mon Jul 15 11:47:24 2002
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 410 302
%%Orientation: Portrait
%%EndComments
/gnudict 256 dict def
gnudict begin
/Color false def
/Solid false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
/vshift -60 def
/dl {10 mul} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow { currentpoint stroke M
  0 vshift R show } def
/Rshow { currentpoint stroke M
  dup stringwidth pop neg vshift R show } def
/Cshow { currentpoint stroke M
  dup stringwidth pop -2 div vshift R show } def
/UP { dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def } def
/DL { Color {setrgbcolor Solid {pop []} if 0 setdash }
 {pop pop pop Solid {pop []} if 0 setdash} ifelse } def
/BL { stroke userlinewidth 2 mul setlinewidth } def
/AL { stroke userlinewidth 2 div setlinewidth } def
/UL { dup gnulinewidth mul /userlinewidth exch def
      10 mul /udl exch def } def
/PL { stroke userlinewidth setlinewidth } def
/LTb { BL [] 0 0 0 DL } def
/LTa { AL [1 udl mul 2 udl mul] 0 setdash 0 0 0 setrgbcolor } def
/LT0 { PL [] 1 0 0 DL } def
/LT1 { PL [4 dl 2 dl] 0 1 0 DL } def
/LT2 { PL [2 dl 3 dl] 0 0 1 DL } def
/LT3 { PL [1 dl 1.5 dl] 1 0 1 DL } def
/LT4 { PL [5 dl 2 dl 1 dl 2 dl] 0 1 1 DL } def
/LT5 { PL [4 dl 3 dl 1 dl 3 dl] 1 1 0 DL } def
/LT6 { PL [2 dl 2 dl 2 dl 4 dl] 0 0 0 DL } def
/LT7 { PL [2 dl 2 dl 2 dl 2 dl 2 dl 4 dl] 1 0.3 0 DL } def
/LT8 { PL [2 dl 2 dl 2 dl 2 dl 2 dl 2 dl 2 dl 4 dl] 0.5 0.5 0.5 DL } def
/Pnt { stroke [] 0 setdash
   gsave 1 setlinecap M 0 0 V stroke grestore } def
/Dia { stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt } def
/Pls { stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
  } def
/Box { stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt } def
/Crs { stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke } def
/TriU { stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt  } def
/Star { 2 copy Pls Crs } def
/BoxF { stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V  hpt2 0 V  0 vpt2 V
  hpt2 neg 0 V  closepath fill } def
/TriUF { stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill } def
/TriD { stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt  } def
/TriDF { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF { stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill } def
/Pent { stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt } def
/PentF { stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore } def
/Circle { stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt } def
/CircleF { stroke [] 0 setdash hpt 0 360 arc fill } def
/C0 { BL [] 0 setdash 2 copy moveto vpt 90 450  arc } bind def
/C1 { BL [] 0 setdash 2 copy        moveto
       2 copy  vpt 0 90 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C2 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 90 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C3 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C4 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 180 270 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C5 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 90 arc
       2 copy moveto
       2 copy  vpt 180 270 arc closepath fill
               vpt 0 360 arc } bind def
/C6 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 90 270 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C7 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 0 270 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C8 { BL [] 0 setdash 2 copy moveto
      2 copy vpt 270 360 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C9 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 270 450 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C10 { BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
       2 copy moveto
       2 copy vpt 90 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C11 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 180 arc closepath fill
       2 copy moveto
       2 copy  vpt 270 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C12 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 180 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C13 { BL [] 0 setdash  2 copy moveto
       2 copy  vpt 0 90 arc closepath fill
       2 copy moveto
       2 copy  vpt 180 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C14 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 90 360 arc closepath fill
               vpt 0 360 arc } bind def
/C15 { BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/Rec   { newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
       neg 0 rlineto closepath } bind def
/Square { dup Rec } bind def
/Bsquare { vpt sub exch vpt sub exch vpt2 Square } bind def
/S0 { BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare } bind def
/S1 { BL [] 0 setdash 2 copy vpt Square fill Bsquare } bind def
/S2 { BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare } bind def
/S3 { BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare } bind def
/S4 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare } bind def
/S5 { BL [] 0 setdash 2 copy 2 copy vpt Square fill
       exch vpt sub exch vpt sub vpt Square fill Bsquare } bind def
/S6 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare } bind def
/S7 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
       2 copy vpt Square fill
       Bsquare } bind def
/S8 { BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare } bind def
/S9 { BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare } bind def
/S10 { BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
       Bsquare } bind def
/S11 { BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
       Bsquare } bind def
/S12 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare } bind def
/S13 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
       2 copy vpt Square fill Bsquare } bind def
/S14 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
       2 copy exch vpt sub exch vpt Square fill Bsquare } bind def
/S15 { BL [] 0 setdash 2 copy Bsquare fill Bsquare } bind def
/D0 { gsave translate 45 rotate 0 0 S0 stroke grestore } bind def
/D1 { gsave translate 45 rotate 0 0 S1 stroke grestore } bind def
/D2 { gsave translate 45 rotate 0 0 S2 stroke grestore } bind def
/D3 { gsave translate 45 rotate 0 0 S3 stroke grestore } bind def
/D4 { gsave translate 45 rotate 0 0 S4 stroke grestore } bind def
/D5 { gsave translate 45 rotate 0 0 S5 stroke grestore } bind def
/D6 { gsave translate 45 rotate 0 0 S6 stroke grestore } bind def
/D7 { gsave translate 45 rotate 0 0 S7 stroke grestore } bind def
/D8 { gsave translate 45 rotate 0 0 S8 stroke grestore } bind def
/D9 { gsave translate 45 rotate 0 0 S9 stroke grestore } bind def
/D10 { gsave translate 45 rotate 0 0 S10 stroke grestore } bind def
/D11 { gsave translate 45 rotate 0 0 S11 stroke grestore } bind def
/D12 { gsave translate 45 rotate 0 0 S12 stroke grestore } bind def
/D13 { gsave translate 45 rotate 0 0 S13 stroke grestore } bind def
/D14 { gsave translate 45 rotate 0 0 S14 stroke grestore } bind def
/D15 { gsave translate 45 rotate 0 0 S15 stroke grestore } bind def
/DiaE { stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke } def
/BoxE { stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke } def
/TriUE { stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke } def
/TriDE { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke } def
/PentE { stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore } def
/CircE { stroke [] 0 setdash 
  hpt 0 360 arc stroke } def
/Opaque { gsave closepath 1 setgray fill grestore 0 setgray closepath } def
/DiaW { stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke } def
/BoxW { stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke } def
/TriUW { stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke } def
/TriDW { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke } def
/PentW { stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore } def
/CircW { stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke } def
/BoxFill { gsave Rec 1 setgray fill grestore } def
/MFshow {{dup dup 0 get findfont exch 1 get scalefont setfont
     [ currentpoint ] exch dup 2 get 0 exch rmoveto dup dup 5 get exch 4 get
     {show} {stringwidth pop 0 rmoveto}ifelse dup 3 get
     {2 get neg 0 exch rmoveto pop} {pop aload pop moveto}ifelse} forall} bind def
/MFwidth {0 exch {dup 3 get{dup dup 0 get findfont exch 1 get scalefont setfont
      5 get stringwidth pop add}
    {pop} ifelse} forall} bind def
/MLshow { currentpoint stroke M
  0 exch R MFshow } bind def
/MRshow { currentpoint stroke M
  exch dup MFwidth neg 3 -1 roll R MFshow } def
/MCshow { currentpoint stroke M
  exch dup MFwidth -2 div 3 -1 roll R MFshow } def
end
%%EndProlog
gnudict begin
gsave
50 50 translate
0.050 0.050 scale
0 setgray
newpath
(Times-Roman) findfont 180 scalefont setfont
1.000 UL
LTb
810 540 M
63 0 V
6021 0 R
-63 0 V
 stroke
702 540 M
[ [(Times-Roman) 180.0 0.0 true true (30)]
] -60.0 MRshow
810 1106 M
63 0 V
6021 0 R
-63 0 V
 stroke
702 1106 M
[ [(Times-Roman) 180.0 0.0 true true (40)]
] -60.0 MRshow
810 1671 M
63 0 V
6021 0 R
-63 0 V
 stroke
702 1671 M
[ [(Times-Roman) 180.0 0.0 true true (50)]
] -60.0 MRshow
810 2237 M
63 0 V
6021 0 R
-63 0 V
 stroke
702 2237 M
[ [(Times-Roman) 180.0 0.0 true true (60)]
] -60.0 MRshow
810 2803 M
63 0 V
6021 0 R
-63 0 V
 stroke
702 2803 M
[ [(Times-Roman) 180.0 0.0 true true (70)]
] -60.0 MRshow
810 3369 M
63 0 V
6021 0 R
-63 0 V
 stroke
702 3369 M
[ [(Times-Roman) 180.0 0.0 true true (80)]
] -60.0 MRshow
810 3934 M
63 0 V
6021 0 R
-63 0 V
 stroke
702 3934 M
[ [(Times-Roman) 180.0 0.0 true true (90)]
] -60.0 MRshow
810 4500 M
63 0 V
6021 0 R
-63 0 V
 stroke
702 4500 M
[ [(Times-Roman) 180.0 0.0 true true (100)]
] -60.0 MRshow
810 540 M
0 63 V
0 3897 R
0 -63 V
 stroke
810 360 M
[ [(Times-Roman) 180.0 0.0 true true (2)]
] -60.0 MCshow
1486 540 M
0 63 V
0 3897 R
0 -63 V
 stroke
1486 360 M
[ [(Times-Roman) 180.0 0.0 true true (4)]
] -60.0 MCshow
2162 540 M
0 63 V
0 3897 R
0 -63 V
 stroke
2162 360 M
[ [(Times-Roman) 180.0 0.0 true true (6)]
] -60.0 MCshow
2838 540 M
0 63 V
0 3897 R
0 -63 V
 stroke
2838 360 M
[ [(Times-Roman) 180.0 0.0 true true (8)]
] -60.0 MCshow
3514 540 M
0 63 V
0 3897 R
0 -63 V
 stroke
3514 360 M
[ [(Times-Roman) 180.0 0.0 true true (10)]
] -60.0 MCshow
4190 540 M
0 63 V
0 3897 R
0 -63 V
 stroke
4190 360 M
[ [(Times-Roman) 180.0 0.0 true true (12)]
] -60.0 MCshow
4866 540 M
0 63 V
0 3897 R
0 -63 V
 stroke
4866 360 M
[ [(Times-Roman) 180.0 0.0 true true (14)]
] -60.0 MCshow
5542 540 M
0 63 V
0 3897 R
0 -63 V
 stroke
5542 360 M
[ [(Times-Roman) 180.0 0.0 true true (16)]
] -60.0 MCshow
6218 540 M
0 63 V
0 3897 R
0 -63 V
 stroke
6218 360 M
[ [(Times-Roman) 180.0 0.0 true true (18)]
] -60.0 MCshow
6894 540 M
0 63 V
0 3897 R
0 -63 V
 stroke
6894 360 M
[ [(Times-Roman) 180.0 0.0 true true (20)]
] -60.0 MCshow
1.000 UL
LTb
810 540 M
6084 0 V
0 3960 V
-6084 0 V
810 540 L
 stroke
180 2520 M
currentpoint gsave translate 90 rotate 0 0 moveto
[ [(Times-Roman) 180.0 0.0 true true (Interprocessor Adjacency)]
] -60.0 MCshow
grestore
3852 90 M
[ [(Times-Roman) 180.0 0.0 true true (Number of Processors)]
] -60.0 MCshow
3852 4770 M
[ [(Times-Roman) 180.0 0.0 true true (Average Interprocessor Adjacency \(TwoPipes Mesh\))]
] -60.0 MCshow
1.000 UP
1.000 UL
LT0
2054 2237 M
[ [(Times-Roman) 180.0 0.0 true true (HSFC)]
] -60.0 MRshow
2162 2237 M
495 0 V
810 4500 M
676 0 V
676 0 V
2838 3288 L
676 -45 V
676 -714 V
676 -205 V
676 -370 V
676 -153 V
676 -189 V
810 4500 Pls
1486 4500 Pls
2162 4500 Pls
2838 3288 Pls
3514 3243 Pls
4190 2529 Pls
4866 2324 Pls
5542 1954 Pls
6218 1801 Pls
6894 1612 Pls
2409 2237 Pls
1.000 UP
1.000 UL
LT1
2054 2057 M
[ [(Times-Roman) 180.0 0.0 true true (JOSTLE)]
] -60.0 MRshow
2162 2057 M
495 0 V
810 4500 M
676 0 V
2162 3369 L
676 -687 V
676 -571 V
676 -525 V
676 -443 V
676 104 V
6218 913 L
6894 629 L
810 4500 Crs
1486 4500 Crs
2162 3369 Crs
2838 2682 Crs
3514 2111 Crs
4190 1586 Crs
4866 1143 Crs
5542 1247 Crs
6218 913 Crs
6894 629 Crs
2409 2057 Crs
1.000 UP
1.000 UL
LT2
2054 1877 M
[ [(Times-Roman) 180.0 0.0 true true (OCTPART)]
] -60.0 MRshow
2162 1877 M
495 0 V
810 4500 M
676 0 V
676 0 V
2838 2884 L
676 485 V
4190 2271 L
676 115 V
676 -432 V
676 -153 V
676 -130 V
810 4500 Star
1486 4500 Star
2162 4500 Star
2838 2884 Star
3514 3369 Star
4190 2271 Star
4866 2386 Star
5542 1954 Star
6218 1801 Star
6894 1671 Star
2409 1877 Star
1.000 UP
1.000 UL
LT3
2054 1697 M
[ [(Times-Roman) 180.0 0.0 true true (PARMETIS)]
] -60.0 MRshow
2162 1697 M
495 0 V
810 4500 M
676 0 V
676 0 V
2838 3288 L
676 458 V
676 -532 V
676 -392 V
676 -302 V
676 57 V
676 -429 V
810 4500 Box
1486 4500 Box
2162 4500 Box
2838 3288 Box
3514 3746 Box
4190 3214 Box
4866 2822 Box
5542 2520 Box
6218 2577 Box
6894 2148 Box
2409 1697 Box
1.000 UP
1.000 UL
LT4
2054 1517 M
[ [(Times-Roman) 180.0 0.0 true true (RCB)]
] -60.0 MRshow
2162 1517 M
495 0 V
810 4500 M
676 0 V
676 0 V
2838 2480 L
676 889 V
4190 2271 L
676 -195 V
676 -593 V
676 -237 V
676 38 V
810 4500 BoxF
1486 4500 BoxF
2162 4500 BoxF
2838 2480 BoxF
3514 3369 BoxF
4190 2271 BoxF
4866 2076 BoxF
5542 1483 BoxF
6218 1246 BoxF
6894 1284 BoxF
2409 1517 BoxF
1.000 UP
1.000 UL
LT5
2054 1337 M
[ [(Times-Roman) 180.0 0.0 true true (RIB)]
] -60.0 MRshow
2162 1337 M
495 0 V
810 4500 M
676 0 V
676 -377 V
2838 2884 L
676 -144 V
676 -554 V
676 -483 V
676 -267 V
676 365 V
676 -427 V
810 4500 Circle
1486 4500 Circle
2162 4123 Circle
2838 2884 Circle
3514 2740 Circle
4190 2186 Circle
4866 1703 Circle
5542 1436 Circle
6218 1801 Circle
6894 1374 Circle
2409 1337 Circle
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Times-Roman

%%EndDocument
 @endspecial 25328 w @beginspecial 50 @llx 50 @lly 410
@urx 302 @ury 2160 @rwi @setspecial
%%BeginDocument: graphs/methods/partition/max_proc_adj/twoPipes_max_proc_adj.eps
%!PS-Adobe-2.0 EPSF-2.0
%%Title: twoPipes_max_adj_percent.eps
%%Creator: gnuplot 3.7 patchlevel 1
%%CreationDate: Mon Jul 15 15:06:13 2002
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 410 302
%%Orientation: Portrait
%%EndComments
/gnudict 256 dict def
gnudict begin
/Color false def
/Solid false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
/vshift -60 def
/dl {10 mul} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow { currentpoint stroke M
  0 vshift R show } def
/Rshow { currentpoint stroke M
  dup stringwidth pop neg vshift R show } def
/Cshow { currentpoint stroke M
  dup stringwidth pop -2 div vshift R show } def
/UP { dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def } def
/DL { Color {setrgbcolor Solid {pop []} if 0 setdash }
 {pop pop pop Solid {pop []} if 0 setdash} ifelse } def
/BL { stroke userlinewidth 2 mul setlinewidth } def
/AL { stroke userlinewidth 2 div setlinewidth } def
/UL { dup gnulinewidth mul /userlinewidth exch def
      10 mul /udl exch def } def
/PL { stroke userlinewidth setlinewidth } def
/LTb { BL [] 0 0 0 DL } def
/LTa { AL [1 udl mul 2 udl mul] 0 setdash 0 0 0 setrgbcolor } def
/LT0 { PL [] 1 0 0 DL } def
/LT1 { PL [4 dl 2 dl] 0 1 0 DL } def
/LT2 { PL [2 dl 3 dl] 0 0 1 DL } def
/LT3 { PL [1 dl 1.5 dl] 1 0 1 DL } def
/LT4 { PL [5 dl 2 dl 1 dl 2 dl] 0 1 1 DL } def
/LT5 { PL [4 dl 3 dl 1 dl 3 dl] 1 1 0 DL } def
/LT6 { PL [2 dl 2 dl 2 dl 4 dl] 0 0 0 DL } def
/LT7 { PL [2 dl 2 dl 2 dl 2 dl 2 dl 4 dl] 1 0.3 0 DL } def
/LT8 { PL [2 dl 2 dl 2 dl 2 dl 2 dl 2 dl 2 dl 4 dl] 0.5 0.5 0.5 DL } def
/Pnt { stroke [] 0 setdash
   gsave 1 setlinecap M 0 0 V stroke grestore } def
/Dia { stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt } def
/Pls { stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
  } def
/Box { stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt } def
/Crs { stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke } def
/TriU { stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt  } def
/Star { 2 copy Pls Crs } def
/BoxF { stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V  hpt2 0 V  0 vpt2 V
  hpt2 neg 0 V  closepath fill } def
/TriUF { stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill } def
/TriD { stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt  } def
/TriDF { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF { stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill } def
/Pent { stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt } def
/PentF { stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore } def
/Circle { stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt } def
/CircleF { stroke [] 0 setdash hpt 0 360 arc fill } def
/C0 { BL [] 0 setdash 2 copy moveto vpt 90 450  arc } bind def
/C1 { BL [] 0 setdash 2 copy        moveto
       2 copy  vpt 0 90 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C2 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 90 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C3 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C4 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 180 270 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C5 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 90 arc
       2 copy moveto
       2 copy  vpt 180 270 arc closepath fill
               vpt 0 360 arc } bind def
/C6 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 90 270 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C7 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 0 270 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C8 { BL [] 0 setdash 2 copy moveto
      2 copy vpt 270 360 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C9 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 270 450 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C10 { BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
       2 copy moveto
       2 copy vpt 90 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C11 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 180 arc closepath fill
       2 copy moveto
       2 copy  vpt 270 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C12 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 180 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C13 { BL [] 0 setdash  2 copy moveto
       2 copy  vpt 0 90 arc closepath fill
       2 copy moveto
       2 copy  vpt 180 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C14 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 90 360 arc closepath fill
               vpt 0 360 arc } bind def
/C15 { BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/Rec   { newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
       neg 0 rlineto closepath } bind def
/Square { dup Rec } bind def
/Bsquare { vpt sub exch vpt sub exch vpt2 Square } bind def
/S0 { BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare } bind def
/S1 { BL [] 0 setdash 2 copy vpt Square fill Bsquare } bind def
/S2 { BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare } bind def
/S3 { BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare } bind def
/S4 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare } bind def
/S5 { BL [] 0 setdash 2 copy 2 copy vpt Square fill
       exch vpt sub exch vpt sub vpt Square fill Bsquare } bind def
/S6 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare } bind def
/S7 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
       2 copy vpt Square fill
       Bsquare } bind def
/S8 { BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare } bind def
/S9 { BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare } bind def
/S10 { BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
       Bsquare } bind def
/S11 { BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
       Bsquare } bind def
/S12 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare } bind def
/S13 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
       2 copy vpt Square fill Bsquare } bind def
/S14 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
       2 copy exch vpt sub exch vpt Square fill Bsquare } bind def
/S15 { BL [] 0 setdash 2 copy Bsquare fill Bsquare } bind def
/D0 { gsave translate 45 rotate 0 0 S0 stroke grestore } bind def
/D1 { gsave translate 45 rotate 0 0 S1 stroke grestore } bind def
/D2 { gsave translate 45 rotate 0 0 S2 stroke grestore } bind def
/D3 { gsave translate 45 rotate 0 0 S3 stroke grestore } bind def
/D4 { gsave translate 45 rotate 0 0 S4 stroke grestore } bind def
/D5 { gsave translate 45 rotate 0 0 S5 stroke grestore } bind def
/D6 { gsave translate 45 rotate 0 0 S6 stroke grestore } bind def
/D7 { gsave translate 45 rotate 0 0 S7 stroke grestore } bind def
/D8 { gsave translate 45 rotate 0 0 S8 stroke grestore } bind def
/D9 { gsave translate 45 rotate 0 0 S9 stroke grestore } bind def
/D10 { gsave translate 45 rotate 0 0 S10 stroke grestore } bind def
/D11 { gsave translate 45 rotate 0 0 S11 stroke grestore } bind def
/D12 { gsave translate 45 rotate 0 0 S12 stroke grestore } bind def
/D13 { gsave translate 45 rotate 0 0 S13 stroke grestore } bind def
/D14 { gsave translate 45 rotate 0 0 S14 stroke grestore } bind def
/D15 { gsave translate 45 rotate 0 0 S15 stroke grestore } bind def
/DiaE { stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke } def
/BoxE { stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke } def
/TriUE { stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke } def
/TriDE { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke } def
/PentE { stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore } def
/CircE { stroke [] 0 setdash 
  hpt 0 360 arc stroke } def
/Opaque { gsave closepath 1 setgray fill grestore 0 setgray closepath } def
/DiaW { stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke } def
/BoxW { stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke } def
/TriUW { stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke } def
/TriDW { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke } def
/PentW { stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore } def
/CircW { stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke } def
/BoxFill { gsave Rec 1 setgray fill grestore } def
/MFshow {{dup dup 0 get findfont exch 1 get scalefont setfont
     [ currentpoint ] exch dup 2 get 0 exch rmoveto dup dup 5 get exch 4 get
     {show} {stringwidth pop 0 rmoveto}ifelse dup 3 get
     {2 get neg 0 exch rmoveto pop} {pop aload pop moveto}ifelse} forall} bind def
/MFwidth {0 exch {dup 3 get{dup dup 0 get findfont exch 1 get scalefont setfont
      5 get stringwidth pop add}
    {pop} ifelse} forall} bind def
/MLshow { currentpoint stroke M
  0 exch R MFshow } bind def
/MRshow { currentpoint stroke M
  exch dup MFwidth neg 3 -1 roll R MFshow } def
/MCshow { currentpoint stroke M
  exch dup MFwidth -2 div 3 -1 roll R MFshow } def
end
%%EndProlog
gnudict begin
gsave
50 50 translate
0.050 0.050 scale
0 setgray
newpath
(Times-Roman) findfont 180 scalefont setfont
1.000 UL
LTb
810 540 M
63 0 V
6021 0 R
-63 0 V
 stroke
702 540 M
[ [(Times-Roman) 180.0 0.0 true true (40)]
] -60.0 MRshow
810 1200 M
63 0 V
6021 0 R
-63 0 V
 stroke
702 1200 M
[ [(Times-Roman) 180.0 0.0 true true (50)]
] -60.0 MRshow
810 1860 M
63 0 V
6021 0 R
-63 0 V
 stroke
702 1860 M
[ [(Times-Roman) 180.0 0.0 true true (60)]
] -60.0 MRshow
810 2520 M
63 0 V
6021 0 R
-63 0 V
 stroke
702 2520 M
[ [(Times-Roman) 180.0 0.0 true true (70)]
] -60.0 MRshow
810 3180 M
63 0 V
6021 0 R
-63 0 V
 stroke
702 3180 M
[ [(Times-Roman) 180.0 0.0 true true (80)]
] -60.0 MRshow
810 3840 M
63 0 V
6021 0 R
-63 0 V
 stroke
702 3840 M
[ [(Times-Roman) 180.0 0.0 true true (90)]
] -60.0 MRshow
810 4500 M
63 0 V
6021 0 R
-63 0 V
 stroke
702 4500 M
[ [(Times-Roman) 180.0 0.0 true true (100)]
] -60.0 MRshow
810 540 M
0 63 V
0 3897 R
0 -63 V
 stroke
810 360 M
[ [(Times-Roman) 180.0 0.0 true true (2)]
] -60.0 MCshow
1486 540 M
0 63 V
0 3897 R
0 -63 V
 stroke
1486 360 M
[ [(Times-Roman) 180.0 0.0 true true (4)]
] -60.0 MCshow
2162 540 M
0 63 V
0 3897 R
0 -63 V
 stroke
2162 360 M
[ [(Times-Roman) 180.0 0.0 true true (6)]
] -60.0 MCshow
2838 540 M
0 63 V
0 3897 R
0 -63 V
 stroke
2838 360 M
[ [(Times-Roman) 180.0 0.0 true true (8)]
] -60.0 MCshow
3514 540 M
0 63 V
0 3897 R
0 -63 V
 stroke
3514 360 M
[ [(Times-Roman) 180.0 0.0 true true (10)]
] -60.0 MCshow
4190 540 M
0 63 V
0 3897 R
0 -63 V
 stroke
4190 360 M
[ [(Times-Roman) 180.0 0.0 true true (12)]
] -60.0 MCshow
4866 540 M
0 63 V
0 3897 R
0 -63 V
 stroke
4866 360 M
[ [(Times-Roman) 180.0 0.0 true true (14)]
] -60.0 MCshow
5542 540 M
0 63 V
0 3897 R
0 -63 V
 stroke
5542 360 M
[ [(Times-Roman) 180.0 0.0 true true (16)]
] -60.0 MCshow
6218 540 M
0 63 V
0 3897 R
0 -63 V
 stroke
6218 360 M
[ [(Times-Roman) 180.0 0.0 true true (18)]
] -60.0 MCshow
6894 540 M
0 63 V
0 3897 R
0 -63 V
 stroke
6894 360 M
[ [(Times-Roman) 180.0 0.0 true true (20)]
] -60.0 MCshow
1.000 UL
LTb
810 540 M
6084 0 V
0 3960 V
-6084 0 V
810 540 L
 stroke
180 2520 M
currentpoint gsave translate 90 rotate 0 0 moveto
[ [(Times-Roman) 180.0 0.0 true true (Interprocessor Adjacency)]
] -60.0 MCshow
grestore
3852 90 M
[ [(Times-Roman) 180.0 0.0 true true (Number of Processors)]
] -60.0 MCshow
3852 4770 M
[ [(Times-Roman) 180.0 0.0 true true (Maximum Interprocessor Adjacency \(TwoPipes Mesh\))]
] -60.0 MCshow
1.000 UP
1.000 UL
LT0
2054 1860 M
[ [(Times-Roman) 180.0 0.0 true true (HSFC)]
] -60.0 MRshow
2162 1860 M
495 0 V
810 4500 M
676 0 V
676 0 V
676 -943 V
676 943 V
4190 3300 L
676 185 V
676 -745 V
676 -181 V
676 -143 V
810 4500 Pls
810 4500 Pls
1486 4500 Pls
1486 4500 Pls
1486 4500 Pls
2162 4500 Pls
2162 4500 Pls
2838 3557 Pls
2838 3557 Pls
2838 3557 Pls
3514 4500 Pls
4190 3300 Pls
4866 3485 Pls
5542 2740 Pls
6218 2559 Pls
6894 2416 Pls
2409 1860 Pls
1.000 UP
1.000 UL
LT1
2054 1680 M
[ [(Times-Roman) 180.0 0.0 true true (JOSTLE)]
] -60.0 MRshow
2162 1680 M
495 0 V
810 4500 M
676 0 V
676 0 V
676 -943 V
3514 2300 L
676 1000 V
4866 1454 L
676 846 V
6218 1006 L
6894 679 L
810 4500 Crs
810 4500 Crs
1486 4500 Crs
1486 4500 Crs
1486 4500 Crs
2162 4500 Crs
2162 4500 Crs
2838 3557 Crs
2838 3557 Crs
2838 3557 Crs
3514 2300 Crs
4190 3300 Crs
4866 1454 Crs
5542 2300 Crs
6218 1006 Crs
6894 679 Crs
2409 1680 Crs
1.000 UP
1.000 UL
LT2
2054 1500 M
[ [(Times-Roman) 180.0 0.0 true true (OCTPART)]
] -60.0 MRshow
2162 1500 M
495 0 V
810 4500 M
676 0 V
676 0 V
676 -943 V
676 943 V
4190 3300 L
676 185 V
5542 2300 L
676 1035 V
6894 2068 L
810 4500 Star
810 4500 Star
1486 4500 Star
1486 4500 Star
1486 4500 Star
2162 4500 Star
2162 4500 Star
2838 3557 Star
2838 3557 Star
2838 3557 Star
3514 4500 Star
4190 3300 Star
4866 3485 Star
5542 2300 Star
6218 3335 Star
6894 2068 Star
2409 1500 Star
1.000 UP
1.000 UL
LT3
2054 1320 M
[ [(Times-Roman) 180.0 0.0 true true (PARMETIS)]
] -60.0 MRshow
2162 1320 M
495 0 V
810 4500 M
676 0 V
676 0 V
676 0 V
676 0 V
676 -600 V
676 92 V
676 68 V
676 -336 V
676 -266 V
810 4500 Box
810 4500 Box
1486 4500 Box
1486 4500 Box
1486 4500 Box
2162 4500 Box
2162 4500 Box
2838 4500 Box
2838 4500 Box
2838 4500 Box
3514 4500 Box
4190 3900 Box
4866 3992 Box
5542 4060 Box
6218 3724 Box
6894 3458 Box
2409 1320 Box
1.000 UP
1.000 UL
LT4
2054 1140 M
[ [(Times-Roman) 180.0 0.0 true true (RCB)]
] -60.0 MRshow
2162 1140 M
495 0 V
810 4500 M
676 0 V
676 0 V
2838 2614 L
676 1886 V
676 -600 V
676 -923 V
676 -677 V
676 1035 V
6894 2068 L
810 4500 BoxF
810 4500 BoxF
1486 4500 BoxF
1486 4500 BoxF
1486 4500 BoxF
2162 4500 BoxF
2162 4500 BoxF
2838 2614 BoxF
2838 2614 BoxF
2838 2614 BoxF
3514 4500 BoxF
4190 3900 BoxF
4866 2977 BoxF
5542 2300 BoxF
6218 3335 BoxF
6894 2068 BoxF
2409 1140 BoxF
1.000 UP
1.000 UL
LT5
2054 960 M
[ [(Times-Roman) 180.0 0.0 true true (RIB)]
] -60.0 MRshow
2162 960 M
495 0 V
810 4500 M
676 0 V
676 0 V
676 -943 V
676 210 V
676 -467 V
676 -831 V
676 711 V
676 544 V
676 -961 V
810 4500 Circle
810 4500 Circle
1486 4500 Circle
1486 4500 Circle
1486 4500 Circle
2162 4500 Circle
2162 4500 Circle
2838 3557 Circle
2838 3557 Circle
2838 3557 Circle
3514 3767 Circle
4190 3300 Circle
4866 2469 Circle
5542 3180 Circle
6218 3724 Circle
6894 2763 Circle
2409 960 Circle
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Times-Roman

%%EndDocument
 @endspecial 51523 17422 V 866 34703 V 1553 34222 a @beginspecial
50 @llx 50 @lly 410 @urx 302 @ury 2160 @rwi @setspecial
%%BeginDocument: graphs/methods/partition/avg_proc_adj/quartercone_avg_proc_adj.eps
%!PS-Adobe-2.0 EPSF-2.0
%%Title: quarter_avg_percent.eps
%%Creator: gnuplot 3.7 patchlevel 1
%%CreationDate: Mon Jul 15 11:44:54 2002
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 410 302
%%Orientation: Portrait
%%EndComments
/gnudict 256 dict def
gnudict begin
/Color false def
/Solid false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
/vshift -60 def
/dl {10 mul} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow { currentpoint stroke M
  0 vshift R show } def
/Rshow { currentpoint stroke M
  dup stringwidth pop neg vshift R show } def
/Cshow { currentpoint stroke M
  dup stringwidth pop -2 div vshift R show } def
/UP { dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def } def
/DL { Color {setrgbcolor Solid {pop []} if 0 setdash }
 {pop pop pop Solid {pop []} if 0 setdash} ifelse } def
/BL { stroke userlinewidth 2 mul setlinewidth } def
/AL { stroke userlinewidth 2 div setlinewidth } def
/UL { dup gnulinewidth mul /userlinewidth exch def
      10 mul /udl exch def } def
/PL { stroke userlinewidth setlinewidth } def
/LTb { BL [] 0 0 0 DL } def
/LTa { AL [1 udl mul 2 udl mul] 0 setdash 0 0 0 setrgbcolor } def
/LT0 { PL [] 1 0 0 DL } def
/LT1 { PL [4 dl 2 dl] 0 1 0 DL } def
/LT2 { PL [2 dl 3 dl] 0 0 1 DL } def
/LT3 { PL [1 dl 1.5 dl] 1 0 1 DL } def
/LT4 { PL [5 dl 2 dl 1 dl 2 dl] 0 1 1 DL } def
/LT5 { PL [4 dl 3 dl 1 dl 3 dl] 1 1 0 DL } def
/LT6 { PL [2 dl 2 dl 2 dl 4 dl] 0 0 0 DL } def
/LT7 { PL [2 dl 2 dl 2 dl 2 dl 2 dl 4 dl] 1 0.3 0 DL } def
/LT8 { PL [2 dl 2 dl 2 dl 2 dl 2 dl 2 dl 2 dl 4 dl] 0.5 0.5 0.5 DL } def
/Pnt { stroke [] 0 setdash
   gsave 1 setlinecap M 0 0 V stroke grestore } def
/Dia { stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt } def
/Pls { stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
  } def
/Box { stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt } def
/Crs { stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke } def
/TriU { stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt  } def
/Star { 2 copy Pls Crs } def
/BoxF { stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V  hpt2 0 V  0 vpt2 V
  hpt2 neg 0 V  closepath fill } def
/TriUF { stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill } def
/TriD { stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt  } def
/TriDF { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF { stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill } def
/Pent { stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt } def
/PentF { stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore } def
/Circle { stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt } def
/CircleF { stroke [] 0 setdash hpt 0 360 arc fill } def
/C0 { BL [] 0 setdash 2 copy moveto vpt 90 450  arc } bind def
/C1 { BL [] 0 setdash 2 copy        moveto
       2 copy  vpt 0 90 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C2 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 90 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C3 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C4 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 180 270 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C5 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 90 arc
       2 copy moveto
       2 copy  vpt 180 270 arc closepath fill
               vpt 0 360 arc } bind def
/C6 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 90 270 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C7 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 0 270 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C8 { BL [] 0 setdash 2 copy moveto
      2 copy vpt 270 360 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C9 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 270 450 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C10 { BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
       2 copy moveto
       2 copy vpt 90 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C11 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 180 arc closepath fill
       2 copy moveto
       2 copy  vpt 270 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C12 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 180 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C13 { BL [] 0 setdash  2 copy moveto
       2 copy  vpt 0 90 arc closepath fill
       2 copy moveto
       2 copy  vpt 180 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C14 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 90 360 arc closepath fill
               vpt 0 360 arc } bind def
/C15 { BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/Rec   { newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
       neg 0 rlineto closepath } bind def
/Square { dup Rec } bind def
/Bsquare { vpt sub exch vpt sub exch vpt2 Square } bind def
/S0 { BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare } bind def
/S1 { BL [] 0 setdash 2 copy vpt Square fill Bsquare } bind def
/S2 { BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare } bind def
/S3 { BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare } bind def
/S4 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare } bind def
/S5 { BL [] 0 setdash 2 copy 2 copy vpt Square fill
       exch vpt sub exch vpt sub vpt Square fill Bsquare } bind def
/S6 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare } bind def
/S7 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
       2 copy vpt Square fill
       Bsquare } bind def
/S8 { BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare } bind def
/S9 { BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare } bind def
/S10 { BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
       Bsquare } bind def
/S11 { BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
       Bsquare } bind def
/S12 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare } bind def
/S13 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
       2 copy vpt Square fill Bsquare } bind def
/S14 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
       2 copy exch vpt sub exch vpt Square fill Bsquare } bind def
/S15 { BL [] 0 setdash 2 copy Bsquare fill Bsquare } bind def
/D0 { gsave translate 45 rotate 0 0 S0 stroke grestore } bind def
/D1 { gsave translate 45 rotate 0 0 S1 stroke grestore } bind def
/D2 { gsave translate 45 rotate 0 0 S2 stroke grestore } bind def
/D3 { gsave translate 45 rotate 0 0 S3 stroke grestore } bind def
/D4 { gsave translate 45 rotate 0 0 S4 stroke grestore } bind def
/D5 { gsave translate 45 rotate 0 0 S5 stroke grestore } bind def
/D6 { gsave translate 45 rotate 0 0 S6 stroke grestore } bind def
/D7 { gsave translate 45 rotate 0 0 S7 stroke grestore } bind def
/D8 { gsave translate 45 rotate 0 0 S8 stroke grestore } bind def
/D9 { gsave translate 45 rotate 0 0 S9 stroke grestore } bind def
/D10 { gsave translate 45 rotate 0 0 S10 stroke grestore } bind def
/D11 { gsave translate 45 rotate 0 0 S11 stroke grestore } bind def
/D12 { gsave translate 45 rotate 0 0 S12 stroke grestore } bind def
/D13 { gsave translate 45 rotate 0 0 S13 stroke grestore } bind def
/D14 { gsave translate 45 rotate 0 0 S14 stroke grestore } bind def
/D15 { gsave translate 45 rotate 0 0 S15 stroke grestore } bind def
/DiaE { stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke } def
/BoxE { stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke } def
/TriUE { stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke } def
/TriDE { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke } def
/PentE { stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore } def
/CircE { stroke [] 0 setdash 
  hpt 0 360 arc stroke } def
/Opaque { gsave closepath 1 setgray fill grestore 0 setgray closepath } def
/DiaW { stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke } def
/BoxW { stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke } def
/TriUW { stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke } def
/TriDW { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke } def
/PentW { stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore } def
/CircW { stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke } def
/BoxFill { gsave Rec 1 setgray fill grestore } def
/MFshow {{dup dup 0 get findfont exch 1 get scalefont setfont
     [ currentpoint ] exch dup 2 get 0 exch rmoveto dup dup 5 get exch 4 get
     {show} {stringwidth pop 0 rmoveto}ifelse dup 3 get
     {2 get neg 0 exch rmoveto pop} {pop aload pop moveto}ifelse} forall} bind def
/MFwidth {0 exch {dup 3 get{dup dup 0 get findfont exch 1 get scalefont setfont
      5 get stringwidth pop add}
    {pop} ifelse} forall} bind def
/MLshow { currentpoint stroke M
  0 exch R MFshow } bind def
/MRshow { currentpoint stroke M
  exch dup MFwidth neg 3 -1 roll R MFshow } def
/MCshow { currentpoint stroke M
  exch dup MFwidth -2 div 3 -1 roll R MFshow } def
end
%%EndProlog
gnudict begin
gsave
50 50 translate
0.050 0.050 scale
0 setgray
newpath
(Times-Roman) findfont 180 scalefont setfont
1.000 UL
LTb
810 540 M
63 0 V
6021 0 R
-63 0 V
 stroke
702 540 M
[ [(Times-Roman) 180.0 0.0 true true (30)]
] -60.0 MRshow
810 1106 M
63 0 V
6021 0 R
-63 0 V
 stroke
702 1106 M
[ [(Times-Roman) 180.0 0.0 true true (40)]
] -60.0 MRshow
810 1671 M
63 0 V
6021 0 R
-63 0 V
 stroke
702 1671 M
[ [(Times-Roman) 180.0 0.0 true true (50)]
] -60.0 MRshow
810 2237 M
63 0 V
6021 0 R
-63 0 V
 stroke
702 2237 M
[ [(Times-Roman) 180.0 0.0 true true (60)]
] -60.0 MRshow
810 2803 M
63 0 V
6021 0 R
-63 0 V
 stroke
702 2803 M
[ [(Times-Roman) 180.0 0.0 true true (70)]
] -60.0 MRshow
810 3369 M
63 0 V
6021 0 R
-63 0 V
 stroke
702 3369 M
[ [(Times-Roman) 180.0 0.0 true true (80)]
] -60.0 MRshow
810 3934 M
63 0 V
6021 0 R
-63 0 V
 stroke
702 3934 M
[ [(Times-Roman) 180.0 0.0 true true (90)]
] -60.0 MRshow
810 4500 M
63 0 V
6021 0 R
-63 0 V
 stroke
702 4500 M
[ [(Times-Roman) 180.0 0.0 true true (100)]
] -60.0 MRshow
810 540 M
0 63 V
0 3897 R
0 -63 V
 stroke
810 360 M
[ [(Times-Roman) 180.0 0.0 true true (2)]
] -60.0 MCshow
1486 540 M
0 63 V
0 3897 R
0 -63 V
 stroke
1486 360 M
[ [(Times-Roman) 180.0 0.0 true true (4)]
] -60.0 MCshow
2162 540 M
0 63 V
0 3897 R
0 -63 V
 stroke
2162 360 M
[ [(Times-Roman) 180.0 0.0 true true (6)]
] -60.0 MCshow
2838 540 M
0 63 V
0 3897 R
0 -63 V
 stroke
2838 360 M
[ [(Times-Roman) 180.0 0.0 true true (8)]
] -60.0 MCshow
3514 540 M
0 63 V
0 3897 R
0 -63 V
 stroke
3514 360 M
[ [(Times-Roman) 180.0 0.0 true true (10)]
] -60.0 MCshow
4190 540 M
0 63 V
0 3897 R
0 -63 V
 stroke
4190 360 M
[ [(Times-Roman) 180.0 0.0 true true (12)]
] -60.0 MCshow
4866 540 M
0 63 V
0 3897 R
0 -63 V
 stroke
4866 360 M
[ [(Times-Roman) 180.0 0.0 true true (14)]
] -60.0 MCshow
5542 540 M
0 63 V
0 3897 R
0 -63 V
 stroke
5542 360 M
[ [(Times-Roman) 180.0 0.0 true true (16)]
] -60.0 MCshow
6218 540 M
0 63 V
0 3897 R
0 -63 V
 stroke
6218 360 M
[ [(Times-Roman) 180.0 0.0 true true (18)]
] -60.0 MCshow
6894 540 M
0 63 V
0 3897 R
0 -63 V
 stroke
6894 360 M
[ [(Times-Roman) 180.0 0.0 true true (20)]
] -60.0 MCshow
1.000 UL
LTb
810 540 M
6084 0 V
0 3960 V
-6084 0 V
810 540 L
 stroke
180 2520 M
currentpoint gsave translate 90 rotate 0 0 moveto
[ [(Times-Roman) 180.0 0.0 true true (Interprocessor Adjacency)]
] -60.0 MCshow
grestore
3852 90 M
[ [(Times-Roman) 180.0 0.0 true true (Number of Processors)]
] -60.0 MCshow
3852 4770 M
[ [(Times-Roman) 180.0 0.0 true true (Average Interprocessor Adjacency \(Quartercone Mesh\))]
] -60.0 MCshow
1.000 UP
1.000 UL
LT0
2054 2237 M
[ [(Times-Roman) 180.0 0.0 true true (HSFC)]
] -60.0 MRshow
2162 2237 M
495 0 V
810 4500 M
676 0 V
676 0 V
2838 2682 L
676 58 V
676 -469 V
676 -506 V
676 -141 V
676 -119 V
676 -250 V
810 4500 Pls
1486 4500 Pls
2162 4500 Pls
2838 2682 Pls
3514 2740 Pls
4190 2271 Pls
4866 1765 Pls
5542 1624 Pls
6218 1505 Pls
6894 1255 Pls
2409 2237 Pls
1.000 UP
1.000 UL
LT1
2054 2057 M
[ [(Times-Roman) 180.0 0.0 true true (JOSTLE)]
] -60.0 MRshow
2162 2057 M
495 0 V
810 4500 M
676 0 V
2162 3369 L
676 -687 V
676 -445 V
676 -480 V
676 -303 V
676 -348 V
676 29 V
6894 838 L
810 4500 Crs
1486 4500 Crs
2162 3369 Crs
2838 2682 Crs
3514 2237 Crs
4190 1757 Crs
4866 1454 Crs
5542 1106 Crs
6218 1135 Crs
6894 838 Crs
2409 2057 Crs
1.000 UP
1.000 UL
LT2
2054 1877 M
[ [(Times-Roman) 180.0 0.0 true true (OCTPART)]
] -60.0 MRshow
2162 1877 M
495 0 V
810 4500 M
676 0 V
676 -754 V
676 -54 V
676 -826 V
676 -595 V
676 178 V
676 -542 V
676 -217 V
676 -48 V
810 4500 Star
1486 4500 Star
2162 3746 Star
2838 3692 Star
3514 2866 Star
4190 2271 Star
4866 2449 Star
5542 1907 Star
6218 1690 Star
6894 1642 Star
2409 1877 Star
1.000 UP
1.000 UL
LT3
2054 1697 M
[ [(Times-Roman) 180.0 0.0 true true (PARMETIS)]
] -60.0 MRshow
2162 1697 M
495 0 V
810 4500 M
676 0 V
676 -754 V
676 -862 V
676 359 V
676 -629 V
676 456 V
676 -314 V
676 -585 V
676 275 V
810 4500 Box
1486 4500 Box
2162 3746 Box
2838 2884 Box
3514 3243 Box
4190 2614 Box
4866 3070 Box
5542 2756 Box
6218 2171 Box
6894 2446 Box
2409 1697 Box
1.000 UP
1.000 UL
LT4
2054 1517 M
[ [(Times-Roman) 180.0 0.0 true true (RCB)]
] -60.0 MRshow
2162 1517 M
495 0 V
810 4500 M
676 -943 V
676 -188 V
676 -283 V
676 -849 V
676 -394 V
676 -327 V
676 -127 V
676 -365 V
676 52 V
810 4500 BoxF
1486 3557 BoxF
2162 3369 BoxF
2838 3086 BoxF
3514 2237 BoxF
4190 1843 BoxF
4866 1516 BoxF
5542 1389 BoxF
6218 1024 BoxF
6894 1076 BoxF
2409 1517 BoxF
1.000 UP
1.000 UL
LT5
2054 1337 M
[ [(Times-Roman) 180.0 0.0 true true (RIB)]
] -60.0 MRshow
2162 1337 M
495 0 V
810 4500 M
676 0 V
676 -754 V
676 -256 V
676 -247 V
676 -200 V
676 -470 V
676 -383 V
676 -500 V
676 -376 V
810 4500 Circle
1486 4500 Circle
2162 3746 Circle
2838 3490 Circle
3514 3243 Circle
4190 3043 Circle
4866 2573 Circle
5542 2190 Circle
6218 1690 Circle
6894 1314 Circle
2409 1337 Circle
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Times-Roman

%%EndDocument
 @endspecial 25328 w @beginspecial 50 @llx 50 @lly 410
@urx 302 @ury 2160 @rwi @setspecial
%%BeginDocument: graphs/methods/partition/max_proc_adj/quartercone_max_proc_adj.eps
%!PS-Adobe-2.0 EPSF-2.0
%%Title: quarter_max_adj_percent.eps
%%Creator: gnuplot 3.7 patchlevel 1
%%CreationDate: Mon Jul 15 14:58:58 2002
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 410 302
%%Orientation: Portrait
%%EndComments
/gnudict 256 dict def
gnudict begin
/Color false def
/Solid false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
/vshift -60 def
/dl {10 mul} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow { currentpoint stroke M
  0 vshift R show } def
/Rshow { currentpoint stroke M
  dup stringwidth pop neg vshift R show } def
/Cshow { currentpoint stroke M
  dup stringwidth pop -2 div vshift R show } def
/UP { dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def } def
/DL { Color {setrgbcolor Solid {pop []} if 0 setdash }
 {pop pop pop Solid {pop []} if 0 setdash} ifelse } def
/BL { stroke userlinewidth 2 mul setlinewidth } def
/AL { stroke userlinewidth 2 div setlinewidth } def
/UL { dup gnulinewidth mul /userlinewidth exch def
      10 mul /udl exch def } def
/PL { stroke userlinewidth setlinewidth } def
/LTb { BL [] 0 0 0 DL } def
/LTa { AL [1 udl mul 2 udl mul] 0 setdash 0 0 0 setrgbcolor } def
/LT0 { PL [] 1 0 0 DL } def
/LT1 { PL [4 dl 2 dl] 0 1 0 DL } def
/LT2 { PL [2 dl 3 dl] 0 0 1 DL } def
/LT3 { PL [1 dl 1.5 dl] 1 0 1 DL } def
/LT4 { PL [5 dl 2 dl 1 dl 2 dl] 0 1 1 DL } def
/LT5 { PL [4 dl 3 dl 1 dl 3 dl] 1 1 0 DL } def
/LT6 { PL [2 dl 2 dl 2 dl 4 dl] 0 0 0 DL } def
/LT7 { PL [2 dl 2 dl 2 dl 2 dl 2 dl 4 dl] 1 0.3 0 DL } def
/LT8 { PL [2 dl 2 dl 2 dl 2 dl 2 dl 2 dl 2 dl 4 dl] 0.5 0.5 0.5 DL } def
/Pnt { stroke [] 0 setdash
   gsave 1 setlinecap M 0 0 V stroke grestore } def
/Dia { stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt } def
/Pls { stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
  } def
/Box { stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt } def
/Crs { stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke } def
/TriU { stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt  } def
/Star { 2 copy Pls Crs } def
/BoxF { stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V  hpt2 0 V  0 vpt2 V
  hpt2 neg 0 V  closepath fill } def
/TriUF { stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill } def
/TriD { stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt  } def
/TriDF { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF { stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill } def
/Pent { stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt } def
/PentF { stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore } def
/Circle { stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt } def
/CircleF { stroke [] 0 setdash hpt 0 360 arc fill } def
/C0 { BL [] 0 setdash 2 copy moveto vpt 90 450  arc } bind def
/C1 { BL [] 0 setdash 2 copy        moveto
       2 copy  vpt 0 90 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C2 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 90 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C3 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C4 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 180 270 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C5 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 90 arc
       2 copy moveto
       2 copy  vpt 180 270 arc closepath fill
               vpt 0 360 arc } bind def
/C6 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 90 270 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C7 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 0 270 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C8 { BL [] 0 setdash 2 copy moveto
      2 copy vpt 270 360 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C9 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 270 450 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C10 { BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
       2 copy moveto
       2 copy vpt 90 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C11 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 180 arc closepath fill
       2 copy moveto
       2 copy  vpt 270 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C12 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 180 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C13 { BL [] 0 setdash  2 copy moveto
       2 copy  vpt 0 90 arc closepath fill
       2 copy moveto
       2 copy  vpt 180 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C14 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 90 360 arc closepath fill
               vpt 0 360 arc } bind def
/C15 { BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/Rec   { newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
       neg 0 rlineto closepath } bind def
/Square { dup Rec } bind def
/Bsquare { vpt sub exch vpt sub exch vpt2 Square } bind def
/S0 { BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare } bind def
/S1 { BL [] 0 setdash 2 copy vpt Square fill Bsquare } bind def
/S2 { BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare } bind def
/S3 { BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare } bind def
/S4 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare } bind def
/S5 { BL [] 0 setdash 2 copy 2 copy vpt Square fill
       exch vpt sub exch vpt sub vpt Square fill Bsquare } bind def
/S6 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare } bind def
/S7 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
       2 copy vpt Square fill
       Bsquare } bind def
/S8 { BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare } bind def
/S9 { BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare } bind def
/S10 { BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
       Bsquare } bind def
/S11 { BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
       Bsquare } bind def
/S12 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare } bind def
/S13 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
       2 copy vpt Square fill Bsquare } bind def
/S14 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
       2 copy exch vpt sub exch vpt Square fill Bsquare } bind def
/S15 { BL [] 0 setdash 2 copy Bsquare fill Bsquare } bind def
/D0 { gsave translate 45 rotate 0 0 S0 stroke grestore } bind def
/D1 { gsave translate 45 rotate 0 0 S1 stroke grestore } bind def
/D2 { gsave translate 45 rotate 0 0 S2 stroke grestore } bind def
/D3 { gsave translate 45 rotate 0 0 S3 stroke grestore } bind def
/D4 { gsave translate 45 rotate 0 0 S4 stroke grestore } bind def
/D5 { gsave translate 45 rotate 0 0 S5 stroke grestore } bind def
/D6 { gsave translate 45 rotate 0 0 S6 stroke grestore } bind def
/D7 { gsave translate 45 rotate 0 0 S7 stroke grestore } bind def
/D8 { gsave translate 45 rotate 0 0 S8 stroke grestore } bind def
/D9 { gsave translate 45 rotate 0 0 S9 stroke grestore } bind def
/D10 { gsave translate 45 rotate 0 0 S10 stroke grestore } bind def
/D11 { gsave translate 45 rotate 0 0 S11 stroke grestore } bind def
/D12 { gsave translate 45 rotate 0 0 S12 stroke grestore } bind def
/D13 { gsave translate 45 rotate 0 0 S13 stroke grestore } bind def
/D14 { gsave translate 45 rotate 0 0 S14 stroke grestore } bind def
/D15 { gsave translate 45 rotate 0 0 S15 stroke grestore } bind def
/DiaE { stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke } def
/BoxE { stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke } def
/TriUE { stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke } def
/TriDE { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke } def
/PentE { stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore } def
/CircE { stroke [] 0 setdash 
  hpt 0 360 arc stroke } def
/Opaque { gsave closepath 1 setgray fill grestore 0 setgray closepath } def
/DiaW { stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke } def
/BoxW { stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke } def
/TriUW { stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke } def
/TriDW { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke } def
/PentW { stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore } def
/CircW { stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke } def
/BoxFill { gsave Rec 1 setgray fill grestore } def
/MFshow {{dup dup 0 get findfont exch 1 get scalefont setfont
     [ currentpoint ] exch dup 2 get 0 exch rmoveto dup dup 5 get exch 4 get
     {show} {stringwidth pop 0 rmoveto}ifelse dup 3 get
     {2 get neg 0 exch rmoveto pop} {pop aload pop moveto}ifelse} forall} bind def
/MFwidth {0 exch {dup 3 get{dup dup 0 get findfont exch 1 get scalefont setfont
      5 get stringwidth pop add}
    {pop} ifelse} forall} bind def
/MLshow { currentpoint stroke M
  0 exch R MFshow } bind def
/MRshow { currentpoint stroke M
  exch dup MFwidth neg 3 -1 roll R MFshow } def
/MCshow { currentpoint stroke M
  exch dup MFwidth -2 div 3 -1 roll R MFshow } def
end
%%EndProlog
gnudict begin
gsave
50 50 translate
0.050 0.050 scale
0 setgray
newpath
(Times-Roman) findfont 180 scalefont setfont
1.000 UL
LTb
810 540 M
63 0 V
6021 0 R
-63 0 V
 stroke
702 540 M
[ [(Times-Roman) 180.0 0.0 true true (65)]
] -60.0 MRshow
810 1106 M
63 0 V
6021 0 R
-63 0 V
 stroke
702 1106 M
[ [(Times-Roman) 180.0 0.0 true true (70)]
] -60.0 MRshow
810 1671 M
63 0 V
6021 0 R
-63 0 V
 stroke
702 1671 M
[ [(Times-Roman) 180.0 0.0 true true (75)]
] -60.0 MRshow
810 2237 M
63 0 V
6021 0 R
-63 0 V
 stroke
702 2237 M
[ [(Times-Roman) 180.0 0.0 true true (80)]
] -60.0 MRshow
810 2803 M
63 0 V
6021 0 R
-63 0 V
 stroke
702 2803 M
[ [(Times-Roman) 180.0 0.0 true true (85)]
] -60.0 MRshow
810 3369 M
63 0 V
6021 0 R
-63 0 V
 stroke
702 3369 M
[ [(Times-Roman) 180.0 0.0 true true (90)]
] -60.0 MRshow
810 3934 M
63 0 V
6021 0 R
-63 0 V
 stroke
702 3934 M
[ [(Times-Roman) 180.0 0.0 true true (95)]
] -60.0 MRshow
810 4500 M
63 0 V
6021 0 R
-63 0 V
 stroke
702 4500 M
[ [(Times-Roman) 180.0 0.0 true true (100)]
] -60.0 MRshow
810 540 M
0 63 V
0 3897 R
0 -63 V
 stroke
810 360 M
[ [(Times-Roman) 180.0 0.0 true true (2)]
] -60.0 MCshow
1486 540 M
0 63 V
0 3897 R
0 -63 V
 stroke
1486 360 M
[ [(Times-Roman) 180.0 0.0 true true (4)]
] -60.0 MCshow
2162 540 M
0 63 V
0 3897 R
0 -63 V
 stroke
2162 360 M
[ [(Times-Roman) 180.0 0.0 true true (6)]
] -60.0 MCshow
2838 540 M
0 63 V
0 3897 R
0 -63 V
 stroke
2838 360 M
[ [(Times-Roman) 180.0 0.0 true true (8)]
] -60.0 MCshow
3514 540 M
0 63 V
0 3897 R
0 -63 V
 stroke
3514 360 M
[ [(Times-Roman) 180.0 0.0 true true (10)]
] -60.0 MCshow
4190 540 M
0 63 V
0 3897 R
0 -63 V
 stroke
4190 360 M
[ [(Times-Roman) 180.0 0.0 true true (12)]
] -60.0 MCshow
4866 540 M
0 63 V
0 3897 R
0 -63 V
 stroke
4866 360 M
[ [(Times-Roman) 180.0 0.0 true true (14)]
] -60.0 MCshow
5542 540 M
0 63 V
0 3897 R
0 -63 V
 stroke
5542 360 M
[ [(Times-Roman) 180.0 0.0 true true (16)]
] -60.0 MCshow
6218 540 M
0 63 V
0 3897 R
0 -63 V
 stroke
6218 360 M
[ [(Times-Roman) 180.0 0.0 true true (18)]
] -60.0 MCshow
6894 540 M
0 63 V
0 3897 R
0 -63 V
 stroke
6894 360 M
[ [(Times-Roman) 180.0 0.0 true true (20)]
] -60.0 MCshow
1.000 UL
LTb
810 540 M
6084 0 V
0 3960 V
-6084 0 V
810 540 L
 stroke
180 2520 M
currentpoint gsave translate 90 rotate 0 0 moveto
[ [(Times-Roman) 180.0 0.0 true true (Interprocessor Adjacency)]
] -60.0 MCshow
grestore
3852 90 M
[ [(Times-Roman) 180.0 0.0 true true (Number of Processors)]
] -60.0 MCshow
3852 4770 M
[ [(Times-Roman) 180.0 0.0 true true (Maximum Interprocessor Adjacency \(Quartercone Mesh\))]
] -60.0 MCshow
1.000 UP
1.000 UL
LT0
2054 3934 M
[ [(Times-Roman) 180.0 0.0 true true (HSFC)]
] -60.0 MRshow
2162 3934 M
495 0 V
810 4500 M
676 0 V
676 0 V
676 0 V
676 0 V
4190 2443 L
676 316 V
676 232 V
6218 1838 L
676 280 V
810 4500 Pls
810 4500 Pls
1486 4500 Pls
1486 4500 Pls
1486 4500 Pls
2162 4500 Pls
2162 4500 Pls
2838 4500 Pls
2838 4500 Pls
2838 4500 Pls
3514 4500 Pls
4190 2443 Pls
4866 2759 Pls
5542 2991 Pls
6218 1838 Pls
6894 2118 Pls
2409 3934 Pls
1.000 UP
1.000 UL
LT1
2054 3754 M
[ [(Times-Roman) 180.0 0.0 true true (JOSTLE)]
] -60.0 MRshow
2162 3754 M
495 0 V
810 4500 M
676 0 V
676 0 V
676 0 V
3514 3243 L
676 228 V
676 159 V
5542 1483 L
676 -311 V
6894 927 L
810 4500 Crs
810 4500 Crs
1486 4500 Crs
1486 4500 Crs
1486 4500 Crs
2162 4500 Crs
2162 4500 Crs
2838 4500 Crs
2838 4500 Crs
2838 4500 Crs
3514 3243 Crs
4190 3471 Crs
4866 3630 Crs
5542 1483 Crs
6218 1172 Crs
6894 927 Crs
2409 3754 Crs
1.000 UP
1.000 UL
LT2
2054 3574 M
[ [(Times-Roman) 180.0 0.0 true true (OCTPART)]
] -60.0 MRshow
2162 3574 M
495 0 V
810 4500 M
676 0 V
676 0 V
676 0 V
676 0 V
4190 2443 L
676 1187 V
5542 2237 L
676 -399 V
676 -315 V
810 4500 Star
810 4500 Star
1486 4500 Star
1486 4500 Star
1486 4500 Star
2162 4500 Star
2162 4500 Star
2838 4500 Star
2838 4500 Star
2838 4500 Star
3514 4500 Star
4190 2443 Star
4866 3630 Star
5542 2237 Star
6218 1838 Star
6894 1523 Star
2409 3574 Star
1.000 UP
1.000 UL
LT3
2054 3394 M
[ [(Times-Roman) 180.0 0.0 true true (PARMETIS)]
] -60.0 MRshow
2162 3394 M
495 0 V
810 4500 M
676 0 V
676 0 V
676 0 V
676 0 V
676 0 V
676 0 V
5542 2991 L
676 178 V
676 140 V
810 4500 Box
810 4500 Box
1486 4500 Box
1486 4500 Box
1486 4500 Box
2162 4500 Box
2162 4500 Box
2838 4500 Box
2838 4500 Box
2838 4500 Box
3514 4500 Box
4190 4500 Box
4866 4500 Box
5542 2991 Box
6218 3169 Box
6894 3309 Box
2409 3394 Box
1.000 UP
1.000 UL
LT4
2054 3214 M
[ [(Times-Roman) 180.0 0.0 true true (RCB)]
] -60.0 MRshow
2162 3214 M
495 0 V
810 4500 M
676 0 V
676 0 V
676 0 V
3514 3243 L
4190 1414 L
676 1345 V
676 232 V
6218 1172 L
676 351 V
810 4500 BoxF
810 4500 BoxF
1486 4500 BoxF
1486 4500 BoxF
1486 4500 BoxF
2162 4500 BoxF
2162 4500 BoxF
2838 4500 BoxF
2838 4500 BoxF
2838 4500 BoxF
3514 3243 BoxF
4190 1414 BoxF
4866 2759 BoxF
5542 2991 BoxF
6218 1172 BoxF
6894 1523 BoxF
2409 3214 BoxF
1.000 UP
1.000 UL
LT5
2054 3034 M
[ [(Times-Roman) 180.0 0.0 true true (RIB)]
] -60.0 MRshow
2162 3034 M
495 0 V
810 4500 M
676 0 V
676 0 V
676 0 V
676 0 V
676 0 V
676 -870 V
676 116 V
6218 2503 L
676 -980 V
810 4500 Circle
810 4500 Circle
1486 4500 Circle
1486 4500 Circle
1486 4500 Circle
2162 4500 Circle
2162 4500 Circle
2838 4500 Circle
2838 4500 Circle
2838 4500 Circle
3514 4500 Circle
4190 4500 Circle
4866 3630 Circle
5542 3746 Circle
6218 2503 Circle
6894 1523 Circle
2409 3034 Circle
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Times-Roman

%%EndDocument
 @endspecial 51523 34703 V 888 34748 50657 45 v 0 36962
a Fk(Figure)430 b(4:)577 b Fj(ad)-145 b(j)7437 37161
y Fb(A)8627 36962 y Fk(\(left\))430 b(and)f Fj(ad)-145
b(j)16188 37161 y Fb(M)17671 36962 y Fk(\(righ)-36 b(t\))429
b(for)i(the)e(Tw)-36 b(o)431 b(Pip)36 b(es)430 b(mesh)f(\(top\))g(and)g
(Quartercone)g(mesh)0 38567 y(\(b)36 b(ottom\).)915 b(Jostle)547
b(pro)36 b(duced)545 b(the)g(lo)-36 b(w)g(est)547 b(adjacencies)g(in)f
(most)g(cases)g(for)h(the)e(Tw)-36 b(o)547 b(Pip)36 b(es)546
b(mesh,)0 40172 y(while)434 b(R)-36 b(CB)434 b(also)h(p)36
b(erformed)433 b(w)-36 b(ell)435 b(for)f(the)f(Quartercone)f(mesh.)0
43972 y(im)-36 b(balance)412 b(in)-36 b(tro)36 b(duced)410
b(b)-36 b(y)412 b(the)f(Lo)36 b(cal)412 b(Re\257nemen)-36
b(t)410 b(Metho)36 b(d)411 b([23)q(].)571 b(Timings)413
b(are)f(a)-36 b(v)g(eraged)412 b(o)-36 b(v)g(er)412 b(t)-36
b(w)g(o)0 45577 y(runs.)561 b(Times)384 b(are)g(brok)-36
b(en)384 b(do)-36 b(wn)384 b(as)g(rebalance)g(times,)394
b(re\257nemen)-36 b(t)382 b(times,)395 b(solution)384
b(times,)394 b(and)383 b(total)0 47183 y(times)460 b(\(the)f(sum)g(of)h
(the)g(other)f(three\).)656 b(P)-36 b(artition)460 b(qualit)-36
b(y)460 b(and)g(timing)g(statistics)g(are)g(presen)-36
b(ted)458 b(at)0 48788 y(eac)-36 b(h)532 b(re\257nemen)-36
b(t)530 b(step)i(and,)556 b(and)532 b(times)g(as)g(cum)-36
b(ulativ)g(e)532 b(totals.)874 b(T)-108 b(o)533 b(k)-36
b(eep)532 b(the)f(n)-36 b(um)g(b)36 b(er)531 b(of)h(graphs)0
50393 y(manageable,)354 b(statistics)334 b(brok)-36 b(en)333
b(do)-36 b(wn)333 b(b)-36 b(y)333 b(re\257nemen)-36 b(t)332
b(step)g(are)i(sho)-36 b(wn)333 b(only)h(for)f(8)h(and)f(20)h(pro)36
b(cesses.)1951 51998 y(W)-108 b(e)540 b(\257rst)g(examine)h(partition)f
(qualit)-36 b(y)542 b(metrics)e(for)h(the)f(meshes)g(at)h(eac)-36
b(h)540 b(adaptiv)-36 b(e)541 b(re\257nemen)-36 b(t)0
53603 y(step.)532 b(Figure)295 b(5)h(presen)-36 b(ts)295
b(surface)h(indices)f(and)h(Figure)f(6)h(presen)-36 b(ts)295
b(in)-36 b(terpro)36 b(cess)295 b(adjacencies.)533 b(Surface)0
55208 y(index)455 b(rankings)g(w)-36 b(ere)455 b(consisten)-36
b(t,)460 b(with)455 b(Jostle)h(the)e(b)36 b(est,)460
b(follo)-36 b(w)g(ed)457 b(b)-36 b(y)455 b(P)-36 b(armetis,)460
b(RIB,)c(and)e(R)-36 b(CB.)0 56813 y(Jostle)443 b(also)g(had)e(the)h
(lo)-36 b(w)g(est)442 b(a)-36 b(v)g(erage)443 b(adjacency)-108
b(,)445 b(but)c(P)-36 b(armetis)442 b(b)36 b(ecame)442
b(m)-36 b(uc)g(h)441 b(w)-36 b(orse.)604 b(F)-108 b(or)442
b(the)f(20)0 58418 y(pro)36 b(cess)434 b Fj(ad)-145 b(j)6283
58617 y Fb(M)7336 58418 y Fk(,)434 b(R)-36 b(CB)434 b(w)-36
b(as)434 b(actually)h(the)e(b)36 b(est)433 b(and)g(Jostle)i(the)e(w)-36
b(orst.)1951 60023 y(Figure)354 b(7)h(sho)-36 b(ws)355
b(the)f(times)g(for)h(eac)-36 b(h)355 b(adaptiv)-36 b(e)354
b(step)g(for)h(the)f(p)36 b(erforated)355 b(sho)36 b(c)-36
b(k)355 b(tub)36 b(e)353 b(on)i(8)f(and)g(20)0 61628
y(pro)36 b(cesses,)476 b(brok)-36 b(en)467 b(do)-36 b(wn)468
b(in)-36 b(to)467 b(rebalancing)h(times,)476 b(re\257nemen)-36
b(t)466 b(times,)476 b(and)467 b(solution)g(times.)680
b(R)-36 b(CB)0 63233 y(usually)479 b(had)f(the)g(fastest)h(rebalancing)
g(time,)490 b(and)478 b(Jostle)i(w)-36 b(as)479 b(consisten)-36
b(tly)479 b(the)f(slo)-36 b(w)g(est.)714 b(In)478 b(man)-36
b(y)0 64839 y(cases,)347 b(Jostle)324 b(to)36 b(ok)325
b(sev)-36 b(eral)324 b(times)g(longer)g(than)f(the)h(other)f(metho)36
b(ds.)541 b(F)-108 b(or)323 b(re\257nemen)-36 b(t)322
b(time,)347 b(the)323 b(costs)0 66444 y(for)316 b(Jostle,)340
b(P)-36 b(armetis)315 b(and)g(RIB)h(w)-36 b(ere)316 b(similar,)340
b(but)314 b(R)-36 b(CB)316 b(w)-36 b(as)316 b(signi\257can)-36
b(tly)316 b(slo)-36 b(w)g(er)316 b(in)g(most)f(8-pro)36
b(cess)0 68049 y(cases)328 b(and)e(in)h(some)h(20-pro)36
b(cess)327 b(cases.)544 b(The)327 b(most)g(signi\257can)-36
b(t)327 b(and)g(most)g(consisten)-36 b(t)326 b(di\256erences)h(w)-36
b(ere)0 69654 y(in)371 b(the)f(time)h(sp)36 b(en)-36
b(t)369 b(in)i(the)f(solution)h(pro)36 b(cess.)558 b(This)371
b(time)f(includes)h(the)f(actual)h(computation)f(and)h(the)0
71259 y(comm)-36 b(unication)402 b(to)h(exc)-36 b(hange)402
b(solution)h(information)g(across)f(partition)h(b)36
b(oundaries.)567 b(Di\256erences)402 b(in)25675 75417
y(8)p eop
%%Page: 9 9
9 8 bop 888 140 50657 45 v 866 17422 45 17282 v 1553
16940 a @beginspecial 50 @llx 50 @lly 410 @urx 302 @ury
2160 @rwi @setspecial
%%BeginDocument: graphs/solverAverages/partition/gsi/gsi_8.eps
%!PS-Adobe-2.0 EPSF-2.0
%%Title: gsi_8.eps
%%Creator: gnuplot 3.7 patchlevel 0
%%CreationDate: Thu Aug 15 11:14:14 2002
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 410 302
%%Orientation: Portrait
%%EndComments
/gnudict 256 dict def
gnudict begin
/Color false def
/Solid false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
/vshift -60 def
/dl {10 mul} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow { currentpoint stroke M
  0 vshift R show } def
/Rshow { currentpoint stroke M
  dup stringwidth pop neg vshift R show } def
/Cshow { currentpoint stroke M
  dup stringwidth pop -2 div vshift R show } def
/UP { dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def } def
/DL { Color {setrgbcolor Solid {pop []} if 0 setdash }
 {pop pop pop Solid {pop []} if 0 setdash} ifelse } def
/BL { stroke gnulinewidth 2 mul setlinewidth } def
/AL { stroke gnulinewidth 2 div setlinewidth } def
/UL { gnulinewidth mul /userlinewidth exch def } def
/PL { stroke userlinewidth setlinewidth } def
/LTb { BL [] 0 0 0 DL } def
/LTa { AL [1 dl 2 dl] 0 setdash 0 0 0 setrgbcolor } def
/LT0 { PL [] 1 0 0 DL } def
/LT1 { PL [4 dl 2 dl] 0 1 0 DL } def
/LT2 { PL [2 dl 3 dl] 0 0 1 DL } def
/LT3 { PL [1 dl 1.5 dl] 1 0 1 DL } def
/LT4 { PL [5 dl 2 dl 1 dl 2 dl] 0 1 1 DL } def
/LT5 { PL [4 dl 3 dl 1 dl 3 dl] 1 1 0 DL } def
/LT6 { PL [2 dl 2 dl 2 dl 4 dl] 0 0 0 DL } def
/LT7 { PL [2 dl 2 dl 2 dl 2 dl 2 dl 4 dl] 1 0.3 0 DL } def
/LT8 { PL [2 dl 2 dl 2 dl 2 dl 2 dl 2 dl 2 dl 4 dl] 0.5 0.5 0.5 DL } def
/Pnt { stroke [] 0 setdash
   gsave 1 setlinecap M 0 0 V stroke grestore } def
/Dia { stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt } def
/Pls { stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
  } def
/Box { stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt } def
/Crs { stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke } def
/TriU { stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt  } def
/Star { 2 copy Pls Crs } def
/BoxF { stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V  hpt2 0 V  0 vpt2 V
  hpt2 neg 0 V  closepath fill } def
/TriUF { stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill } def
/TriD { stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt  } def
/TriDF { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF { stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill } def
/Pent { stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt } def
/PentF { stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore } def
/Circle { stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt } def
/CircleF { stroke [] 0 setdash hpt 0 360 arc fill } def
/C0 { BL [] 0 setdash 2 copy moveto vpt 90 450  arc } bind def
/C1 { BL [] 0 setdash 2 copy        moveto
       2 copy  vpt 0 90 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C2 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 90 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C3 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C4 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 180 270 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C5 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 90 arc
       2 copy moveto
       2 copy  vpt 180 270 arc closepath fill
               vpt 0 360 arc } bind def
/C6 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 90 270 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C7 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 0 270 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C8 { BL [] 0 setdash 2 copy moveto
      2 copy vpt 270 360 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C9 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 270 450 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C10 { BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
       2 copy moveto
       2 copy vpt 90 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C11 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 180 arc closepath fill
       2 copy moveto
       2 copy  vpt 270 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C12 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 180 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C13 { BL [] 0 setdash  2 copy moveto
       2 copy  vpt 0 90 arc closepath fill
       2 copy moveto
       2 copy  vpt 180 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C14 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 90 360 arc closepath fill
               vpt 0 360 arc } bind def
/C15 { BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/Rec   { newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
       neg 0 rlineto closepath } bind def
/Square { dup Rec } bind def
/Bsquare { vpt sub exch vpt sub exch vpt2 Square } bind def
/S0 { BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare } bind def
/S1 { BL [] 0 setdash 2 copy vpt Square fill Bsquare } bind def
/S2 { BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare } bind def
/S3 { BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare } bind def
/S4 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare } bind def
/S5 { BL [] 0 setdash 2 copy 2 copy vpt Square fill
       exch vpt sub exch vpt sub vpt Square fill Bsquare } bind def
/S6 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare } bind def
/S7 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
       2 copy vpt Square fill
       Bsquare } bind def
/S8 { BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare } bind def
/S9 { BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare } bind def
/S10 { BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
       Bsquare } bind def
/S11 { BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
       Bsquare } bind def
/S12 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare } bind def
/S13 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
       2 copy vpt Square fill Bsquare } bind def
/S14 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
       2 copy exch vpt sub exch vpt Square fill Bsquare } bind def
/S15 { BL [] 0 setdash 2 copy Bsquare fill Bsquare } bind def
/D0 { gsave translate 45 rotate 0 0 S0 stroke grestore } bind def
/D1 { gsave translate 45 rotate 0 0 S1 stroke grestore } bind def
/D2 { gsave translate 45 rotate 0 0 S2 stroke grestore } bind def
/D3 { gsave translate 45 rotate 0 0 S3 stroke grestore } bind def
/D4 { gsave translate 45 rotate 0 0 S4 stroke grestore } bind def
/D5 { gsave translate 45 rotate 0 0 S5 stroke grestore } bind def
/D6 { gsave translate 45 rotate 0 0 S6 stroke grestore } bind def
/D7 { gsave translate 45 rotate 0 0 S7 stroke grestore } bind def
/D8 { gsave translate 45 rotate 0 0 S8 stroke grestore } bind def
/D9 { gsave translate 45 rotate 0 0 S9 stroke grestore } bind def
/D10 { gsave translate 45 rotate 0 0 S10 stroke grestore } bind def
/D11 { gsave translate 45 rotate 0 0 S11 stroke grestore } bind def
/D12 { gsave translate 45 rotate 0 0 S12 stroke grestore } bind def
/D13 { gsave translate 45 rotate 0 0 S13 stroke grestore } bind def
/D14 { gsave translate 45 rotate 0 0 S14 stroke grestore } bind def
/D15 { gsave translate 45 rotate 0 0 S15 stroke grestore } bind def
/DiaE { stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke } def
/BoxE { stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke } def
/TriUE { stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke } def
/TriDE { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke } def
/PentE { stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore } def
/CircE { stroke [] 0 setdash 
  hpt 0 360 arc stroke } def
/Opaque { gsave closepath 1 setgray fill grestore 0 setgray closepath } def
/DiaW { stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke } def
/BoxW { stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke } def
/TriUW { stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke } def
/TriDW { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke } def
/PentW { stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore } def
/CircW { stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke } def
/BoxFill { gsave Rec 1 setgray fill grestore } def
/MFshow {{dup dup 0 get findfont exch 1 get scalefont setfont
     [ currentpoint ] exch dup 2 get 0 exch rmoveto dup dup 5 get exch 4 get
     {show} {stringwidth pop 0 rmoveto}ifelse dup 3 get
     {2 get neg 0 exch rmoveto pop} {pop aload pop moveto}ifelse} forall} bind def
/MFwidth {0 exch {dup 3 get{dup dup 0 get findfont exch 1 get scalefont setfont
      5 get stringwidth pop add}
    {pop} ifelse} forall} bind def
/MLshow { currentpoint stroke M
  0 exch R MFshow } bind def
/MRshow { currentpoint stroke M
  exch dup MFwidth neg 3 -1 roll R MFshow } def
/MCshow { currentpoint stroke M
  exch dup MFwidth -2 div 3 -1 roll R MFshow } def
end
%%EndProlog
gnudict begin
gsave
50 50 translate
0.050 0.050 scale
0 setgray
newpath
(Times-Roman) findfont 180 scalefont setfont
1.000 UL
LTb
702 540 M
63 0 V
6129 0 R
-63 0 V
 stroke
594 540 M
[ [(Times-Roman) 180.0 0.0 true true (0)]
] -60.0 MRshow
702 1149 M
63 0 V
6129 0 R
-63 0 V
 stroke
594 1149 M
[ [(Times-Roman) 180.0 0.0 true true (2)]
] -60.0 MRshow
702 1758 M
63 0 V
6129 0 R
-63 0 V
 stroke
594 1758 M
[ [(Times-Roman) 180.0 0.0 true true (4)]
] -60.0 MRshow
702 2368 M
63 0 V
6129 0 R
-63 0 V
 stroke
594 2368 M
[ [(Times-Roman) 180.0 0.0 true true (6)]
] -60.0 MRshow
702 2977 M
63 0 V
6129 0 R
-63 0 V
 stroke
594 2977 M
[ [(Times-Roman) 180.0 0.0 true true (8)]
] -60.0 MRshow
702 3586 M
63 0 V
6129 0 R
-63 0 V
 stroke
594 3586 M
[ [(Times-Roman) 180.0 0.0 true true (10)]
] -60.0 MRshow
702 4195 M
63 0 V
6129 0 R
-63 0 V
 stroke
594 4195 M
[ [(Times-Roman) 180.0 0.0 true true (12)]
] -60.0 MRshow
1046 540 M
0 63 V
0 3897 R
0 -63 V
 stroke
1046 360 M
[ [(Times-Roman) 180.0 0.0 true true (2)]
] -60.0 MCshow
1734 540 M
0 63 V
0 3897 R
0 -63 V
 stroke
1734 360 M
[ [(Times-Roman) 180.0 0.0 true true (4)]
] -60.0 MCshow
2422 540 M
0 63 V
0 3897 R
0 -63 V
 stroke
2422 360 M
[ [(Times-Roman) 180.0 0.0 true true (6)]
] -60.0 MCshow
3110 540 M
0 63 V
0 3897 R
0 -63 V
 stroke
3110 360 M
[ [(Times-Roman) 180.0 0.0 true true (8)]
] -60.0 MCshow
3798 540 M
0 63 V
0 3897 R
0 -63 V
 stroke
3798 360 M
[ [(Times-Roman) 180.0 0.0 true true (10)]
] -60.0 MCshow
4486 540 M
0 63 V
0 3897 R
0 -63 V
 stroke
4486 360 M
[ [(Times-Roman) 180.0 0.0 true true (12)]
] -60.0 MCshow
5174 540 M
0 63 V
0 3897 R
0 -63 V
 stroke
5174 360 M
[ [(Times-Roman) 180.0 0.0 true true (14)]
] -60.0 MCshow
5862 540 M
0 63 V
0 3897 R
0 -63 V
 stroke
5862 360 M
[ [(Times-Roman) 180.0 0.0 true true (16)]
] -60.0 MCshow
6550 540 M
0 63 V
0 3897 R
0 -63 V
 stroke
6550 360 M
[ [(Times-Roman) 180.0 0.0 true true (18)]
] -60.0 MCshow
1.000 UL
LTb
702 540 M
6192 0 V
0 3960 V
-6192 0 V
702 540 L
 stroke
180 2520 M
currentpoint gsave translate 90 rotate 0 0 moveto
[ [(Times-Roman) 180.0 0.0 true true (GSI)]
] -60.0 MCshow
grestore
3798 90 M
[ [(Times-Roman) 180.0 0.0 true true (Refinement Step)]
] -60.0 MCshow
3798 4770 M
[ [(Times-Roman) 180.0 0.0 true true (Global Surface Index for 8 Processors)]
] -60.0 MCshow
1.000 UP
1.000 UL
LT0
6075 4347 M
[ [(Times-Roman) 180.0 0.0 true true (JOSTLE)]
] -60.0 MRshow
6183 4347 M
495 0 V
702 875 M
344 31 V
344 -61 V
344 0 V
344 0 V
344 -16 V
344 -15 V
344 0 V
344 0 V
344 0 V
344 0 V
344 0 V
344 15 V
344 -15 V
344 0 V
344 0 V
344 0 V
344 31 V
344 -31 V
702 875 Pls
1046 906 Pls
1390 845 Pls
1734 845 Pls
2078 845 Pls
2422 829 Pls
2766 814 Pls
3110 814 Pls
3454 814 Pls
3798 814 Pls
4142 814 Pls
4486 814 Pls
4830 829 Pls
5174 814 Pls
5518 814 Pls
5862 814 Pls
6206 814 Pls
6550 845 Pls
6894 814 Pls
6430 4347 Pls
1.000 UP
1.000 UL
LT1
6075 4167 M
[ [(Times-Roman) 180.0 0.0 true true (PARMETIS)]
] -60.0 MRshow
6183 4167 M
495 0 V
702 1454 M
344 -92 V
344 -30 V
344 -91 V
344 -46 V
344 -46 V
344 0 V
344 -15 V
344 -15 V
344 -15 V
344 0 V
344 0 V
344 0 V
344 -16 V
344 0 V
344 -15 V
344 0 V
344 0 V
344 0 V
702 1454 Crs
1046 1362 Crs
1390 1332 Crs
1734 1241 Crs
2078 1195 Crs
2422 1149 Crs
2766 1149 Crs
3110 1134 Crs
3454 1119 Crs
3798 1104 Crs
4142 1104 Crs
4486 1104 Crs
4830 1104 Crs
5174 1088 Crs
5518 1088 Crs
5862 1073 Crs
6206 1073 Crs
6550 1073 Crs
6894 1073 Crs
6430 4167 Crs
1.000 UP
1.000 UL
LT2
6075 3987 M
[ [(Times-Roman) 180.0 0.0 true true (RCB)]
] -60.0 MRshow
6183 3987 M
495 0 V
702 1484 M
344 762 V
344 487 V
344 183 V
344 -487 V
344 -31 V
344 -30 V
344 -31 V
344 -30 V
344 -31 V
344 -30 V
344 -31 V
344 -30 V
344 -61 V
344 -61 V
344 31 V
344 -31 V
344 -30 V
344 -31 V
702 1484 Star
1046 2246 Star
1390 2733 Star
1734 2916 Star
2078 2429 Star
2422 2398 Star
2766 2368 Star
3110 2337 Star
3454 2307 Star
3798 2276 Star
4142 2246 Star
4486 2215 Star
4830 2185 Star
5174 2124 Star
5518 2063 Star
5862 2094 Star
6206 2063 Star
6550 2033 Star
6894 2002 Star
6430 3987 Star
1.000 UP
1.000 UL
LT3
6075 3807 M
[ [(Times-Roman) 180.0 0.0 true true (RIB)]
] -60.0 MRshow
6183 3807 M
495 0 V
702 1362 M
344 92 V
344 670 V
344 -426 V
344 -336 V
344 -30 V
344 30 V
344 0 V
344 31 V
344 0 V
344 30 V
344 -30 V
344 0 V
344 -31 V
344 0 V
344 -91 V
344 31 V
344 -31 V
344 31 V
702 1362 Box
1046 1454 Box
1390 2124 Box
1734 1698 Box
2078 1362 Box
2422 1332 Box
2766 1362 Box
3110 1362 Box
3454 1393 Box
3798 1393 Box
4142 1423 Box
4486 1393 Box
4830 1393 Box
5174 1362 Box
5518 1362 Box
5862 1271 Box
6206 1302 Box
6550 1271 Box
6894 1302 Box
6430 3807 Box
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Times-Roman

%%EndDocument
 @endspecial 25328 w @beginspecial 50 @llx 50 @lly 410
@urx 302 @ury 2160 @rwi @setspecial
%%BeginDocument: graphs/solverAverages/partition/gsi/gsi_20.eps
%!PS-Adobe-2.0 EPSF-2.0
%%Title: gsi_20.eps
%%Creator: gnuplot 3.7 patchlevel 0
%%CreationDate: Thu Aug 15 11:14:15 2002
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 410 302
%%Orientation: Portrait
%%EndComments
/gnudict 256 dict def
gnudict begin
/Color false def
/Solid false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
/vshift -60 def
/dl {10 mul} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow { currentpoint stroke M
  0 vshift R show } def
/Rshow { currentpoint stroke M
  dup stringwidth pop neg vshift R show } def
/Cshow { currentpoint stroke M
  dup stringwidth pop -2 div vshift R show } def
/UP { dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def } def
/DL { Color {setrgbcolor Solid {pop []} if 0 setdash }
 {pop pop pop Solid {pop []} if 0 setdash} ifelse } def
/BL { stroke gnulinewidth 2 mul setlinewidth } def
/AL { stroke gnulinewidth 2 div setlinewidth } def
/UL { gnulinewidth mul /userlinewidth exch def } def
/PL { stroke userlinewidth setlinewidth } def
/LTb { BL [] 0 0 0 DL } def
/LTa { AL [1 dl 2 dl] 0 setdash 0 0 0 setrgbcolor } def
/LT0 { PL [] 1 0 0 DL } def
/LT1 { PL [4 dl 2 dl] 0 1 0 DL } def
/LT2 { PL [2 dl 3 dl] 0 0 1 DL } def
/LT3 { PL [1 dl 1.5 dl] 1 0 1 DL } def
/LT4 { PL [5 dl 2 dl 1 dl 2 dl] 0 1 1 DL } def
/LT5 { PL [4 dl 3 dl 1 dl 3 dl] 1 1 0 DL } def
/LT6 { PL [2 dl 2 dl 2 dl 4 dl] 0 0 0 DL } def
/LT7 { PL [2 dl 2 dl 2 dl 2 dl 2 dl 4 dl] 1 0.3 0 DL } def
/LT8 { PL [2 dl 2 dl 2 dl 2 dl 2 dl 2 dl 2 dl 4 dl] 0.5 0.5 0.5 DL } def
/Pnt { stroke [] 0 setdash
   gsave 1 setlinecap M 0 0 V stroke grestore } def
/Dia { stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt } def
/Pls { stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
  } def
/Box { stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt } def
/Crs { stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke } def
/TriU { stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt  } def
/Star { 2 copy Pls Crs } def
/BoxF { stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V  hpt2 0 V  0 vpt2 V
  hpt2 neg 0 V  closepath fill } def
/TriUF { stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill } def
/TriD { stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt  } def
/TriDF { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF { stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill } def
/Pent { stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt } def
/PentF { stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore } def
/Circle { stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt } def
/CircleF { stroke [] 0 setdash hpt 0 360 arc fill } def
/C0 { BL [] 0 setdash 2 copy moveto vpt 90 450  arc } bind def
/C1 { BL [] 0 setdash 2 copy        moveto
       2 copy  vpt 0 90 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C2 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 90 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C3 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C4 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 180 270 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C5 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 90 arc
       2 copy moveto
       2 copy  vpt 180 270 arc closepath fill
               vpt 0 360 arc } bind def
/C6 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 90 270 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C7 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 0 270 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C8 { BL [] 0 setdash 2 copy moveto
      2 copy vpt 270 360 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C9 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 270 450 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C10 { BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
       2 copy moveto
       2 copy vpt 90 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C11 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 180 arc closepath fill
       2 copy moveto
       2 copy  vpt 270 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C12 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 180 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C13 { BL [] 0 setdash  2 copy moveto
       2 copy  vpt 0 90 arc closepath fill
       2 copy moveto
       2 copy  vpt 180 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C14 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 90 360 arc closepath fill
               vpt 0 360 arc } bind def
/C15 { BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/Rec   { newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
       neg 0 rlineto closepath } bind def
/Square { dup Rec } bind def
/Bsquare { vpt sub exch vpt sub exch vpt2 Square } bind def
/S0 { BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare } bind def
/S1 { BL [] 0 setdash 2 copy vpt Square fill Bsquare } bind def
/S2 { BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare } bind def
/S3 { BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare } bind def
/S4 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare } bind def
/S5 { BL [] 0 setdash 2 copy 2 copy vpt Square fill
       exch vpt sub exch vpt sub vpt Square fill Bsquare } bind def
/S6 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare } bind def
/S7 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
       2 copy vpt Square fill
       Bsquare } bind def
/S8 { BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare } bind def
/S9 { BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare } bind def
/S10 { BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
       Bsquare } bind def
/S11 { BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
       Bsquare } bind def
/S12 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare } bind def
/S13 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
       2 copy vpt Square fill Bsquare } bind def
/S14 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
       2 copy exch vpt sub exch vpt Square fill Bsquare } bind def
/S15 { BL [] 0 setdash 2 copy Bsquare fill Bsquare } bind def
/D0 { gsave translate 45 rotate 0 0 S0 stroke grestore } bind def
/D1 { gsave translate 45 rotate 0 0 S1 stroke grestore } bind def
/D2 { gsave translate 45 rotate 0 0 S2 stroke grestore } bind def
/D3 { gsave translate 45 rotate 0 0 S3 stroke grestore } bind def
/D4 { gsave translate 45 rotate 0 0 S4 stroke grestore } bind def
/D5 { gsave translate 45 rotate 0 0 S5 stroke grestore } bind def
/D6 { gsave translate 45 rotate 0 0 S6 stroke grestore } bind def
/D7 { gsave translate 45 rotate 0 0 S7 stroke grestore } bind def
/D8 { gsave translate 45 rotate 0 0 S8 stroke grestore } bind def
/D9 { gsave translate 45 rotate 0 0 S9 stroke grestore } bind def
/D10 { gsave translate 45 rotate 0 0 S10 stroke grestore } bind def
/D11 { gsave translate 45 rotate 0 0 S11 stroke grestore } bind def
/D12 { gsave translate 45 rotate 0 0 S12 stroke grestore } bind def
/D13 { gsave translate 45 rotate 0 0 S13 stroke grestore } bind def
/D14 { gsave translate 45 rotate 0 0 S14 stroke grestore } bind def
/D15 { gsave translate 45 rotate 0 0 S15 stroke grestore } bind def
/DiaE { stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke } def
/BoxE { stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke } def
/TriUE { stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke } def
/TriDE { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke } def
/PentE { stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore } def
/CircE { stroke [] 0 setdash 
  hpt 0 360 arc stroke } def
/Opaque { gsave closepath 1 setgray fill grestore 0 setgray closepath } def
/DiaW { stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke } def
/BoxW { stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke } def
/TriUW { stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke } def
/TriDW { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke } def
/PentW { stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore } def
/CircW { stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke } def
/BoxFill { gsave Rec 1 setgray fill grestore } def
/MFshow {{dup dup 0 get findfont exch 1 get scalefont setfont
     [ currentpoint ] exch dup 2 get 0 exch rmoveto dup dup 5 get exch 4 get
     {show} {stringwidth pop 0 rmoveto}ifelse dup 3 get
     {2 get neg 0 exch rmoveto pop} {pop aload pop moveto}ifelse} forall} bind def
/MFwidth {0 exch {dup 3 get{dup dup 0 get findfont exch 1 get scalefont setfont
      5 get stringwidth pop add}
    {pop} ifelse} forall} bind def
/MLshow { currentpoint stroke M
  0 exch R MFshow } bind def
/MRshow { currentpoint stroke M
  exch dup MFwidth neg 3 -1 roll R MFshow } def
/MCshow { currentpoint stroke M
  exch dup MFwidth -2 div 3 -1 roll R MFshow } def
end
%%EndProlog
gnudict begin
gsave
50 50 translate
0.050 0.050 scale
0 setgray
newpath
(Times-Roman) findfont 180 scalefont setfont
1.000 UL
LTb
702 540 M
63 0 V
6129 0 R
-63 0 V
 stroke
594 540 M
[ [(Times-Roman) 180.0 0.0 true true (0)]
] -60.0 MRshow
702 1149 M
63 0 V
6129 0 R
-63 0 V
 stroke
594 1149 M
[ [(Times-Roman) 180.0 0.0 true true (2)]
] -60.0 MRshow
702 1758 M
63 0 V
6129 0 R
-63 0 V
 stroke
594 1758 M
[ [(Times-Roman) 180.0 0.0 true true (4)]
] -60.0 MRshow
702 2368 M
63 0 V
6129 0 R
-63 0 V
 stroke
594 2368 M
[ [(Times-Roman) 180.0 0.0 true true (6)]
] -60.0 MRshow
702 2977 M
63 0 V
6129 0 R
-63 0 V
 stroke
594 2977 M
[ [(Times-Roman) 180.0 0.0 true true (8)]
] -60.0 MRshow
702 3586 M
63 0 V
6129 0 R
-63 0 V
 stroke
594 3586 M
[ [(Times-Roman) 180.0 0.0 true true (10)]
] -60.0 MRshow
702 4195 M
63 0 V
6129 0 R
-63 0 V
 stroke
594 4195 M
[ [(Times-Roman) 180.0 0.0 true true (12)]
] -60.0 MRshow
1046 540 M
0 63 V
0 3897 R
0 -63 V
 stroke
1046 360 M
[ [(Times-Roman) 180.0 0.0 true true (2)]
] -60.0 MCshow
1734 540 M
0 63 V
0 3897 R
0 -63 V
 stroke
1734 360 M
[ [(Times-Roman) 180.0 0.0 true true (4)]
] -60.0 MCshow
2422 540 M
0 63 V
0 3897 R
0 -63 V
 stroke
2422 360 M
[ [(Times-Roman) 180.0 0.0 true true (6)]
] -60.0 MCshow
3110 540 M
0 63 V
0 3897 R
0 -63 V
 stroke
3110 360 M
[ [(Times-Roman) 180.0 0.0 true true (8)]
] -60.0 MCshow
3798 540 M
0 63 V
0 3897 R
0 -63 V
 stroke
3798 360 M
[ [(Times-Roman) 180.0 0.0 true true (10)]
] -60.0 MCshow
4486 540 M
0 63 V
0 3897 R
0 -63 V
 stroke
4486 360 M
[ [(Times-Roman) 180.0 0.0 true true (12)]
] -60.0 MCshow
5174 540 M
0 63 V
0 3897 R
0 -63 V
 stroke
5174 360 M
[ [(Times-Roman) 180.0 0.0 true true (14)]
] -60.0 MCshow
5862 540 M
0 63 V
0 3897 R
0 -63 V
 stroke
5862 360 M
[ [(Times-Roman) 180.0 0.0 true true (16)]
] -60.0 MCshow
6550 540 M
0 63 V
0 3897 R
0 -63 V
 stroke
6550 360 M
[ [(Times-Roman) 180.0 0.0 true true (18)]
] -60.0 MCshow
1.000 UL
LTb
702 540 M
6192 0 V
0 3960 V
-6192 0 V
702 540 L
 stroke
180 2520 M
currentpoint gsave translate 90 rotate 0 0 moveto
[ [(Times-Roman) 180.0 0.0 true true (GSI)]
] -60.0 MCshow
grestore
3798 90 M
[ [(Times-Roman) 180.0 0.0 true true (Refinement Step)]
] -60.0 MCshow
3798 4770 M
[ [(Times-Roman) 180.0 0.0 true true (Global Surface Index for 20 Processors)]
] -60.0 MCshow
1.000 UP
1.000 UL
LT0
6075 4347 M
[ [(Times-Roman) 180.0 0.0 true true (JOSTLE)]
] -60.0 MRshow
6183 4347 M
495 0 V
702 1271 M
344 -122 V
344 -76 V
344 31 V
344 -31 V
344 0 V
344 0 V
344 -46 V
344 0 V
344 31 V
344 0 V
344 -15 V
344 -16 V
344 -15 V
344 0 V
344 0 V
344 0 V
344 -15 V
344 0 V
702 1271 Pls
1046 1149 Pls
1390 1073 Pls
1734 1104 Pls
2078 1073 Pls
2422 1073 Pls
2766 1073 Pls
3110 1027 Pls
3454 1027 Pls
3798 1058 Pls
4142 1058 Pls
4486 1043 Pls
4830 1027 Pls
5174 1012 Pls
5518 1012 Pls
5862 1012 Pls
6206 1012 Pls
6550 997 Pls
6894 997 Pls
6430 4347 Pls
1.000 UP
1.000 UL
LT1
6075 4167 M
[ [(Times-Roman) 180.0 0.0 true true (PARMETIS)]
] -60.0 MRshow
6183 4167 M
495 0 V
702 2246 M
344 -548 V
344 -46 V
344 61 V
344 -92 V
344 -15 V
344 -15 V
344 -46 V
344 -15 V
344 -30 V
344 0 V
344 0 V
344 0 V
344 -16 V
344 -15 V
344 15 V
344 -30 V
344 0 V
344 -15 V
702 2246 Crs
1046 1698 Crs
1390 1652 Crs
1734 1713 Crs
2078 1621 Crs
2422 1606 Crs
2766 1591 Crs
3110 1545 Crs
3454 1530 Crs
3798 1500 Crs
4142 1500 Crs
4486 1500 Crs
4830 1500 Crs
5174 1484 Crs
5518 1469 Crs
5862 1484 Crs
6206 1454 Crs
6550 1454 Crs
6894 1439 Crs
6430 4167 Crs
1.000 UP
1.000 UL
LT2
6075 3987 M
[ [(Times-Roman) 180.0 0.0 true true (RCB)]
] -60.0 MRshow
6183 3987 M
495 0 V
702 2185 M
344 1127 V
344 366 V
344 487 V
344 -244 V
344 -30 V
344 -31 V
344 -335 V
344 -61 V
344 -61 V
344 -274 V
344 -91 V
344 -31 V
344 -91 V
344 -122 V
344 92 V
344 -31 V
344 -61 V
344 -30 V
702 2185 Star
1046 3312 Star
1390 3678 Star
1734 4165 Star
2078 3921 Star
2422 3891 Star
2766 3860 Star
3110 3525 Star
3454 3464 Star
3798 3403 Star
4142 3129 Star
4486 3038 Star
4830 3007 Star
5174 2916 Star
5518 2794 Star
5862 2886 Star
6206 2855 Star
6550 2794 Star
6894 2764 Star
6430 3987 Star
1.000 UP
1.000 UL
LT3
6075 3807 M
[ [(Times-Roman) 180.0 0.0 true true (RIB)]
] -60.0 MRshow
6183 3807 M
495 0 V
702 1698 M
344 456 V
344 701 V
344 274 V
344 -761 V
344 0 V
344 30 V
344 -30 V
344 -31 V
344 0 V
344 -61 V
344 -30 V
344 0 V
344 -92 V
344 61 V
344 -152 V
344 -30 V
344 0 V
344 0 V
702 1698 Box
1046 2154 Box
1390 2855 Box
1734 3129 Box
2078 2368 Box
2422 2368 Box
2766 2398 Box
3110 2368 Box
3454 2337 Box
3798 2337 Box
4142 2276 Box
4486 2246 Box
4830 2246 Box
5174 2154 Box
5518 2215 Box
5862 2063 Box
6206 2033 Box
6550 2033 Box
6894 2033 Box
6430 3807 Box
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Times-Roman

%%EndDocument
 @endspecial 51523 17422 V 866 34703 V 1553 34222 a @beginspecial
50 @llx 50 @lly 410 @urx 302 @ury 2160 @rwi @setspecial
%%BeginDocument: graphs/solverAverages/partition/msi/msi_8.eps
%!PS-Adobe-2.0 EPSF-2.0
%%Title: msi_8.eps
%%Creator: gnuplot 3.7 patchlevel 0
%%CreationDate: Thu Aug 15 11:14:49 2002
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 410 302
%%Orientation: Portrait
%%EndComments
/gnudict 256 dict def
gnudict begin
/Color false def
/Solid false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
/vshift -60 def
/dl {10 mul} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow { currentpoint stroke M
  0 vshift R show } def
/Rshow { currentpoint stroke M
  dup stringwidth pop neg vshift R show } def
/Cshow { currentpoint stroke M
  dup stringwidth pop -2 div vshift R show } def
/UP { dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def } def
/DL { Color {setrgbcolor Solid {pop []} if 0 setdash }
 {pop pop pop Solid {pop []} if 0 setdash} ifelse } def
/BL { stroke gnulinewidth 2 mul setlinewidth } def
/AL { stroke gnulinewidth 2 div setlinewidth } def
/UL { gnulinewidth mul /userlinewidth exch def } def
/PL { stroke userlinewidth setlinewidth } def
/LTb { BL [] 0 0 0 DL } def
/LTa { AL [1 dl 2 dl] 0 setdash 0 0 0 setrgbcolor } def
/LT0 { PL [] 1 0 0 DL } def
/LT1 { PL [4 dl 2 dl] 0 1 0 DL } def
/LT2 { PL [2 dl 3 dl] 0 0 1 DL } def
/LT3 { PL [1 dl 1.5 dl] 1 0 1 DL } def
/LT4 { PL [5 dl 2 dl 1 dl 2 dl] 0 1 1 DL } def
/LT5 { PL [4 dl 3 dl 1 dl 3 dl] 1 1 0 DL } def
/LT6 { PL [2 dl 2 dl 2 dl 4 dl] 0 0 0 DL } def
/LT7 { PL [2 dl 2 dl 2 dl 2 dl 2 dl 4 dl] 1 0.3 0 DL } def
/LT8 { PL [2 dl 2 dl 2 dl 2 dl 2 dl 2 dl 2 dl 4 dl] 0.5 0.5 0.5 DL } def
/Pnt { stroke [] 0 setdash
   gsave 1 setlinecap M 0 0 V stroke grestore } def
/Dia { stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt } def
/Pls { stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
  } def
/Box { stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt } def
/Crs { stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke } def
/TriU { stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt  } def
/Star { 2 copy Pls Crs } def
/BoxF { stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V  hpt2 0 V  0 vpt2 V
  hpt2 neg 0 V  closepath fill } def
/TriUF { stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill } def
/TriD { stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt  } def
/TriDF { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF { stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill } def
/Pent { stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt } def
/PentF { stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore } def
/Circle { stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt } def
/CircleF { stroke [] 0 setdash hpt 0 360 arc fill } def
/C0 { BL [] 0 setdash 2 copy moveto vpt 90 450  arc } bind def
/C1 { BL [] 0 setdash 2 copy        moveto
       2 copy  vpt 0 90 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C2 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 90 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C3 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C4 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 180 270 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C5 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 90 arc
       2 copy moveto
       2 copy  vpt 180 270 arc closepath fill
               vpt 0 360 arc } bind def
/C6 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 90 270 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C7 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 0 270 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C8 { BL [] 0 setdash 2 copy moveto
      2 copy vpt 270 360 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C9 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 270 450 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C10 { BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
       2 copy moveto
       2 copy vpt 90 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C11 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 180 arc closepath fill
       2 copy moveto
       2 copy  vpt 270 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C12 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 180 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C13 { BL [] 0 setdash  2 copy moveto
       2 copy  vpt 0 90 arc closepath fill
       2 copy moveto
       2 copy  vpt 180 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C14 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 90 360 arc closepath fill
               vpt 0 360 arc } bind def
/C15 { BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/Rec   { newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
       neg 0 rlineto closepath } bind def
/Square { dup Rec } bind def
/Bsquare { vpt sub exch vpt sub exch vpt2 Square } bind def
/S0 { BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare } bind def
/S1 { BL [] 0 setdash 2 copy vpt Square fill Bsquare } bind def
/S2 { BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare } bind def
/S3 { BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare } bind def
/S4 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare } bind def
/S5 { BL [] 0 setdash 2 copy 2 copy vpt Square fill
       exch vpt sub exch vpt sub vpt Square fill Bsquare } bind def
/S6 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare } bind def
/S7 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
       2 copy vpt Square fill
       Bsquare } bind def
/S8 { BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare } bind def
/S9 { BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare } bind def
/S10 { BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
       Bsquare } bind def
/S11 { BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
       Bsquare } bind def
/S12 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare } bind def
/S13 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
       2 copy vpt Square fill Bsquare } bind def
/S14 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
       2 copy exch vpt sub exch vpt Square fill Bsquare } bind def
/S15 { BL [] 0 setdash 2 copy Bsquare fill Bsquare } bind def
/D0 { gsave translate 45 rotate 0 0 S0 stroke grestore } bind def
/D1 { gsave translate 45 rotate 0 0 S1 stroke grestore } bind def
/D2 { gsave translate 45 rotate 0 0 S2 stroke grestore } bind def
/D3 { gsave translate 45 rotate 0 0 S3 stroke grestore } bind def
/D4 { gsave translate 45 rotate 0 0 S4 stroke grestore } bind def
/D5 { gsave translate 45 rotate 0 0 S5 stroke grestore } bind def
/D6 { gsave translate 45 rotate 0 0 S6 stroke grestore } bind def
/D7 { gsave translate 45 rotate 0 0 S7 stroke grestore } bind def
/D8 { gsave translate 45 rotate 0 0 S8 stroke grestore } bind def
/D9 { gsave translate 45 rotate 0 0 S9 stroke grestore } bind def
/D10 { gsave translate 45 rotate 0 0 S10 stroke grestore } bind def
/D11 { gsave translate 45 rotate 0 0 S11 stroke grestore } bind def
/D12 { gsave translate 45 rotate 0 0 S12 stroke grestore } bind def
/D13 { gsave translate 45 rotate 0 0 S13 stroke grestore } bind def
/D14 { gsave translate 45 rotate 0 0 S14 stroke grestore } bind def
/D15 { gsave translate 45 rotate 0 0 S15 stroke grestore } bind def
/DiaE { stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke } def
/BoxE { stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke } def
/TriUE { stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke } def
/TriDE { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke } def
/PentE { stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore } def
/CircE { stroke [] 0 setdash 
  hpt 0 360 arc stroke } def
/Opaque { gsave closepath 1 setgray fill grestore 0 setgray closepath } def
/DiaW { stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke } def
/BoxW { stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke } def
/TriUW { stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke } def
/TriDW { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke } def
/PentW { stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore } def
/CircW { stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke } def
/BoxFill { gsave Rec 1 setgray fill grestore } def
/MFshow {{dup dup 0 get findfont exch 1 get scalefont setfont
     [ currentpoint ] exch dup 2 get 0 exch rmoveto dup dup 5 get exch 4 get
     {show} {stringwidth pop 0 rmoveto}ifelse dup 3 get
     {2 get neg 0 exch rmoveto pop} {pop aload pop moveto}ifelse} forall} bind def
/MFwidth {0 exch {dup 3 get{dup dup 0 get findfont exch 1 get scalefont setfont
      5 get stringwidth pop add}
    {pop} ifelse} forall} bind def
/MLshow { currentpoint stroke M
  0 exch R MFshow } bind def
/MRshow { currentpoint stroke M
  exch dup MFwidth neg 3 -1 roll R MFshow } def
/MCshow { currentpoint stroke M
  exch dup MFwidth -2 div 3 -1 roll R MFshow } def
end
%%EndProlog
gnudict begin
gsave
50 50 translate
0.050 0.050 scale
0 setgray
newpath
(Times-Roman) findfont 180 scalefont setfont
1.000 UL
LTb
702 540 M
63 0 V
6129 0 R
-63 0 V
 stroke
594 540 M
[ [(Times-Roman) 180.0 0.0 true true (0)]
] -60.0 MRshow
702 1260 M
63 0 V
6129 0 R
-63 0 V
 stroke
594 1260 M
[ [(Times-Roman) 180.0 0.0 true true (10)]
] -60.0 MRshow
702 1980 M
63 0 V
6129 0 R
-63 0 V
 stroke
594 1980 M
[ [(Times-Roman) 180.0 0.0 true true (20)]
] -60.0 MRshow
702 2700 M
63 0 V
6129 0 R
-63 0 V
 stroke
594 2700 M
[ [(Times-Roman) 180.0 0.0 true true (30)]
] -60.0 MRshow
702 3420 M
63 0 V
6129 0 R
-63 0 V
 stroke
594 3420 M
[ [(Times-Roman) 180.0 0.0 true true (40)]
] -60.0 MRshow
702 4140 M
63 0 V
6129 0 R
-63 0 V
 stroke
594 4140 M
[ [(Times-Roman) 180.0 0.0 true true (50)]
] -60.0 MRshow
1046 540 M
0 63 V
0 3897 R
0 -63 V
 stroke
1046 360 M
[ [(Times-Roman) 180.0 0.0 true true (2)]
] -60.0 MCshow
1734 540 M
0 63 V
0 3897 R
0 -63 V
 stroke
1734 360 M
[ [(Times-Roman) 180.0 0.0 true true (4)]
] -60.0 MCshow
2422 540 M
0 63 V
0 3897 R
0 -63 V
 stroke
2422 360 M
[ [(Times-Roman) 180.0 0.0 true true (6)]
] -60.0 MCshow
3110 540 M
0 63 V
0 3897 R
0 -63 V
 stroke
3110 360 M
[ [(Times-Roman) 180.0 0.0 true true (8)]
] -60.0 MCshow
3798 540 M
0 63 V
0 3897 R
0 -63 V
 stroke
3798 360 M
[ [(Times-Roman) 180.0 0.0 true true (10)]
] -60.0 MCshow
4486 540 M
0 63 V
0 3897 R
0 -63 V
 stroke
4486 360 M
[ [(Times-Roman) 180.0 0.0 true true (12)]
] -60.0 MCshow
5174 540 M
0 63 V
0 3897 R
0 -63 V
 stroke
5174 360 M
[ [(Times-Roman) 180.0 0.0 true true (14)]
] -60.0 MCshow
5862 540 M
0 63 V
0 3897 R
0 -63 V
 stroke
5862 360 M
[ [(Times-Roman) 180.0 0.0 true true (16)]
] -60.0 MCshow
6550 540 M
0 63 V
0 3897 R
0 -63 V
 stroke
6550 360 M
[ [(Times-Roman) 180.0 0.0 true true (18)]
] -60.0 MCshow
1.000 UL
LTb
702 540 M
6192 0 V
0 3960 V
-6192 0 V
702 540 L
 stroke
180 2520 M
currentpoint gsave translate 90 rotate 0 0 moveto
[ [(Times-Roman) 180.0 0.0 true true (MSI)]
] -60.0 MCshow
grestore
3798 90 M
[ [(Times-Roman) 180.0 0.0 true true (Refinement Step)]
] -60.0 MCshow
3798 4770 M
[ [(Times-Roman) 180.0 0.0 true true (Maximum Surface Index for 8 Processors)]
] -60.0 MCshow
1.000 UP
1.000 UL
LT0
6075 4347 M
[ [(Times-Roman) 180.0 0.0 true true (JOSTLE)]
] -60.0 MRshow
6183 4347 M
495 0 V
702 828 M
344 -65 V
344 -32 V
344 -18 V
344 0 V
344 -4 V
344 0 V
344 0 V
344 0 V
344 7 V
344 15 V
344 0 V
344 -22 V
344 18 V
344 -3 V
344 -22 V
344 14 V
344 -18 V
344 22 V
702 828 Pls
1046 763 Pls
1390 731 Pls
1734 713 Pls
2078 713 Pls
2422 709 Pls
2766 709 Pls
3110 709 Pls
3454 709 Pls
3798 716 Pls
4142 731 Pls
4486 731 Pls
4830 709 Pls
5174 727 Pls
5518 724 Pls
5862 702 Pls
6206 716 Pls
6550 698 Pls
6894 720 Pls
6430 4347 Pls
1.000 UP
1.000 UL
LT1
6075 4167 M
[ [(Times-Roman) 180.0 0.0 true true (PARMETIS)]
] -60.0 MRshow
6183 4167 M
495 0 V
702 1166 M
344 -28 V
344 -101 V
344 -33 V
344 -43 V
344 -29 V
344 -14 V
344 -11 V
344 -18 V
344 -3 V
344 3 V
344 -3 V
344 -4 V
344 -11 V
344 0 V
344 0 V
344 11 V
344 0 V
344 4 V
702 1166 Crs
1046 1138 Crs
1390 1037 Crs
1734 1004 Crs
2078 961 Crs
2422 932 Crs
2766 918 Crs
3110 907 Crs
3454 889 Crs
3798 886 Crs
4142 889 Crs
4486 886 Crs
4830 882 Crs
5174 871 Crs
5518 871 Crs
5862 871 Crs
6206 882 Crs
6550 882 Crs
6894 886 Crs
6430 4167 Crs
1.000 UP
1.000 UL
LT2
6075 3987 M
[ [(Times-Roman) 180.0 0.0 true true (RCB)]
] -60.0 MRshow
6183 3987 M
495 0 V
702 1426 M
344 482 V
344 785 V
344 389 V
344 -569 V
344 0 V
344 -7 V
344 -8 V
344 -7 V
344 -14 V
344 -15 V
344 -7 V
344 -36 V
344 -29 V
344 -115 V
344 58 V
344 -7 V
344 -22 V
344 -29 V
702 1426 Star
1046 1908 Star
1390 2693 Star
1734 3082 Star
2078 2513 Star
2422 2513 Star
2766 2506 Star
3110 2498 Star
3454 2491 Star
3798 2477 Star
4142 2462 Star
4486 2455 Star
4830 2419 Star
5174 2390 Star
5518 2275 Star
5862 2333 Star
6206 2326 Star
6550 2304 Star
6894 2275 Star
6430 3987 Star
1.000 UP
1.000 UL
LT3
6075 3807 M
[ [(Times-Roman) 180.0 0.0 true true (RIB)]
] -60.0 MRshow
6183 3807 M
495 0 V
702 1361 M
344 -166 V
344 569 V
344 -612 V
344 -144 V
344 -14 V
344 50 V
344 7 V
344 0 V
344 0 V
344 43 V
344 15 V
344 72 V
344 108 V
344 -180 V
344 137 V
344 43 V
344 29 V
344 0 V
702 1361 Box
1046 1195 Box
1390 1764 Box
1734 1152 Box
2078 1008 Box
2422 994 Box
2766 1044 Box
3110 1051 Box
3454 1051 Box
3798 1051 Box
4142 1094 Box
4486 1109 Box
4830 1181 Box
5174 1289 Box
5518 1109 Box
5862 1246 Box
6206 1289 Box
6550 1318 Box
6894 1318 Box
6430 3807 Box
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Times-Roman

%%EndDocument
 @endspecial 25328 w @beginspecial 50 @llx 50 @lly 410
@urx 302 @ury 2160 @rwi @setspecial
%%BeginDocument: graphs/solverAverages/partition/msi/msi_20.eps
%!PS-Adobe-2.0 EPSF-2.0
%%Title: msi_20.eps
%%Creator: gnuplot 3.7 patchlevel 0
%%CreationDate: Thu Aug 15 11:14:50 2002
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 410 302
%%Orientation: Portrait
%%EndComments
/gnudict 256 dict def
gnudict begin
/Color false def
/Solid false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
/vshift -60 def
/dl {10 mul} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow { currentpoint stroke M
  0 vshift R show } def
/Rshow { currentpoint stroke M
  dup stringwidth pop neg vshift R show } def
/Cshow { currentpoint stroke M
  dup stringwidth pop -2 div vshift R show } def
/UP { dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def } def
/DL { Color {setrgbcolor Solid {pop []} if 0 setdash }
 {pop pop pop Solid {pop []} if 0 setdash} ifelse } def
/BL { stroke gnulinewidth 2 mul setlinewidth } def
/AL { stroke gnulinewidth 2 div setlinewidth } def
/UL { gnulinewidth mul /userlinewidth exch def } def
/PL { stroke userlinewidth setlinewidth } def
/LTb { BL [] 0 0 0 DL } def
/LTa { AL [1 dl 2 dl] 0 setdash 0 0 0 setrgbcolor } def
/LT0 { PL [] 1 0 0 DL } def
/LT1 { PL [4 dl 2 dl] 0 1 0 DL } def
/LT2 { PL [2 dl 3 dl] 0 0 1 DL } def
/LT3 { PL [1 dl 1.5 dl] 1 0 1 DL } def
/LT4 { PL [5 dl 2 dl 1 dl 2 dl] 0 1 1 DL } def
/LT5 { PL [4 dl 3 dl 1 dl 3 dl] 1 1 0 DL } def
/LT6 { PL [2 dl 2 dl 2 dl 4 dl] 0 0 0 DL } def
/LT7 { PL [2 dl 2 dl 2 dl 2 dl 2 dl 4 dl] 1 0.3 0 DL } def
/LT8 { PL [2 dl 2 dl 2 dl 2 dl 2 dl 2 dl 2 dl 4 dl] 0.5 0.5 0.5 DL } def
/Pnt { stroke [] 0 setdash
   gsave 1 setlinecap M 0 0 V stroke grestore } def
/Dia { stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt } def
/Pls { stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
  } def
/Box { stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt } def
/Crs { stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke } def
/TriU { stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt  } def
/Star { 2 copy Pls Crs } def
/BoxF { stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V  hpt2 0 V  0 vpt2 V
  hpt2 neg 0 V  closepath fill } def
/TriUF { stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill } def
/TriD { stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt  } def
/TriDF { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF { stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill } def
/Pent { stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt } def
/PentF { stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore } def
/Circle { stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt } def
/CircleF { stroke [] 0 setdash hpt 0 360 arc fill } def
/C0 { BL [] 0 setdash 2 copy moveto vpt 90 450  arc } bind def
/C1 { BL [] 0 setdash 2 copy        moveto
       2 copy  vpt 0 90 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C2 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 90 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C3 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C4 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 180 270 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C5 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 90 arc
       2 copy moveto
       2 copy  vpt 180 270 arc closepath fill
               vpt 0 360 arc } bind def
/C6 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 90 270 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C7 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 0 270 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C8 { BL [] 0 setdash 2 copy moveto
      2 copy vpt 270 360 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C9 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 270 450 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C10 { BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
       2 copy moveto
       2 copy vpt 90 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C11 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 180 arc closepath fill
       2 copy moveto
       2 copy  vpt 270 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C12 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 180 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C13 { BL [] 0 setdash  2 copy moveto
       2 copy  vpt 0 90 arc closepath fill
       2 copy moveto
       2 copy  vpt 180 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C14 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 90 360 arc closepath fill
               vpt 0 360 arc } bind def
/C15 { BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/Rec   { newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
       neg 0 rlineto closepath } bind def
/Square { dup Rec } bind def
/Bsquare { vpt sub exch vpt sub exch vpt2 Square } bind def
/S0 { BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare } bind def
/S1 { BL [] 0 setdash 2 copy vpt Square fill Bsquare } bind def
/S2 { BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare } bind def
/S3 { BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare } bind def
/S4 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare } bind def
/S5 { BL [] 0 setdash 2 copy 2 copy vpt Square fill
       exch vpt sub exch vpt sub vpt Square fill Bsquare } bind def
/S6 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare } bind def
/S7 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
       2 copy vpt Square fill
       Bsquare } bind def
/S8 { BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare } bind def
/S9 { BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare } bind def
/S10 { BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
       Bsquare } bind def
/S11 { BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
       Bsquare } bind def
/S12 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare } bind def
/S13 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
       2 copy vpt Square fill Bsquare } bind def
/S14 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
       2 copy exch vpt sub exch vpt Square fill Bsquare } bind def
/S15 { BL [] 0 setdash 2 copy Bsquare fill Bsquare } bind def
/D0 { gsave translate 45 rotate 0 0 S0 stroke grestore } bind def
/D1 { gsave translate 45 rotate 0 0 S1 stroke grestore } bind def
/D2 { gsave translate 45 rotate 0 0 S2 stroke grestore } bind def
/D3 { gsave translate 45 rotate 0 0 S3 stroke grestore } bind def
/D4 { gsave translate 45 rotate 0 0 S4 stroke grestore } bind def
/D5 { gsave translate 45 rotate 0 0 S5 stroke grestore } bind def
/D6 { gsave translate 45 rotate 0 0 S6 stroke grestore } bind def
/D7 { gsave translate 45 rotate 0 0 S7 stroke grestore } bind def
/D8 { gsave translate 45 rotate 0 0 S8 stroke grestore } bind def
/D9 { gsave translate 45 rotate 0 0 S9 stroke grestore } bind def
/D10 { gsave translate 45 rotate 0 0 S10 stroke grestore } bind def
/D11 { gsave translate 45 rotate 0 0 S11 stroke grestore } bind def
/D12 { gsave translate 45 rotate 0 0 S12 stroke grestore } bind def
/D13 { gsave translate 45 rotate 0 0 S13 stroke grestore } bind def
/D14 { gsave translate 45 rotate 0 0 S14 stroke grestore } bind def
/D15 { gsave translate 45 rotate 0 0 S15 stroke grestore } bind def
/DiaE { stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke } def
/BoxE { stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke } def
/TriUE { stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke } def
/TriDE { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke } def
/PentE { stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore } def
/CircE { stroke [] 0 setdash 
  hpt 0 360 arc stroke } def
/Opaque { gsave closepath 1 setgray fill grestore 0 setgray closepath } def
/DiaW { stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke } def
/BoxW { stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke } def
/TriUW { stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke } def
/TriDW { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke } def
/PentW { stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore } def
/CircW { stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke } def
/BoxFill { gsave Rec 1 setgray fill grestore } def
/MFshow {{dup dup 0 get findfont exch 1 get scalefont setfont
     [ currentpoint ] exch dup 2 get 0 exch rmoveto dup dup 5 get exch 4 get
     {show} {stringwidth pop 0 rmoveto}ifelse dup 3 get
     {2 get neg 0 exch rmoveto pop} {pop aload pop moveto}ifelse} forall} bind def
/MFwidth {0 exch {dup 3 get{dup dup 0 get findfont exch 1 get scalefont setfont
      5 get stringwidth pop add}
    {pop} ifelse} forall} bind def
/MLshow { currentpoint stroke M
  0 exch R MFshow } bind def
/MRshow { currentpoint stroke M
  exch dup MFwidth neg 3 -1 roll R MFshow } def
/MCshow { currentpoint stroke M
  exch dup MFwidth -2 div 3 -1 roll R MFshow } def
end
%%EndProlog
gnudict begin
gsave
50 50 translate
0.050 0.050 scale
0 setgray
newpath
(Times-Roman) findfont 180 scalefont setfont
1.000 UL
LTb
702 540 M
63 0 V
6129 0 R
-63 0 V
 stroke
594 540 M
[ [(Times-Roman) 180.0 0.0 true true (0)]
] -60.0 MRshow
702 1260 M
63 0 V
6129 0 R
-63 0 V
 stroke
594 1260 M
[ [(Times-Roman) 180.0 0.0 true true (10)]
] -60.0 MRshow
702 1980 M
63 0 V
6129 0 R
-63 0 V
 stroke
594 1980 M
[ [(Times-Roman) 180.0 0.0 true true (20)]
] -60.0 MRshow
702 2700 M
63 0 V
6129 0 R
-63 0 V
 stroke
594 2700 M
[ [(Times-Roman) 180.0 0.0 true true (30)]
] -60.0 MRshow
702 3420 M
63 0 V
6129 0 R
-63 0 V
 stroke
594 3420 M
[ [(Times-Roman) 180.0 0.0 true true (40)]
] -60.0 MRshow
702 4140 M
63 0 V
6129 0 R
-63 0 V
 stroke
594 4140 M
[ [(Times-Roman) 180.0 0.0 true true (50)]
] -60.0 MRshow
1046 540 M
0 63 V
0 3897 R
0 -63 V
 stroke
1046 360 M
[ [(Times-Roman) 180.0 0.0 true true (2)]
] -60.0 MCshow
1734 540 M
0 63 V
0 3897 R
0 -63 V
 stroke
1734 360 M
[ [(Times-Roman) 180.0 0.0 true true (4)]
] -60.0 MCshow
2422 540 M
0 63 V
0 3897 R
0 -63 V
 stroke
2422 360 M
[ [(Times-Roman) 180.0 0.0 true true (6)]
] -60.0 MCshow
3110 540 M
0 63 V
0 3897 R
0 -63 V
 stroke
3110 360 M
[ [(Times-Roman) 180.0 0.0 true true (8)]
] -60.0 MCshow
3798 540 M
0 63 V
0 3897 R
0 -63 V
 stroke
3798 360 M
[ [(Times-Roman) 180.0 0.0 true true (10)]
] -60.0 MCshow
4486 540 M
0 63 V
0 3897 R
0 -63 V
 stroke
4486 360 M
[ [(Times-Roman) 180.0 0.0 true true (12)]
] -60.0 MCshow
5174 540 M
0 63 V
0 3897 R
0 -63 V
 stroke
5174 360 M
[ [(Times-Roman) 180.0 0.0 true true (14)]
] -60.0 MCshow
5862 540 M
0 63 V
0 3897 R
0 -63 V
 stroke
5862 360 M
[ [(Times-Roman) 180.0 0.0 true true (16)]
] -60.0 MCshow
6550 540 M
0 63 V
0 3897 R
0 -63 V
 stroke
6550 360 M
[ [(Times-Roman) 180.0 0.0 true true (18)]
] -60.0 MCshow
1.000 UL
LTb
702 540 M
6192 0 V
0 3960 V
-6192 0 V
702 540 L
 stroke
180 2520 M
currentpoint gsave translate 90 rotate 0 0 moveto
[ [(Times-Roman) 180.0 0.0 true true (MSI)]
] -60.0 MCshow
grestore
3798 90 M
[ [(Times-Roman) 180.0 0.0 true true (Refinement Step)]
] -60.0 MCshow
3798 4770 M
[ [(Times-Roman) 180.0 0.0 true true (Maximum Surface Index for 20 Processors)]
] -60.0 MCshow
1.000 UP
1.000 UL
LT0
6075 4347 M
[ [(Times-Roman) 180.0 0.0 true true (JOSTLE)]
] -60.0 MRshow
6183 4347 M
495 0 V
702 1094 M
344 -86 V
344 -94 V
344 -28 V
344 -4 V
344 7 V
344 -3 V
344 -22 V
344 0 V
344 18 V
344 0 V
344 -4 V
344 0 V
344 -21 V
344 7 V
344 0 V
344 0 V
344 7 V
344 0 V
702 1094 Pls
1046 1008 Pls
1390 914 Pls
1734 886 Pls
2078 882 Pls
2422 889 Pls
2766 886 Pls
3110 864 Pls
3454 864 Pls
3798 882 Pls
4142 882 Pls
4486 878 Pls
4830 878 Pls
5174 857 Pls
5518 864 Pls
5862 864 Pls
6206 864 Pls
6550 871 Pls
6894 871 Pls
6430 4347 Pls
1.000 UP
1.000 UL
LT1
6075 4167 M
[ [(Times-Roman) 180.0 0.0 true true (PARMETIS)]
] -60.0 MRshow
6183 4167 M
495 0 V
702 1966 M
344 -526 V
344 -101 V
344 -68 V
344 -51 V
344 -14 V
344 -7 V
344 -7 V
344 -11 V
344 7 V
344 -11 V
344 0 V
344 -3 V
344 -4 V
344 -4 V
344 -3 V
344 -4 V
344 -7 V
344 0 V
702 1966 Crs
1046 1440 Crs
1390 1339 Crs
1734 1271 Crs
2078 1220 Crs
2422 1206 Crs
2766 1199 Crs
3110 1192 Crs
3454 1181 Crs
3798 1188 Crs
4142 1177 Crs
4486 1177 Crs
4830 1174 Crs
5174 1170 Crs
5518 1166 Crs
5862 1163 Crs
6206 1159 Crs
6550 1152 Crs
6894 1152 Crs
6430 4167 Crs
1.000 UP
1.000 UL
LT2
6075 3987 M
[ [(Times-Roman) 180.0 0.0 true true (RCB)]
] -60.0 MRshow
6183 3987 M
495 0 V
702 2635 M
344 893 V
344 -288 V
344 1210 V
344 -36 V
344 7 V
344 0 V
344 0 V
344 -15 V
344 8 V
4142 3190 L
344 -51 V
344 -223 V
344 -36 V
344 -29 V
344 -7 V
344 -50 V
344 -65 V
344 -29 V
702 2635 Star
1046 3528 Star
1390 3240 Star
1734 4450 Star
2078 4414 Star
2422 4421 Star
2766 4421 Star
3110 4421 Star
3454 4406 Star
3798 4414 Star
4142 3190 Star
4486 3139 Star
4830 2916 Star
5174 2880 Star
5518 2851 Star
5862 2844 Star
6206 2794 Star
6550 2729 Star
6894 2700 Star
6430 3987 Star
1.000 UP
1.000 UL
LT3
6075 3807 M
[ [(Times-Roman) 180.0 0.0 true true (RIB)]
] -60.0 MRshow
6183 3807 M
495 0 V
702 1613 M
344 410 V
344 511 V
344 252 V
344 -7 V
344 -165 V
344 57 V
344 -14 V
344 -216 V
344 101 V
344 -101 V
344 -15 V
344 58 V
344 36 V
344 -144 V
344 130 V
344 -8 V
344 51 V
344 122 V
702 1613 Box
1046 2023 Box
1390 2534 Box
1734 2786 Box
2078 2779 Box
2422 2614 Box
2766 2671 Box
3110 2657 Box
3454 2441 Box
3798 2542 Box
4142 2441 Box
4486 2426 Box
4830 2484 Box
5174 2520 Box
5518 2376 Box
5862 2506 Box
6206 2498 Box
6550 2549 Box
6894 2671 Box
6430 3807 Box
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Times-Roman

%%EndDocument
 @endspecial 51523 34703 V 888 34748 50657 45 v 0 36962
a Fk(Figure)564 b(5:)839 b Fj(r)6667 37161 y Fb(G)8020
36962 y Fk(\(top\))563 b(and)h Fj(r)14720 37161 y Fb(M)16337
36962 y Fk(\(b)36 b(ottom\))564 b(at)g(eac)-36 b(h)564
b(adaptiv)-36 b(e)564 b(re\257nemen)-36 b(t)563 b(step)g(for)i(the)e(p)
36 b(erforated)0 38567 y(sho)g(c)-36 b(k)492 b(tub)36
b(e)490 b(on)i(8)f(\(left\))h(and)f(20)g(\(righ)-36 b(t\))491
b(pro)36 b(cesses.)752 b(Jostle)492 b(ac)-36 b(hiev)g(ed)491
b(the)g(b)36 b(est)491 b(surface)h(indices)f(in)0 40172
y(all)434 b(cases.)0 43714 y(this)398 b(stage)i(ma)-36
b(y)399 b(b)36 b(e)398 b(caused)h(b)-36 b(y)398 b(load)h(im)-36
b(balance)399 b(or)g(b)-36 b(y)399 b(in)-36 b(terpro)36
b(cess)398 b(comm)-36 b(unication)398 b(dela)-36 b(ys.)568
b(Here,)0 45319 y(the)433 b(Jostle)h(runs)f(w)-36 b(ere)434
b(the)f(fastest,)h(follo)-36 b(w)g(ed)435 b(b)-36 b(y)434
b(P)-36 b(armetis,)433 b(RIB,)i(and)e(R)-36 b(CB.)1951
46924 y(Figure)406 b(8)g(sho)-36 b(ws)406 b(the)f(total)h(time)g(to)g
(solution,)412 b(whic)-36 b(h)405 b(sums)h(the)f(corresp)36
b(onding)405 b(v)-72 b(alues)406 b(from)h(the)0 48529
y(graphs)380 b(in)g(Figure)g(7.)561 b(As)381 b(solution)f(time)h(is)f
(the)g(largest)h(p)36 b(ortion)380 b(of)h(the)f(o)-36
b(v)g(erall)382 b(time,)391 b(Jostle's)381 b(slo)-36
b(w)g(er)0 50134 y(partitioning)390 b(time)g(w)-36 b(as)391
b(dominated)f(b)-36 b(y)390 b(its)g(faster)h(solution)f(time.)564
b(Jostle)391 b(consisten)-36 b(tly)390 b(ac)-36 b(hiev)g(ed)391
b(the)0 51740 y(fastest)434 b(time)g(to)f(solution,)i(follo)-36
b(w)g(ed)435 b(b)-36 b(y)433 b(P)-36 b(armetis)434 b(and)f(R)-36
b(CB)434 b(in)f(b)36 b(oth)433 b(the)g(8)h(and)f(20)h(pro)36
b(cess)434 b(cases.)1951 53345 y(Figure)290 b(9)g(sho)-36
b(ws)291 b(the)e(cum)-36 b(ulativ)g(e)290 b(times)h(across)f(all)h
(adaptiv)-36 b(e)291 b(re\257nemen)-36 b(t)288 b(steps)i(for)g(the)g(p)
36 b(erforated)0 54950 y(sho)g(c)-36 b(k)383 b(tub)36
b(e)382 b(as)g(the)g(n)-36 b(um)g(b)36 b(er)381 b(of)i(pro)36
b(cesses)383 b(is)g(increased)f(from)h(4)f(up)g(to)h(20.)562
b(Times)383 b(are)f(sho)-36 b(wn)383 b(for)g(the)0 56555
y(substages)513 b(\(rebalancing,)534 b(re\257nemen)-36
b(t,)532 b(solution\))514 b(and)e(the)h(total)h(time.)818
b(Across)514 b(the)f(b)36 b(oard,)533 b(Jostle)0 58160
y(and)376 b(P)-36 b(armetis)376 b(ac)-36 b(hiev)g(ed)376
b(the)g(b)36 b(est)376 b(o)-36 b(v)g(erall)377 b(times.)559
b(Ov)-36 b(erall)377 b(times)g(with)f(R)-36 b(CB)376
b(and)g(RIB)h(w)-36 b(ere)376 b(sev)-36 b(eral)0 59765
y(times)547 b(slo)-36 b(w)g(er)547 b(than)f(the)g(graph)g
(partitioners.)917 b(The)546 b(longer)h(rebalancing)g(times)g(for)g(P)
-36 b(armetis)546 b(and)0 61370 y(esp)36 b(ecially)435
b(Jostle)f(w)-36 b(ere)434 b(not)g(a)f(signi\257can)-36
b(t)434 b(factor)g(when)f(compared)h(to)f(the)g(total)h(solution)g
(times.)0 65807 y Fl(5)2152 b(OCTP)-179 b(AR)g(T)716
b(Leaf)h(Octan)-60 b(t)717 b(Gran)-60 b(ularit)g(y)0
68728 y Fk(The)353 b(OCTP)-108 b(AR)g(T)353 b(algorithm)h(constructs)e
(an)h(o)36 b(ctree)353 b(decomp)36 b(osition)353 b(of)h(the)e
(computational)i(domain,)0 70333 y(and)529 b(uses)h(a)g(tra)-36
b(v)g(ersal)531 b(of)g(that)e(tree)h(to)g(assign)g(o)36
b(ctan)-36 b(ts)530 b(to)g(partitions.)867 b(The)530
b(depth)f(of)i(the)e(tree)h(is)0 71938 y(determined)516
b(b)-36 b(y)517 b(placing)h(a)f(threshold)g(on)g(the)g(n)-36
b(um)g(b)36 b(er)515 b(of)j(ob)72 b(jects)518 b(can)f(exist)h(in)f(a)h
(leaf)g(o)36 b(ctan)-36 b(t.)829 b(If)25675 75417 y(9)p
eop
%%Page: 10 10
10 9 bop 888 140 50657 45 v 866 17422 45 17282 v 1553
16940 a @beginspecial 50 @llx 50 @lly 410 @urx 302 @ury
2160 @rwi @setspecial
%%BeginDocument: graphs/solverAverages/partition/avg_proc_adj/avg_proc_adj_8.eps
%!PS-Adobe-2.0 EPSF-2.0
%%Title: avg_proc_adj_8.eps
%%Creator: gnuplot 3.7 patchlevel 0
%%CreationDate: Thu Aug 15 11:12:13 2002
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 410 302
%%Orientation: Portrait
%%EndComments
/gnudict 256 dict def
gnudict begin
/Color false def
/Solid false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
/vshift -60 def
/dl {10 mul} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow { currentpoint stroke M
  0 vshift R show } def
/Rshow { currentpoint stroke M
  dup stringwidth pop neg vshift R show } def
/Cshow { currentpoint stroke M
  dup stringwidth pop -2 div vshift R show } def
/UP { dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def } def
/DL { Color {setrgbcolor Solid {pop []} if 0 setdash }
 {pop pop pop Solid {pop []} if 0 setdash} ifelse } def
/BL { stroke gnulinewidth 2 mul setlinewidth } def
/AL { stroke gnulinewidth 2 div setlinewidth } def
/UL { gnulinewidth mul /userlinewidth exch def } def
/PL { stroke userlinewidth setlinewidth } def
/LTb { BL [] 0 0 0 DL } def
/LTa { AL [1 dl 2 dl] 0 setdash 0 0 0 setrgbcolor } def
/LT0 { PL [] 1 0 0 DL } def
/LT1 { PL [4 dl 2 dl] 0 1 0 DL } def
/LT2 { PL [2 dl 3 dl] 0 0 1 DL } def
/LT3 { PL [1 dl 1.5 dl] 1 0 1 DL } def
/LT4 { PL [5 dl 2 dl 1 dl 2 dl] 0 1 1 DL } def
/LT5 { PL [4 dl 3 dl 1 dl 3 dl] 1 1 0 DL } def
/LT6 { PL [2 dl 2 dl 2 dl 4 dl] 0 0 0 DL } def
/LT7 { PL [2 dl 2 dl 2 dl 2 dl 2 dl 4 dl] 1 0.3 0 DL } def
/LT8 { PL [2 dl 2 dl 2 dl 2 dl 2 dl 2 dl 2 dl 4 dl] 0.5 0.5 0.5 DL } def
/Pnt { stroke [] 0 setdash
   gsave 1 setlinecap M 0 0 V stroke grestore } def
/Dia { stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt } def
/Pls { stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
  } def
/Box { stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt } def
/Crs { stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke } def
/TriU { stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt  } def
/Star { 2 copy Pls Crs } def
/BoxF { stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V  hpt2 0 V  0 vpt2 V
  hpt2 neg 0 V  closepath fill } def
/TriUF { stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill } def
/TriD { stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt  } def
/TriDF { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF { stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill } def
/Pent { stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt } def
/PentF { stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore } def
/Circle { stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt } def
/CircleF { stroke [] 0 setdash hpt 0 360 arc fill } def
/C0 { BL [] 0 setdash 2 copy moveto vpt 90 450  arc } bind def
/C1 { BL [] 0 setdash 2 copy        moveto
       2 copy  vpt 0 90 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C2 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 90 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C3 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C4 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 180 270 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C5 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 90 arc
       2 copy moveto
       2 copy  vpt 180 270 arc closepath fill
               vpt 0 360 arc } bind def
/C6 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 90 270 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C7 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 0 270 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C8 { BL [] 0 setdash 2 copy moveto
      2 copy vpt 270 360 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C9 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 270 450 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C10 { BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
       2 copy moveto
       2 copy vpt 90 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C11 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 180 arc closepath fill
       2 copy moveto
       2 copy  vpt 270 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C12 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 180 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C13 { BL [] 0 setdash  2 copy moveto
       2 copy  vpt 0 90 arc closepath fill
       2 copy moveto
       2 copy  vpt 180 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C14 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 90 360 arc closepath fill
               vpt 0 360 arc } bind def
/C15 { BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/Rec   { newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
       neg 0 rlineto closepath } bind def
/Square { dup Rec } bind def
/Bsquare { vpt sub exch vpt sub exch vpt2 Square } bind def
/S0 { BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare } bind def
/S1 { BL [] 0 setdash 2 copy vpt Square fill Bsquare } bind def
/S2 { BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare } bind def
/S3 { BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare } bind def
/S4 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare } bind def
/S5 { BL [] 0 setdash 2 copy 2 copy vpt Square fill
       exch vpt sub exch vpt sub vpt Square fill Bsquare } bind def
/S6 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare } bind def
/S7 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
       2 copy vpt Square fill
       Bsquare } bind def
/S8 { BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare } bind def
/S9 { BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare } bind def
/S10 { BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
       Bsquare } bind def
/S11 { BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
       Bsquare } bind def
/S12 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare } bind def
/S13 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
       2 copy vpt Square fill Bsquare } bind def
/S14 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
       2 copy exch vpt sub exch vpt Square fill Bsquare } bind def
/S15 { BL [] 0 setdash 2 copy Bsquare fill Bsquare } bind def
/D0 { gsave translate 45 rotate 0 0 S0 stroke grestore } bind def
/D1 { gsave translate 45 rotate 0 0 S1 stroke grestore } bind def
/D2 { gsave translate 45 rotate 0 0 S2 stroke grestore } bind def
/D3 { gsave translate 45 rotate 0 0 S3 stroke grestore } bind def
/D4 { gsave translate 45 rotate 0 0 S4 stroke grestore } bind def
/D5 { gsave translate 45 rotate 0 0 S5 stroke grestore } bind def
/D6 { gsave translate 45 rotate 0 0 S6 stroke grestore } bind def
/D7 { gsave translate 45 rotate 0 0 S7 stroke grestore } bind def
/D8 { gsave translate 45 rotate 0 0 S8 stroke grestore } bind def
/D9 { gsave translate 45 rotate 0 0 S9 stroke grestore } bind def
/D10 { gsave translate 45 rotate 0 0 S10 stroke grestore } bind def
/D11 { gsave translate 45 rotate 0 0 S11 stroke grestore } bind def
/D12 { gsave translate 45 rotate 0 0 S12 stroke grestore } bind def
/D13 { gsave translate 45 rotate 0 0 S13 stroke grestore } bind def
/D14 { gsave translate 45 rotate 0 0 S14 stroke grestore } bind def
/D15 { gsave translate 45 rotate 0 0 S15 stroke grestore } bind def
/DiaE { stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke } def
/BoxE { stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke } def
/TriUE { stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke } def
/TriDE { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke } def
/PentE { stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore } def
/CircE { stroke [] 0 setdash 
  hpt 0 360 arc stroke } def
/Opaque { gsave closepath 1 setgray fill grestore 0 setgray closepath } def
/DiaW { stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke } def
/BoxW { stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke } def
/TriUW { stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke } def
/TriDW { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke } def
/PentW { stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore } def
/CircW { stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke } def
/BoxFill { gsave Rec 1 setgray fill grestore } def
/MFshow {{dup dup 0 get findfont exch 1 get scalefont setfont
     [ currentpoint ] exch dup 2 get 0 exch rmoveto dup dup 5 get exch 4 get
     {show} {stringwidth pop 0 rmoveto}ifelse dup 3 get
     {2 get neg 0 exch rmoveto pop} {pop aload pop moveto}ifelse} forall} bind def
/MFwidth {0 exch {dup 3 get{dup dup 0 get findfont exch 1 get scalefont setfont
      5 get stringwidth pop add}
    {pop} ifelse} forall} bind def
/MLshow { currentpoint stroke M
  0 exch R MFshow } bind def
/MRshow { currentpoint stroke M
  exch dup MFwidth neg 3 -1 roll R MFshow } def
/MCshow { currentpoint stroke M
  exch dup MFwidth -2 div 3 -1 roll R MFshow } def
end
%%EndProlog
gnudict begin
gsave
50 50 translate
0.050 0.050 scale
0 setgray
newpath
(Times-Roman) findfont 180 scalefont setfont
1.000 UL
LTb
810 540 M
63 0 V
6021 0 R
-63 0 V
 stroke
702 540 M
[ [(Times-Roman) 180.0 0.0 true true (0)]
] -60.0 MRshow
810 1294 M
63 0 V
6021 0 R
-63 0 V
 stroke
702 1294 M
[ [(Times-Roman) 180.0 0.0 true true (20)]
] -60.0 MRshow
810 2049 M
63 0 V
6021 0 R
-63 0 V
 stroke
702 2049 M
[ [(Times-Roman) 180.0 0.0 true true (40)]
] -60.0 MRshow
810 2803 M
63 0 V
6021 0 R
-63 0 V
 stroke
702 2803 M
[ [(Times-Roman) 180.0 0.0 true true (60)]
] -60.0 MRshow
810 3557 M
63 0 V
6021 0 R
-63 0 V
 stroke
702 3557 M
[ [(Times-Roman) 180.0 0.0 true true (80)]
] -60.0 MRshow
810 4311 M
63 0 V
6021 0 R
-63 0 V
 stroke
702 4311 M
[ [(Times-Roman) 180.0 0.0 true true (100)]
] -60.0 MRshow
1148 540 M
0 63 V
0 3897 R
0 -63 V
 stroke
1148 360 M
[ [(Times-Roman) 180.0 0.0 true true (2)]
] -60.0 MCshow
1824 540 M
0 63 V
0 3897 R
0 -63 V
 stroke
1824 360 M
[ [(Times-Roman) 180.0 0.0 true true (4)]
] -60.0 MCshow
2500 540 M
0 63 V
0 3897 R
0 -63 V
 stroke
2500 360 M
[ [(Times-Roman) 180.0 0.0 true true (6)]
] -60.0 MCshow
3176 540 M
0 63 V
0 3897 R
0 -63 V
 stroke
3176 360 M
[ [(Times-Roman) 180.0 0.0 true true (8)]
] -60.0 MCshow
3852 540 M
0 63 V
0 3897 R
0 -63 V
 stroke
3852 360 M
[ [(Times-Roman) 180.0 0.0 true true (10)]
] -60.0 MCshow
4528 540 M
0 63 V
0 3897 R
0 -63 V
 stroke
4528 360 M
[ [(Times-Roman) 180.0 0.0 true true (12)]
] -60.0 MCshow
5204 540 M
0 63 V
0 3897 R
0 -63 V
 stroke
5204 360 M
[ [(Times-Roman) 180.0 0.0 true true (14)]
] -60.0 MCshow
5880 540 M
0 63 V
0 3897 R
0 -63 V
 stroke
5880 360 M
[ [(Times-Roman) 180.0 0.0 true true (16)]
] -60.0 MCshow
6556 540 M
0 63 V
0 3897 R
0 -63 V
 stroke
6556 360 M
[ [(Times-Roman) 180.0 0.0 true true (18)]
] -60.0 MCshow
1.000 UL
LTb
810 540 M
6084 0 V
0 3960 V
-6084 0 V
810 540 L
 stroke
180 2520 M
currentpoint gsave translate 90 rotate 0 0 moveto
[ [(Times-Roman) 180.0 0.0 true true (Interprocessor Adjacency)]
] -60.0 MCshow
grestore
3852 90 M
[ [(Times-Roman) 180.0 0.0 true true (Refinement Step)]
] -60.0 MCshow
3852 4770 M
[ [(Times-Roman) 180.0 0.0 true true (Average Interprocessor Adjacency for 8 Processors)]
] -60.0 MCshow
1.000 UP
1.000 UL
LT0
6110 1294 M
[ [(Times-Roman) 180.0 0.0 true true (JOSTLE)]
] -60.0 MRshow
6218 1294 M
495 0 V
810 2693 M
338 272 V
338 -204 V
338 675 V
338 0 V
338 -133 V
338 133 V
338 -135 V
338 0 V
338 68 V
338 -134 V
338 134 V
338 0 V
338 -270 V
338 -134 V
338 471 V
338 202 V
338 134 V
338 -403 V
810 2693 Pls
1148 2965 Pls
1486 2761 Pls
1824 3436 Pls
2162 3436 Pls
2500 3303 Pls
2838 3436 Pls
3176 3301 Pls
3514 3301 Pls
3852 3369 Pls
4190 3235 Pls
4528 3369 Pls
4866 3369 Pls
5204 3099 Pls
5542 2965 Pls
5880 3436 Pls
6218 3638 Pls
6556 3772 Pls
6894 3369 Pls
6465 1294 Pls
1.000 UP
1.000 UL
LT1
6110 1114 M
[ [(Times-Roman) 180.0 0.0 true true (PARMETIS)]
] -60.0 MRshow
6218 1114 M
495 0 V
810 4176 M
338 0 V
338 -66 V
338 68 V
338 0 V
338 -68 V
338 0 V
338 0 V
338 0 V
338 0 V
338 -134 V
338 0 V
338 0 V
338 0 V
338 0 V
338 0 V
338 0 V
338 0 V
338 0 V
810 4176 Crs
1148 4176 Crs
1486 4110 Crs
1824 4178 Crs
2162 4178 Crs
2500 4110 Crs
2838 4110 Crs
3176 4110 Crs
3514 4110 Crs
3852 4110 Crs
4190 3976 Crs
4528 3976 Crs
4866 3976 Crs
5204 3976 Crs
5542 3976 Crs
5880 3976 Crs
6218 3976 Crs
6556 3976 Crs
6894 3976 Crs
6465 1114 Crs
1.000 UP
1.000 UL
LT2
6110 934 M
[ [(Times-Roman) 180.0 0.0 true true (RCB)]
] -60.0 MRshow
6218 934 M
495 0 V
810 3233 M
338 811 V
338 0 V
338 -136 V
338 403 V
338 0 V
338 0 V
338 0 V
338 0 V
338 -135 V
338 -132 V
338 0 V
338 267 V
338 -267 V
338 -408 V
338 408 V
338 0 V
338 0 V
338 0 V
810 3233 Star
1148 4044 Star
1486 4044 Star
1824 3908 Star
2162 4311 Star
2500 4311 Star
2838 4311 Star
3176 4311 Star
3514 4311 Star
3852 4176 Star
4190 4044 Star
4528 4044 Star
4866 4311 Star
5204 4044 Star
5542 3636 Star
5880 4044 Star
6218 4044 Star
6556 4044 Star
6894 4044 Star
6465 934 Star
1.000 UP
1.000 UL
LT3
6110 754 M
[ [(Times-Roman) 180.0 0.0 true true (RIB)]
] -60.0 MRshow
6218 754 M
495 0 V
810 2426 M
338 807 V
338 271 V
338 132 V
338 0 V
338 136 V
338 -268 V
338 0 V
338 132 V
338 0 V
338 -132 V
338 132 V
338 408 V
338 -136 V
338 136 V
338 -136 V
338 0 V
338 0 V
338 0 V
810 2426 Box
1148 3233 Box
1486 3504 Box
1824 3636 Box
2162 3636 Box
2500 3772 Box
2838 3504 Box
3176 3504 Box
3514 3636 Box
3852 3636 Box
4190 3504 Box
4528 3636 Box
4866 4044 Box
5204 3908 Box
5542 4044 Box
5880 3908 Box
6218 3908 Box
6556 3908 Box
6894 3908 Box
6465 754 Box
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Times-Roman

%%EndDocument
 @endspecial 25328 w @beginspecial 50 @llx 50 @lly 410
@urx 302 @ury 2160 @rwi @setspecial
%%BeginDocument: graphs/solverAverages/partition/avg_proc_adj/avg_proc_adj_20.eps
%!PS-Adobe-2.0 EPSF-2.0
%%Title: avg_proc_adj_20.eps
%%Creator: gnuplot 3.7 patchlevel 0
%%CreationDate: Thu Aug 15 11:12:14 2002
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 410 302
%%Orientation: Portrait
%%EndComments
/gnudict 256 dict def
gnudict begin
/Color false def
/Solid false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
/vshift -60 def
/dl {10 mul} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow { currentpoint stroke M
  0 vshift R show } def
/Rshow { currentpoint stroke M
  dup stringwidth pop neg vshift R show } def
/Cshow { currentpoint stroke M
  dup stringwidth pop -2 div vshift R show } def
/UP { dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def } def
/DL { Color {setrgbcolor Solid {pop []} if 0 setdash }
 {pop pop pop Solid {pop []} if 0 setdash} ifelse } def
/BL { stroke gnulinewidth 2 mul setlinewidth } def
/AL { stroke gnulinewidth 2 div setlinewidth } def
/UL { gnulinewidth mul /userlinewidth exch def } def
/PL { stroke userlinewidth setlinewidth } def
/LTb { BL [] 0 0 0 DL } def
/LTa { AL [1 dl 2 dl] 0 setdash 0 0 0 setrgbcolor } def
/LT0 { PL [] 1 0 0 DL } def
/LT1 { PL [4 dl 2 dl] 0 1 0 DL } def
/LT2 { PL [2 dl 3 dl] 0 0 1 DL } def
/LT3 { PL [1 dl 1.5 dl] 1 0 1 DL } def
/LT4 { PL [5 dl 2 dl 1 dl 2 dl] 0 1 1 DL } def
/LT5 { PL [4 dl 3 dl 1 dl 3 dl] 1 1 0 DL } def
/LT6 { PL [2 dl 2 dl 2 dl 4 dl] 0 0 0 DL } def
/LT7 { PL [2 dl 2 dl 2 dl 2 dl 2 dl 4 dl] 1 0.3 0 DL } def
/LT8 { PL [2 dl 2 dl 2 dl 2 dl 2 dl 2 dl 2 dl 4 dl] 0.5 0.5 0.5 DL } def
/Pnt { stroke [] 0 setdash
   gsave 1 setlinecap M 0 0 V stroke grestore } def
/Dia { stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt } def
/Pls { stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
  } def
/Box { stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt } def
/Crs { stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke } def
/TriU { stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt  } def
/Star { 2 copy Pls Crs } def
/BoxF { stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V  hpt2 0 V  0 vpt2 V
  hpt2 neg 0 V  closepath fill } def
/TriUF { stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill } def
/TriD { stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt  } def
/TriDF { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF { stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill } def
/Pent { stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt } def
/PentF { stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore } def
/Circle { stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt } def
/CircleF { stroke [] 0 setdash hpt 0 360 arc fill } def
/C0 { BL [] 0 setdash 2 copy moveto vpt 90 450  arc } bind def
/C1 { BL [] 0 setdash 2 copy        moveto
       2 copy  vpt 0 90 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C2 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 90 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C3 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C4 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 180 270 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C5 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 90 arc
       2 copy moveto
       2 copy  vpt 180 270 arc closepath fill
               vpt 0 360 arc } bind def
/C6 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 90 270 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C7 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 0 270 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C8 { BL [] 0 setdash 2 copy moveto
      2 copy vpt 270 360 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C9 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 270 450 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C10 { BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
       2 copy moveto
       2 copy vpt 90 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C11 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 180 arc closepath fill
       2 copy moveto
       2 copy  vpt 270 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C12 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 180 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C13 { BL [] 0 setdash  2 copy moveto
       2 copy  vpt 0 90 arc closepath fill
       2 copy moveto
       2 copy  vpt 180 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C14 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 90 360 arc closepath fill
               vpt 0 360 arc } bind def
/C15 { BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/Rec   { newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
       neg 0 rlineto closepath } bind def
/Square { dup Rec } bind def
/Bsquare { vpt sub exch vpt sub exch vpt2 Square } bind def
/S0 { BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare } bind def
/S1 { BL [] 0 setdash 2 copy vpt Square fill Bsquare } bind def
/S2 { BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare } bind def
/S3 { BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare } bind def
/S4 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare } bind def
/S5 { BL [] 0 setdash 2 copy 2 copy vpt Square fill
       exch vpt sub exch vpt sub vpt Square fill Bsquare } bind def
/S6 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare } bind def
/S7 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
       2 copy vpt Square fill
       Bsquare } bind def
/S8 { BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare } bind def
/S9 { BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare } bind def
/S10 { BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
       Bsquare } bind def
/S11 { BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
       Bsquare } bind def
/S12 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare } bind def
/S13 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
       2 copy vpt Square fill Bsquare } bind def
/S14 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
       2 copy exch vpt sub exch vpt Square fill Bsquare } bind def
/S15 { BL [] 0 setdash 2 copy Bsquare fill Bsquare } bind def
/D0 { gsave translate 45 rotate 0 0 S0 stroke grestore } bind def
/D1 { gsave translate 45 rotate 0 0 S1 stroke grestore } bind def
/D2 { gsave translate 45 rotate 0 0 S2 stroke grestore } bind def
/D3 { gsave translate 45 rotate 0 0 S3 stroke grestore } bind def
/D4 { gsave translate 45 rotate 0 0 S4 stroke grestore } bind def
/D5 { gsave translate 45 rotate 0 0 S5 stroke grestore } bind def
/D6 { gsave translate 45 rotate 0 0 S6 stroke grestore } bind def
/D7 { gsave translate 45 rotate 0 0 S7 stroke grestore } bind def
/D8 { gsave translate 45 rotate 0 0 S8 stroke grestore } bind def
/D9 { gsave translate 45 rotate 0 0 S9 stroke grestore } bind def
/D10 { gsave translate 45 rotate 0 0 S10 stroke grestore } bind def
/D11 { gsave translate 45 rotate 0 0 S11 stroke grestore } bind def
/D12 { gsave translate 45 rotate 0 0 S12 stroke grestore } bind def
/D13 { gsave translate 45 rotate 0 0 S13 stroke grestore } bind def
/D14 { gsave translate 45 rotate 0 0 S14 stroke grestore } bind def
/D15 { gsave translate 45 rotate 0 0 S15 stroke grestore } bind def
/DiaE { stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke } def
/BoxE { stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke } def
/TriUE { stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke } def
/TriDE { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke } def
/PentE { stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore } def
/CircE { stroke [] 0 setdash 
  hpt 0 360 arc stroke } def
/Opaque { gsave closepath 1 setgray fill grestore 0 setgray closepath } def
/DiaW { stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke } def
/BoxW { stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke } def
/TriUW { stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke } def
/TriDW { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke } def
/PentW { stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore } def
/CircW { stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke } def
/BoxFill { gsave Rec 1 setgray fill grestore } def
/MFshow {{dup dup 0 get findfont exch 1 get scalefont setfont
     [ currentpoint ] exch dup 2 get 0 exch rmoveto dup dup 5 get exch 4 get
     {show} {stringwidth pop 0 rmoveto}ifelse dup 3 get
     {2 get neg 0 exch rmoveto pop} {pop aload pop moveto}ifelse} forall} bind def
/MFwidth {0 exch {dup 3 get{dup dup 0 get findfont exch 1 get scalefont setfont
      5 get stringwidth pop add}
    {pop} ifelse} forall} bind def
/MLshow { currentpoint stroke M
  0 exch R MFshow } bind def
/MRshow { currentpoint stroke M
  exch dup MFwidth neg 3 -1 roll R MFshow } def
/MCshow { currentpoint stroke M
  exch dup MFwidth -2 div 3 -1 roll R MFshow } def
end
%%EndProlog
gnudict begin
gsave
50 50 translate
0.050 0.050 scale
0 setgray
newpath
(Times-Roman) findfont 180 scalefont setfont
1.000 UL
LTb
810 540 M
63 0 V
6021 0 R
-63 0 V
 stroke
702 540 M
[ [(Times-Roman) 180.0 0.0 true true (0)]
] -60.0 MRshow
810 1294 M
63 0 V
6021 0 R
-63 0 V
 stroke
702 1294 M
[ [(Times-Roman) 180.0 0.0 true true (20)]
] -60.0 MRshow
810 2049 M
63 0 V
6021 0 R
-63 0 V
 stroke
702 2049 M
[ [(Times-Roman) 180.0 0.0 true true (40)]
] -60.0 MRshow
810 2803 M
63 0 V
6021 0 R
-63 0 V
 stroke
702 2803 M
[ [(Times-Roman) 180.0 0.0 true true (60)]
] -60.0 MRshow
810 3557 M
63 0 V
6021 0 R
-63 0 V
 stroke
702 3557 M
[ [(Times-Roman) 180.0 0.0 true true (80)]
] -60.0 MRshow
810 4311 M
63 0 V
6021 0 R
-63 0 V
 stroke
702 4311 M
[ [(Times-Roman) 180.0 0.0 true true (100)]
] -60.0 MRshow
1148 540 M
0 63 V
0 3897 R
0 -63 V
 stroke
1148 360 M
[ [(Times-Roman) 180.0 0.0 true true (2)]
] -60.0 MCshow
1824 540 M
0 63 V
0 3897 R
0 -63 V
 stroke
1824 360 M
[ [(Times-Roman) 180.0 0.0 true true (4)]
] -60.0 MCshow
2500 540 M
0 63 V
0 3897 R
0 -63 V
 stroke
2500 360 M
[ [(Times-Roman) 180.0 0.0 true true (6)]
] -60.0 MCshow
3176 540 M
0 63 V
0 3897 R
0 -63 V
 stroke
3176 360 M
[ [(Times-Roman) 180.0 0.0 true true (8)]
] -60.0 MCshow
3852 540 M
0 63 V
0 3897 R
0 -63 V
 stroke
3852 360 M
[ [(Times-Roman) 180.0 0.0 true true (10)]
] -60.0 MCshow
4528 540 M
0 63 V
0 3897 R
0 -63 V
 stroke
4528 360 M
[ [(Times-Roman) 180.0 0.0 true true (12)]
] -60.0 MCshow
5204 540 M
0 63 V
0 3897 R
0 -63 V
 stroke
5204 360 M
[ [(Times-Roman) 180.0 0.0 true true (14)]
] -60.0 MCshow
5880 540 M
0 63 V
0 3897 R
0 -63 V
 stroke
5880 360 M
[ [(Times-Roman) 180.0 0.0 true true (16)]
] -60.0 MCshow
6556 540 M
0 63 V
0 3897 R
0 -63 V
 stroke
6556 360 M
[ [(Times-Roman) 180.0 0.0 true true (18)]
] -60.0 MCshow
1.000 UL
LTb
810 540 M
6084 0 V
0 3960 V
-6084 0 V
810 540 L
 stroke
180 2520 M
currentpoint gsave translate 90 rotate 0 0 moveto
[ [(Times-Roman) 180.0 0.0 true true (Interprocessor Adjacency)]
] -60.0 MCshow
grestore
3852 90 M
[ [(Times-Roman) 180.0 0.0 true true (Refinement Step)]
] -60.0 MCshow
3852 4770 M
[ [(Times-Roman) 180.0 0.0 true true (Average Interprocessor Adjacency for 20 Processors)]
] -60.0 MCshow
1.000 UP
1.000 UL
LT0
6110 1294 M
[ [(Times-Roman) 180.0 0.0 true true (JOSTLE)]
] -60.0 MRshow
6218 1294 M
495 0 V
810 1769 M
338 102 V
338 198 V
338 38 V
338 -19 V
338 70 V
338 30 V
338 -268 V
338 0 V
338 296 V
338 -60 V
338 0 V
338 -128 V
338 100 V
338 -70 V
338 0 V
338 0 V
338 70 V
338 -30 V
810 1769 Pls
1148 1871 Pls
1486 2069 Pls
1824 2107 Pls
2162 2088 Pls
2500 2158 Pls
2838 2188 Pls
3176 1920 Pls
3514 1920 Pls
3852 2216 Pls
4190 2156 Pls
4528 2156 Pls
4866 2028 Pls
5204 2128 Pls
5542 2058 Pls
5880 2058 Pls
6218 2058 Pls
6556 2128 Pls
6894 2098 Pls
6465 1294 Pls
1.000 UP
1.000 UL
LT1
6110 1114 M
[ [(Times-Roman) 180.0 0.0 true true (PARMETIS)]
] -60.0 MRshow
6218 1114 M
495 0 V
810 2980 M
338 102 V
338 -70 V
338 127 V
338 -19 V
338 -31 V
338 -30 V
338 0 V
338 -68 V
338 -9 V
338 0 V
338 -30 V
338 19 V
338 -19 V
338 60 V
338 -9 V
338 0 V
338 -21 V
338 49 V
810 2980 Crs
1148 3082 Crs
1486 3012 Crs
1824 3139 Crs
2162 3120 Crs
2500 3089 Crs
2838 3059 Crs
3176 3059 Crs
3514 2991 Crs
3852 2982 Crs
4190 2982 Crs
4528 2952 Crs
4866 2971 Crs
5204 2952 Crs
5542 3012 Crs
5880 3003 Crs
6218 3003 Crs
6556 2982 Crs
6894 3031 Crs
6465 1114 Crs
1.000 UP
1.000 UL
LT2
6110 934 M
[ [(Times-Roman) 180.0 0.0 true true (RCB)]
] -60.0 MRshow
6218 934 M
495 0 V
810 2109 M
338 117 V
338 298 V
338 120 V
338 -41 V
338 41 V
338 0 V
338 -18 V
338 0 V
338 0 V
338 -121 V
338 0 V
338 0 V
338 19 V
338 -117 V
338 139 V
338 -22 V
338 22 V
338 -60 V
810 2109 Star
1148 2226 Star
1486 2524 Star
1824 2644 Star
2162 2603 Star
2500 2644 Star
2838 2644 Star
3176 2626 Star
3514 2626 Star
3852 2626 Star
4190 2505 Star
4528 2505 Star
4866 2505 Star
5204 2524 Star
5542 2407 Star
5880 2546 Star
6218 2524 Star
6556 2546 Star
6894 2486 Star
6465 934 Star
1.000 UP
1.000 UL
LT3
6110 754 M
[ [(Times-Roman) 180.0 0.0 true true (RIB)]
] -60.0 MRshow
6218 754 M
495 0 V
810 1732 M
338 456 V
338 377 V
338 279 V
338 -83 V
338 140 V
338 -38 V
338 -60 V
338 -200 V
338 -19 V
338 -19 V
338 98 V
338 238 V
338 -38 V
338 -120 V
338 101 V
338 19 V
338 -79 V
338 38 V
810 1732 Box
1148 2188 Box
1486 2565 Box
1824 2844 Box
2162 2761 Box
2500 2901 Box
2838 2863 Box
3176 2803 Box
3514 2603 Box
3852 2584 Box
4190 2565 Box
4528 2663 Box
4866 2901 Box
5204 2863 Box
5542 2743 Box
5880 2844 Box
6218 2863 Box
6556 2784 Box
6894 2822 Box
6465 754 Box
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Times-Roman

%%EndDocument
 @endspecial 51523 17422 V 866 34703 V 1553 34222 a @beginspecial
50 @llx 50 @lly 410 @urx 302 @ury 2160 @rwi @setspecial
%%BeginDocument: graphs/solverAverages/partition/max_proc_adj/max_proc_adj_8.eps
%!PS-Adobe-2.0 EPSF-2.0
%%Title: max_proc_adj_8.eps
%%Creator: gnuplot 3.7 patchlevel 0
%%CreationDate: Thu Aug 15 11:13:03 2002
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 410 302
%%Orientation: Portrait
%%EndComments
/gnudict 256 dict def
gnudict begin
/Color false def
/Solid false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
/vshift -60 def
/dl {10 mul} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow { currentpoint stroke M
  0 vshift R show } def
/Rshow { currentpoint stroke M
  dup stringwidth pop neg vshift R show } def
/Cshow { currentpoint stroke M
  dup stringwidth pop -2 div vshift R show } def
/UP { dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def } def
/DL { Color {setrgbcolor Solid {pop []} if 0 setdash }
 {pop pop pop Solid {pop []} if 0 setdash} ifelse } def
/BL { stroke gnulinewidth 2 mul setlinewidth } def
/AL { stroke gnulinewidth 2 div setlinewidth } def
/UL { gnulinewidth mul /userlinewidth exch def } def
/PL { stroke userlinewidth setlinewidth } def
/LTb { BL [] 0 0 0 DL } def
/LTa { AL [1 dl 2 dl] 0 setdash 0 0 0 setrgbcolor } def
/LT0 { PL [] 1 0 0 DL } def
/LT1 { PL [4 dl 2 dl] 0 1 0 DL } def
/LT2 { PL [2 dl 3 dl] 0 0 1 DL } def
/LT3 { PL [1 dl 1.5 dl] 1 0 1 DL } def
/LT4 { PL [5 dl 2 dl 1 dl 2 dl] 0 1 1 DL } def
/LT5 { PL [4 dl 3 dl 1 dl 3 dl] 1 1 0 DL } def
/LT6 { PL [2 dl 2 dl 2 dl 4 dl] 0 0 0 DL } def
/LT7 { PL [2 dl 2 dl 2 dl 2 dl 2 dl 4 dl] 1 0.3 0 DL } def
/LT8 { PL [2 dl 2 dl 2 dl 2 dl 2 dl 2 dl 2 dl 4 dl] 0.5 0.5 0.5 DL } def
/Pnt { stroke [] 0 setdash
   gsave 1 setlinecap M 0 0 V stroke grestore } def
/Dia { stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt } def
/Pls { stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
  } def
/Box { stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt } def
/Crs { stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke } def
/TriU { stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt  } def
/Star { 2 copy Pls Crs } def
/BoxF { stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V  hpt2 0 V  0 vpt2 V
  hpt2 neg 0 V  closepath fill } def
/TriUF { stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill } def
/TriD { stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt  } def
/TriDF { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF { stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill } def
/Pent { stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt } def
/PentF { stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore } def
/Circle { stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt } def
/CircleF { stroke [] 0 setdash hpt 0 360 arc fill } def
/C0 { BL [] 0 setdash 2 copy moveto vpt 90 450  arc } bind def
/C1 { BL [] 0 setdash 2 copy        moveto
       2 copy  vpt 0 90 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C2 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 90 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C3 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C4 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 180 270 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C5 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 90 arc
       2 copy moveto
       2 copy  vpt 180 270 arc closepath fill
               vpt 0 360 arc } bind def
/C6 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 90 270 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C7 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 0 270 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C8 { BL [] 0 setdash 2 copy moveto
      2 copy vpt 270 360 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C9 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 270 450 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C10 { BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
       2 copy moveto
       2 copy vpt 90 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C11 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 180 arc closepath fill
       2 copy moveto
       2 copy  vpt 270 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C12 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 180 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C13 { BL [] 0 setdash  2 copy moveto
       2 copy  vpt 0 90 arc closepath fill
       2 copy moveto
       2 copy  vpt 180 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C14 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 90 360 arc closepath fill
               vpt 0 360 arc } bind def
/C15 { BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/Rec   { newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
       neg 0 rlineto closepath } bind def
/Square { dup Rec } bind def
/Bsquare { vpt sub exch vpt sub exch vpt2 Square } bind def
/S0 { BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare } bind def
/S1 { BL [] 0 setdash 2 copy vpt Square fill Bsquare } bind def
/S2 { BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare } bind def
/S3 { BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare } bind def
/S4 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare } bind def
/S5 { BL [] 0 setdash 2 copy 2 copy vpt Square fill
       exch vpt sub exch vpt sub vpt Square fill Bsquare } bind def
/S6 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare } bind def
/S7 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
       2 copy vpt Square fill
       Bsquare } bind def
/S8 { BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare } bind def
/S9 { BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare } bind def
/S10 { BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
       Bsquare } bind def
/S11 { BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
       Bsquare } bind def
/S12 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare } bind def
/S13 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
       2 copy vpt Square fill Bsquare } bind def
/S14 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
       2 copy exch vpt sub exch vpt Square fill Bsquare } bind def
/S15 { BL [] 0 setdash 2 copy Bsquare fill Bsquare } bind def
/D0 { gsave translate 45 rotate 0 0 S0 stroke grestore } bind def
/D1 { gsave translate 45 rotate 0 0 S1 stroke grestore } bind def
/D2 { gsave translate 45 rotate 0 0 S2 stroke grestore } bind def
/D3 { gsave translate 45 rotate 0 0 S3 stroke grestore } bind def
/D4 { gsave translate 45 rotate 0 0 S4 stroke grestore } bind def
/D5 { gsave translate 45 rotate 0 0 S5 stroke grestore } bind def
/D6 { gsave translate 45 rotate 0 0 S6 stroke grestore } bind def
/D7 { gsave translate 45 rotate 0 0 S7 stroke grestore } bind def
/D8 { gsave translate 45 rotate 0 0 S8 stroke grestore } bind def
/D9 { gsave translate 45 rotate 0 0 S9 stroke grestore } bind def
/D10 { gsave translate 45 rotate 0 0 S10 stroke grestore } bind def
/D11 { gsave translate 45 rotate 0 0 S11 stroke grestore } bind def
/D12 { gsave translate 45 rotate 0 0 S12 stroke grestore } bind def
/D13 { gsave translate 45 rotate 0 0 S13 stroke grestore } bind def
/D14 { gsave translate 45 rotate 0 0 S14 stroke grestore } bind def
/D15 { gsave translate 45 rotate 0 0 S15 stroke grestore } bind def
/DiaE { stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke } def
/BoxE { stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke } def
/TriUE { stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke } def
/TriDE { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke } def
/PentE { stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore } def
/CircE { stroke [] 0 setdash 
  hpt 0 360 arc stroke } def
/Opaque { gsave closepath 1 setgray fill grestore 0 setgray closepath } def
/DiaW { stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke } def
/BoxW { stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke } def
/TriUW { stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke } def
/TriDW { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke } def
/PentW { stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore } def
/CircW { stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke } def
/BoxFill { gsave Rec 1 setgray fill grestore } def
/MFshow {{dup dup 0 get findfont exch 1 get scalefont setfont
     [ currentpoint ] exch dup 2 get 0 exch rmoveto dup dup 5 get exch 4 get
     {show} {stringwidth pop 0 rmoveto}ifelse dup 3 get
     {2 get neg 0 exch rmoveto pop} {pop aload pop moveto}ifelse} forall} bind def
/MFwidth {0 exch {dup 3 get{dup dup 0 get findfont exch 1 get scalefont setfont
      5 get stringwidth pop add}
    {pop} ifelse} forall} bind def
/MLshow { currentpoint stroke M
  0 exch R MFshow } bind def
/MRshow { currentpoint stroke M
  exch dup MFwidth neg 3 -1 roll R MFshow } def
/MCshow { currentpoint stroke M
  exch dup MFwidth -2 div 3 -1 roll R MFshow } def
end
%%EndProlog
gnudict begin
gsave
50 50 translate
0.050 0.050 scale
0 setgray
newpath
(Times-Roman) findfont 180 scalefont setfont
1.000 UL
LTb
810 540 M
63 0 V
6021 0 R
-63 0 V
 stroke
702 540 M
[ [(Times-Roman) 180.0 0.0 true true (0)]
] -60.0 MRshow
810 1294 M
63 0 V
6021 0 R
-63 0 V
 stroke
702 1294 M
[ [(Times-Roman) 180.0 0.0 true true (20)]
] -60.0 MRshow
810 2049 M
63 0 V
6021 0 R
-63 0 V
 stroke
702 2049 M
[ [(Times-Roman) 180.0 0.0 true true (40)]
] -60.0 MRshow
810 2803 M
63 0 V
6021 0 R
-63 0 V
 stroke
702 2803 M
[ [(Times-Roman) 180.0 0.0 true true (60)]
] -60.0 MRshow
810 3557 M
63 0 V
6021 0 R
-63 0 V
 stroke
702 3557 M
[ [(Times-Roman) 180.0 0.0 true true (80)]
] -60.0 MRshow
810 4311 M
63 0 V
6021 0 R
-63 0 V
 stroke
702 4311 M
[ [(Times-Roman) 180.0 0.0 true true (100)]
] -60.0 MRshow
1148 540 M
0 63 V
0 3897 R
0 -63 V
 stroke
1148 360 M
[ [(Times-Roman) 180.0 0.0 true true (2)]
] -60.0 MCshow
1824 540 M
0 63 V
0 3897 R
0 -63 V
 stroke
1824 360 M
[ [(Times-Roman) 180.0 0.0 true true (4)]
] -60.0 MCshow
2500 540 M
0 63 V
0 3897 R
0 -63 V
 stroke
2500 360 M
[ [(Times-Roman) 180.0 0.0 true true (6)]
] -60.0 MCshow
3176 540 M
0 63 V
0 3897 R
0 -63 V
 stroke
3176 360 M
[ [(Times-Roman) 180.0 0.0 true true (8)]
] -60.0 MCshow
3852 540 M
0 63 V
0 3897 R
0 -63 V
 stroke
3852 360 M
[ [(Times-Roman) 180.0 0.0 true true (10)]
] -60.0 MCshow
4528 540 M
0 63 V
0 3897 R
0 -63 V
 stroke
4528 360 M
[ [(Times-Roman) 180.0 0.0 true true (12)]
] -60.0 MCshow
5204 540 M
0 63 V
0 3897 R
0 -63 V
 stroke
5204 360 M
[ [(Times-Roman) 180.0 0.0 true true (14)]
] -60.0 MCshow
5880 540 M
0 63 V
0 3897 R
0 -63 V
 stroke
5880 360 M
[ [(Times-Roman) 180.0 0.0 true true (16)]
] -60.0 MCshow
6556 540 M
0 63 V
0 3897 R
0 -63 V
 stroke
6556 360 M
[ [(Times-Roman) 180.0 0.0 true true (18)]
] -60.0 MCshow
1.000 UL
LTb
810 540 M
6084 0 V
0 3960 V
-6084 0 V
810 540 L
 stroke
180 2520 M
currentpoint gsave translate 90 rotate 0 0 moveto
[ [(Times-Roman) 180.0 0.0 true true (Interprocessor Adjacency)]
] -60.0 MCshow
grestore
3852 90 M
[ [(Times-Roman) 180.0 0.0 true true (Refinement Step)]
] -60.0 MCshow
3852 4770 M
[ [(Times-Roman) 180.0 0.0 true true (Maximum Interprocessor Adjacency for 8 Processors)]
] -60.0 MCshow
1.000 UP
1.000 UL
LT0
6110 1294 M
[ [(Times-Roman) 180.0 0.0 true true (JOSTLE)]
] -60.0 MRshow
6218 1294 M
495 0 V
810 3233 M
338 1078 V
338 0 V
338 0 V
338 0 V
338 0 V
338 0 V
338 0 V
338 0 V
338 0 V
338 0 V
338 0 V
338 0 V
338 0 V
338 0 V
338 0 V
338 0 V
338 0 V
338 0 V
810 3233 Pls
1148 4311 Pls
1486 4311 Pls
1824 4311 Pls
2162 4311 Pls
2500 4311 Pls
2838 4311 Pls
3176 4311 Pls
3514 4311 Pls
3852 4311 Pls
4190 4311 Pls
4528 4311 Pls
4866 4311 Pls
5204 4311 Pls
5542 4311 Pls
5880 4311 Pls
6218 4311 Pls
6556 4311 Pls
6894 4311 Pls
6465 1294 Pls
1.000 UP
1.000 UL
LT1
6110 1114 M
[ [(Times-Roman) 180.0 0.0 true true (PARMETIS)]
] -60.0 MRshow
6218 1114 M
495 0 V
810 4311 M
338 0 V
338 0 V
338 0 V
338 0 V
338 0 V
338 0 V
338 0 V
338 0 V
338 0 V
338 0 V
338 0 V
338 0 V
338 0 V
338 0 V
338 0 V
338 0 V
338 0 V
338 0 V
810 4311 Crs
1148 4311 Crs
1486 4311 Crs
1824 4311 Crs
2162 4311 Crs
2500 4311 Crs
2838 4311 Crs
3176 4311 Crs
3514 4311 Crs
3852 4311 Crs
4190 4311 Crs
4528 4311 Crs
4866 4311 Crs
5204 4311 Crs
5542 4311 Crs
5880 4311 Crs
6218 4311 Crs
6556 4311 Crs
6894 4311 Crs
6465 1114 Crs
1.000 UP
1.000 UL
LT2
6110 934 M
[ [(Times-Roman) 180.0 0.0 true true (RCB)]
] -60.0 MRshow
6218 934 M
495 0 V
810 4311 M
338 0 V
338 0 V
338 0 V
338 0 V
338 0 V
338 0 V
338 0 V
338 0 V
338 0 V
338 0 V
338 0 V
338 0 V
338 0 V
338 0 V
338 0 V
338 0 V
338 0 V
338 0 V
810 4311 Star
1148 4311 Star
1486 4311 Star
1824 4311 Star
2162 4311 Star
2500 4311 Star
2838 4311 Star
3176 4311 Star
3514 4311 Star
3852 4311 Star
4190 4311 Star
4528 4311 Star
4866 4311 Star
5204 4311 Star
5542 4311 Star
5880 4311 Star
6218 4311 Star
6556 4311 Star
6894 4311 Star
6465 934 Star
1.000 UP
1.000 UL
LT3
6110 754 M
[ [(Times-Roman) 180.0 0.0 true true (RIB)]
] -60.0 MRshow
6218 754 M
495 0 V
810 3233 M
338 1078 V
338 0 V
338 0 V
338 0 V
338 0 V
338 0 V
338 0 V
338 0 V
338 0 V
338 0 V
338 0 V
338 0 V
338 0 V
338 0 V
338 0 V
338 0 V
338 0 V
338 0 V
810 3233 Box
1148 4311 Box
1486 4311 Box
1824 4311 Box
2162 4311 Box
2500 4311 Box
2838 4311 Box
3176 4311 Box
3514 4311 Box
3852 4311 Box
4190 4311 Box
4528 4311 Box
4866 4311 Box
5204 4311 Box
5542 4311 Box
5880 4311 Box
6218 4311 Box
6556 4311 Box
6894 4311 Box
6465 754 Box
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Times-Roman

%%EndDocument
 @endspecial 25328 w @beginspecial 50 @llx 50 @lly 410
@urx 302 @ury 2160 @rwi @setspecial
%%BeginDocument: graphs/solverAverages/partition/max_proc_adj/max_proc_adj_20.eps
%!PS-Adobe-2.0 EPSF-2.0
%%Title: max_proc_adj_20.eps
%%Creator: gnuplot 3.7 patchlevel 0
%%CreationDate: Thu Aug 15 11:13:03 2002
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 410 302
%%Orientation: Portrait
%%EndComments
/gnudict 256 dict def
gnudict begin
/Color false def
/Solid false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
/vshift -60 def
/dl {10 mul} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow { currentpoint stroke M
  0 vshift R show } def
/Rshow { currentpoint stroke M
  dup stringwidth pop neg vshift R show } def
/Cshow { currentpoint stroke M
  dup stringwidth pop -2 div vshift R show } def
/UP { dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def } def
/DL { Color {setrgbcolor Solid {pop []} if 0 setdash }
 {pop pop pop Solid {pop []} if 0 setdash} ifelse } def
/BL { stroke gnulinewidth 2 mul setlinewidth } def
/AL { stroke gnulinewidth 2 div setlinewidth } def
/UL { gnulinewidth mul /userlinewidth exch def } def
/PL { stroke userlinewidth setlinewidth } def
/LTb { BL [] 0 0 0 DL } def
/LTa { AL [1 dl 2 dl] 0 setdash 0 0 0 setrgbcolor } def
/LT0 { PL [] 1 0 0 DL } def
/LT1 { PL [4 dl 2 dl] 0 1 0 DL } def
/LT2 { PL [2 dl 3 dl] 0 0 1 DL } def
/LT3 { PL [1 dl 1.5 dl] 1 0 1 DL } def
/LT4 { PL [5 dl 2 dl 1 dl 2 dl] 0 1 1 DL } def
/LT5 { PL [4 dl 3 dl 1 dl 3 dl] 1 1 0 DL } def
/LT6 { PL [2 dl 2 dl 2 dl 4 dl] 0 0 0 DL } def
/LT7 { PL [2 dl 2 dl 2 dl 2 dl 2 dl 4 dl] 1 0.3 0 DL } def
/LT8 { PL [2 dl 2 dl 2 dl 2 dl 2 dl 2 dl 2 dl 4 dl] 0.5 0.5 0.5 DL } def
/Pnt { stroke [] 0 setdash
   gsave 1 setlinecap M 0 0 V stroke grestore } def
/Dia { stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt } def
/Pls { stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
  } def
/Box { stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt } def
/Crs { stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke } def
/TriU { stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt  } def
/Star { 2 copy Pls Crs } def
/BoxF { stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V  hpt2 0 V  0 vpt2 V
  hpt2 neg 0 V  closepath fill } def
/TriUF { stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill } def
/TriD { stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt  } def
/TriDF { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF { stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill } def
/Pent { stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt } def
/PentF { stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore } def
/Circle { stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt } def
/CircleF { stroke [] 0 setdash hpt 0 360 arc fill } def
/C0 { BL [] 0 setdash 2 copy moveto vpt 90 450  arc } bind def
/C1 { BL [] 0 setdash 2 copy        moveto
       2 copy  vpt 0 90 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C2 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 90 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C3 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C4 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 180 270 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C5 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 90 arc
       2 copy moveto
       2 copy  vpt 180 270 arc closepath fill
               vpt 0 360 arc } bind def
/C6 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 90 270 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C7 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 0 270 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C8 { BL [] 0 setdash 2 copy moveto
      2 copy vpt 270 360 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C9 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 270 450 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C10 { BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
       2 copy moveto
       2 copy vpt 90 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C11 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 180 arc closepath fill
       2 copy moveto
       2 copy  vpt 270 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C12 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 180 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C13 { BL [] 0 setdash  2 copy moveto
       2 copy  vpt 0 90 arc closepath fill
       2 copy moveto
       2 copy  vpt 180 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C14 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 90 360 arc closepath fill
               vpt 0 360 arc } bind def
/C15 { BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/Rec   { newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
       neg 0 rlineto closepath } bind def
/Square { dup Rec } bind def
/Bsquare { vpt sub exch vpt sub exch vpt2 Square } bind def
/S0 { BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare } bind def
/S1 { BL [] 0 setdash 2 copy vpt Square fill Bsquare } bind def
/S2 { BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare } bind def
/S3 { BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare } bind def
/S4 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare } bind def
/S5 { BL [] 0 setdash 2 copy 2 copy vpt Square fill
       exch vpt sub exch vpt sub vpt Square fill Bsquare } bind def
/S6 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare } bind def
/S7 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
       2 copy vpt Square fill
       Bsquare } bind def
/S8 { BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare } bind def
/S9 { BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare } bind def
/S10 { BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
       Bsquare } bind def
/S11 { BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
       Bsquare } bind def
/S12 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare } bind def
/S13 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
       2 copy vpt Square fill Bsquare } bind def
/S14 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
       2 copy exch vpt sub exch vpt Square fill Bsquare } bind def
/S15 { BL [] 0 setdash 2 copy Bsquare fill Bsquare } bind def
/D0 { gsave translate 45 rotate 0 0 S0 stroke grestore } bind def
/D1 { gsave translate 45 rotate 0 0 S1 stroke grestore } bind def
/D2 { gsave translate 45 rotate 0 0 S2 stroke grestore } bind def
/D3 { gsave translate 45 rotate 0 0 S3 stroke grestore } bind def
/D4 { gsave translate 45 rotate 0 0 S4 stroke grestore } bind def
/D5 { gsave translate 45 rotate 0 0 S5 stroke grestore } bind def
/D6 { gsave translate 45 rotate 0 0 S6 stroke grestore } bind def
/D7 { gsave translate 45 rotate 0 0 S7 stroke grestore } bind def
/D8 { gsave translate 45 rotate 0 0 S8 stroke grestore } bind def
/D9 { gsave translate 45 rotate 0 0 S9 stroke grestore } bind def
/D10 { gsave translate 45 rotate 0 0 S10 stroke grestore } bind def
/D11 { gsave translate 45 rotate 0 0 S11 stroke grestore } bind def
/D12 { gsave translate 45 rotate 0 0 S12 stroke grestore } bind def
/D13 { gsave translate 45 rotate 0 0 S13 stroke grestore } bind def
/D14 { gsave translate 45 rotate 0 0 S14 stroke grestore } bind def
/D15 { gsave translate 45 rotate 0 0 S15 stroke grestore } bind def
/DiaE { stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke } def
/BoxE { stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke } def
/TriUE { stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke } def
/TriDE { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke } def
/PentE { stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore } def
/CircE { stroke [] 0 setdash 
  hpt 0 360 arc stroke } def
/Opaque { gsave closepath 1 setgray fill grestore 0 setgray closepath } def
/DiaW { stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke } def
/BoxW { stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke } def
/TriUW { stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke } def
/TriDW { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke } def
/PentW { stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore } def
/CircW { stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke } def
/BoxFill { gsave Rec 1 setgray fill grestore } def
/MFshow {{dup dup 0 get findfont exch 1 get scalefont setfont
     [ currentpoint ] exch dup 2 get 0 exch rmoveto dup dup 5 get exch 4 get
     {show} {stringwidth pop 0 rmoveto}ifelse dup 3 get
     {2 get neg 0 exch rmoveto pop} {pop aload pop moveto}ifelse} forall} bind def
/MFwidth {0 exch {dup 3 get{dup dup 0 get findfont exch 1 get scalefont setfont
      5 get stringwidth pop add}
    {pop} ifelse} forall} bind def
/MLshow { currentpoint stroke M
  0 exch R MFshow } bind def
/MRshow { currentpoint stroke M
  exch dup MFwidth neg 3 -1 roll R MFshow } def
/MCshow { currentpoint stroke M
  exch dup MFwidth -2 div 3 -1 roll R MFshow } def
end
%%EndProlog
gnudict begin
gsave
50 50 translate
0.050 0.050 scale
0 setgray
newpath
(Times-Roman) findfont 180 scalefont setfont
1.000 UL
LTb
810 540 M
63 0 V
6021 0 R
-63 0 V
 stroke
702 540 M
[ [(Times-Roman) 180.0 0.0 true true (0)]
] -60.0 MRshow
810 1294 M
63 0 V
6021 0 R
-63 0 V
 stroke
702 1294 M
[ [(Times-Roman) 180.0 0.0 true true (20)]
] -60.0 MRshow
810 2049 M
63 0 V
6021 0 R
-63 0 V
 stroke
702 2049 M
[ [(Times-Roman) 180.0 0.0 true true (40)]
] -60.0 MRshow
810 2803 M
63 0 V
6021 0 R
-63 0 V
 stroke
702 2803 M
[ [(Times-Roman) 180.0 0.0 true true (60)]
] -60.0 MRshow
810 3557 M
63 0 V
6021 0 R
-63 0 V
 stroke
702 3557 M
[ [(Times-Roman) 180.0 0.0 true true (80)]
] -60.0 MRshow
810 4311 M
63 0 V
6021 0 R
-63 0 V
 stroke
702 4311 M
[ [(Times-Roman) 180.0 0.0 true true (100)]
] -60.0 MRshow
1148 540 M
0 63 V
0 3897 R
0 -63 V
 stroke
1148 360 M
[ [(Times-Roman) 180.0 0.0 true true (2)]
] -60.0 MCshow
1824 540 M
0 63 V
0 3897 R
0 -63 V
 stroke
1824 360 M
[ [(Times-Roman) 180.0 0.0 true true (4)]
] -60.0 MCshow
2500 540 M
0 63 V
0 3897 R
0 -63 V
 stroke
2500 360 M
[ [(Times-Roman) 180.0 0.0 true true (6)]
] -60.0 MCshow
3176 540 M
0 63 V
0 3897 R
0 -63 V
 stroke
3176 360 M
[ [(Times-Roman) 180.0 0.0 true true (8)]
] -60.0 MCshow
3852 540 M
0 63 V
0 3897 R
0 -63 V
 stroke
3852 360 M
[ [(Times-Roman) 180.0 0.0 true true (10)]
] -60.0 MCshow
4528 540 M
0 63 V
0 3897 R
0 -63 V
 stroke
4528 360 M
[ [(Times-Roman) 180.0 0.0 true true (12)]
] -60.0 MCshow
5204 540 M
0 63 V
0 3897 R
0 -63 V
 stroke
5204 360 M
[ [(Times-Roman) 180.0 0.0 true true (14)]
] -60.0 MCshow
5880 540 M
0 63 V
0 3897 R
0 -63 V
 stroke
5880 360 M
[ [(Times-Roman) 180.0 0.0 true true (16)]
] -60.0 MCshow
6556 540 M
0 63 V
0 3897 R
0 -63 V
 stroke
6556 360 M
[ [(Times-Roman) 180.0 0.0 true true (18)]
] -60.0 MCshow
1.000 UL
LTb
810 540 M
6084 0 V
0 3960 V
-6084 0 V
810 540 L
 stroke
180 2520 M
currentpoint gsave translate 90 rotate 0 0 moveto
[ [(Times-Roman) 180.0 0.0 true true (Interprocessor Adjacency)]
] -60.0 MCshow
grestore
3852 90 M
[ [(Times-Roman) 180.0 0.0 true true (Refinement Step)]
] -60.0 MCshow
3852 4770 M
[ [(Times-Roman) 180.0 0.0 true true (Maximum Interprocessor Adjacency for 20 Processors)]
] -60.0 MCshow
1.000 UP
1.000 UL
LT0
6110 1294 M
[ [(Times-Roman) 180.0 0.0 true true (JOSTLE)]
] -60.0 MRshow
6218 1294 M
495 0 V
810 3120 M
338 396 V
338 398 V
338 397 V
338 0 V
338 0 V
338 0 V
338 -100 V
338 0 V
338 100 V
338 -198 V
338 98 V
338 -296 V
338 296 V
338 -198 V
338 0 V
338 0 V
338 -98 V
338 396 V
810 3120 Pls
1148 3516 Pls
1486 3914 Pls
1824 4311 Pls
2162 4311 Pls
2500 4311 Pls
2838 4311 Pls
3176 4211 Pls
3514 4211 Pls
3852 4311 Pls
4190 4113 Pls
4528 4211 Pls
4866 3915 Pls
5204 4211 Pls
5542 4013 Pls
5880 4013 Pls
6218 4013 Pls
6556 3915 Pls
6894 4311 Pls
6465 1294 Pls
1.000 UP
1.000 UL
LT1
6110 1114 M
[ [(Times-Roman) 180.0 0.0 true true (PARMETIS)]
] -60.0 MRshow
6218 1114 M
495 0 V
810 3716 M
338 0 V
338 495 V
338 0 V
338 -99 V
338 -99 V
338 0 V
338 0 V
338 0 V
338 0 V
338 0 V
338 0 V
338 0 V
338 0 V
338 0 V
338 0 V
338 0 V
338 99 V
338 0 V
810 3716 Crs
1148 3716 Crs
1486 4211 Crs
1824 4211 Crs
2162 4112 Crs
2500 4013 Crs
2838 4013 Crs
3176 4013 Crs
3514 4013 Crs
3852 4013 Crs
4190 4013 Crs
4528 4013 Crs
4866 4013 Crs
5204 4013 Crs
5542 4013 Crs
5880 4013 Crs
6218 4013 Crs
6556 4112 Crs
6894 4112 Crs
6465 1114 Crs
1.000 UP
1.000 UL
LT2
6110 934 M
[ [(Times-Roman) 180.0 0.0 true true (RCB)]
] -60.0 MRshow
6218 934 M
495 0 V
810 3120 M
338 200 V
338 396 V
338 0 V
338 0 V
338 -200 V
338 0 V
338 0 V
338 0 V
338 0 V
338 0 V
338 0 V
338 0 V
338 0 V
338 -396 V
338 396 V
338 0 V
338 0 V
338 0 V
810 3120 Star
1148 3320 Star
1486 3716 Star
1824 3716 Star
2162 3716 Star
2500 3516 Star
2838 3516 Star
3176 3516 Star
3514 3516 Star
3852 3516 Star
4190 3516 Star
4528 3516 Star
4866 3516 Star
5204 3516 Star
5542 3120 Star
5880 3516 Star
6218 3516 Star
6556 3516 Star
6894 3516 Star
6465 934 Star
1.000 UP
1.000 UL
LT3
6110 754 M
[ [(Times-Roman) 180.0 0.0 true true (RIB)]
] -60.0 MRshow
6218 754 M
495 0 V
810 2724 M
338 1191 V
338 -399 V
338 0 V
338 596 V
338 -396 V
338 199 V
338 197 V
338 -396 V
338 -200 V
338 399 V
338 0 V
338 -199 V
338 199 V
338 -199 V
338 0 V
338 -200 V
338 0 V
338 0 V
810 2724 Box
1148 3915 Box
1486 3516 Box
1824 3516 Box
2162 4112 Box
2500 3716 Box
2838 3915 Box
3176 4112 Box
3514 3716 Box
3852 3516 Box
4190 3915 Box
4528 3915 Box
4866 3716 Box
5204 3915 Box
5542 3716 Box
5880 3716 Box
6218 3516 Box
6556 3516 Box
6894 3516 Box
6465 754 Box
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Times-Roman

%%EndDocument
 @endspecial 51523 34703 V 888 34748 50657 45 v 0 36962
a Fk(Figure)507 b(6:)725 b Fj(ad)-145 b(j)7662 37161
y Fb(A)8929 36962 y Fk(\(top\))506 b(and)g Fj(ad)-145
b(j)16680 37161 y Fb(M)18240 36962 y Fk(\(righ)-36 b(t\))506
b(at)h(eac)-36 b(h)507 b(adaptiv)-36 b(e)507 b(re\257nemen)-36
b(t)505 b(step)h(for)i(the)e(p)36 b(erforated)0 38567
y(sho)g(c)-36 b(k)433 b(tub)36 b(e)432 b(on)h(8)g(\(left\))g(and)f(20)h
(\(righ)-36 b(t\))432 b(pro)36 b(cesses.)579 b(Jostle)433
b(ac)-36 b(hiev)g(ed)433 b(the)f(b)36 b(est)432 b Fj(ad)-145
b(j)43026 38766 y Fb(A)44219 38567 y Fk(in)433 b(b)36
b(oth)432 b(cases.)0 40172 y(All)637 b(metho)36 b(ds)637
b(had)f Fj(ad)-145 b(j)12268 40371 y Fb(M)14037 40172
y Fk(=)714 b(100\045)638 b(for)g(8)f(pro)36 b(cesses.)1188
b(R)-36 b(CB)638 b(ac)-36 b(hiev)g(ed)637 b(the)f(lo)-36
b(w)g(est)637 b Fj(ad)-145 b(j)46818 40371 y Fb(M)48509
40172 y Fk(for)637 b(20)0 41777 y(pro)36 b(cesses.)0
45577 y(a)533 b(leaf)i(o)36 b(ctan)-36 b(t)533 b(con)-36
b(tains)533 b(to)36 b(o)533 b(man)-36 b(y)534 b(ob)72
b(jects,)559 b(it)533 b(is)g(re\257ned)f(in)-36 b(to)533
b(eigh)-36 b(t)533 b(new)g(leaf)i(o)36 b(ctan)-36 b(ts,)558
b(and)533 b(the)0 47183 y(ob)72 b(jects)517 b(con)-36
b(tained)517 b(in)g(the)f(original)i(are)f(disp)36 b(ersed)516
b(among)h(the)g(c)-36 b(hildren.)827 b(Setting)516 b(this)h(threshold)0
48788 y(lo)-36 b(w)403 b(results)e(in)h(a)g(larger)g(tree)g(structure,)
407 b(but)401 b(allo)-36 b(ws)403 b(for)f(a)g(more)g(exact)h(balance.)
568 b(Larger)402 b(thresholds)0 50393 y(allo)-36 b(w)423
b(a)f(smaller)h(tree)e(structure)f(at)i(the)f(exp)36
b(ense)422 b(of)h(a)f(coarser)g(partitioning,)i(whic)-36
b(h)422 b(ma)-36 b(y)422 b(in)-36 b(tro)36 b(duce)0 51998
y(small)434 b(im)-36 b(balances.)1951 53603 y(T)-108
b(o)467 b(determine)g(the)g(e\256ect)f(of)i(leaf)h(o)36
b(ctan)-36 b(t)467 b(gran)-36 b(ularit)g(y)467 b(on)h(the)e(o)36
b(ctree,)476 b(w)-36 b(e)468 b(v)-72 b(ary)468 b(the)f(re\257nemen)-36
b(t)0 55208 y(threshold)399 b(setting)i(from)g(1)f(to)h(200.)568
b(W)-108 b(e)400 b(increase)h(b)-36 b(y)400 b(5)h(up)f(to)g(50,)408
b(then)399 b(10)i(up)f(to)g(100,)409 b(and)400 b(b)-36
b(y)400 b(20)h(up)0 56813 y(to)434 b(200.)579 b(W)-108
b(e)434 b(use)f(the)g(same)h(com)-36 b(binations)433
b(of)i(pro)36 b(cesses)433 b(as)h(in)g(previous)g(studies.)1951
58418 y(Figure)389 b(10)h(sho)-36 b(ws)389 b(that)g Fj(r)14748
58617 y Fb(G)15926 58418 y Fk(and)f Fj(ad)-145 b(j)20162
58617 y Fb(A)21312 58418 y Fk(w)-36 b(ere)389 b(nearly)h(iden)-36
b(tical)389 b(for)h(all)g(o)36 b(ctan)-36 b(t)389 b(gran)-36
b(ularities.)564 b(Ho)-36 b(w-)0 60023 y(ev)g(er,)624
b(there)586 b(w)-36 b(ere)586 b(some)g(di\256erences)f(in)-36
b(tro)36 b(duced)585 b(in)g(the)h(strictness)f(of)i(the)e(load)h
(balance.)1036 b(With)0 61628 y(an)620 b(o)36 b(ctan)-36
b(t)619 b(gran)-36 b(ularit)g(y)620 b(of)h(1,)667 b(the)619
b(partitions)h(had)f(an)g(im)-36 b(balance)620 b(of)h(at)f(most)g(1)g
(ob)72 b(ject.)1137 b(With)0 63233 y(larger)375 b(o)36
b(ctan)-36 b(t)374 b(gran)-36 b(ularit)g(y)-108 b(,)386
b(im)-36 b(balances)375 b(as)f(large)h(as)f(the)g(gran)-36
b(ularit)g(y)375 b(ma)-36 b(y)374 b(result,)386 b(and)374
b(w)-36 b(e)374 b(observ)-36 b(ed)0 64839 y(im)g(balances)434
b(up)f(to)g(155)i(ob)72 b(jects)434 b(when)f(a)h(gran)-36
b(ularit)g(y)434 b(of)g(200)h(w)-36 b(as)434 b(used.)1951
66444 y(Figure)297 b(11)g(sho)-36 b(ws)298 b(partitioning)f(times)g(as)
g(the)g(o)36 b(ctan)-36 b(t)297 b(gran)-36 b(ularit)g(y)297
b(is)g(v)-72 b(aried.)533 b(These)297 b(times)g(include)0
68049 y(the)j(partitioning,)328 b(but)300 b(not)g(the)g(mesh)h
(migration)g(to)g(ac)-36 b(hiev)g(e)301 b(the)f(partitioning.)535
b(Since)300 b(appro)-36 b(ximately)0 69654 y(the)372
b(same)g(p)36 b(ercen)-36 b(tage)372 b(of)h(the)f(mesh)g(is)g(migrated)
h(regardless)f(of)h(o)36 b(ctan)-36 b(t)372 b(gran)-36
b(ularit)g(y)-108 b(,)385 b(migration)373 b(time)0 71259
y(is)493 b(nearly)g(constan)-36 b(t.)756 b(P)-36 b(artitioning)493
b(times)g(dropp)36 b(ed)491 b(as)i(the)f(gran)-36 b(ularit)g(y)494
b(w)-36 b(as)493 b(increased)g(from)g(1)g(up)25350 75417
y(10)p eop
%%Page: 11 11
11 10 bop 888 140 50657 45 v 866 17422 45 17282 v 1553
16940 a @beginspecial 50 @llx 50 @lly 410 @urx 302 @ury
2160 @rwi @setspecial
%%BeginDocument: graphs/solverAverages/times/time_refinement/bal-times-8.eps
%!PS-Adobe-2.0 EPSF-2.0
%%Title: bal-times-8-new.eps
%%Creator: gnuplot 3.7 patchlevel 1
%%CreationDate: Tue Jan 14 14:19:48 2003
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 410 302
%%Orientation: Portrait
%%EndComments
/gnudict 256 dict def
gnudict begin
/Color false def
/Solid false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
/vshift -60 def
/dl {10 mul} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow { currentpoint stroke M
  0 vshift R show } def
/Rshow { currentpoint stroke M
  dup stringwidth pop neg vshift R show } def
/Cshow { currentpoint stroke M
  dup stringwidth pop -2 div vshift R show } def
/UP { dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def } def
/DL { Color {setrgbcolor Solid {pop []} if 0 setdash }
 {pop pop pop Solid {pop []} if 0 setdash} ifelse } def
/BL { stroke userlinewidth 2 mul setlinewidth } def
/AL { stroke userlinewidth 2 div setlinewidth } def
/UL { dup gnulinewidth mul /userlinewidth exch def
      10 mul /udl exch def } def
/PL { stroke userlinewidth setlinewidth } def
/LTb { BL [] 0 0 0 DL } def
/LTa { AL [1 udl mul 2 udl mul] 0 setdash 0 0 0 setrgbcolor } def
/LT0 { PL [] 1 0 0 DL } def
/LT1 { PL [4 dl 2 dl] 0 1 0 DL } def
/LT2 { PL [2 dl 3 dl] 0 0 1 DL } def
/LT3 { PL [1 dl 1.5 dl] 1 0 1 DL } def
/LT4 { PL [5 dl 2 dl 1 dl 2 dl] 0 1 1 DL } def
/LT5 { PL [4 dl 3 dl 1 dl 3 dl] 1 1 0 DL } def
/LT6 { PL [2 dl 2 dl 2 dl 4 dl] 0 0 0 DL } def
/LT7 { PL [2 dl 2 dl 2 dl 2 dl 2 dl 4 dl] 1 0.3 0 DL } def
/LT8 { PL [2 dl 2 dl 2 dl 2 dl 2 dl 2 dl 2 dl 4 dl] 0.5 0.5 0.5 DL } def
/Pnt { stroke [] 0 setdash
   gsave 1 setlinecap M 0 0 V stroke grestore } def
/Dia { stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt } def
/Pls { stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
  } def
/Box { stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt } def
/Crs { stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke } def
/TriU { stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt  } def
/Star { 2 copy Pls Crs } def
/BoxF { stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V  hpt2 0 V  0 vpt2 V
  hpt2 neg 0 V  closepath fill } def
/TriUF { stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill } def
/TriD { stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt  } def
/TriDF { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF { stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill } def
/Pent { stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt } def
/PentF { stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore } def
/Circle { stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt } def
/CircleF { stroke [] 0 setdash hpt 0 360 arc fill } def
/C0 { BL [] 0 setdash 2 copy moveto vpt 90 450  arc } bind def
/C1 { BL [] 0 setdash 2 copy        moveto
       2 copy  vpt 0 90 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C2 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 90 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C3 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C4 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 180 270 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C5 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 90 arc
       2 copy moveto
       2 copy  vpt 180 270 arc closepath fill
               vpt 0 360 arc } bind def
/C6 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 90 270 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C7 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 0 270 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C8 { BL [] 0 setdash 2 copy moveto
      2 copy vpt 270 360 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C9 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 270 450 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C10 { BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
       2 copy moveto
       2 copy vpt 90 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C11 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 180 arc closepath fill
       2 copy moveto
       2 copy  vpt 270 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C12 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 180 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C13 { BL [] 0 setdash  2 copy moveto
       2 copy  vpt 0 90 arc closepath fill
       2 copy moveto
       2 copy  vpt 180 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C14 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 90 360 arc closepath fill
               vpt 0 360 arc } bind def
/C15 { BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/Rec   { newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
       neg 0 rlineto closepath } bind def
/Square { dup Rec } bind def
/Bsquare { vpt sub exch vpt sub exch vpt2 Square } bind def
/S0 { BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare } bind def
/S1 { BL [] 0 setdash 2 copy vpt Square fill Bsquare } bind def
/S2 { BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare } bind def
/S3 { BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare } bind def
/S4 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare } bind def
/S5 { BL [] 0 setdash 2 copy 2 copy vpt Square fill
       exch vpt sub exch vpt sub vpt Square fill Bsquare } bind def
/S6 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare } bind def
/S7 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
       2 copy vpt Square fill
       Bsquare } bind def
/S8 { BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare } bind def
/S9 { BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare } bind def
/S10 { BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
       Bsquare } bind def
/S11 { BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
       Bsquare } bind def
/S12 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare } bind def
/S13 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
       2 copy vpt Square fill Bsquare } bind def
/S14 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
       2 copy exch vpt sub exch vpt Square fill Bsquare } bind def
/S15 { BL [] 0 setdash 2 copy Bsquare fill Bsquare } bind def
/D0 { gsave translate 45 rotate 0 0 S0 stroke grestore } bind def
/D1 { gsave translate 45 rotate 0 0 S1 stroke grestore } bind def
/D2 { gsave translate 45 rotate 0 0 S2 stroke grestore } bind def
/D3 { gsave translate 45 rotate 0 0 S3 stroke grestore } bind def
/D4 { gsave translate 45 rotate 0 0 S4 stroke grestore } bind def
/D5 { gsave translate 45 rotate 0 0 S5 stroke grestore } bind def
/D6 { gsave translate 45 rotate 0 0 S6 stroke grestore } bind def
/D7 { gsave translate 45 rotate 0 0 S7 stroke grestore } bind def
/D8 { gsave translate 45 rotate 0 0 S8 stroke grestore } bind def
/D9 { gsave translate 45 rotate 0 0 S9 stroke grestore } bind def
/D10 { gsave translate 45 rotate 0 0 S10 stroke grestore } bind def
/D11 { gsave translate 45 rotate 0 0 S11 stroke grestore } bind def
/D12 { gsave translate 45 rotate 0 0 S12 stroke grestore } bind def
/D13 { gsave translate 45 rotate 0 0 S13 stroke grestore } bind def
/D14 { gsave translate 45 rotate 0 0 S14 stroke grestore } bind def
/D15 { gsave translate 45 rotate 0 0 S15 stroke grestore } bind def
/DiaE { stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke } def
/BoxE { stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke } def
/TriUE { stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke } def
/TriDE { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke } def
/PentE { stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore } def
/CircE { stroke [] 0 setdash 
  hpt 0 360 arc stroke } def
/Opaque { gsave closepath 1 setgray fill grestore 0 setgray closepath } def
/DiaW { stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke } def
/BoxW { stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke } def
/TriUW { stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke } def
/TriDW { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke } def
/PentW { stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore } def
/CircW { stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke } def
/BoxFill { gsave Rec 1 setgray fill grestore } def
/MFshow {{dup dup 0 get findfont exch 1 get scalefont setfont
     [ currentpoint ] exch dup 2 get 0 exch rmoveto dup dup 5 get exch 4 get
     {show} {stringwidth pop 0 rmoveto}ifelse dup 3 get
     {2 get neg 0 exch rmoveto pop} {pop aload pop moveto}ifelse} forall} bind def
/MFwidth {0 exch {dup 3 get{dup dup 0 get findfont exch 1 get scalefont setfont
      5 get stringwidth pop add}
    {pop} ifelse} forall} bind def
/MLshow { currentpoint stroke M
  0 exch R MFshow } bind def
/MRshow { currentpoint stroke M
  exch dup MFwidth neg 3 -1 roll R MFshow } def
/MCshow { currentpoint stroke M
  exch dup MFwidth -2 div 3 -1 roll R MFshow } def
end
%%EndProlog
gnudict begin
gsave
50 50 translate
0.050 0.050 scale
0 setgray
newpath
(Times-Roman) findfont 180 scalefont setfont
1.000 UL
LTb
810 540 M
63 0 V
6021 0 R
-63 0 V
 stroke
702 540 M
[ [(Times-Roman) 180.0 0.0 true true (0)]
] -60.0 MRshow
810 1332 M
63 0 V
6021 0 R
-63 0 V
 stroke
702 1332 M
[ [(Times-Roman) 180.0 0.0 true true (20)]
] -60.0 MRshow
810 2124 M
63 0 V
6021 0 R
-63 0 V
 stroke
702 2124 M
[ [(Times-Roman) 180.0 0.0 true true (40)]
] -60.0 MRshow
810 2916 M
63 0 V
6021 0 R
-63 0 V
 stroke
702 2916 M
[ [(Times-Roman) 180.0 0.0 true true (60)]
] -60.0 MRshow
810 3708 M
63 0 V
6021 0 R
-63 0 V
 stroke
702 3708 M
[ [(Times-Roman) 180.0 0.0 true true (80)]
] -60.0 MRshow
810 4500 M
63 0 V
6021 0 R
-63 0 V
 stroke
702 4500 M
[ [(Times-Roman) 180.0 0.0 true true (100)]
] -60.0 MRshow
1148 540 M
0 63 V
0 3897 R
0 -63 V
 stroke
1148 360 M
[ [(Times-Roman) 180.0 0.0 true true (2)]
] -60.0 MCshow
1824 540 M
0 63 V
0 3897 R
0 -63 V
 stroke
1824 360 M
[ [(Times-Roman) 180.0 0.0 true true (4)]
] -60.0 MCshow
2500 540 M
0 63 V
0 3897 R
0 -63 V
 stroke
2500 360 M
[ [(Times-Roman) 180.0 0.0 true true (6)]
] -60.0 MCshow
3176 540 M
0 63 V
0 3897 R
0 -63 V
 stroke
3176 360 M
[ [(Times-Roman) 180.0 0.0 true true (8)]
] -60.0 MCshow
3852 540 M
0 63 V
0 3897 R
0 -63 V
 stroke
3852 360 M
[ [(Times-Roman) 180.0 0.0 true true (10)]
] -60.0 MCshow
4528 540 M
0 63 V
0 3897 R
0 -63 V
 stroke
4528 360 M
[ [(Times-Roman) 180.0 0.0 true true (12)]
] -60.0 MCshow
5204 540 M
0 63 V
0 3897 R
0 -63 V
 stroke
5204 360 M
[ [(Times-Roman) 180.0 0.0 true true (14)]
] -60.0 MCshow
5880 540 M
0 63 V
0 3897 R
0 -63 V
 stroke
5880 360 M
[ [(Times-Roman) 180.0 0.0 true true (16)]
] -60.0 MCshow
6556 540 M
0 63 V
0 3897 R
0 -63 V
 stroke
6556 360 M
[ [(Times-Roman) 180.0 0.0 true true (18)]
] -60.0 MCshow
1.000 UL
LTb
810 540 M
6084 0 V
0 3960 V
-6084 0 V
810 540 L
 stroke
180 2520 M
currentpoint gsave translate 90 rotate 0 0 moveto
[ [(Times-Roman) 180.0 0.0 true true (Time \(seconds\))]
] -60.0 MCshow
grestore
3852 90 M
[ [(Times-Roman) 180.0 0.0 true true (Refinement Step)]
] -60.0 MCshow
3852 4770 M
[ [(Times-Roman) 180.0 0.0 true true (Rebalance Times for 8 Processors)]
] -60.0 MCshow
1.000 UP
1.000 UL
LT0
6075 4347 M
[ [(Times-Roman) 180.0 0.0 true true (JOSTLE)]
] -60.0 MRshow
6183 4347 M
495 0 V
810 1272 M
338 451 V
338 819 V
1824 1485 L
338 79 V
338 -43 V
338 152 V
3176 983 L
338 1076 V
338 418 V
338 -842 V
338 142 V
338 180 V
338 -164 V
338 60 V
338 -309 V
338 116 V
338 837 V
6894 1061 L
810 1272 Pls
1148 1723 Pls
1486 2542 Pls
1824 1485 Pls
2162 1564 Pls
2500 1521 Pls
2838 1673 Pls
3176 983 Pls
3514 2059 Pls
3852 2477 Pls
4190 1635 Pls
4528 1777 Pls
4866 1957 Pls
5204 1793 Pls
5542 1853 Pls
5880 1544 Pls
6218 1660 Pls
6556 2497 Pls
6894 1061 Pls
6430 4347 Pls
1.000 UP
1.000 UL
LT1
6075 4167 M
[ [(Times-Roman) 180.0 0.0 true true (PARMETIS)]
] -60.0 MRshow
6183 4167 M
495 0 V
810 1059 M
338 -15 V
338 423 V
1824 795 L
338 -47 V
338 -7 V
338 -7 V
338 42 V
338 -31 V
338 35 V
338 -35 V
338 16 V
338 -3 V
338 9 V
338 -2 V
338 139 V
6218 781 L
338 -1 V
338 24 V
810 1059 Crs
1148 1044 Crs
1486 1467 Crs
1824 795 Crs
2162 748 Crs
2500 741 Crs
2838 734 Crs
3176 776 Crs
3514 745 Crs
3852 780 Crs
4190 745 Crs
4528 761 Crs
4866 758 Crs
5204 767 Crs
5542 765 Crs
5880 904 Crs
6218 781 Crs
6556 780 Crs
6894 804 Crs
6430 4167 Crs
1.000 UP
1.000 UL
LT2
6075 3987 M
[ [(Times-Roman) 180.0 0.0 true true (RCB)]
] -60.0 MRshow
6183 3987 M
495 0 V
810 1071 M
338 -63 V
338 99 V
338 110 V
2162 657 L
338 -26 V
338 10 V
338 22 V
338 -1 V
338 55 V
338 -46 V
338 40 V
338 -19 V
338 735 V
338 -61 V
5880 683 L
338 22 V
338 27 V
338 -22 V
810 1071 Star
1148 1008 Star
1486 1107 Star
1824 1217 Star
2162 657 Star
2500 631 Star
2838 641 Star
3176 663 Star
3514 662 Star
3852 717 Star
4190 671 Star
4528 711 Star
4866 692 Star
5204 1427 Star
5542 1366 Star
5880 683 Star
6218 705 Star
6556 732 Star
6894 710 Star
6430 3987 Star
1.000 UP
1.000 UL
LT3
6075 3807 M
[ [(Times-Roman) 180.0 0.0 true true (RIB)]
] -60.0 MRshow
6183 3807 M
495 0 V
810 1302 M
338 -196 V
338 317 V
338 -55 V
2162 724 L
338 693 V
338 93 V
3176 787 L
338 -67 V
338 266 V
4190 774 L
338 295 V
4866 866 L
338 141 V
338 -44 V
5880 759 L
338 -1 V
338 -47 V
338 50 V
810 1302 Box
1148 1106 Box
1486 1423 Box
1824 1368 Box
2162 724 Box
2500 1417 Box
2838 1510 Box
3176 787 Box
3514 720 Box
3852 986 Box
4190 774 Box
4528 1069 Box
4866 866 Box
5204 1007 Box
5542 963 Box
5880 759 Box
6218 758 Box
6556 711 Box
6894 761 Box
6430 3807 Box
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Times-Roman

%%EndDocument
 @endspecial 25328 w @beginspecial 50 @llx 50 @lly 410
@urx 302 @ury 2160 @rwi @setspecial
%%BeginDocument: graphs/solverAverages/times/time_refinement/bal-times-20.eps
%!PS-Adobe-2.0 EPSF-2.0
%%Title: bal-times-20-new.eps
%%Creator: gnuplot 3.7 patchlevel 1
%%CreationDate: Tue Jan 14 14:19:30 2003
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 410 302
%%Orientation: Portrait
%%EndComments
/gnudict 256 dict def
gnudict begin
/Color false def
/Solid false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
/vshift -60 def
/dl {10 mul} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow { currentpoint stroke M
  0 vshift R show } def
/Rshow { currentpoint stroke M
  dup stringwidth pop neg vshift R show } def
/Cshow { currentpoint stroke M
  dup stringwidth pop -2 div vshift R show } def
/UP { dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def } def
/DL { Color {setrgbcolor Solid {pop []} if 0 setdash }
 {pop pop pop Solid {pop []} if 0 setdash} ifelse } def
/BL { stroke userlinewidth 2 mul setlinewidth } def
/AL { stroke userlinewidth 2 div setlinewidth } def
/UL { dup gnulinewidth mul /userlinewidth exch def
      10 mul /udl exch def } def
/PL { stroke userlinewidth setlinewidth } def
/LTb { BL [] 0 0 0 DL } def
/LTa { AL [1 udl mul 2 udl mul] 0 setdash 0 0 0 setrgbcolor } def
/LT0 { PL [] 1 0 0 DL } def
/LT1 { PL [4 dl 2 dl] 0 1 0 DL } def
/LT2 { PL [2 dl 3 dl] 0 0 1 DL } def
/LT3 { PL [1 dl 1.5 dl] 1 0 1 DL } def
/LT4 { PL [5 dl 2 dl 1 dl 2 dl] 0 1 1 DL } def
/LT5 { PL [4 dl 3 dl 1 dl 3 dl] 1 1 0 DL } def
/LT6 { PL [2 dl 2 dl 2 dl 4 dl] 0 0 0 DL } def
/LT7 { PL [2 dl 2 dl 2 dl 2 dl 2 dl 4 dl] 1 0.3 0 DL } def
/LT8 { PL [2 dl 2 dl 2 dl 2 dl 2 dl 2 dl 2 dl 4 dl] 0.5 0.5 0.5 DL } def
/Pnt { stroke [] 0 setdash
   gsave 1 setlinecap M 0 0 V stroke grestore } def
/Dia { stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt } def
/Pls { stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
  } def
/Box { stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt } def
/Crs { stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke } def
/TriU { stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt  } def
/Star { 2 copy Pls Crs } def
/BoxF { stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V  hpt2 0 V  0 vpt2 V
  hpt2 neg 0 V  closepath fill } def
/TriUF { stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill } def
/TriD { stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt  } def
/TriDF { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF { stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill } def
/Pent { stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt } def
/PentF { stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore } def
/Circle { stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt } def
/CircleF { stroke [] 0 setdash hpt 0 360 arc fill } def
/C0 { BL [] 0 setdash 2 copy moveto vpt 90 450  arc } bind def
/C1 { BL [] 0 setdash 2 copy        moveto
       2 copy  vpt 0 90 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C2 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 90 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C3 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C4 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 180 270 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C5 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 90 arc
       2 copy moveto
       2 copy  vpt 180 270 arc closepath fill
               vpt 0 360 arc } bind def
/C6 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 90 270 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C7 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 0 270 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C8 { BL [] 0 setdash 2 copy moveto
      2 copy vpt 270 360 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C9 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 270 450 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C10 { BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
       2 copy moveto
       2 copy vpt 90 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C11 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 180 arc closepath fill
       2 copy moveto
       2 copy  vpt 270 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C12 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 180 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C13 { BL [] 0 setdash  2 copy moveto
       2 copy  vpt 0 90 arc closepath fill
       2 copy moveto
       2 copy  vpt 180 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C14 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 90 360 arc closepath fill
               vpt 0 360 arc } bind def
/C15 { BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/Rec   { newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
       neg 0 rlineto closepath } bind def
/Square { dup Rec } bind def
/Bsquare { vpt sub exch vpt sub exch vpt2 Square } bind def
/S0 { BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare } bind def
/S1 { BL [] 0 setdash 2 copy vpt Square fill Bsquare } bind def
/S2 { BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare } bind def
/S3 { BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare } bind def
/S4 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare } bind def
/S5 { BL [] 0 setdash 2 copy 2 copy vpt Square fill
       exch vpt sub exch vpt sub vpt Square fill Bsquare } bind def
/S6 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare } bind def
/S7 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
       2 copy vpt Square fill
       Bsquare } bind def
/S8 { BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare } bind def
/S9 { BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare } bind def
/S10 { BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
       Bsquare } bind def
/S11 { BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
       Bsquare } bind def
/S12 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare } bind def
/S13 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
       2 copy vpt Square fill Bsquare } bind def
/S14 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
       2 copy exch vpt sub exch vpt Square fill Bsquare } bind def
/S15 { BL [] 0 setdash 2 copy Bsquare fill Bsquare } bind def
/D0 { gsave translate 45 rotate 0 0 S0 stroke grestore } bind def
/D1 { gsave translate 45 rotate 0 0 S1 stroke grestore } bind def
/D2 { gsave translate 45 rotate 0 0 S2 stroke grestore } bind def
/D3 { gsave translate 45 rotate 0 0 S3 stroke grestore } bind def
/D4 { gsave translate 45 rotate 0 0 S4 stroke grestore } bind def
/D5 { gsave translate 45 rotate 0 0 S5 stroke grestore } bind def
/D6 { gsave translate 45 rotate 0 0 S6 stroke grestore } bind def
/D7 { gsave translate 45 rotate 0 0 S7 stroke grestore } bind def
/D8 { gsave translate 45 rotate 0 0 S8 stroke grestore } bind def
/D9 { gsave translate 45 rotate 0 0 S9 stroke grestore } bind def
/D10 { gsave translate 45 rotate 0 0 S10 stroke grestore } bind def
/D11 { gsave translate 45 rotate 0 0 S11 stroke grestore } bind def
/D12 { gsave translate 45 rotate 0 0 S12 stroke grestore } bind def
/D13 { gsave translate 45 rotate 0 0 S13 stroke grestore } bind def
/D14 { gsave translate 45 rotate 0 0 S14 stroke grestore } bind def
/D15 { gsave translate 45 rotate 0 0 S15 stroke grestore } bind def
/DiaE { stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke } def
/BoxE { stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke } def
/TriUE { stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke } def
/TriDE { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke } def
/PentE { stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore } def
/CircE { stroke [] 0 setdash 
  hpt 0 360 arc stroke } def
/Opaque { gsave closepath 1 setgray fill grestore 0 setgray closepath } def
/DiaW { stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke } def
/BoxW { stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke } def
/TriUW { stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke } def
/TriDW { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke } def
/PentW { stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore } def
/CircW { stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke } def
/BoxFill { gsave Rec 1 setgray fill grestore } def
/MFshow {{dup dup 0 get findfont exch 1 get scalefont setfont
     [ currentpoint ] exch dup 2 get 0 exch rmoveto dup dup 5 get exch 4 get
     {show} {stringwidth pop 0 rmoveto}ifelse dup 3 get
     {2 get neg 0 exch rmoveto pop} {pop aload pop moveto}ifelse} forall} bind def
/MFwidth {0 exch {dup 3 get{dup dup 0 get findfont exch 1 get scalefont setfont
      5 get stringwidth pop add}
    {pop} ifelse} forall} bind def
/MLshow { currentpoint stroke M
  0 exch R MFshow } bind def
/MRshow { currentpoint stroke M
  exch dup MFwidth neg 3 -1 roll R MFshow } def
/MCshow { currentpoint stroke M
  exch dup MFwidth -2 div 3 -1 roll R MFshow } def
end
%%EndProlog
gnudict begin
gsave
50 50 translate
0.050 0.050 scale
0 setgray
newpath
(Times-Roman) findfont 180 scalefont setfont
1.000 UL
LTb
810 540 M
63 0 V
6021 0 R
-63 0 V
 stroke
702 540 M
[ [(Times-Roman) 180.0 0.0 true true (0)]
] -60.0 MRshow
810 1332 M
63 0 V
6021 0 R
-63 0 V
 stroke
702 1332 M
[ [(Times-Roman) 180.0 0.0 true true (20)]
] -60.0 MRshow
810 2124 M
63 0 V
6021 0 R
-63 0 V
 stroke
702 2124 M
[ [(Times-Roman) 180.0 0.0 true true (40)]
] -60.0 MRshow
810 2916 M
63 0 V
6021 0 R
-63 0 V
 stroke
702 2916 M
[ [(Times-Roman) 180.0 0.0 true true (60)]
] -60.0 MRshow
810 3708 M
63 0 V
6021 0 R
-63 0 V
 stroke
702 3708 M
[ [(Times-Roman) 180.0 0.0 true true (80)]
] -60.0 MRshow
810 4500 M
63 0 V
6021 0 R
-63 0 V
 stroke
702 4500 M
[ [(Times-Roman) 180.0 0.0 true true (100)]
] -60.0 MRshow
1148 540 M
0 63 V
0 3897 R
0 -63 V
 stroke
1148 360 M
[ [(Times-Roman) 180.0 0.0 true true (2)]
] -60.0 MCshow
1824 540 M
0 63 V
0 3897 R
0 -63 V
 stroke
1824 360 M
[ [(Times-Roman) 180.0 0.0 true true (4)]
] -60.0 MCshow
2500 540 M
0 63 V
0 3897 R
0 -63 V
 stroke
2500 360 M
[ [(Times-Roman) 180.0 0.0 true true (6)]
] -60.0 MCshow
3176 540 M
0 63 V
0 3897 R
0 -63 V
 stroke
3176 360 M
[ [(Times-Roman) 180.0 0.0 true true (8)]
] -60.0 MCshow
3852 540 M
0 63 V
0 3897 R
0 -63 V
 stroke
3852 360 M
[ [(Times-Roman) 180.0 0.0 true true (10)]
] -60.0 MCshow
4528 540 M
0 63 V
0 3897 R
0 -63 V
 stroke
4528 360 M
[ [(Times-Roman) 180.0 0.0 true true (12)]
] -60.0 MCshow
5204 540 M
0 63 V
0 3897 R
0 -63 V
 stroke
5204 360 M
[ [(Times-Roman) 180.0 0.0 true true (14)]
] -60.0 MCshow
5880 540 M
0 63 V
0 3897 R
0 -63 V
 stroke
5880 360 M
[ [(Times-Roman) 180.0 0.0 true true (16)]
] -60.0 MCshow
6556 540 M
0 63 V
0 3897 R
0 -63 V
 stroke
6556 360 M
[ [(Times-Roman) 180.0 0.0 true true (18)]
] -60.0 MCshow
1.000 UL
LTb
810 540 M
6084 0 V
0 3960 V
-6084 0 V
810 540 L
 stroke
180 2520 M
currentpoint gsave translate 90 rotate 0 0 moveto
[ [(Times-Roman) 180.0 0.0 true true (Time \(seconds\))]
] -60.0 MCshow
grestore
3852 90 M
[ [(Times-Roman) 180.0 0.0 true true (Refinement Step)]
] -60.0 MCshow
3852 4770 M
[ [(Times-Roman) 180.0 0.0 true true (Rebalance Times for 20 Processors)]
] -60.0 MCshow
1.000 UP
1.000 UL
LT0
6075 4347 M
[ [(Times-Roman) 180.0 0.0 true true (JOSTLE)]
] -60.0 MRshow
6183 4347 M
495 0 V
810 1226 M
338 565 V
338 726 V
338 -885 V
338 65 V
338 72 V
338 416 V
338 -909 V
338 1377 V
338 -754 V
338 -96 V
338 821 V
338 197 V
338 858 V
5542 1508 L
338 -161 V
338 2411 V
338 -904 V
338 77 V
810 1226 Pls
1148 1791 Pls
1486 2517 Pls
1824 1632 Pls
2162 1697 Pls
2500 1769 Pls
2838 2185 Pls
3176 1276 Pls
3514 2653 Pls
3852 1899 Pls
4190 1803 Pls
4528 2624 Pls
4866 2821 Pls
5204 3679 Pls
5542 1508 Pls
5880 1347 Pls
6218 3758 Pls
6556 2854 Pls
6894 2931 Pls
6430 4347 Pls
1.000 UP
1.000 UL
LT1
6075 4167 M
[ [(Times-Roman) 180.0 0.0 true true (PARMETIS)]
] -60.0 MRshow
6183 4167 M
495 0 V
810 929 M
338 214 V
338 129 V
1824 783 L
338 -5 V
338 -27 V
338 -20 V
338 65 V
338 -52 V
338 21 V
338 5 V
338 11 V
338 -11 V
338 20 V
338 16 V
338 -15 V
338 -1 V
338 14 V
338 29 V
810 929 Crs
1148 1143 Crs
1486 1272 Crs
1824 783 Crs
2162 778 Crs
2500 751 Crs
2838 731 Crs
3176 796 Crs
3514 744 Crs
3852 765 Crs
4190 770 Crs
4528 781 Crs
4866 770 Crs
5204 790 Crs
5542 806 Crs
5880 791 Crs
6218 790 Crs
6556 804 Crs
6894 833 Crs
6430 4167 Crs
1.000 UP
1.000 UL
LT2
6075 3987 M
[ [(Times-Roman) 180.0 0.0 true true (RCB)]
] -60.0 MRshow
6183 3987 M
495 0 V
810 1284 M
338 -125 V
338 217 V
338 -134 V
2162 675 L
338 -32 V
338 210 V
3176 670 L
338 3 V
338 590 V
4190 637 L
338 97 V
338 -64 V
338 838 V
338 -58 V
5880 651 L
338 27 V
338 27 V
338 -3 V
810 1284 Star
1148 1159 Star
1486 1376 Star
1824 1242 Star
2162 675 Star
2500 643 Star
2838 853 Star
3176 670 Star
3514 673 Star
3852 1263 Star
4190 637 Star
4528 734 Star
4866 670 Star
5204 1508 Star
5542 1450 Star
5880 651 Star
6218 678 Star
6556 705 Star
6894 702 Star
6430 3987 Star
1.000 UP
1.000 UL
LT3
6075 3807 M
[ [(Times-Roman) 180.0 0.0 true true (RIB)]
] -60.0 MRshow
6183 3807 M
495 0 V
810 1126 M
338 119 V
338 251 V
338 68 V
2162 970 L
338 693 V
338 -3 V
3176 880 L
3514 754 L
338 309 V
4190 770 L
338 353 V
4866 929 L
338 136 V
338 40 V
5880 757 L
338 2 V
338 -50 V
338 41 V
810 1126 Box
1148 1245 Box
1486 1496 Box
1824 1564 Box
2162 970 Box
2500 1663 Box
2838 1660 Box
3176 880 Box
3514 754 Box
3852 1063 Box
4190 770 Box
4528 1123 Box
4866 929 Box
5204 1065 Box
5542 1105 Box
5880 757 Box
6218 759 Box
6556 709 Box
6894 750 Box
6430 3807 Box
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Times-Roman

%%EndDocument
 @endspecial 51523 17422 V 866 34703 V 1553 34222 a @beginspecial
50 @llx 50 @lly 410 @urx 302 @ury 2160 @rwi @setspecial
%%BeginDocument: graphs/solverAverages/times/time_refinement/ref-times-8.eps
%!PS-Adobe-2.0 EPSF-2.0
%%Title: ref-times-8.eps
%%Creator: gnuplot 3.7 patchlevel 0
%%CreationDate: Thu Aug 15 11:07:27 2002
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 410 302
%%Orientation: Portrait
%%EndComments
/gnudict 256 dict def
gnudict begin
/Color false def
/Solid false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
/vshift -60 def
/dl {10 mul} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow { currentpoint stroke M
  0 vshift R show } def
/Rshow { currentpoint stroke M
  dup stringwidth pop neg vshift R show } def
/Cshow { currentpoint stroke M
  dup stringwidth pop -2 div vshift R show } def
/UP { dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def } def
/DL { Color {setrgbcolor Solid {pop []} if 0 setdash }
 {pop pop pop Solid {pop []} if 0 setdash} ifelse } def
/BL { stroke gnulinewidth 2 mul setlinewidth } def
/AL { stroke gnulinewidth 2 div setlinewidth } def
/UL { gnulinewidth mul /userlinewidth exch def } def
/PL { stroke userlinewidth setlinewidth } def
/LTb { BL [] 0 0 0 DL } def
/LTa { AL [1 dl 2 dl] 0 setdash 0 0 0 setrgbcolor } def
/LT0 { PL [] 1 0 0 DL } def
/LT1 { PL [4 dl 2 dl] 0 1 0 DL } def
/LT2 { PL [2 dl 3 dl] 0 0 1 DL } def
/LT3 { PL [1 dl 1.5 dl] 1 0 1 DL } def
/LT4 { PL [5 dl 2 dl 1 dl 2 dl] 0 1 1 DL } def
/LT5 { PL [4 dl 3 dl 1 dl 3 dl] 1 1 0 DL } def
/LT6 { PL [2 dl 2 dl 2 dl 4 dl] 0 0 0 DL } def
/LT7 { PL [2 dl 2 dl 2 dl 2 dl 2 dl 4 dl] 1 0.3 0 DL } def
/LT8 { PL [2 dl 2 dl 2 dl 2 dl 2 dl 2 dl 2 dl 4 dl] 0.5 0.5 0.5 DL } def
/Pnt { stroke [] 0 setdash
   gsave 1 setlinecap M 0 0 V stroke grestore } def
/Dia { stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt } def
/Pls { stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
  } def
/Box { stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt } def
/Crs { stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke } def
/TriU { stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt  } def
/Star { 2 copy Pls Crs } def
/BoxF { stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V  hpt2 0 V  0 vpt2 V
  hpt2 neg 0 V  closepath fill } def
/TriUF { stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill } def
/TriD { stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt  } def
/TriDF { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF { stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill } def
/Pent { stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt } def
/PentF { stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore } def
/Circle { stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt } def
/CircleF { stroke [] 0 setdash hpt 0 360 arc fill } def
/C0 { BL [] 0 setdash 2 copy moveto vpt 90 450  arc } bind def
/C1 { BL [] 0 setdash 2 copy        moveto
       2 copy  vpt 0 90 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C2 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 90 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C3 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C4 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 180 270 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C5 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 90 arc
       2 copy moveto
       2 copy  vpt 180 270 arc closepath fill
               vpt 0 360 arc } bind def
/C6 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 90 270 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C7 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 0 270 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C8 { BL [] 0 setdash 2 copy moveto
      2 copy vpt 270 360 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C9 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 270 450 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C10 { BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
       2 copy moveto
       2 copy vpt 90 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C11 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 180 arc closepath fill
       2 copy moveto
       2 copy  vpt 270 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C12 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 180 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C13 { BL [] 0 setdash  2 copy moveto
       2 copy  vpt 0 90 arc closepath fill
       2 copy moveto
       2 copy  vpt 180 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C14 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 90 360 arc closepath fill
               vpt 0 360 arc } bind def
/C15 { BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/Rec   { newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
       neg 0 rlineto closepath } bind def
/Square { dup Rec } bind def
/Bsquare { vpt sub exch vpt sub exch vpt2 Square } bind def
/S0 { BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare } bind def
/S1 { BL [] 0 setdash 2 copy vpt Square fill Bsquare } bind def
/S2 { BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare } bind def
/S3 { BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare } bind def
/S4 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare } bind def
/S5 { BL [] 0 setdash 2 copy 2 copy vpt Square fill
       exch vpt sub exch vpt sub vpt Square fill Bsquare } bind def
/S6 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare } bind def
/S7 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
       2 copy vpt Square fill
       Bsquare } bind def
/S8 { BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare } bind def
/S9 { BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare } bind def
/S10 { BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
       Bsquare } bind def
/S11 { BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
       Bsquare } bind def
/S12 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare } bind def
/S13 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
       2 copy vpt Square fill Bsquare } bind def
/S14 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
       2 copy exch vpt sub exch vpt Square fill Bsquare } bind def
/S15 { BL [] 0 setdash 2 copy Bsquare fill Bsquare } bind def
/D0 { gsave translate 45 rotate 0 0 S0 stroke grestore } bind def
/D1 { gsave translate 45 rotate 0 0 S1 stroke grestore } bind def
/D2 { gsave translate 45 rotate 0 0 S2 stroke grestore } bind def
/D3 { gsave translate 45 rotate 0 0 S3 stroke grestore } bind def
/D4 { gsave translate 45 rotate 0 0 S4 stroke grestore } bind def
/D5 { gsave translate 45 rotate 0 0 S5 stroke grestore } bind def
/D6 { gsave translate 45 rotate 0 0 S6 stroke grestore } bind def
/D7 { gsave translate 45 rotate 0 0 S7 stroke grestore } bind def
/D8 { gsave translate 45 rotate 0 0 S8 stroke grestore } bind def
/D9 { gsave translate 45 rotate 0 0 S9 stroke grestore } bind def
/D10 { gsave translate 45 rotate 0 0 S10 stroke grestore } bind def
/D11 { gsave translate 45 rotate 0 0 S11 stroke grestore } bind def
/D12 { gsave translate 45 rotate 0 0 S12 stroke grestore } bind def
/D13 { gsave translate 45 rotate 0 0 S13 stroke grestore } bind def
/D14 { gsave translate 45 rotate 0 0 S14 stroke grestore } bind def
/D15 { gsave translate 45 rotate 0 0 S15 stroke grestore } bind def
/DiaE { stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke } def
/BoxE { stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke } def
/TriUE { stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke } def
/TriDE { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke } def
/PentE { stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore } def
/CircE { stroke [] 0 setdash 
  hpt 0 360 arc stroke } def
/Opaque { gsave closepath 1 setgray fill grestore 0 setgray closepath } def
/DiaW { stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke } def
/BoxW { stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke } def
/TriUW { stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke } def
/TriDW { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke } def
/PentW { stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore } def
/CircW { stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke } def
/BoxFill { gsave Rec 1 setgray fill grestore } def
/MFshow {{dup dup 0 get findfont exch 1 get scalefont setfont
     [ currentpoint ] exch dup 2 get 0 exch rmoveto dup dup 5 get exch 4 get
     {show} {stringwidth pop 0 rmoveto}ifelse dup 3 get
     {2 get neg 0 exch rmoveto pop} {pop aload pop moveto}ifelse} forall} bind def
/MFwidth {0 exch {dup 3 get{dup dup 0 get findfont exch 1 get scalefont setfont
      5 get stringwidth pop add}
    {pop} ifelse} forall} bind def
/MLshow { currentpoint stroke M
  0 exch R MFshow } bind def
/MRshow { currentpoint stroke M
  exch dup MFwidth neg 3 -1 roll R MFshow } def
/MCshow { currentpoint stroke M
  exch dup MFwidth -2 div 3 -1 roll R MFshow } def
end
%%EndProlog
gnudict begin
gsave
50 50 translate
0.050 0.050 scale
0 setgray
newpath
(Times-Roman) findfont 180 scalefont setfont
1.000 UL
LTb
702 900 M
63 0 V
6129 0 R
-63 0 V
 stroke
594 900 M
[ [(Times-Roman) 180.0 0.0 true true (5)]
] -60.0 MRshow
702 1500 M
63 0 V
6129 0 R
-63 0 V
 stroke
594 1500 M
[ [(Times-Roman) 180.0 0.0 true true (10)]
] -60.0 MRshow
702 2100 M
63 0 V
6129 0 R
-63 0 V
 stroke
594 2100 M
[ [(Times-Roman) 180.0 0.0 true true (15)]
] -60.0 MRshow
702 2700 M
63 0 V
6129 0 R
-63 0 V
 stroke
594 2700 M
[ [(Times-Roman) 180.0 0.0 true true (20)]
] -60.0 MRshow
702 3300 M
63 0 V
6129 0 R
-63 0 V
 stroke
594 3300 M
[ [(Times-Roman) 180.0 0.0 true true (25)]
] -60.0 MRshow
702 3900 M
63 0 V
6129 0 R
-63 0 V
 stroke
594 3900 M
[ [(Times-Roman) 180.0 0.0 true true (30)]
] -60.0 MRshow
702 4500 M
63 0 V
6129 0 R
-63 0 V
 stroke
594 4500 M
[ [(Times-Roman) 180.0 0.0 true true (35)]
] -60.0 MRshow
1046 540 M
0 63 V
0 3897 R
0 -63 V
 stroke
1046 360 M
[ [(Times-Roman) 180.0 0.0 true true (2)]
] -60.0 MCshow
1734 540 M
0 63 V
0 3897 R
0 -63 V
 stroke
1734 360 M
[ [(Times-Roman) 180.0 0.0 true true (4)]
] -60.0 MCshow
2422 540 M
0 63 V
0 3897 R
0 -63 V
 stroke
2422 360 M
[ [(Times-Roman) 180.0 0.0 true true (6)]
] -60.0 MCshow
3110 540 M
0 63 V
0 3897 R
0 -63 V
 stroke
3110 360 M
[ [(Times-Roman) 180.0 0.0 true true (8)]
] -60.0 MCshow
3798 540 M
0 63 V
0 3897 R
0 -63 V
 stroke
3798 360 M
[ [(Times-Roman) 180.0 0.0 true true (10)]
] -60.0 MCshow
4486 540 M
0 63 V
0 3897 R
0 -63 V
 stroke
4486 360 M
[ [(Times-Roman) 180.0 0.0 true true (12)]
] -60.0 MCshow
5174 540 M
0 63 V
0 3897 R
0 -63 V
 stroke
5174 360 M
[ [(Times-Roman) 180.0 0.0 true true (14)]
] -60.0 MCshow
5862 540 M
0 63 V
0 3897 R
0 -63 V
 stroke
5862 360 M
[ [(Times-Roman) 180.0 0.0 true true (16)]
] -60.0 MCshow
6550 540 M
0 63 V
0 3897 R
0 -63 V
 stroke
6550 360 M
[ [(Times-Roman) 180.0 0.0 true true (18)]
] -60.0 MCshow
1.000 UL
LTb
702 540 M
6192 0 V
0 3960 V
-6192 0 V
702 540 L
 stroke
180 2520 M
currentpoint gsave translate 90 rotate 0 0 moveto
[ [(Times-Roman) 180.0 0.0 true true (Time \(seconds\))]
] -60.0 MCshow
grestore
3798 90 M
[ [(Times-Roman) 180.0 0.0 true true (Refinement Step)]
] -60.0 MCshow
3798 4770 M
[ [(Times-Roman) 180.0 0.0 true true (Refinement Times for 8 Processors)]
] -60.0 MCshow
1.000 UP
1.000 UL
LT0
6075 4347 M
[ [(Times-Roman) 180.0 0.0 true true (JOSTLE)]
] -60.0 MRshow
6183 4347 M
495 0 V
702 884 M
344 577 V
344 1322 V
1734 1110 L
344 116 V
344 103 V
344 -19 V
344 341 V
344 -251 V
344 53 V
344 -54 V
344 251 V
344 -209 V
344 420 V
344 -70 V
344 -292 V
344 164 V
344 0 V
344 -56 V
702 884 Pls
1046 1461 Pls
1390 2783 Pls
1734 1110 Pls
2078 1226 Pls
2422 1329 Pls
2766 1310 Pls
3110 1651 Pls
3454 1400 Pls
3798 1453 Pls
4142 1399 Pls
4486 1650 Pls
4830 1441 Pls
5174 1861 Pls
5518 1791 Pls
5862 1499 Pls
6206 1663 Pls
6550 1663 Pls
6894 1607 Pls
6430 4347 Pls
1.000 UP
1.000 UL
LT1
6075 4167 M
[ [(Times-Roman) 180.0 0.0 true true (PARMETIS)]
] -60.0 MRshow
6183 4167 M
495 0 V
702 943 M
344 508 V
344 930 V
1734 1148 L
344 36 V
344 18 V
344 -19 V
344 250 V
344 -233 V
344 94 V
344 -49 V
344 186 V
344 26 V
344 155 V
344 -187 V
344 -31 V
344 189 V
344 80 V
344 -177 V
702 943 Crs
1046 1451 Crs
1390 2381 Crs
1734 1148 Crs
2078 1184 Crs
2422 1202 Crs
2766 1183 Crs
3110 1433 Crs
3454 1200 Crs
3798 1294 Crs
4142 1245 Crs
4486 1431 Crs
4830 1457 Crs
5174 1612 Crs
5518 1425 Crs
5862 1394 Crs
6206 1583 Crs
6550 1663 Crs
6894 1486 Crs
6430 4167 Crs
1.000 UP
1.000 UL
LT2
6075 3987 M
[ [(Times-Roman) 180.0 0.0 true true (RCB)]
] -60.0 MRshow
6183 3987 M
495 0 V
702 1266 M
344 250 V
344 958 V
344 -619 V
344 -160 V
344 98 V
344 -35 V
344 390 V
344 -315 V
344 261 V
344 -289 V
344 300 V
344 11 V
344 299 V
344 -668 V
344 201 V
344 500 V
344 99 V
344 -476 V
702 1266 Star
1046 1516 Star
1390 2474 Star
1734 1855 Star
2078 1695 Star
2422 1793 Star
2766 1758 Star
3110 2148 Star
3454 1833 Star
3798 2094 Star
4142 1805 Star
4486 2105 Star
4830 2116 Star
5174 2415 Star
5518 1747 Star
5862 1948 Star
6206 2448 Star
6550 2547 Star
6894 2071 Star
6430 3987 Star
1.000 UP
1.000 UL
LT3
6075 3807 M
[ [(Times-Roman) 180.0 0.0 true true (RIB)]
] -60.0 MRshow
6183 3807 M
495 0 V
702 1104 M
344 207 V
344 582 V
344 -757 V
344 87 V
344 116 V
344 -95 V
344 304 V
344 -283 V
344 101 V
344 -45 V
344 210 V
344 -25 V
344 151 V
344 -224 V
344 42 V
344 268 V
344 31 V
344 -121 V
702 1104 Box
1046 1311 Box
1390 1893 Box
1734 1136 Box
2078 1223 Box
2422 1339 Box
2766 1244 Box
3110 1548 Box
3454 1265 Box
3798 1366 Box
4142 1321 Box
4486 1531 Box
4830 1506 Box
5174 1657 Box
5518 1433 Box
5862 1475 Box
6206 1743 Box
6550 1774 Box
6894 1653 Box
6430 3807 Box
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Times-Roman

%%EndDocument
 @endspecial 25328 w @beginspecial 50 @llx 50 @lly 410
@urx 302 @ury 2160 @rwi @setspecial
%%BeginDocument: graphs/solverAverages/times/time_refinement/ref-times-20.eps
%!PS-Adobe-2.0 EPSF-2.0
%%Title: ref-times-20.eps
%%Creator: gnuplot 3.7 patchlevel 0
%%CreationDate: Thu Aug 15 11:07:28 2002
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 410 302
%%Orientation: Portrait
%%EndComments
/gnudict 256 dict def
gnudict begin
/Color false def
/Solid false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
/vshift -60 def
/dl {10 mul} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow { currentpoint stroke M
  0 vshift R show } def
/Rshow { currentpoint stroke M
  dup stringwidth pop neg vshift R show } def
/Cshow { currentpoint stroke M
  dup stringwidth pop -2 div vshift R show } def
/UP { dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def } def
/DL { Color {setrgbcolor Solid {pop []} if 0 setdash }
 {pop pop pop Solid {pop []} if 0 setdash} ifelse } def
/BL { stroke gnulinewidth 2 mul setlinewidth } def
/AL { stroke gnulinewidth 2 div setlinewidth } def
/UL { gnulinewidth mul /userlinewidth exch def } def
/PL { stroke userlinewidth setlinewidth } def
/LTb { BL [] 0 0 0 DL } def
/LTa { AL [1 dl 2 dl] 0 setdash 0 0 0 setrgbcolor } def
/LT0 { PL [] 1 0 0 DL } def
/LT1 { PL [4 dl 2 dl] 0 1 0 DL } def
/LT2 { PL [2 dl 3 dl] 0 0 1 DL } def
/LT3 { PL [1 dl 1.5 dl] 1 0 1 DL } def
/LT4 { PL [5 dl 2 dl 1 dl 2 dl] 0 1 1 DL } def
/LT5 { PL [4 dl 3 dl 1 dl 3 dl] 1 1 0 DL } def
/LT6 { PL [2 dl 2 dl 2 dl 4 dl] 0 0 0 DL } def
/LT7 { PL [2 dl 2 dl 2 dl 2 dl 2 dl 4 dl] 1 0.3 0 DL } def
/LT8 { PL [2 dl 2 dl 2 dl 2 dl 2 dl 2 dl 2 dl 4 dl] 0.5 0.5 0.5 DL } def
/Pnt { stroke [] 0 setdash
   gsave 1 setlinecap M 0 0 V stroke grestore } def
/Dia { stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt } def
/Pls { stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
  } def
/Box { stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt } def
/Crs { stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke } def
/TriU { stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt  } def
/Star { 2 copy Pls Crs } def
/BoxF { stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V  hpt2 0 V  0 vpt2 V
  hpt2 neg 0 V  closepath fill } def
/TriUF { stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill } def
/TriD { stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt  } def
/TriDF { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF { stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill } def
/Pent { stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt } def
/PentF { stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore } def
/Circle { stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt } def
/CircleF { stroke [] 0 setdash hpt 0 360 arc fill } def
/C0 { BL [] 0 setdash 2 copy moveto vpt 90 450  arc } bind def
/C1 { BL [] 0 setdash 2 copy        moveto
       2 copy  vpt 0 90 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C2 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 90 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C3 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C4 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 180 270 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C5 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 90 arc
       2 copy moveto
       2 copy  vpt 180 270 arc closepath fill
               vpt 0 360 arc } bind def
/C6 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 90 270 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C7 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 0 270 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C8 { BL [] 0 setdash 2 copy moveto
      2 copy vpt 270 360 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C9 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 270 450 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C10 { BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
       2 copy moveto
       2 copy vpt 90 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C11 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 180 arc closepath fill
       2 copy moveto
       2 copy  vpt 270 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C12 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 180 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C13 { BL [] 0 setdash  2 copy moveto
       2 copy  vpt 0 90 arc closepath fill
       2 copy moveto
       2 copy  vpt 180 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C14 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 90 360 arc closepath fill
               vpt 0 360 arc } bind def
/C15 { BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/Rec   { newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
       neg 0 rlineto closepath } bind def
/Square { dup Rec } bind def
/Bsquare { vpt sub exch vpt sub exch vpt2 Square } bind def
/S0 { BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare } bind def
/S1 { BL [] 0 setdash 2 copy vpt Square fill Bsquare } bind def
/S2 { BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare } bind def
/S3 { BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare } bind def
/S4 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare } bind def
/S5 { BL [] 0 setdash 2 copy 2 copy vpt Square fill
       exch vpt sub exch vpt sub vpt Square fill Bsquare } bind def
/S6 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare } bind def
/S7 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
       2 copy vpt Square fill
       Bsquare } bind def
/S8 { BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare } bind def
/S9 { BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare } bind def
/S10 { BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
       Bsquare } bind def
/S11 { BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
       Bsquare } bind def
/S12 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare } bind def
/S13 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
       2 copy vpt Square fill Bsquare } bind def
/S14 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
       2 copy exch vpt sub exch vpt Square fill Bsquare } bind def
/S15 { BL [] 0 setdash 2 copy Bsquare fill Bsquare } bind def
/D0 { gsave translate 45 rotate 0 0 S0 stroke grestore } bind def
/D1 { gsave translate 45 rotate 0 0 S1 stroke grestore } bind def
/D2 { gsave translate 45 rotate 0 0 S2 stroke grestore } bind def
/D3 { gsave translate 45 rotate 0 0 S3 stroke grestore } bind def
/D4 { gsave translate 45 rotate 0 0 S4 stroke grestore } bind def
/D5 { gsave translate 45 rotate 0 0 S5 stroke grestore } bind def
/D6 { gsave translate 45 rotate 0 0 S6 stroke grestore } bind def
/D7 { gsave translate 45 rotate 0 0 S7 stroke grestore } bind def
/D8 { gsave translate 45 rotate 0 0 S8 stroke grestore } bind def
/D9 { gsave translate 45 rotate 0 0 S9 stroke grestore } bind def
/D10 { gsave translate 45 rotate 0 0 S10 stroke grestore } bind def
/D11 { gsave translate 45 rotate 0 0 S11 stroke grestore } bind def
/D12 { gsave translate 45 rotate 0 0 S12 stroke grestore } bind def
/D13 { gsave translate 45 rotate 0 0 S13 stroke grestore } bind def
/D14 { gsave translate 45 rotate 0 0 S14 stroke grestore } bind def
/D15 { gsave translate 45 rotate 0 0 S15 stroke grestore } bind def
/DiaE { stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke } def
/BoxE { stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke } def
/TriUE { stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke } def
/TriDE { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke } def
/PentE { stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore } def
/CircE { stroke [] 0 setdash 
  hpt 0 360 arc stroke } def
/Opaque { gsave closepath 1 setgray fill grestore 0 setgray closepath } def
/DiaW { stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke } def
/BoxW { stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke } def
/TriUW { stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke } def
/TriDW { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke } def
/PentW { stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore } def
/CircW { stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke } def
/BoxFill { gsave Rec 1 setgray fill grestore } def
/MFshow {{dup dup 0 get findfont exch 1 get scalefont setfont
     [ currentpoint ] exch dup 2 get 0 exch rmoveto dup dup 5 get exch 4 get
     {show} {stringwidth pop 0 rmoveto}ifelse dup 3 get
     {2 get neg 0 exch rmoveto pop} {pop aload pop moveto}ifelse} forall} bind def
/MFwidth {0 exch {dup 3 get{dup dup 0 get findfont exch 1 get scalefont setfont
      5 get stringwidth pop add}
    {pop} ifelse} forall} bind def
/MLshow { currentpoint stroke M
  0 exch R MFshow } bind def
/MRshow { currentpoint stroke M
  exch dup MFwidth neg 3 -1 roll R MFshow } def
/MCshow { currentpoint stroke M
  exch dup MFwidth -2 div 3 -1 roll R MFshow } def
end
%%EndProlog
gnudict begin
gsave
50 50 translate
0.050 0.050 scale
0 setgray
newpath
(Times-Roman) findfont 180 scalefont setfont
1.000 UL
LTb
702 900 M
63 0 V
6129 0 R
-63 0 V
 stroke
594 900 M
[ [(Times-Roman) 180.0 0.0 true true (5)]
] -60.0 MRshow
702 1500 M
63 0 V
6129 0 R
-63 0 V
 stroke
594 1500 M
[ [(Times-Roman) 180.0 0.0 true true (10)]
] -60.0 MRshow
702 2100 M
63 0 V
6129 0 R
-63 0 V
 stroke
594 2100 M
[ [(Times-Roman) 180.0 0.0 true true (15)]
] -60.0 MRshow
702 2700 M
63 0 V
6129 0 R
-63 0 V
 stroke
594 2700 M
[ [(Times-Roman) 180.0 0.0 true true (20)]
] -60.0 MRshow
702 3300 M
63 0 V
6129 0 R
-63 0 V
 stroke
594 3300 M
[ [(Times-Roman) 180.0 0.0 true true (25)]
] -60.0 MRshow
702 3900 M
63 0 V
6129 0 R
-63 0 V
 stroke
594 3900 M
[ [(Times-Roman) 180.0 0.0 true true (30)]
] -60.0 MRshow
702 4500 M
63 0 V
6129 0 R
-63 0 V
 stroke
594 4500 M
[ [(Times-Roman) 180.0 0.0 true true (35)]
] -60.0 MRshow
1046 540 M
0 63 V
0 3897 R
0 -63 V
 stroke
1046 360 M
[ [(Times-Roman) 180.0 0.0 true true (2)]
] -60.0 MCshow
1734 540 M
0 63 V
0 3897 R
0 -63 V
 stroke
1734 360 M
[ [(Times-Roman) 180.0 0.0 true true (4)]
] -60.0 MCshow
2422 540 M
0 63 V
0 3897 R
0 -63 V
 stroke
2422 360 M
[ [(Times-Roman) 180.0 0.0 true true (6)]
] -60.0 MCshow
3110 540 M
0 63 V
0 3897 R
0 -63 V
 stroke
3110 360 M
[ [(Times-Roman) 180.0 0.0 true true (8)]
] -60.0 MCshow
3798 540 M
0 63 V
0 3897 R
0 -63 V
 stroke
3798 360 M
[ [(Times-Roman) 180.0 0.0 true true (10)]
] -60.0 MCshow
4486 540 M
0 63 V
0 3897 R
0 -63 V
 stroke
4486 360 M
[ [(Times-Roman) 180.0 0.0 true true (12)]
] -60.0 MCshow
5174 540 M
0 63 V
0 3897 R
0 -63 V
 stroke
5174 360 M
[ [(Times-Roman) 180.0 0.0 true true (14)]
] -60.0 MCshow
5862 540 M
0 63 V
0 3897 R
0 -63 V
 stroke
5862 360 M
[ [(Times-Roman) 180.0 0.0 true true (16)]
] -60.0 MCshow
6550 540 M
0 63 V
0 3897 R
0 -63 V
 stroke
6550 360 M
[ [(Times-Roman) 180.0 0.0 true true (18)]
] -60.0 MCshow
1.000 UL
LTb
702 540 M
6192 0 V
0 3960 V
-6192 0 V
702 540 L
 stroke
180 2520 M
currentpoint gsave translate 90 rotate 0 0 moveto
[ [(Times-Roman) 180.0 0.0 true true (Time \(seconds\))]
] -60.0 MCshow
grestore
3798 90 M
[ [(Times-Roman) 180.0 0.0 true true (Refinement Step)]
] -60.0 MCshow
3798 4770 M
[ [(Times-Roman) 180.0 0.0 true true (Refinement Times for 20 Processors)]
] -60.0 MCshow
1.000 UP
1.000 UL
LT0
6075 4347 M
[ [(Times-Roman) 180.0 0.0 true true (JOSTLE)]
] -60.0 MRshow
6183 4347 M
495 0 V
702 599 M
344 630 V
344 418 V
1734 996 L
344 0 V
344 102 V
344 -85 V
344 444 V
344 -167 V
344 17 V
344 -207 V
344 429 V
344 -205 V
344 64 V
344 -259 V
344 -14 V
344 302 V
344 23 V
344 -174 V
702 599 Pls
1046 1229 Pls
1390 1647 Pls
1734 996 Pls
2078 996 Pls
2422 1098 Pls
2766 1013 Pls
3110 1457 Pls
3454 1290 Pls
3798 1307 Pls
4142 1100 Pls
4486 1529 Pls
4830 1324 Pls
5174 1388 Pls
5518 1129 Pls
5862 1115 Pls
6206 1417 Pls
6550 1440 Pls
6894 1266 Pls
6430 4347 Pls
1.000 UP
1.000 UL
LT1
6075 4167 M
[ [(Times-Roman) 180.0 0.0 true true (PARMETIS)]
] -60.0 MRshow
6183 4167 M
495 0 V
702 655 M
344 650 V
344 256 V
1734 816 L
344 118 V
344 30 V
344 -49 V
344 289 V
344 -132 V
344 36 V
344 -34 V
344 132 V
344 -23 V
344 85 V
344 -94 V
344 13 V
344 96 V
344 123 V
344 -207 V
702 655 Crs
1046 1305 Crs
1390 1561 Crs
1734 816 Crs
2078 934 Crs
2422 964 Crs
2766 915 Crs
3110 1204 Crs
3454 1072 Crs
3798 1108 Crs
4142 1074 Crs
4486 1206 Crs
4830 1183 Crs
5174 1268 Crs
5518 1174 Crs
5862 1187 Crs
6206 1283 Crs
6550 1406 Crs
6894 1199 Crs
6430 4167 Crs
1.000 UP
1.000 UL
LT2
6075 3987 M
[ [(Times-Roman) 180.0 0.0 true true (RCB)]
] -60.0 MRshow
6183 3987 M
495 0 V
702 926 M
344 477 V
344 554 V
344 -614 V
344 81 V
344 93 V
344 9 V
344 267 V
344 -263 V
344 252 V
344 -609 V
344 232 V
344 -147 V
344 69 V
344 -170 V
344 15 V
344 149 V
344 74 V
344 -119 V
702 926 Star
1046 1403 Star
1390 1957 Star
1734 1343 Star
2078 1424 Star
2422 1517 Star
2766 1526 Star
3110 1793 Star
3454 1530 Star
3798 1782 Star
4142 1173 Star
4486 1405 Star
4830 1258 Star
5174 1327 Star
5518 1157 Star
5862 1172 Star
6206 1321 Star
6550 1395 Star
6894 1276 Star
6430 3987 Star
1.000 UP
1.000 UL
LT3
6075 3807 M
[ [(Times-Roman) 180.0 0.0 true true (RIB)]
] -60.0 MRshow
6183 3807 M
495 0 V
702 733 M
344 285 V
344 361 V
1734 945 L
344 -7 V
344 95 V
344 17 V
344 215 V
344 -224 V
344 125 V
344 -136 V
344 236 V
344 2 V
344 65 V
344 -119 V
344 -28 V
344 208 V
344 154 V
344 -186 V
702 733 Box
1046 1018 Box
1390 1379 Box
1734 945 Box
2078 938 Box
2422 1033 Box
2766 1050 Box
3110 1265 Box
3454 1041 Box
3798 1166 Box
4142 1030 Box
4486 1266 Box
4830 1268 Box
5174 1333 Box
5518 1214 Box
5862 1186 Box
6206 1394 Box
6550 1548 Box
6894 1362 Box
6430 3807 Box
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Times-Roman

%%EndDocument
 @endspecial 51523 34703 V 866 51985 V 1553 51504 a @beginspecial
50 @llx 50 @lly 410 @urx 302 @ury 2160 @rwi @setspecial
%%BeginDocument: graphs/solverAverages/times/time_refinement/sol-times-8.eps
%!PS-Adobe-2.0 EPSF-2.0
%%Title: sol-times-8.eps
%%Creator: gnuplot 3.7 patchlevel 0
%%CreationDate: Thu Aug 15 11:08:20 2002
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 410 302
%%Orientation: Portrait
%%EndComments
/gnudict 256 dict def
gnudict begin
/Color false def
/Solid false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
/vshift -60 def
/dl {10 mul} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow { currentpoint stroke M
  0 vshift R show } def
/Rshow { currentpoint stroke M
  dup stringwidth pop neg vshift R show } def
/Cshow { currentpoint stroke M
  dup stringwidth pop -2 div vshift R show } def
/UP { dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def } def
/DL { Color {setrgbcolor Solid {pop []} if 0 setdash }
 {pop pop pop Solid {pop []} if 0 setdash} ifelse } def
/BL { stroke gnulinewidth 2 mul setlinewidth } def
/AL { stroke gnulinewidth 2 div setlinewidth } def
/UL { gnulinewidth mul /userlinewidth exch def } def
/PL { stroke userlinewidth setlinewidth } def
/LTb { BL [] 0 0 0 DL } def
/LTa { AL [1 dl 2 dl] 0 setdash 0 0 0 setrgbcolor } def
/LT0 { PL [] 1 0 0 DL } def
/LT1 { PL [4 dl 2 dl] 0 1 0 DL } def
/LT2 { PL [2 dl 3 dl] 0 0 1 DL } def
/LT3 { PL [1 dl 1.5 dl] 1 0 1 DL } def
/LT4 { PL [5 dl 2 dl 1 dl 2 dl] 0 1 1 DL } def
/LT5 { PL [4 dl 3 dl 1 dl 3 dl] 1 1 0 DL } def
/LT6 { PL [2 dl 2 dl 2 dl 4 dl] 0 0 0 DL } def
/LT7 { PL [2 dl 2 dl 2 dl 2 dl 2 dl 4 dl] 1 0.3 0 DL } def
/LT8 { PL [2 dl 2 dl 2 dl 2 dl 2 dl 2 dl 2 dl 4 dl] 0.5 0.5 0.5 DL } def
/Pnt { stroke [] 0 setdash
   gsave 1 setlinecap M 0 0 V stroke grestore } def
/Dia { stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt } def
/Pls { stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
  } def
/Box { stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt } def
/Crs { stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke } def
/TriU { stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt  } def
/Star { 2 copy Pls Crs } def
/BoxF { stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V  hpt2 0 V  0 vpt2 V
  hpt2 neg 0 V  closepath fill } def
/TriUF { stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill } def
/TriD { stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt  } def
/TriDF { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF { stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill } def
/Pent { stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt } def
/PentF { stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore } def
/Circle { stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt } def
/CircleF { stroke [] 0 setdash hpt 0 360 arc fill } def
/C0 { BL [] 0 setdash 2 copy moveto vpt 90 450  arc } bind def
/C1 { BL [] 0 setdash 2 copy        moveto
       2 copy  vpt 0 90 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C2 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 90 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C3 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C4 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 180 270 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C5 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 90 arc
       2 copy moveto
       2 copy  vpt 180 270 arc closepath fill
               vpt 0 360 arc } bind def
/C6 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 90 270 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C7 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 0 270 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C8 { BL [] 0 setdash 2 copy moveto
      2 copy vpt 270 360 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C9 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 270 450 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C10 { BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
       2 copy moveto
       2 copy vpt 90 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C11 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 180 arc closepath fill
       2 copy moveto
       2 copy  vpt 270 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C12 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 180 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C13 { BL [] 0 setdash  2 copy moveto
       2 copy  vpt 0 90 arc closepath fill
       2 copy moveto
       2 copy  vpt 180 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C14 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 90 360 arc closepath fill
               vpt 0 360 arc } bind def
/C15 { BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/Rec   { newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
       neg 0 rlineto closepath } bind def
/Square { dup Rec } bind def
/Bsquare { vpt sub exch vpt sub exch vpt2 Square } bind def
/S0 { BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare } bind def
/S1 { BL [] 0 setdash 2 copy vpt Square fill Bsquare } bind def
/S2 { BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare } bind def
/S3 { BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare } bind def
/S4 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare } bind def
/S5 { BL [] 0 setdash 2 copy 2 copy vpt Square fill
       exch vpt sub exch vpt sub vpt Square fill Bsquare } bind def
/S6 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare } bind def
/S7 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
       2 copy vpt Square fill
       Bsquare } bind def
/S8 { BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare } bind def
/S9 { BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare } bind def
/S10 { BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
       Bsquare } bind def
/S11 { BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
       Bsquare } bind def
/S12 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare } bind def
/S13 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
       2 copy vpt Square fill Bsquare } bind def
/S14 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
       2 copy exch vpt sub exch vpt Square fill Bsquare } bind def
/S15 { BL [] 0 setdash 2 copy Bsquare fill Bsquare } bind def
/D0 { gsave translate 45 rotate 0 0 S0 stroke grestore } bind def
/D1 { gsave translate 45 rotate 0 0 S1 stroke grestore } bind def
/D2 { gsave translate 45 rotate 0 0 S2 stroke grestore } bind def
/D3 { gsave translate 45 rotate 0 0 S3 stroke grestore } bind def
/D4 { gsave translate 45 rotate 0 0 S4 stroke grestore } bind def
/D5 { gsave translate 45 rotate 0 0 S5 stroke grestore } bind def
/D6 { gsave translate 45 rotate 0 0 S6 stroke grestore } bind def
/D7 { gsave translate 45 rotate 0 0 S7 stroke grestore } bind def
/D8 { gsave translate 45 rotate 0 0 S8 stroke grestore } bind def
/D9 { gsave translate 45 rotate 0 0 S9 stroke grestore } bind def
/D10 { gsave translate 45 rotate 0 0 S10 stroke grestore } bind def
/D11 { gsave translate 45 rotate 0 0 S11 stroke grestore } bind def
/D12 { gsave translate 45 rotate 0 0 S12 stroke grestore } bind def
/D13 { gsave translate 45 rotate 0 0 S13 stroke grestore } bind def
/D14 { gsave translate 45 rotate 0 0 S14 stroke grestore } bind def
/D15 { gsave translate 45 rotate 0 0 S15 stroke grestore } bind def
/DiaE { stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke } def
/BoxE { stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke } def
/TriUE { stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke } def
/TriDE { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke } def
/PentE { stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore } def
/CircE { stroke [] 0 setdash 
  hpt 0 360 arc stroke } def
/Opaque { gsave closepath 1 setgray fill grestore 0 setgray closepath } def
/DiaW { stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke } def
/BoxW { stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke } def
/TriUW { stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke } def
/TriDW { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke } def
/PentW { stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore } def
/CircW { stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke } def
/BoxFill { gsave Rec 1 setgray fill grestore } def
/MFshow {{dup dup 0 get findfont exch 1 get scalefont setfont
     [ currentpoint ] exch dup 2 get 0 exch rmoveto dup dup 5 get exch 4 get
     {show} {stringwidth pop 0 rmoveto}ifelse dup 3 get
     {2 get neg 0 exch rmoveto pop} {pop aload pop moveto}ifelse} forall} bind def
/MFwidth {0 exch {dup 3 get{dup dup 0 get findfont exch 1 get scalefont setfont
      5 get stringwidth pop add}
    {pop} ifelse} forall} bind def
/MLshow { currentpoint stroke M
  0 exch R MFshow } bind def
/MRshow { currentpoint stroke M
  exch dup MFwidth neg 3 -1 roll R MFshow } def
/MCshow { currentpoint stroke M
  exch dup MFwidth -2 div 3 -1 roll R MFshow } def
end
%%EndProlog
gnudict begin
gsave
50 50 translate
0.050 0.050 scale
0 setgray
newpath
(Times-Roman) findfont 180 scalefont setfont
1.000 UL
LTb
918 540 M
63 0 V
5913 0 R
-63 0 V
 stroke
810 540 M
[ [(Times-Roman) 180.0 0.0 true true (0)]
] -60.0 MRshow
918 1332 M
63 0 V
5913 0 R
-63 0 V
 stroke
810 1332 M
[ [(Times-Roman) 180.0 0.0 true true (500)]
] -60.0 MRshow
918 2124 M
63 0 V
5913 0 R
-63 0 V
 stroke
810 2124 M
[ [(Times-Roman) 180.0 0.0 true true (1000)]
] -60.0 MRshow
918 2916 M
63 0 V
5913 0 R
-63 0 V
 stroke
810 2916 M
[ [(Times-Roman) 180.0 0.0 true true (1500)]
] -60.0 MRshow
918 3708 M
63 0 V
5913 0 R
-63 0 V
 stroke
810 3708 M
[ [(Times-Roman) 180.0 0.0 true true (2000)]
] -60.0 MRshow
918 4500 M
63 0 V
5913 0 R
-63 0 V
 stroke
810 4500 M
[ [(Times-Roman) 180.0 0.0 true true (2500)]
] -60.0 MRshow
1250 540 M
0 63 V
0 3897 R
0 -63 V
 stroke
1250 360 M
[ [(Times-Roman) 180.0 0.0 true true (2)]
] -60.0 MCshow
1914 540 M
0 63 V
0 3897 R
0 -63 V
 stroke
1914 360 M
[ [(Times-Roman) 180.0 0.0 true true (4)]
] -60.0 MCshow
2578 540 M
0 63 V
0 3897 R
0 -63 V
 stroke
2578 360 M
[ [(Times-Roman) 180.0 0.0 true true (6)]
] -60.0 MCshow
3242 540 M
0 63 V
0 3897 R
0 -63 V
 stroke
3242 360 M
[ [(Times-Roman) 180.0 0.0 true true (8)]
] -60.0 MCshow
3906 540 M
0 63 V
0 3897 R
0 -63 V
 stroke
3906 360 M
[ [(Times-Roman) 180.0 0.0 true true (10)]
] -60.0 MCshow
4570 540 M
0 63 V
0 3897 R
0 -63 V
 stroke
4570 360 M
[ [(Times-Roman) 180.0 0.0 true true (12)]
] -60.0 MCshow
5234 540 M
0 63 V
0 3897 R
0 -63 V
 stroke
5234 360 M
[ [(Times-Roman) 180.0 0.0 true true (14)]
] -60.0 MCshow
5898 540 M
0 63 V
0 3897 R
0 -63 V
 stroke
5898 360 M
[ [(Times-Roman) 180.0 0.0 true true (16)]
] -60.0 MCshow
6562 540 M
0 63 V
0 3897 R
0 -63 V
 stroke
6562 360 M
[ [(Times-Roman) 180.0 0.0 true true (18)]
] -60.0 MCshow
1.000 UL
LTb
918 540 M
5976 0 V
0 3960 V
-5976 0 V
918 540 L
 stroke
180 2520 M
currentpoint gsave translate 90 rotate 0 0 moveto
[ [(Times-Roman) 180.0 0.0 true true (Time \(seconds\))]
] -60.0 MCshow
grestore
3906 90 M
[ [(Times-Roman) 180.0 0.0 true true (Refinement Step)]
] -60.0 MCshow
3906 4770 M
[ [(Times-Roman) 180.0 0.0 true true (Solution Times for 8 Processors)]
] -60.0 MCshow
1.000 UP
1.000 UL
LT0
6075 4347 M
[ [(Times-Roman) 180.0 0.0 true true (JOSTLE)]
] -60.0 MRshow
6183 4347 M
495 0 V
918 540 M
332 1 V
332 1 V
332 145 V
332 -39 V
332 12 V
332 63 V
332 132 V
332 148 V
332 143 V
4238 814 L
332 75 V
332 15 V
332 387 V
5566 941 L
332 -2 V
6230 830 L
332 234 V
6894 917 L
918 540 Pls
1250 541 Pls
1582 542 Pls
1914 687 Pls
2246 648 Pls
2578 660 Pls
2910 723 Pls
3242 855 Pls
3574 1003 Pls
3906 1146 Pls
4238 814 Pls
4570 889 Pls
4902 904 Pls
5234 1291 Pls
5566 941 Pls
5898 939 Pls
6230 830 Pls
6562 1064 Pls
6894 917 Pls
6430 4347 Pls
1.000 UP
1.000 UL
LT1
6075 4167 M
[ [(Times-Roman) 180.0 0.0 true true (PARMETIS)]
] -60.0 MRshow
6183 4167 M
495 0 V
918 540 M
332 1 V
332 0 V
332 196 V
332 -42 V
332 15 V
332 93 V
332 172 V
332 173 V
332 197 V
4238 899 L
332 88 V
332 36 V
332 434 V
332 -448 V
332 27 V
6230 913 L
332 287 V
332 -175 V
918 540 Crs
1250 541 Crs
1582 541 Crs
1914 737 Crs
2246 695 Crs
2578 710 Crs
2910 803 Crs
3242 975 Crs
3574 1148 Crs
3906 1345 Crs
4238 899 Crs
4570 987 Crs
4902 1023 Crs
5234 1457 Crs
5566 1009 Crs
5898 1036 Crs
6230 913 Crs
6562 1200 Crs
6894 1025 Crs
6430 4167 Crs
1.000 UP
1.000 UL
LT2
6075 3987 M
[ [(Times-Roman) 180.0 0.0 true true (RCB)]
] -60.0 MRshow
6183 3987 M
495 0 V
918 540 M
332 1 V
332 0 V
332 623 V
332 -163 V
332 37 V
332 271 V
332 521 V
332 538 V
332 556 V
4238 1590 L
332 246 V
332 23 V
332 1236 V
5566 1792 L
332 87 V
332 -270 V
332 798 V
332 -540 V
918 540 Star
1250 541 Star
1582 541 Star
1914 1164 Star
2246 1001 Star
2578 1038 Star
2910 1309 Star
3242 1830 Star
3574 2368 Star
3906 2924 Star
4238 1590 Star
4570 1836 Star
4902 1859 Star
5234 3095 Star
5566 1792 Star
5898 1879 Star
6230 1609 Star
6562 2407 Star
6894 1867 Star
6430 3987 Star
1.000 UP
1.000 UL
LT3
6075 3807 M
[ [(Times-Roman) 180.0 0.0 true true (RIB)]
] -60.0 MRshow
6183 3807 M
495 0 V
918 540 M
332 1 V
332 0 V
332 269 V
332 -73 V
332 18 V
332 114 V
332 205 V
332 308 V
332 204 V
332 -535 V
332 116 V
332 41 V
332 644 V
332 -670 V
332 45 V
332 -137 V
332 450 V
332 -266 V
918 540 Box
1250 541 Box
1582 541 Box
1914 810 Box
2246 737 Box
2578 755 Box
2910 869 Box
3242 1074 Box
3574 1382 Box
3906 1586 Box
4238 1051 Box
4570 1167 Box
4902 1208 Box
5234 1852 Box
5566 1182 Box
5898 1227 Box
6230 1090 Box
6562 1540 Box
6894 1274 Box
6430 3807 Box
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Times-Roman

%%EndDocument
 @endspecial 25328 w @beginspecial 50 @llx 50 @lly 410
@urx 302 @ury 2160 @rwi @setspecial
%%BeginDocument: graphs/solverAverages/times/time_refinement/sol-times-20.eps
%!PS-Adobe-2.0 EPSF-2.0
%%Title: sol-times-20.eps
%%Creator: gnuplot 3.7 patchlevel 0
%%CreationDate: Thu Aug 15 11:08:21 2002
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 410 302
%%Orientation: Portrait
%%EndComments
/gnudict 256 dict def
gnudict begin
/Color false def
/Solid false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
/vshift -60 def
/dl {10 mul} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow { currentpoint stroke M
  0 vshift R show } def
/Rshow { currentpoint stroke M
  dup stringwidth pop neg vshift R show } def
/Cshow { currentpoint stroke M
  dup stringwidth pop -2 div vshift R show } def
/UP { dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def } def
/DL { Color {setrgbcolor Solid {pop []} if 0 setdash }
 {pop pop pop Solid {pop []} if 0 setdash} ifelse } def
/BL { stroke gnulinewidth 2 mul setlinewidth } def
/AL { stroke gnulinewidth 2 div setlinewidth } def
/UL { gnulinewidth mul /userlinewidth exch def } def
/PL { stroke userlinewidth setlinewidth } def
/LTb { BL [] 0 0 0 DL } def
/LTa { AL [1 dl 2 dl] 0 setdash 0 0 0 setrgbcolor } def
/LT0 { PL [] 1 0 0 DL } def
/LT1 { PL [4 dl 2 dl] 0 1 0 DL } def
/LT2 { PL [2 dl 3 dl] 0 0 1 DL } def
/LT3 { PL [1 dl 1.5 dl] 1 0 1 DL } def
/LT4 { PL [5 dl 2 dl 1 dl 2 dl] 0 1 1 DL } def
/LT5 { PL [4 dl 3 dl 1 dl 3 dl] 1 1 0 DL } def
/LT6 { PL [2 dl 2 dl 2 dl 4 dl] 0 0 0 DL } def
/LT7 { PL [2 dl 2 dl 2 dl 2 dl 2 dl 4 dl] 1 0.3 0 DL } def
/LT8 { PL [2 dl 2 dl 2 dl 2 dl 2 dl 2 dl 2 dl 4 dl] 0.5 0.5 0.5 DL } def
/Pnt { stroke [] 0 setdash
   gsave 1 setlinecap M 0 0 V stroke grestore } def
/Dia { stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt } def
/Pls { stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
  } def
/Box { stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt } def
/Crs { stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke } def
/TriU { stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt  } def
/Star { 2 copy Pls Crs } def
/BoxF { stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V  hpt2 0 V  0 vpt2 V
  hpt2 neg 0 V  closepath fill } def
/TriUF { stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill } def
/TriD { stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt  } def
/TriDF { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF { stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill } def
/Pent { stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt } def
/PentF { stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore } def
/Circle { stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt } def
/CircleF { stroke [] 0 setdash hpt 0 360 arc fill } def
/C0 { BL [] 0 setdash 2 copy moveto vpt 90 450  arc } bind def
/C1 { BL [] 0 setdash 2 copy        moveto
       2 copy  vpt 0 90 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C2 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 90 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C3 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C4 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 180 270 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C5 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 90 arc
       2 copy moveto
       2 copy  vpt 180 270 arc closepath fill
               vpt 0 360 arc } bind def
/C6 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 90 270 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C7 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 0 270 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C8 { BL [] 0 setdash 2 copy moveto
      2 copy vpt 270 360 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C9 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 270 450 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C10 { BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
       2 copy moveto
       2 copy vpt 90 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C11 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 180 arc closepath fill
       2 copy moveto
       2 copy  vpt 270 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C12 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 180 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C13 { BL [] 0 setdash  2 copy moveto
       2 copy  vpt 0 90 arc closepath fill
       2 copy moveto
       2 copy  vpt 180 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C14 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 90 360 arc closepath fill
               vpt 0 360 arc } bind def
/C15 { BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/Rec   { newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
       neg 0 rlineto closepath } bind def
/Square { dup Rec } bind def
/Bsquare { vpt sub exch vpt sub exch vpt2 Square } bind def
/S0 { BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare } bind def
/S1 { BL [] 0 setdash 2 copy vpt Square fill Bsquare } bind def
/S2 { BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare } bind def
/S3 { BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare } bind def
/S4 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare } bind def
/S5 { BL [] 0 setdash 2 copy 2 copy vpt Square fill
       exch vpt sub exch vpt sub vpt Square fill Bsquare } bind def
/S6 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare } bind def
/S7 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
       2 copy vpt Square fill
       Bsquare } bind def
/S8 { BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare } bind def
/S9 { BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare } bind def
/S10 { BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
       Bsquare } bind def
/S11 { BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
       Bsquare } bind def
/S12 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare } bind def
/S13 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
       2 copy vpt Square fill Bsquare } bind def
/S14 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
       2 copy exch vpt sub exch vpt Square fill Bsquare } bind def
/S15 { BL [] 0 setdash 2 copy Bsquare fill Bsquare } bind def
/D0 { gsave translate 45 rotate 0 0 S0 stroke grestore } bind def
/D1 { gsave translate 45 rotate 0 0 S1 stroke grestore } bind def
/D2 { gsave translate 45 rotate 0 0 S2 stroke grestore } bind def
/D3 { gsave translate 45 rotate 0 0 S3 stroke grestore } bind def
/D4 { gsave translate 45 rotate 0 0 S4 stroke grestore } bind def
/D5 { gsave translate 45 rotate 0 0 S5 stroke grestore } bind def
/D6 { gsave translate 45 rotate 0 0 S6 stroke grestore } bind def
/D7 { gsave translate 45 rotate 0 0 S7 stroke grestore } bind def
/D8 { gsave translate 45 rotate 0 0 S8 stroke grestore } bind def
/D9 { gsave translate 45 rotate 0 0 S9 stroke grestore } bind def
/D10 { gsave translate 45 rotate 0 0 S10 stroke grestore } bind def
/D11 { gsave translate 45 rotate 0 0 S11 stroke grestore } bind def
/D12 { gsave translate 45 rotate 0 0 S12 stroke grestore } bind def
/D13 { gsave translate 45 rotate 0 0 S13 stroke grestore } bind def
/D14 { gsave translate 45 rotate 0 0 S14 stroke grestore } bind def
/D15 { gsave translate 45 rotate 0 0 S15 stroke grestore } bind def
/DiaE { stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke } def
/BoxE { stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke } def
/TriUE { stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke } def
/TriDE { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke } def
/PentE { stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore } def
/CircE { stroke [] 0 setdash 
  hpt 0 360 arc stroke } def
/Opaque { gsave closepath 1 setgray fill grestore 0 setgray closepath } def
/DiaW { stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke } def
/BoxW { stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke } def
/TriUW { stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke } def
/TriDW { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke } def
/PentW { stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore } def
/CircW { stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke } def
/BoxFill { gsave Rec 1 setgray fill grestore } def
/MFshow {{dup dup 0 get findfont exch 1 get scalefont setfont
     [ currentpoint ] exch dup 2 get 0 exch rmoveto dup dup 5 get exch 4 get
     {show} {stringwidth pop 0 rmoveto}ifelse dup 3 get
     {2 get neg 0 exch rmoveto pop} {pop aload pop moveto}ifelse} forall} bind def
/MFwidth {0 exch {dup 3 get{dup dup 0 get findfont exch 1 get scalefont setfont
      5 get stringwidth pop add}
    {pop} ifelse} forall} bind def
/MLshow { currentpoint stroke M
  0 exch R MFshow } bind def
/MRshow { currentpoint stroke M
  exch dup MFwidth neg 3 -1 roll R MFshow } def
/MCshow { currentpoint stroke M
  exch dup MFwidth -2 div 3 -1 roll R MFshow } def
end
%%EndProlog
gnudict begin
gsave
50 50 translate
0.050 0.050 scale
0 setgray
newpath
(Times-Roman) findfont 180 scalefont setfont
1.000 UL
LTb
918 540 M
63 0 V
5913 0 R
-63 0 V
 stroke
810 540 M
[ [(Times-Roman) 180.0 0.0 true true (0)]
] -60.0 MRshow
918 1332 M
63 0 V
5913 0 R
-63 0 V
 stroke
810 1332 M
[ [(Times-Roman) 180.0 0.0 true true (500)]
] -60.0 MRshow
918 2124 M
63 0 V
5913 0 R
-63 0 V
 stroke
810 2124 M
[ [(Times-Roman) 180.0 0.0 true true (1000)]
] -60.0 MRshow
918 2916 M
63 0 V
5913 0 R
-63 0 V
 stroke
810 2916 M
[ [(Times-Roman) 180.0 0.0 true true (1500)]
] -60.0 MRshow
918 3708 M
63 0 V
5913 0 R
-63 0 V
 stroke
810 3708 M
[ [(Times-Roman) 180.0 0.0 true true (2000)]
] -60.0 MRshow
918 4500 M
63 0 V
5913 0 R
-63 0 V
 stroke
810 4500 M
[ [(Times-Roman) 180.0 0.0 true true (2500)]
] -60.0 MRshow
1250 540 M
0 63 V
0 3897 R
0 -63 V
 stroke
1250 360 M
[ [(Times-Roman) 180.0 0.0 true true (2)]
] -60.0 MCshow
1914 540 M
0 63 V
0 3897 R
0 -63 V
 stroke
1914 360 M
[ [(Times-Roman) 180.0 0.0 true true (4)]
] -60.0 MCshow
2578 540 M
0 63 V
0 3897 R
0 -63 V
 stroke
2578 360 M
[ [(Times-Roman) 180.0 0.0 true true (6)]
] -60.0 MCshow
3242 540 M
0 63 V
0 3897 R
0 -63 V
 stroke
3242 360 M
[ [(Times-Roman) 180.0 0.0 true true (8)]
] -60.0 MCshow
3906 540 M
0 63 V
0 3897 R
0 -63 V
 stroke
3906 360 M
[ [(Times-Roman) 180.0 0.0 true true (10)]
] -60.0 MCshow
4570 540 M
0 63 V
0 3897 R
0 -63 V
 stroke
4570 360 M
[ [(Times-Roman) 180.0 0.0 true true (12)]
] -60.0 MCshow
5234 540 M
0 63 V
0 3897 R
0 -63 V
 stroke
5234 360 M
[ [(Times-Roman) 180.0 0.0 true true (14)]
] -60.0 MCshow
5898 540 M
0 63 V
0 3897 R
0 -63 V
 stroke
5898 360 M
[ [(Times-Roman) 180.0 0.0 true true (16)]
] -60.0 MCshow
6562 540 M
0 63 V
0 3897 R
0 -63 V
 stroke
6562 360 M
[ [(Times-Roman) 180.0 0.0 true true (18)]
] -60.0 MCshow
1.000 UL
LTb
918 540 M
5976 0 V
0 3960 V
-5976 0 V
918 540 L
 stroke
180 2520 M
currentpoint gsave translate 90 rotate 0 0 moveto
[ [(Times-Roman) 180.0 0.0 true true (Time \(seconds\))]
] -60.0 MCshow
grestore
3906 90 M
[ [(Times-Roman) 180.0 0.0 true true (Refinement Step)]
] -60.0 MCshow
3906 4770 M
[ [(Times-Roman) 180.0 0.0 true true (Solution Times for 20 Processors)]
] -60.0 MCshow
1.000 UP
1.000 UL
LT0
6075 4347 M
[ [(Times-Roman) 180.0 0.0 true true (JOSTLE)]
] -60.0 MRshow
6183 4347 M
495 0 V
918 540 M
332 0 V
332 1 V
332 129 V
332 -33 V
332 8 V
332 66 V
332 115 V
332 149 V
332 121 V
4238 780 L
332 76 V
332 6 V
332 271 V
5566 839 L
332 37 V
332 -81 V
332 167 V
6894 850 L
918 540 Pls
1250 540 Pls
1582 541 Pls
1914 670 Pls
2246 637 Pls
2578 645 Pls
2910 711 Pls
3242 826 Pls
3574 975 Pls
3906 1096 Pls
4238 780 Pls
4570 856 Pls
4902 862 Pls
5234 1133 Pls
5566 839 Pls
5898 876 Pls
6230 795 Pls
6562 962 Pls
6894 850 Pls
6430 4347 Pls
1.000 UP
1.000 UL
LT1
6075 4167 M
[ [(Times-Roman) 180.0 0.0 true true (PARMETIS)]
] -60.0 MRshow
6183 4167 M
495 0 V
918 540 M
332 0 V
332 1 V
332 178 V
332 -28 V
332 12 V
332 89 V
332 166 V
332 178 V
332 212 V
4238 887 L
332 84 V
332 34 V
332 413 V
5566 986 L
332 28 V
6230 897 L
332 264 V
6894 989 L
918 540 Crs
1250 540 Crs
1582 541 Crs
1914 719 Crs
2246 691 Crs
2578 703 Crs
2910 792 Crs
3242 958 Crs
3574 1136 Crs
3906 1348 Crs
4238 887 Crs
4570 971 Crs
4902 1005 Crs
5234 1418 Crs
5566 986 Crs
5898 1014 Crs
6230 897 Crs
6562 1161 Crs
6894 989 Crs
6430 4167 Crs
1.000 UP
1.000 UL
LT2
6075 3987 M
[ [(Times-Roman) 180.0 0.0 true true (RCB)]
] -60.0 MRshow
6183 3987 M
495 0 V
918 540 M
332 0 V
332 1 V
332 572 V
332 -35 V
332 38 V
332 300 V
332 571 V
332 582 V
332 606 V
4238 1500 L
332 216 V
332 47 V
332 1181 V
5566 1602 L
332 133 V
332 -261 V
332 706 V
332 -458 V
918 540 Star
1250 540 Star
1582 541 Star
1914 1113 Star
2246 1078 Star
2578 1116 Star
2910 1416 Star
3242 1987 Star
3574 2569 Star
3906 3175 Star
4238 1500 Star
4570 1716 Star
4902 1763 Star
5234 2944 Star
5566 1602 Star
5898 1735 Star
6230 1474 Star
6562 2180 Star
6894 1722 Star
6430 3987 Star
1.000 UP
1.000 UL
LT3
6075 3807 M
[ [(Times-Roman) 180.0 0.0 true true (RIB)]
] -60.0 MRshow
6183 3807 M
495 0 V
918 540 M
332 0 V
332 1 V
332 409 V
332 46 V
332 11 V
332 201 V
332 315 V
332 445 V
332 451 V
4238 1356 L
332 214 V
332 1 V
332 1049 V
5566 1541 L
332 90 V
332 -209 V
332 711 V
332 -422 V
918 540 Box
1250 540 Box
1582 541 Box
1914 950 Box
2246 996 Box
2578 1007 Box
2910 1208 Box
3242 1523 Box
3574 1968 Box
3906 2419 Box
4238 1356 Box
4570 1570 Box
4902 1571 Box
5234 2620 Box
5566 1541 Box
5898 1631 Box
6230 1422 Box
6562 2133 Box
6894 1711 Box
6430 3807 Box
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Times-Roman

%%EndDocument
 @endspecial 51523 51985 V 888 52029 50657 45 v 0 54170
a Fk(Figure)426 b(7:)575 b(Solution)426 b(times)g(for)g(eac)-36
b(h)426 b(adaptiv)-36 b(e)427 b(re\257nemen)-36 b(t)424
b(step)h(for)i(the)e(p)36 b(erforated)426 b(sho)36 b(c)-36
b(k)427 b(tub)36 b(e)425 b(on)0 55775 y(8)365 b(\(left\))h(and)e(20)i
(\(righ)-36 b(t\))365 b(pro)36 b(cesses.)555 b(The)366
b(top)f(set)g(of)g(graphs)g(are)h(the)e(rebalancing)i(time)f(at)g(eac)
-36 b(h)365 b(step,)0 57380 y(whic)-36 b(h)448 b(includes)h(time)f(for)
i(Zoltan)f(to)f(compute)h(the)f(new)g(decomp)36 b(osition)449
b(and)g(the)f(time)h(to)f(migrate)0 58985 y(the)372 b(mesh)h(and)f
(solution)h(data)g(to)g(ac)-36 b(hiev)g(e)374 b(it.)558
b(The)373 b(middle)g(graphs)f(are)h(mesh)g(re\257nemen)-36
b(t)371 b(times,)385 b(and)0 60590 y(the)426 b(b)36 b(ottom)427
b(are)g(the)f(times)h(sp)36 b(en)-36 b(t)426 b(computing)g(the)g
(solution)h(after)g(eac)-36 b(h)427 b(re\257nemen)-36
b(t)425 b(step.)576 b(A)426 b(graph)0 62195 y(with)434
b(the)f(sum)g(of)h(these)f(v)-72 b(alues)434 b(is)g(in)g(Figure)f(8.)0
65996 y(to)h(around)f(20.)579 b(As)433 b(the)g(gran)-36
b(ularit)g(y)434 b(increased)g(b)36 b(ey)-36 b(ond)433
b(40,)h(partitioning)g(times)g(rose)f(steadily)-108 b(.)1951
67601 y(F)g(or)564 b(the)g(Muzzle)g(mesh)g(on)g(this)g(parallel)h
(computer,)597 b(a)564 b(gran)-36 b(ularit)g(y)565 b(of)g(20)g(to)g(40)
g(ob)72 b(jects)564 b(p)36 b(er)0 69206 y(o)g(ctan)-36
b(t)432 b(w)-36 b(as)433 b(the)e(most)h(e\256ectiv)-36
b(e.)579 b(In)432 b(this)g(range,)g(the)g(partitioning)g(time)g(w)-36
b(as)433 b(minimized,)g(and)e(only)0 70811 y(a)j(small)g(im)-36
b(balance)434 b(w)-36 b(as)434 b(incurred.)25350 75417
y(11)p eop
%%Page: 12 12
12 11 bop 888 140 50657 45 v 866 17422 45 17282 v 1553
16940 a @beginspecial 50 @llx 50 @lly 410 @urx 302 @ury
2160 @rwi @setspecial
%%BeginDocument: graphs/solverAverages/times/time_refinement/total-times-8.eps
%!PS-Adobe-2.0 EPSF-2.0
%%Title: total-times-8.eps
%%Creator: gnuplot 3.7 patchlevel 0
%%CreationDate: Thu Aug 15 11:09:36 2002
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 410 302
%%Orientation: Portrait
%%EndComments
/gnudict 256 dict def
gnudict begin
/Color false def
/Solid false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
/vshift -60 def
/dl {10 mul} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow { currentpoint stroke M
  0 vshift R show } def
/Rshow { currentpoint stroke M
  dup stringwidth pop neg vshift R show } def
/Cshow { currentpoint stroke M
  dup stringwidth pop -2 div vshift R show } def
/UP { dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def } def
/DL { Color {setrgbcolor Solid {pop []} if 0 setdash }
 {pop pop pop Solid {pop []} if 0 setdash} ifelse } def
/BL { stroke gnulinewidth 2 mul setlinewidth } def
/AL { stroke gnulinewidth 2 div setlinewidth } def
/UL { gnulinewidth mul /userlinewidth exch def } def
/PL { stroke userlinewidth setlinewidth } def
/LTb { BL [] 0 0 0 DL } def
/LTa { AL [1 dl 2 dl] 0 setdash 0 0 0 setrgbcolor } def
/LT0 { PL [] 1 0 0 DL } def
/LT1 { PL [4 dl 2 dl] 0 1 0 DL } def
/LT2 { PL [2 dl 3 dl] 0 0 1 DL } def
/LT3 { PL [1 dl 1.5 dl] 1 0 1 DL } def
/LT4 { PL [5 dl 2 dl 1 dl 2 dl] 0 1 1 DL } def
/LT5 { PL [4 dl 3 dl 1 dl 3 dl] 1 1 0 DL } def
/LT6 { PL [2 dl 2 dl 2 dl 4 dl] 0 0 0 DL } def
/LT7 { PL [2 dl 2 dl 2 dl 2 dl 2 dl 4 dl] 1 0.3 0 DL } def
/LT8 { PL [2 dl 2 dl 2 dl 2 dl 2 dl 2 dl 2 dl 4 dl] 0.5 0.5 0.5 DL } def
/Pnt { stroke [] 0 setdash
   gsave 1 setlinecap M 0 0 V stroke grestore } def
/Dia { stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt } def
/Pls { stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
  } def
/Box { stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt } def
/Crs { stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke } def
/TriU { stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt  } def
/Star { 2 copy Pls Crs } def
/BoxF { stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V  hpt2 0 V  0 vpt2 V
  hpt2 neg 0 V  closepath fill } def
/TriUF { stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill } def
/TriD { stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt  } def
/TriDF { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF { stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill } def
/Pent { stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt } def
/PentF { stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore } def
/Circle { stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt } def
/CircleF { stroke [] 0 setdash hpt 0 360 arc fill } def
/C0 { BL [] 0 setdash 2 copy moveto vpt 90 450  arc } bind def
/C1 { BL [] 0 setdash 2 copy        moveto
       2 copy  vpt 0 90 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C2 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 90 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C3 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C4 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 180 270 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C5 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 90 arc
       2 copy moveto
       2 copy  vpt 180 270 arc closepath fill
               vpt 0 360 arc } bind def
/C6 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 90 270 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C7 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 0 270 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C8 { BL [] 0 setdash 2 copy moveto
      2 copy vpt 270 360 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C9 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 270 450 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C10 { BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
       2 copy moveto
       2 copy vpt 90 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C11 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 180 arc closepath fill
       2 copy moveto
       2 copy  vpt 270 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C12 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 180 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C13 { BL [] 0 setdash  2 copy moveto
       2 copy  vpt 0 90 arc closepath fill
       2 copy moveto
       2 copy  vpt 180 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C14 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 90 360 arc closepath fill
               vpt 0 360 arc } bind def
/C15 { BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/Rec   { newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
       neg 0 rlineto closepath } bind def
/Square { dup Rec } bind def
/Bsquare { vpt sub exch vpt sub exch vpt2 Square } bind def
/S0 { BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare } bind def
/S1 { BL [] 0 setdash 2 copy vpt Square fill Bsquare } bind def
/S2 { BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare } bind def
/S3 { BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare } bind def
/S4 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare } bind def
/S5 { BL [] 0 setdash 2 copy 2 copy vpt Square fill
       exch vpt sub exch vpt sub vpt Square fill Bsquare } bind def
/S6 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare } bind def
/S7 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
       2 copy vpt Square fill
       Bsquare } bind def
/S8 { BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare } bind def
/S9 { BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare } bind def
/S10 { BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
       Bsquare } bind def
/S11 { BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
       Bsquare } bind def
/S12 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare } bind def
/S13 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
       2 copy vpt Square fill Bsquare } bind def
/S14 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
       2 copy exch vpt sub exch vpt Square fill Bsquare } bind def
/S15 { BL [] 0 setdash 2 copy Bsquare fill Bsquare } bind def
/D0 { gsave translate 45 rotate 0 0 S0 stroke grestore } bind def
/D1 { gsave translate 45 rotate 0 0 S1 stroke grestore } bind def
/D2 { gsave translate 45 rotate 0 0 S2 stroke grestore } bind def
/D3 { gsave translate 45 rotate 0 0 S3 stroke grestore } bind def
/D4 { gsave translate 45 rotate 0 0 S4 stroke grestore } bind def
/D5 { gsave translate 45 rotate 0 0 S5 stroke grestore } bind def
/D6 { gsave translate 45 rotate 0 0 S6 stroke grestore } bind def
/D7 { gsave translate 45 rotate 0 0 S7 stroke grestore } bind def
/D8 { gsave translate 45 rotate 0 0 S8 stroke grestore } bind def
/D9 { gsave translate 45 rotate 0 0 S9 stroke grestore } bind def
/D10 { gsave translate 45 rotate 0 0 S10 stroke grestore } bind def
/D11 { gsave translate 45 rotate 0 0 S11 stroke grestore } bind def
/D12 { gsave translate 45 rotate 0 0 S12 stroke grestore } bind def
/D13 { gsave translate 45 rotate 0 0 S13 stroke grestore } bind def
/D14 { gsave translate 45 rotate 0 0 S14 stroke grestore } bind def
/D15 { gsave translate 45 rotate 0 0 S15 stroke grestore } bind def
/DiaE { stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke } def
/BoxE { stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke } def
/TriUE { stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke } def
/TriDE { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke } def
/PentE { stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore } def
/CircE { stroke [] 0 setdash 
  hpt 0 360 arc stroke } def
/Opaque { gsave closepath 1 setgray fill grestore 0 setgray closepath } def
/DiaW { stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke } def
/BoxW { stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke } def
/TriUW { stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke } def
/TriDW { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke } def
/PentW { stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore } def
/CircW { stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke } def
/BoxFill { gsave Rec 1 setgray fill grestore } def
/MFshow {{dup dup 0 get findfont exch 1 get scalefont setfont
     [ currentpoint ] exch dup 2 get 0 exch rmoveto dup dup 5 get exch 4 get
     {show} {stringwidth pop 0 rmoveto}ifelse dup 3 get
     {2 get neg 0 exch rmoveto pop} {pop aload pop moveto}ifelse} forall} bind def
/MFwidth {0 exch {dup 3 get{dup dup 0 get findfont exch 1 get scalefont setfont
      5 get stringwidth pop add}
    {pop} ifelse} forall} bind def
/MLshow { currentpoint stroke M
  0 exch R MFshow } bind def
/MRshow { currentpoint stroke M
  exch dup MFwidth neg 3 -1 roll R MFshow } def
/MCshow { currentpoint stroke M
  exch dup MFwidth -2 div 3 -1 roll R MFshow } def
end
%%EndProlog
gnudict begin
gsave
50 50 translate
0.050 0.050 scale
0 setgray
newpath
(Times-Roman) findfont 180 scalefont setfont
1.000 UL
LTb
918 540 M
63 0 V
5913 0 R
-63 0 V
 stroke
810 540 M
[ [(Times-Roman) 180.0 0.0 true true (0)]
] -60.0 MRshow
918 1332 M
63 0 V
5913 0 R
-63 0 V
 stroke
810 1332 M
[ [(Times-Roman) 180.0 0.0 true true (500)]
] -60.0 MRshow
918 2124 M
63 0 V
5913 0 R
-63 0 V
 stroke
810 2124 M
[ [(Times-Roman) 180.0 0.0 true true (1000)]
] -60.0 MRshow
918 2916 M
63 0 V
5913 0 R
-63 0 V
 stroke
810 2916 M
[ [(Times-Roman) 180.0 0.0 true true (1500)]
] -60.0 MRshow
918 3708 M
63 0 V
5913 0 R
-63 0 V
 stroke
810 3708 M
[ [(Times-Roman) 180.0 0.0 true true (2000)]
] -60.0 MRshow
918 4500 M
63 0 V
5913 0 R
-63 0 V
 stroke
810 4500 M
[ [(Times-Roman) 180.0 0.0 true true (2500)]
] -60.0 MRshow
1250 540 M
0 63 V
0 3897 R
0 -63 V
 stroke
1250 360 M
[ [(Times-Roman) 180.0 0.0 true true (2)]
] -60.0 MCshow
1914 540 M
0 63 V
0 3897 R
0 -63 V
 stroke
1914 360 M
[ [(Times-Roman) 180.0 0.0 true true (4)]
] -60.0 MCshow
2578 540 M
0 63 V
0 3897 R
0 -63 V
 stroke
2578 360 M
[ [(Times-Roman) 180.0 0.0 true true (6)]
] -60.0 MCshow
3242 540 M
0 63 V
0 3897 R
0 -63 V
 stroke
3242 360 M
[ [(Times-Roman) 180.0 0.0 true true (8)]
] -60.0 MCshow
3906 540 M
0 63 V
0 3897 R
0 -63 V
 stroke
3906 360 M
[ [(Times-Roman) 180.0 0.0 true true (10)]
] -60.0 MCshow
4570 540 M
0 63 V
0 3897 R
0 -63 V
 stroke
4570 360 M
[ [(Times-Roman) 180.0 0.0 true true (12)]
] -60.0 MCshow
5234 540 M
0 63 V
0 3897 R
0 -63 V
 stroke
5234 360 M
[ [(Times-Roman) 180.0 0.0 true true (14)]
] -60.0 MCshow
5898 540 M
0 63 V
0 3897 R
0 -63 V
 stroke
5898 360 M
[ [(Times-Roman) 180.0 0.0 true true (16)]
] -60.0 MCshow
6562 540 M
0 63 V
0 3897 R
0 -63 V
 stroke
6562 360 M
[ [(Times-Roman) 180.0 0.0 true true (18)]
] -60.0 MCshow
1.000 UL
LTb
918 540 M
5976 0 V
0 3960 V
-5976 0 V
918 540 L
 stroke
180 2520 M
currentpoint gsave translate 90 rotate 0 0 moveto
[ [(Times-Roman) 180.0 0.0 true true (Time \(seconds\))]
] -60.0 MCshow
grestore
3906 90 M
[ [(Times-Roman) 180.0 0.0 true true (Refinement Step)]
] -60.0 MCshow
3906 4770 M
[ [(Times-Roman) 180.0 0.0 true true (Total Times for 8 Processors \(rebalance time + refinement time + solution time\))]
] -60.0 MCshow
1.000 UP
1.000 UL
LT0
6075 4347 M
[ [(Times-Roman) 180.0 0.0 true true (JOSTLE)]
] -60.0 MRshow
6183 4347 M
495 0 V
918 577 M
332 27 V
332 50 V
332 82 V
332 -35 V
332 12 V
332 69 V
332 109 V
332 188 V
332 160 V
4238 872 L
332 84 V
332 20 V
332 386 V
332 -349 V
332 -18 V
6230 893 L
332 267 V
6894 955 L
918 577 Pls
1250 604 Pls
1582 654 Pls
1914 736 Pls
2246 701 Pls
2578 713 Pls
2910 782 Pls
3242 891 Pls
3574 1079 Pls
3906 1239 Pls
4238 872 Pls
4570 956 Pls
4902 976 Pls
5234 1362 Pls
5566 1013 Pls
5898 995 Pls
6230 893 Pls
6562 1160 Pls
6894 955 Pls
6430 4347 Pls
1.000 UP
1.000 UL
LT1
6075 4167 M
[ [(Times-Roman) 180.0 0.0 true true (PARMETIS)]
] -60.0 MRshow
6183 4167 M
495 0 V
918 569 M
332 7 V
332 30 V
332 152 V
332 -43 V
332 15 V
332 93 V
332 176 V
332 169 V
332 199 V
4238 920 L
332 90 V
332 37 V
332 436 V
332 -450 V
332 32 V
6230 940 L
332 287 V
332 -176 V
918 569 Crs
1250 576 Crs
1582 606 Crs
1914 758 Crs
2246 715 Crs
2578 730 Crs
2910 823 Crs
3242 999 Crs
3574 1168 Crs
3906 1367 Crs
4238 920 Crs
4570 1010 Crs
4902 1047 Crs
5234 1483 Crs
5566 1033 Crs
5898 1065 Crs
6230 940 Crs
6562 1227 Crs
6894 1051 Crs
6430 4167 Crs
1.000 UP
1.000 UL
LT2
6075 3987 M
[ [(Times-Roman) 180.0 0.0 true true (RCB)]
] -60.0 MRshow
6183 3987 M
495 0 V
918 574 M
332 1 V
332 18 V
332 619 V
332 -188 V
332 37 V
332 271 V
332 527 V
332 534 V
332 562 V
4238 1615 L
332 251 V
332 23 V
332 1269 V
5566 1844 L
332 63 V
332 -263 V
332 800 V
332 -547 V
918 574 Star
1250 575 Star
1582 593 Star
1914 1212 Star
2246 1024 Star
2578 1061 Star
2910 1332 Star
3242 1859 Star
3574 2393 Star
3906 2955 Star
4238 1615 Star
4570 1866 Star
4902 1889 Star
5234 3158 Star
5566 1844 Star
5898 1907 Star
6230 1644 Star
6562 2444 Star
6894 1897 Star
6430 3987 Star
1.000 UP
1.000 UL
LT3
6075 3807 M
[ [(Times-Roman) 180.0 0.0 true true (RIB)]
] -60.0 MRshow
6183 3807 M
495 0 V
918 581 M
332 -4 V
332 21 V
332 256 V
332 -97 V
332 46 V
332 118 V
332 179 V
332 302 V
332 216 V
332 -544 V
332 130 V
332 33 V
332 651 V
332 -675 V
332 38 V
332 -134 V
332 450 V
332 -267 V
918 581 Box
1250 577 Box
1582 598 Box
1914 854 Box
2246 757 Box
2578 803 Box
2910 921 Box
3242 1100 Box
3574 1402 Box
3906 1618 Box
4238 1074 Box
4570 1204 Box
4902 1237 Box
5234 1888 Box
5566 1213 Box
5898 1251 Box
6230 1117 Box
6562 1567 Box
6894 1300 Box
6430 3807 Box
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Times-Roman

%%EndDocument
 @endspecial 25328 w @beginspecial 50 @llx 50 @lly 410
@urx 302 @ury 2160 @rwi @setspecial
%%BeginDocument: graphs/solverAverages/times/time_refinement/total-times-20.eps
%!PS-Adobe-2.0 EPSF-2.0
%%Title: total-times-20.eps
%%Creator: gnuplot 3.7 patchlevel 0
%%CreationDate: Thu Aug 15 11:09:36 2002
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 410 302
%%Orientation: Portrait
%%EndComments
/gnudict 256 dict def
gnudict begin
/Color false def
/Solid false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
/vshift -60 def
/dl {10 mul} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow { currentpoint stroke M
  0 vshift R show } def
/Rshow { currentpoint stroke M
  dup stringwidth pop neg vshift R show } def
/Cshow { currentpoint stroke M
  dup stringwidth pop -2 div vshift R show } def
/UP { dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def } def
/DL { Color {setrgbcolor Solid {pop []} if 0 setdash }
 {pop pop pop Solid {pop []} if 0 setdash} ifelse } def
/BL { stroke gnulinewidth 2 mul setlinewidth } def
/AL { stroke gnulinewidth 2 div setlinewidth } def
/UL { gnulinewidth mul /userlinewidth exch def } def
/PL { stroke userlinewidth setlinewidth } def
/LTb { BL [] 0 0 0 DL } def
/LTa { AL [1 dl 2 dl] 0 setdash 0 0 0 setrgbcolor } def
/LT0 { PL [] 1 0 0 DL } def
/LT1 { PL [4 dl 2 dl] 0 1 0 DL } def
/LT2 { PL [2 dl 3 dl] 0 0 1 DL } def
/LT3 { PL [1 dl 1.5 dl] 1 0 1 DL } def
/LT4 { PL [5 dl 2 dl 1 dl 2 dl] 0 1 1 DL } def
/LT5 { PL [4 dl 3 dl 1 dl 3 dl] 1 1 0 DL } def
/LT6 { PL [2 dl 2 dl 2 dl 4 dl] 0 0 0 DL } def
/LT7 { PL [2 dl 2 dl 2 dl 2 dl 2 dl 4 dl] 1 0.3 0 DL } def
/LT8 { PL [2 dl 2 dl 2 dl 2 dl 2 dl 2 dl 2 dl 4 dl] 0.5 0.5 0.5 DL } def
/Pnt { stroke [] 0 setdash
   gsave 1 setlinecap M 0 0 V stroke grestore } def
/Dia { stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt } def
/Pls { stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
  } def
/Box { stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt } def
/Crs { stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke } def
/TriU { stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt  } def
/Star { 2 copy Pls Crs } def
/BoxF { stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V  hpt2 0 V  0 vpt2 V
  hpt2 neg 0 V  closepath fill } def
/TriUF { stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill } def
/TriD { stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt  } def
/TriDF { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF { stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill } def
/Pent { stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt } def
/PentF { stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore } def
/Circle { stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt } def
/CircleF { stroke [] 0 setdash hpt 0 360 arc fill } def
/C0 { BL [] 0 setdash 2 copy moveto vpt 90 450  arc } bind def
/C1 { BL [] 0 setdash 2 copy        moveto
       2 copy  vpt 0 90 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C2 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 90 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C3 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C4 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 180 270 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C5 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 90 arc
       2 copy moveto
       2 copy  vpt 180 270 arc closepath fill
               vpt 0 360 arc } bind def
/C6 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 90 270 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C7 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 0 270 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C8 { BL [] 0 setdash 2 copy moveto
      2 copy vpt 270 360 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C9 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 270 450 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C10 { BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
       2 copy moveto
       2 copy vpt 90 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C11 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 180 arc closepath fill
       2 copy moveto
       2 copy  vpt 270 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C12 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 180 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C13 { BL [] 0 setdash  2 copy moveto
       2 copy  vpt 0 90 arc closepath fill
       2 copy moveto
       2 copy  vpt 180 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C14 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 90 360 arc closepath fill
               vpt 0 360 arc } bind def
/C15 { BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/Rec   { newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
       neg 0 rlineto closepath } bind def
/Square { dup Rec } bind def
/Bsquare { vpt sub exch vpt sub exch vpt2 Square } bind def
/S0 { BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare } bind def
/S1 { BL [] 0 setdash 2 copy vpt Square fill Bsquare } bind def
/S2 { BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare } bind def
/S3 { BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare } bind def
/S4 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare } bind def
/S5 { BL [] 0 setdash 2 copy 2 copy vpt Square fill
       exch vpt sub exch vpt sub vpt Square fill Bsquare } bind def
/S6 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare } bind def
/S7 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
       2 copy vpt Square fill
       Bsquare } bind def
/S8 { BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare } bind def
/S9 { BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare } bind def
/S10 { BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
       Bsquare } bind def
/S11 { BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
       Bsquare } bind def
/S12 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare } bind def
/S13 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
       2 copy vpt Square fill Bsquare } bind def
/S14 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
       2 copy exch vpt sub exch vpt Square fill Bsquare } bind def
/S15 { BL [] 0 setdash 2 copy Bsquare fill Bsquare } bind def
/D0 { gsave translate 45 rotate 0 0 S0 stroke grestore } bind def
/D1 { gsave translate 45 rotate 0 0 S1 stroke grestore } bind def
/D2 { gsave translate 45 rotate 0 0 S2 stroke grestore } bind def
/D3 { gsave translate 45 rotate 0 0 S3 stroke grestore } bind def
/D4 { gsave translate 45 rotate 0 0 S4 stroke grestore } bind def
/D5 { gsave translate 45 rotate 0 0 S5 stroke grestore } bind def
/D6 { gsave translate 45 rotate 0 0 S6 stroke grestore } bind def
/D7 { gsave translate 45 rotate 0 0 S7 stroke grestore } bind def
/D8 { gsave translate 45 rotate 0 0 S8 stroke grestore } bind def
/D9 { gsave translate 45 rotate 0 0 S9 stroke grestore } bind def
/D10 { gsave translate 45 rotate 0 0 S10 stroke grestore } bind def
/D11 { gsave translate 45 rotate 0 0 S11 stroke grestore } bind def
/D12 { gsave translate 45 rotate 0 0 S12 stroke grestore } bind def
/D13 { gsave translate 45 rotate 0 0 S13 stroke grestore } bind def
/D14 { gsave translate 45 rotate 0 0 S14 stroke grestore } bind def
/D15 { gsave translate 45 rotate 0 0 S15 stroke grestore } bind def
/DiaE { stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke } def
/BoxE { stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke } def
/TriUE { stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke } def
/TriDE { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke } def
/PentE { stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore } def
/CircE { stroke [] 0 setdash 
  hpt 0 360 arc stroke } def
/Opaque { gsave closepath 1 setgray fill grestore 0 setgray closepath } def
/DiaW { stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke } def
/BoxW { stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke } def
/TriUW { stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke } def
/TriDW { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke } def
/PentW { stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore } def
/CircW { stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke } def
/BoxFill { gsave Rec 1 setgray fill grestore } def
/MFshow {{dup dup 0 get findfont exch 1 get scalefont setfont
     [ currentpoint ] exch dup 2 get 0 exch rmoveto dup dup 5 get exch 4 get
     {show} {stringwidth pop 0 rmoveto}ifelse dup 3 get
     {2 get neg 0 exch rmoveto pop} {pop aload pop moveto}ifelse} forall} bind def
/MFwidth {0 exch {dup 3 get{dup dup 0 get findfont exch 1 get scalefont setfont
      5 get stringwidth pop add}
    {pop} ifelse} forall} bind def
/MLshow { currentpoint stroke M
  0 exch R MFshow } bind def
/MRshow { currentpoint stroke M
  exch dup MFwidth neg 3 -1 roll R MFshow } def
/MCshow { currentpoint stroke M
  exch dup MFwidth -2 div 3 -1 roll R MFshow } def
end
%%EndProlog
gnudict begin
gsave
50 50 translate
0.050 0.050 scale
0 setgray
newpath
(Times-Roman) findfont 180 scalefont setfont
1.000 UL
LTb
918 540 M
63 0 V
5913 0 R
-63 0 V
 stroke
810 540 M
[ [(Times-Roman) 180.0 0.0 true true (0)]
] -60.0 MRshow
918 1332 M
63 0 V
5913 0 R
-63 0 V
 stroke
810 1332 M
[ [(Times-Roman) 180.0 0.0 true true (500)]
] -60.0 MRshow
918 2124 M
63 0 V
5913 0 R
-63 0 V
 stroke
810 2124 M
[ [(Times-Roman) 180.0 0.0 true true (1000)]
] -60.0 MRshow
918 2916 M
63 0 V
5913 0 R
-63 0 V
 stroke
810 2916 M
[ [(Times-Roman) 180.0 0.0 true true (1500)]
] -60.0 MRshow
918 3708 M
63 0 V
5913 0 R
-63 0 V
 stroke
810 3708 M
[ [(Times-Roman) 180.0 0.0 true true (2000)]
] -60.0 MRshow
918 4500 M
63 0 V
5913 0 R
-63 0 V
 stroke
810 4500 M
[ [(Times-Roman) 180.0 0.0 true true (2500)]
] -60.0 MRshow
1250 540 M
0 63 V
0 3897 R
0 -63 V
 stroke
1250 360 M
[ [(Times-Roman) 180.0 0.0 true true (2)]
] -60.0 MCshow
1914 540 M
0 63 V
0 3897 R
0 -63 V
 stroke
1914 360 M
[ [(Times-Roman) 180.0 0.0 true true (4)]
] -60.0 MCshow
2578 540 M
0 63 V
0 3897 R
0 -63 V
 stroke
2578 360 M
[ [(Times-Roman) 180.0 0.0 true true (6)]
] -60.0 MCshow
3242 540 M
0 63 V
0 3897 R
0 -63 V
 stroke
3242 360 M
[ [(Times-Roman) 180.0 0.0 true true (8)]
] -60.0 MCshow
3906 540 M
0 63 V
0 3897 R
0 -63 V
 stroke
3906 360 M
[ [(Times-Roman) 180.0 0.0 true true (10)]
] -60.0 MCshow
4570 540 M
0 63 V
0 3897 R
0 -63 V
 stroke
4570 360 M
[ [(Times-Roman) 180.0 0.0 true true (12)]
] -60.0 MCshow
5234 540 M
0 63 V
0 3897 R
0 -63 V
 stroke
5234 360 M
[ [(Times-Roman) 180.0 0.0 true true (14)]
] -60.0 MCshow
5898 540 M
0 63 V
0 3897 R
0 -63 V
 stroke
5898 360 M
[ [(Times-Roman) 180.0 0.0 true true (16)]
] -60.0 MCshow
6562 540 M
0 63 V
0 3897 R
0 -63 V
 stroke
6562 360 M
[ [(Times-Roman) 180.0 0.0 true true (18)]
] -60.0 MCshow
1.000 UL
LTb
918 540 M
5976 0 V
0 3960 V
-5976 0 V
918 540 L
 stroke
180 2520 M
currentpoint gsave translate 90 rotate 0 0 moveto
[ [(Times-Roman) 180.0 0.0 true true (Time \(seconds\))]
] -60.0 MCshow
grestore
3906 90 M
[ [(Times-Roman) 180.0 0.0 true true (Refinement Step)]
] -60.0 MCshow
3906 4770 M
[ [(Times-Roman) 180.0 0.0 true true (Total Times for 20 Processors \(rebalance time + refinement time + solution time\))]
] -60.0 MCshow
1.000 UP
1.000 UL
LT0
6075 4347 M
[ [(Times-Roman) 180.0 0.0 true true (JOSTLE)]
] -60.0 MRshow
6183 4347 M
495 0 V
918 571 M
332 32 V
332 35 V
332 85 V
332 -31 V
332 12 V
332 82 V
332 85 V
332 202 V
332 91 V
4238 842 L
332 113 V
332 11 V
332 307 V
5566 889 L
332 30 V
332 19 V
332 131 V
6894 958 L
918 571 Pls
1250 603 Pls
1582 638 Pls
1914 723 Pls
2246 692 Pls
2578 704 Pls
2910 786 Pls
3242 871 Pls
3574 1073 Pls
3906 1164 Pls
4238 842 Pls
4570 955 Pls
4902 966 Pls
5234 1273 Pls
5566 889 Pls
5898 919 Pls
6230 938 Pls
6562 1069 Pls
6894 958 Pls
6430 4347 Pls
1.000 UP
1.000 UL
LT1
6075 4167 M
[ [(Times-Roman) 180.0 0.0 true true (PARMETIS)]
] -60.0 MRshow
6183 4167 M
495 0 V
918 560 M
332 18 V
332 9 V
332 148 V
332 -26 V
332 11 V
332 87 V
332 173 V
332 174 V
332 214 V
4238 906 L
332 87 V
332 33 V
332 415 V
332 -433 V
332 28 V
6230 920 L
332 266 V
332 -174 V
918 560 Crs
1250 578 Crs
1582 587 Crs
1914 735 Crs
2246 709 Crs
2578 720 Crs
2910 807 Crs
3242 980 Crs
3574 1154 Crs
3906 1368 Crs
4238 906 Crs
4570 993 Crs
4902 1026 Crs
5234 1441 Crs
5566 1008 Crs
5898 1036 Crs
6230 920 Crs
6562 1186 Crs
6894 1012 Crs
6430 4167 Crs
1.000 UP
1.000 UL
LT2
6075 3987 M
[ [(Times-Roman) 180.0 0.0 true true (RCB)]
] -60.0 MRshow
6183 3987 M
495 0 V
918 578 M
332 2 V
332 16 V
332 559 V
332 -57 V
332 39 V
332 308 V
332 567 V
332 578 V
332 634 V
4238 1515 L
332 223 V
332 43 V
332 1215 V
5566 1650 L
332 101 V
332 -258 V
332 708 V
332 -460 V
918 578 Star
1250 580 Star
1582 596 Star
1914 1155 Star
2246 1098 Star
2578 1137 Star
2910 1445 Star
3242 2012 Star
3574 2590 Star
3906 3224 Star
4238 1515 Star
4570 1738 Star
4902 1781 Star
5234 2996 Star
5566 1650 Star
5898 1751 Star
6230 1493 Star
6562 2201 Star
6894 1741 Star
6430 3987 Star
1.000 UP
1.000 UL
LT3
6075 3807 M
[ [(Times-Roman) 180.0 0.0 true true (RIB)]
] -60.0 MRshow
6183 3807 M
495 0 V
918 569 M
332 9 V
332 15 V
332 407 V
332 22 V
332 40 V
332 201 V
332 287 V
332 436 V
332 466 V
4238 1375 L
332 231 V
332 -7 V
332 1056 V
5566 1576 L
332 75 V
332 -206 V
332 711 V
332 -422 V
918 569 Box
1250 578 Box
1582 593 Box
1914 1000 Box
2246 1022 Box
2578 1062 Box
2910 1263 Box
3242 1550 Box
3574 1986 Box
3906 2452 Box
4238 1375 Box
4570 1606 Box
4902 1599 Box
5234 2655 Box
5566 1576 Box
5898 1651 Box
6230 1445 Box
6562 2156 Box
6894 1734 Box
6430 3807 Box
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Times-Roman

%%EndDocument
 @endspecial 51523 17422 V 888 17466 50657 45 v 0 19680
a Fk(Figure)520 b(8:)751 b(T)-108 b(otal)520 b(analysis)h(times)f
(\(time)g(to)g(solution\))f(b)-36 b(y)520 b(adaptiv)-36
b(e)520 b(re\257nemen)-36 b(t)518 b(step)h(for)i(the)e(p)36
b(er-)0 21285 y(forated)567 b(sho)36 b(c)-36 b(k)567
b(tub)36 b(e)566 b(on)h(8)g(\(left\))g(and)f(20)i(\(righ)-36
b(t\))566 b(pro)36 b(cesses.)978 b(These)567 b(graphs)f(sum)g(the)h
(times)f(for)0 22890 y(rebalancing,)434 b(re\257nemen)-36
b(t,)432 b(and)h(solution)h(that)f(are)h(sho)-36 b(wn)434
b(in)f(Figure)g(7.)p 888 24078 V 866 41360 45 17282 v
1553 40878 a @beginspecial 50 @llx 50 @lly 410 @urx 302
@ury 2160 @rwi @setspecial
%%BeginDocument: graphs/solverAverages/times/time_processors/total_bal_time.eps
%!PS-Adobe-2.0 EPSF-2.0
%%Title: total_bal_time.eps
%%Creator: gnuplot 3.7 patchlevel 0
%%CreationDate: Thu Aug 15 11:00:08 2002
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 410 302
%%Orientation: Portrait
%%EndComments
/gnudict 256 dict def
gnudict begin
/Color false def
/Solid false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
/vshift -60 def
/dl {10 mul} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow { currentpoint stroke M
  0 vshift R show } def
/Rshow { currentpoint stroke M
  dup stringwidth pop neg vshift R show } def
/Cshow { currentpoint stroke M
  dup stringwidth pop -2 div vshift R show } def
/UP { dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def } def
/DL { Color {setrgbcolor Solid {pop []} if 0 setdash }
 {pop pop pop Solid {pop []} if 0 setdash} ifelse } def
/BL { stroke gnulinewidth 2 mul setlinewidth } def
/AL { stroke gnulinewidth 2 div setlinewidth } def
/UL { gnulinewidth mul /userlinewidth exch def } def
/PL { stroke userlinewidth setlinewidth } def
/LTb { BL [] 0 0 0 DL } def
/LTa { AL [1 dl 2 dl] 0 setdash 0 0 0 setrgbcolor } def
/LT0 { PL [] 1 0 0 DL } def
/LT1 { PL [4 dl 2 dl] 0 1 0 DL } def
/LT2 { PL [2 dl 3 dl] 0 0 1 DL } def
/LT3 { PL [1 dl 1.5 dl] 1 0 1 DL } def
/LT4 { PL [5 dl 2 dl 1 dl 2 dl] 0 1 1 DL } def
/LT5 { PL [4 dl 3 dl 1 dl 3 dl] 1 1 0 DL } def
/LT6 { PL [2 dl 2 dl 2 dl 4 dl] 0 0 0 DL } def
/LT7 { PL [2 dl 2 dl 2 dl 2 dl 2 dl 4 dl] 1 0.3 0 DL } def
/LT8 { PL [2 dl 2 dl 2 dl 2 dl 2 dl 2 dl 2 dl 4 dl] 0.5 0.5 0.5 DL } def
/Pnt { stroke [] 0 setdash
   gsave 1 setlinecap M 0 0 V stroke grestore } def
/Dia { stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt } def
/Pls { stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
  } def
/Box { stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt } def
/Crs { stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke } def
/TriU { stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt  } def
/Star { 2 copy Pls Crs } def
/BoxF { stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V  hpt2 0 V  0 vpt2 V
  hpt2 neg 0 V  closepath fill } def
/TriUF { stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill } def
/TriD { stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt  } def
/TriDF { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF { stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill } def
/Pent { stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt } def
/PentF { stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore } def
/Circle { stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt } def
/CircleF { stroke [] 0 setdash hpt 0 360 arc fill } def
/C0 { BL [] 0 setdash 2 copy moveto vpt 90 450  arc } bind def
/C1 { BL [] 0 setdash 2 copy        moveto
       2 copy  vpt 0 90 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C2 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 90 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C3 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C4 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 180 270 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C5 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 90 arc
       2 copy moveto
       2 copy  vpt 180 270 arc closepath fill
               vpt 0 360 arc } bind def
/C6 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 90 270 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C7 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 0 270 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C8 { BL [] 0 setdash 2 copy moveto
      2 copy vpt 270 360 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C9 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 270 450 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C10 { BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
       2 copy moveto
       2 copy vpt 90 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C11 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 180 arc closepath fill
       2 copy moveto
       2 copy  vpt 270 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C12 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 180 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C13 { BL [] 0 setdash  2 copy moveto
       2 copy  vpt 0 90 arc closepath fill
       2 copy moveto
       2 copy  vpt 180 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C14 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 90 360 arc closepath fill
               vpt 0 360 arc } bind def
/C15 { BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/Rec   { newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
       neg 0 rlineto closepath } bind def
/Square { dup Rec } bind def
/Bsquare { vpt sub exch vpt sub exch vpt2 Square } bind def
/S0 { BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare } bind def
/S1 { BL [] 0 setdash 2 copy vpt Square fill Bsquare } bind def
/S2 { BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare } bind def
/S3 { BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare } bind def
/S4 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare } bind def
/S5 { BL [] 0 setdash 2 copy 2 copy vpt Square fill
       exch vpt sub exch vpt sub vpt Square fill Bsquare } bind def
/S6 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare } bind def
/S7 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
       2 copy vpt Square fill
       Bsquare } bind def
/S8 { BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare } bind def
/S9 { BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare } bind def
/S10 { BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
       Bsquare } bind def
/S11 { BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
       Bsquare } bind def
/S12 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare } bind def
/S13 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
       2 copy vpt Square fill Bsquare } bind def
/S14 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
       2 copy exch vpt sub exch vpt Square fill Bsquare } bind def
/S15 { BL [] 0 setdash 2 copy Bsquare fill Bsquare } bind def
/D0 { gsave translate 45 rotate 0 0 S0 stroke grestore } bind def
/D1 { gsave translate 45 rotate 0 0 S1 stroke grestore } bind def
/D2 { gsave translate 45 rotate 0 0 S2 stroke grestore } bind def
/D3 { gsave translate 45 rotate 0 0 S3 stroke grestore } bind def
/D4 { gsave translate 45 rotate 0 0 S4 stroke grestore } bind def
/D5 { gsave translate 45 rotate 0 0 S5 stroke grestore } bind def
/D6 { gsave translate 45 rotate 0 0 S6 stroke grestore } bind def
/D7 { gsave translate 45 rotate 0 0 S7 stroke grestore } bind def
/D8 { gsave translate 45 rotate 0 0 S8 stroke grestore } bind def
/D9 { gsave translate 45 rotate 0 0 S9 stroke grestore } bind def
/D10 { gsave translate 45 rotate 0 0 S10 stroke grestore } bind def
/D11 { gsave translate 45 rotate 0 0 S11 stroke grestore } bind def
/D12 { gsave translate 45 rotate 0 0 S12 stroke grestore } bind def
/D13 { gsave translate 45 rotate 0 0 S13 stroke grestore } bind def
/D14 { gsave translate 45 rotate 0 0 S14 stroke grestore } bind def
/D15 { gsave translate 45 rotate 0 0 S15 stroke grestore } bind def
/DiaE { stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke } def
/BoxE { stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke } def
/TriUE { stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke } def
/TriDE { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke } def
/PentE { stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore } def
/CircE { stroke [] 0 setdash 
  hpt 0 360 arc stroke } def
/Opaque { gsave closepath 1 setgray fill grestore 0 setgray closepath } def
/DiaW { stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke } def
/BoxW { stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke } def
/TriUW { stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke } def
/TriDW { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke } def
/PentW { stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore } def
/CircW { stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke } def
/BoxFill { gsave Rec 1 setgray fill grestore } def
/MFshow {{dup dup 0 get findfont exch 1 get scalefont setfont
     [ currentpoint ] exch dup 2 get 0 exch rmoveto dup dup 5 get exch 4 get
     {show} {stringwidth pop 0 rmoveto}ifelse dup 3 get
     {2 get neg 0 exch rmoveto pop} {pop aload pop moveto}ifelse} forall} bind def
/MFwidth {0 exch {dup 3 get{dup dup 0 get findfont exch 1 get scalefont setfont
      5 get stringwidth pop add}
    {pop} ifelse} forall} bind def
/MLshow { currentpoint stroke M
  0 exch R MFshow } bind def
/MRshow { currentpoint stroke M
  exch dup MFwidth neg 3 -1 roll R MFshow } def
/MCshow { currentpoint stroke M
  exch dup MFwidth -2 div 3 -1 roll R MFshow } def
end
%%EndProlog
gnudict begin
gsave
50 50 translate
0.050 0.050 scale
0 setgray
newpath
(Times-Roman) findfont 180 scalefont setfont
1.000 UL
LTb
918 540 M
63 0 V
5913 0 R
-63 0 V
 stroke
810 540 M
[ [(Times-Roman) 180.0 0.0 true true (0)]
] -60.0 MRshow
918 1106 M
63 0 V
5913 0 R
-63 0 V
 stroke
810 1106 M
[ [(Times-Roman) 180.0 0.0 true true (200)]
] -60.0 MRshow
918 1671 M
63 0 V
5913 0 R
-63 0 V
 stroke
810 1671 M
[ [(Times-Roman) 180.0 0.0 true true (400)]
] -60.0 MRshow
918 2237 M
63 0 V
5913 0 R
-63 0 V
 stroke
810 2237 M
[ [(Times-Roman) 180.0 0.0 true true (600)]
] -60.0 MRshow
918 2803 M
63 0 V
5913 0 R
-63 0 V
 stroke
810 2803 M
[ [(Times-Roman) 180.0 0.0 true true (800)]
] -60.0 MRshow
918 3369 M
63 0 V
5913 0 R
-63 0 V
 stroke
810 3369 M
[ [(Times-Roman) 180.0 0.0 true true (1000)]
] -60.0 MRshow
918 3934 M
63 0 V
5913 0 R
-63 0 V
 stroke
810 3934 M
[ [(Times-Roman) 180.0 0.0 true true (1200)]
] -60.0 MRshow
918 4500 M
63 0 V
5913 0 R
-63 0 V
 stroke
810 4500 M
[ [(Times-Roman) 180.0 0.0 true true (1400)]
] -60.0 MRshow
918 540 M
0 63 V
0 3897 R
0 -63 V
 stroke
918 360 M
[ [(Times-Roman) 180.0 0.0 true true (4)]
] -60.0 MCshow
1665 540 M
0 63 V
0 3897 R
0 -63 V
 stroke
1665 360 M
[ [(Times-Roman) 180.0 0.0 true true (6)]
] -60.0 MCshow
2412 540 M
0 63 V
0 3897 R
0 -63 V
 stroke
2412 360 M
[ [(Times-Roman) 180.0 0.0 true true (8)]
] -60.0 MCshow
3159 540 M
0 63 V
0 3897 R
0 -63 V
 stroke
3159 360 M
[ [(Times-Roman) 180.0 0.0 true true (10)]
] -60.0 MCshow
3906 540 M
0 63 V
0 3897 R
0 -63 V
 stroke
3906 360 M
[ [(Times-Roman) 180.0 0.0 true true (12)]
] -60.0 MCshow
4653 540 M
0 63 V
0 3897 R
0 -63 V
 stroke
4653 360 M
[ [(Times-Roman) 180.0 0.0 true true (14)]
] -60.0 MCshow
5400 540 M
0 63 V
0 3897 R
0 -63 V
 stroke
5400 360 M
[ [(Times-Roman) 180.0 0.0 true true (16)]
] -60.0 MCshow
6147 540 M
0 63 V
0 3897 R
0 -63 V
 stroke
6147 360 M
[ [(Times-Roman) 180.0 0.0 true true (18)]
] -60.0 MCshow
6894 540 M
0 63 V
0 3897 R
0 -63 V
 stroke
6894 360 M
[ [(Times-Roman) 180.0 0.0 true true (20)]
] -60.0 MCshow
1.000 UL
LTb
918 540 M
5976 0 V
0 3960 V
-5976 0 V
918 540 L
 stroke
180 2520 M
currentpoint gsave translate 90 rotate 0 0 moveto
[ [(Times-Roman) 180.0 0.0 true true (Time \(seconds\))]
] -60.0 MCshow
grestore
3906 90 M
[ [(Times-Roman) 180.0 0.0 true true (Number of Processors)]
] -60.0 MCshow
3906 4770 M
[ [(Times-Roman) 180.0 0.0 true true (Total Bal Time)]
] -60.0 MCshow
1.000 UP
1.000 UL
LT0
6075 4347 M
[ [(Times-Roman) 180.0 0.0 true true (JOSTLE)]
] -60.0 MRshow
6183 4347 M
495 0 V
918 1852 M
1494 318 V
747 1780 V
747 384 V
4653 2533 L
747 640 V
747 -193 V
747 -175 V
918 1852 Pls
2412 2170 Pls
3159 3950 Pls
3906 4334 Pls
4653 2533 Pls
5400 3173 Pls
6147 2980 Pls
6894 2805 Pls
6430 4347 Pls
1.000 UP
1.000 UL
LT1
6075 4167 M
[ [(Times-Roman) 180.0 0.0 true true (PARMETIS)]
] -60.0 MRshow
6183 4167 M
495 0 V
918 1022 M
2412 947 L
747 25 V
747 -47 V
747 14 V
747 18 V
747 -5 V
747 -14 V
918 1022 Crs
2412 947 Crs
3159 972 Crs
3906 925 Crs
4653 939 Crs
5400 957 Crs
6147 952 Crs
6894 938 Crs
6430 4167 Crs
1.000 UP
1.000 UL
LT2
6075 3987 M
[ [(Times-Roman) 180.0 0.0 true true (RCB)]
] -60.0 MRshow
6183 3987 M
495 0 V
918 989 M
2412 955 L
747 115 V
747 -30 V
747 13 V
747 -37 V
747 26 V
747 20 V
918 989 Star
2412 955 Star
3159 1070 Star
3906 1040 Star
4653 1053 Star
5400 1016 Star
6147 1042 Star
6894 1062 Star
6430 3987 Star
1.000 UP
1.000 UL
LT3
6075 3807 M
[ [(Times-Roman) 180.0 0.0 true true (RIB)]
] -60.0 MRshow
6183 3807 M
495 0 V
918 1250 M
1494 -85 V
747 166 V
747 13 V
747 -57 V
747 -5 V
747 -28 V
747 9 V
918 1250 Box
2412 1165 Box
3159 1331 Box
3906 1344 Box
4653 1287 Box
5400 1282 Box
6147 1254 Box
6894 1263 Box
6430 3807 Box
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Times-Roman

%%EndDocument
 @endspecial 25328 w @beginspecial 50 @llx 50 @lly 410
@urx 302 @ury 2160 @rwi @setspecial
%%BeginDocument: graphs/solverAverages/times/time_processors/total_ref_time.eps
%!PS-Adobe-2.0 EPSF-2.0
%%Title: total_ref_time.eps
%%Creator: gnuplot 3.7 patchlevel 0
%%CreationDate: Thu Aug 15 11:08:06 2002
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 410 302
%%Orientation: Portrait
%%EndComments
/gnudict 256 dict def
gnudict begin
/Color false def
/Solid false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
/vshift -60 def
/dl {10 mul} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow { currentpoint stroke M
  0 vshift R show } def
/Rshow { currentpoint stroke M
  dup stringwidth pop neg vshift R show } def
/Cshow { currentpoint stroke M
  dup stringwidth pop -2 div vshift R show } def
/UP { dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def } def
/DL { Color {setrgbcolor Solid {pop []} if 0 setdash }
 {pop pop pop Solid {pop []} if 0 setdash} ifelse } def
/BL { stroke gnulinewidth 2 mul setlinewidth } def
/AL { stroke gnulinewidth 2 div setlinewidth } def
/UL { gnulinewidth mul /userlinewidth exch def } def
/PL { stroke userlinewidth setlinewidth } def
/LTb { BL [] 0 0 0 DL } def
/LTa { AL [1 dl 2 dl] 0 setdash 0 0 0 setrgbcolor } def
/LT0 { PL [] 1 0 0 DL } def
/LT1 { PL [4 dl 2 dl] 0 1 0 DL } def
/LT2 { PL [2 dl 3 dl] 0 0 1 DL } def
/LT3 { PL [1 dl 1.5 dl] 1 0 1 DL } def
/LT4 { PL [5 dl 2 dl 1 dl 2 dl] 0 1 1 DL } def
/LT5 { PL [4 dl 3 dl 1 dl 3 dl] 1 1 0 DL } def
/LT6 { PL [2 dl 2 dl 2 dl 4 dl] 0 0 0 DL } def
/LT7 { PL [2 dl 2 dl 2 dl 2 dl 2 dl 4 dl] 1 0.3 0 DL } def
/LT8 { PL [2 dl 2 dl 2 dl 2 dl 2 dl 2 dl 2 dl 4 dl] 0.5 0.5 0.5 DL } def
/Pnt { stroke [] 0 setdash
   gsave 1 setlinecap M 0 0 V stroke grestore } def
/Dia { stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt } def
/Pls { stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
  } def
/Box { stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt } def
/Crs { stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke } def
/TriU { stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt  } def
/Star { 2 copy Pls Crs } def
/BoxF { stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V  hpt2 0 V  0 vpt2 V
  hpt2 neg 0 V  closepath fill } def
/TriUF { stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill } def
/TriD { stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt  } def
/TriDF { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF { stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill } def
/Pent { stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt } def
/PentF { stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore } def
/Circle { stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt } def
/CircleF { stroke [] 0 setdash hpt 0 360 arc fill } def
/C0 { BL [] 0 setdash 2 copy moveto vpt 90 450  arc } bind def
/C1 { BL [] 0 setdash 2 copy        moveto
       2 copy  vpt 0 90 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C2 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 90 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C3 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C4 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 180 270 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C5 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 90 arc
       2 copy moveto
       2 copy  vpt 180 270 arc closepath fill
               vpt 0 360 arc } bind def
/C6 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 90 270 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C7 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 0 270 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C8 { BL [] 0 setdash 2 copy moveto
      2 copy vpt 270 360 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C9 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 270 450 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C10 { BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
       2 copy moveto
       2 copy vpt 90 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C11 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 180 arc closepath fill
       2 copy moveto
       2 copy  vpt 270 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C12 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 180 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C13 { BL [] 0 setdash  2 copy moveto
       2 copy  vpt 0 90 arc closepath fill
       2 copy moveto
       2 copy  vpt 180 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C14 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 90 360 arc closepath fill
               vpt 0 360 arc } bind def
/C15 { BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/Rec   { newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
       neg 0 rlineto closepath } bind def
/Square { dup Rec } bind def
/Bsquare { vpt sub exch vpt sub exch vpt2 Square } bind def
/S0 { BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare } bind def
/S1 { BL [] 0 setdash 2 copy vpt Square fill Bsquare } bind def
/S2 { BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare } bind def
/S3 { BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare } bind def
/S4 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare } bind def
/S5 { BL [] 0 setdash 2 copy 2 copy vpt Square fill
       exch vpt sub exch vpt sub vpt Square fill Bsquare } bind def
/S6 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare } bind def
/S7 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
       2 copy vpt Square fill
       Bsquare } bind def
/S8 { BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare } bind def
/S9 { BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare } bind def
/S10 { BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
       Bsquare } bind def
/S11 { BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
       Bsquare } bind def
/S12 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare } bind def
/S13 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
       2 copy vpt Square fill Bsquare } bind def
/S14 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
       2 copy exch vpt sub exch vpt Square fill Bsquare } bind def
/S15 { BL [] 0 setdash 2 copy Bsquare fill Bsquare } bind def
/D0 { gsave translate 45 rotate 0 0 S0 stroke grestore } bind def
/D1 { gsave translate 45 rotate 0 0 S1 stroke grestore } bind def
/D2 { gsave translate 45 rotate 0 0 S2 stroke grestore } bind def
/D3 { gsave translate 45 rotate 0 0 S3 stroke grestore } bind def
/D4 { gsave translate 45 rotate 0 0 S4 stroke grestore } bind def
/D5 { gsave translate 45 rotate 0 0 S5 stroke grestore } bind def
/D6 { gsave translate 45 rotate 0 0 S6 stroke grestore } bind def
/D7 { gsave translate 45 rotate 0 0 S7 stroke grestore } bind def
/D8 { gsave translate 45 rotate 0 0 S8 stroke grestore } bind def
/D9 { gsave translate 45 rotate 0 0 S9 stroke grestore } bind def
/D10 { gsave translate 45 rotate 0 0 S10 stroke grestore } bind def
/D11 { gsave translate 45 rotate 0 0 S11 stroke grestore } bind def
/D12 { gsave translate 45 rotate 0 0 S12 stroke grestore } bind def
/D13 { gsave translate 45 rotate 0 0 S13 stroke grestore } bind def
/D14 { gsave translate 45 rotate 0 0 S14 stroke grestore } bind def
/D15 { gsave translate 45 rotate 0 0 S15 stroke grestore } bind def
/DiaE { stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke } def
/BoxE { stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke } def
/TriUE { stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke } def
/TriDE { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke } def
/PentE { stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore } def
/CircE { stroke [] 0 setdash 
  hpt 0 360 arc stroke } def
/Opaque { gsave closepath 1 setgray fill grestore 0 setgray closepath } def
/DiaW { stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke } def
/BoxW { stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke } def
/TriUW { stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke } def
/TriDW { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke } def
/PentW { stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore } def
/CircW { stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke } def
/BoxFill { gsave Rec 1 setgray fill grestore } def
/MFshow {{dup dup 0 get findfont exch 1 get scalefont setfont
     [ currentpoint ] exch dup 2 get 0 exch rmoveto dup dup 5 get exch 4 get
     {show} {stringwidth pop 0 rmoveto}ifelse dup 3 get
     {2 get neg 0 exch rmoveto pop} {pop aload pop moveto}ifelse} forall} bind def
/MFwidth {0 exch {dup 3 get{dup dup 0 get findfont exch 1 get scalefont setfont
      5 get stringwidth pop add}
    {pop} ifelse} forall} bind def
/MLshow { currentpoint stroke M
  0 exch R MFshow } bind def
/MRshow { currentpoint stroke M
  exch dup MFwidth neg 3 -1 roll R MFshow } def
/MCshow { currentpoint stroke M
  exch dup MFwidth -2 div 3 -1 roll R MFshow } def
end
%%EndProlog
gnudict begin
gsave
50 50 translate
0.050 0.050 scale
0 setgray
newpath
(Times-Roman) findfont 180 scalefont setfont
1.000 UL
LTb
810 540 M
63 0 V
6021 0 R
-63 0 V
 stroke
702 540 M
[ [(Times-Roman) 180.0 0.0 true true (100)]
] -60.0 MRshow
810 1106 M
63 0 V
6021 0 R
-63 0 V
 stroke
702 1106 M
[ [(Times-Roman) 180.0 0.0 true true (150)]
] -60.0 MRshow
810 1671 M
63 0 V
6021 0 R
-63 0 V
 stroke
702 1671 M
[ [(Times-Roman) 180.0 0.0 true true (200)]
] -60.0 MRshow
810 2237 M
63 0 V
6021 0 R
-63 0 V
 stroke
702 2237 M
[ [(Times-Roman) 180.0 0.0 true true (250)]
] -60.0 MRshow
810 2803 M
63 0 V
6021 0 R
-63 0 V
 stroke
702 2803 M
[ [(Times-Roman) 180.0 0.0 true true (300)]
] -60.0 MRshow
810 3369 M
63 0 V
6021 0 R
-63 0 V
 stroke
702 3369 M
[ [(Times-Roman) 180.0 0.0 true true (350)]
] -60.0 MRshow
810 3934 M
63 0 V
6021 0 R
-63 0 V
 stroke
702 3934 M
[ [(Times-Roman) 180.0 0.0 true true (400)]
] -60.0 MRshow
810 4500 M
63 0 V
6021 0 R
-63 0 V
 stroke
702 4500 M
[ [(Times-Roman) 180.0 0.0 true true (450)]
] -60.0 MRshow
810 540 M
0 63 V
0 3897 R
0 -63 V
 stroke
810 360 M
[ [(Times-Roman) 180.0 0.0 true true (4)]
] -60.0 MCshow
1571 540 M
0 63 V
0 3897 R
0 -63 V
 stroke
1571 360 M
[ [(Times-Roman) 180.0 0.0 true true (6)]
] -60.0 MCshow
2331 540 M
0 63 V
0 3897 R
0 -63 V
 stroke
2331 360 M
[ [(Times-Roman) 180.0 0.0 true true (8)]
] -60.0 MCshow
3092 540 M
0 63 V
0 3897 R
0 -63 V
 stroke
3092 360 M
[ [(Times-Roman) 180.0 0.0 true true (10)]
] -60.0 MCshow
3852 540 M
0 63 V
0 3897 R
0 -63 V
 stroke
3852 360 M
[ [(Times-Roman) 180.0 0.0 true true (12)]
] -60.0 MCshow
4613 540 M
0 63 V
0 3897 R
0 -63 V
 stroke
4613 360 M
[ [(Times-Roman) 180.0 0.0 true true (14)]
] -60.0 MCshow
5373 540 M
0 63 V
0 3897 R
0 -63 V
 stroke
5373 360 M
[ [(Times-Roman) 180.0 0.0 true true (16)]
] -60.0 MCshow
6134 540 M
0 63 V
0 3897 R
0 -63 V
 stroke
6134 360 M
[ [(Times-Roman) 180.0 0.0 true true (18)]
] -60.0 MCshow
6894 540 M
0 63 V
0 3897 R
0 -63 V
 stroke
6894 360 M
[ [(Times-Roman) 180.0 0.0 true true (20)]
] -60.0 MCshow
1.000 UL
LTb
810 540 M
6084 0 V
0 3960 V
-6084 0 V
810 540 L
 stroke
180 2520 M
currentpoint gsave translate 90 rotate 0 0 moveto
[ [(Times-Roman) 180.0 0.0 true true (Time \(seconds\))]
] -60.0 MCshow
grestore
3852 90 M
[ [(Times-Roman) 180.0 0.0 true true (Number of Processors)]
] -60.0 MCshow
3852 4770 M
[ [(Times-Roman) 180.0 0.0 true true (Total Ref Time)]
] -60.0 MCshow
1.000 UP
1.000 UL
LT0
6075 4347 M
[ [(Times-Roman) 180.0 0.0 true true (JOSTLE)]
] -60.0 MRshow
6183 4347 M
495 0 V
810 2703 M
2331 1623 L
761 -166 V
760 83 V
761 -229 V
760 -63 V
761 -82 V
760 -94 V
810 2703 Pls
2331 1623 Pls
3092 1457 Pls
3852 1540 Pls
4613 1311 Pls
5373 1248 Pls
6134 1166 Pls
6894 1072 Pls
6430 4347 Pls
1.000 UP
1.000 UL
LT1
6075 4167 M
[ [(Times-Roman) 180.0 0.0 true true (PARMETIS)]
] -60.0 MRshow
6183 4167 M
495 0 V
810 2915 M
2331 1390 L
761 -96 V
760 -92 V
761 -161 V
760 -94 V
761 25 V
760 -72 V
810 2915 Crs
2331 1390 Crs
3092 1294 Crs
3852 1202 Crs
4613 1041 Crs
5373 947 Crs
6134 972 Crs
6894 900 Crs
6430 4167 Crs
1.000 UP
1.000 UL
LT2
6075 3987 M
[ [(Times-Roman) 180.0 0.0 true true (RCB)]
] -60.0 MRshow
6183 3987 M
495 0 V
810 4210 M
2331 2419 L
761 -188 V
760 -326 V
761 -348 V
760 -199 V
761 122 V
760 -93 V
810 4210 Star
2331 2419 Star
3092 2231 Star
3852 1905 Star
4613 1557 Star
5373 1358 Star
6134 1480 Star
6894 1387 Star
6430 3987 Star
1.000 UP
1.000 UL
LT3
6075 3807 M
[ [(Times-Roman) 180.0 0.0 true true (RIB)]
] -60.0 MRshow
6183 3807 M
495 0 V
810 2526 M
2331 1466 L
761 -78 V
760 -133 V
761 -197 V
760 -82 V
761 16 V
760 -30 V
810 2526 Box
2331 1466 Box
3092 1388 Box
3852 1255 Box
4613 1058 Box
5373 976 Box
6134 992 Box
6894 962 Box
6430 3807 Box
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Times-Roman

%%EndDocument
 @endspecial 51523 41360 V 866 58642 V 1553 58160 a @beginspecial
50 @llx 50 @lly 410 @urx 302 @ury 2160 @rwi @setspecial
%%BeginDocument: graphs/solverAverages/times/time_processors/total_sol_time.eps
%!PS-Adobe-2.0 EPSF-2.0
%%Title: total_sol_time.eps
%%Creator: gnuplot 3.7 patchlevel 0
%%CreationDate: Thu Aug 15 11:08:27 2002
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 410 302
%%Orientation: Portrait
%%EndComments
/gnudict 256 dict def
gnudict begin
/Color false def
/Solid false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
/vshift -60 def
/dl {10 mul} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow { currentpoint stroke M
  0 vshift R show } def
/Rshow { currentpoint stroke M
  dup stringwidth pop neg vshift R show } def
/Cshow { currentpoint stroke M
  dup stringwidth pop -2 div vshift R show } def
/UP { dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def } def
/DL { Color {setrgbcolor Solid {pop []} if 0 setdash }
 {pop pop pop Solid {pop []} if 0 setdash} ifelse } def
/BL { stroke gnulinewidth 2 mul setlinewidth } def
/AL { stroke gnulinewidth 2 div setlinewidth } def
/UL { gnulinewidth mul /userlinewidth exch def } def
/PL { stroke userlinewidth setlinewidth } def
/LTb { BL [] 0 0 0 DL } def
/LTa { AL [1 dl 2 dl] 0 setdash 0 0 0 setrgbcolor } def
/LT0 { PL [] 1 0 0 DL } def
/LT1 { PL [4 dl 2 dl] 0 1 0 DL } def
/LT2 { PL [2 dl 3 dl] 0 0 1 DL } def
/LT3 { PL [1 dl 1.5 dl] 1 0 1 DL } def
/LT4 { PL [5 dl 2 dl 1 dl 2 dl] 0 1 1 DL } def
/LT5 { PL [4 dl 3 dl 1 dl 3 dl] 1 1 0 DL } def
/LT6 { PL [2 dl 2 dl 2 dl 4 dl] 0 0 0 DL } def
/LT7 { PL [2 dl 2 dl 2 dl 2 dl 2 dl 4 dl] 1 0.3 0 DL } def
/LT8 { PL [2 dl 2 dl 2 dl 2 dl 2 dl 2 dl 2 dl 4 dl] 0.5 0.5 0.5 DL } def
/Pnt { stroke [] 0 setdash
   gsave 1 setlinecap M 0 0 V stroke grestore } def
/Dia { stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt } def
/Pls { stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
  } def
/Box { stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt } def
/Crs { stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke } def
/TriU { stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt  } def
/Star { 2 copy Pls Crs } def
/BoxF { stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V  hpt2 0 V  0 vpt2 V
  hpt2 neg 0 V  closepath fill } def
/TriUF { stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill } def
/TriD { stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt  } def
/TriDF { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF { stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill } def
/Pent { stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt } def
/PentF { stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore } def
/Circle { stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt } def
/CircleF { stroke [] 0 setdash hpt 0 360 arc fill } def
/C0 { BL [] 0 setdash 2 copy moveto vpt 90 450  arc } bind def
/C1 { BL [] 0 setdash 2 copy        moveto
       2 copy  vpt 0 90 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C2 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 90 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C3 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C4 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 180 270 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C5 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 90 arc
       2 copy moveto
       2 copy  vpt 180 270 arc closepath fill
               vpt 0 360 arc } bind def
/C6 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 90 270 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C7 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 0 270 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C8 { BL [] 0 setdash 2 copy moveto
      2 copy vpt 270 360 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C9 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 270 450 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C10 { BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
       2 copy moveto
       2 copy vpt 90 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C11 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 180 arc closepath fill
       2 copy moveto
       2 copy  vpt 270 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C12 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 180 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C13 { BL [] 0 setdash  2 copy moveto
       2 copy  vpt 0 90 arc closepath fill
       2 copy moveto
       2 copy  vpt 180 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C14 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 90 360 arc closepath fill
               vpt 0 360 arc } bind def
/C15 { BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/Rec   { newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
       neg 0 rlineto closepath } bind def
/Square { dup Rec } bind def
/Bsquare { vpt sub exch vpt sub exch vpt2 Square } bind def
/S0 { BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare } bind def
/S1 { BL [] 0 setdash 2 copy vpt Square fill Bsquare } bind def
/S2 { BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare } bind def
/S3 { BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare } bind def
/S4 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare } bind def
/S5 { BL [] 0 setdash 2 copy 2 copy vpt Square fill
       exch vpt sub exch vpt sub vpt Square fill Bsquare } bind def
/S6 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare } bind def
/S7 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
       2 copy vpt Square fill
       Bsquare } bind def
/S8 { BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare } bind def
/S9 { BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare } bind def
/S10 { BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
       Bsquare } bind def
/S11 { BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
       Bsquare } bind def
/S12 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare } bind def
/S13 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
       2 copy vpt Square fill Bsquare } bind def
/S14 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
       2 copy exch vpt sub exch vpt Square fill Bsquare } bind def
/S15 { BL [] 0 setdash 2 copy Bsquare fill Bsquare } bind def
/D0 { gsave translate 45 rotate 0 0 S0 stroke grestore } bind def
/D1 { gsave translate 45 rotate 0 0 S1 stroke grestore } bind def
/D2 { gsave translate 45 rotate 0 0 S2 stroke grestore } bind def
/D3 { gsave translate 45 rotate 0 0 S3 stroke grestore } bind def
/D4 { gsave translate 45 rotate 0 0 S4 stroke grestore } bind def
/D5 { gsave translate 45 rotate 0 0 S5 stroke grestore } bind def
/D6 { gsave translate 45 rotate 0 0 S6 stroke grestore } bind def
/D7 { gsave translate 45 rotate 0 0 S7 stroke grestore } bind def
/D8 { gsave translate 45 rotate 0 0 S8 stroke grestore } bind def
/D9 { gsave translate 45 rotate 0 0 S9 stroke grestore } bind def
/D10 { gsave translate 45 rotate 0 0 S10 stroke grestore } bind def
/D11 { gsave translate 45 rotate 0 0 S11 stroke grestore } bind def
/D12 { gsave translate 45 rotate 0 0 S12 stroke grestore } bind def
/D13 { gsave translate 45 rotate 0 0 S13 stroke grestore } bind def
/D14 { gsave translate 45 rotate 0 0 S14 stroke grestore } bind def
/D15 { gsave translate 45 rotate 0 0 S15 stroke grestore } bind def
/DiaE { stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke } def
/BoxE { stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke } def
/TriUE { stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke } def
/TriDE { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke } def
/PentE { stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore } def
/CircE { stroke [] 0 setdash 
  hpt 0 360 arc stroke } def
/Opaque { gsave closepath 1 setgray fill grestore 0 setgray closepath } def
/DiaW { stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke } def
/BoxW { stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke } def
/TriUW { stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke } def
/TriDW { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke } def
/PentW { stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore } def
/CircW { stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke } def
/BoxFill { gsave Rec 1 setgray fill grestore } def
/MFshow {{dup dup 0 get findfont exch 1 get scalefont setfont
     [ currentpoint ] exch dup 2 get 0 exch rmoveto dup dup 5 get exch 4 get
     {show} {stringwidth pop 0 rmoveto}ifelse dup 3 get
     {2 get neg 0 exch rmoveto pop} {pop aload pop moveto}ifelse} forall} bind def
/MFwidth {0 exch {dup 3 get{dup dup 0 get findfont exch 1 get scalefont setfont
      5 get stringwidth pop add}
    {pop} ifelse} forall} bind def
/MLshow { currentpoint stroke M
  0 exch R MFshow } bind def
/MRshow { currentpoint stroke M
  exch dup MFwidth neg 3 -1 roll R MFshow } def
/MCshow { currentpoint stroke M
  exch dup MFwidth -2 div 3 -1 roll R MFshow } def
end
%%EndProlog
gnudict begin
gsave
50 50 translate
0.050 0.050 scale
0 setgray
newpath
(Times-Roman) findfont 180 scalefont setfont
1.000 UL
LTb
1026 540 M
63 0 V
5805 0 R
-63 0 V
 stroke
918 540 M
[ [(Times-Roman) 180.0 0.0 true true (2000)]
] -60.0 MRshow
1026 980 M
63 0 V
5805 0 R
-63 0 V
 stroke
918 980 M
[ [(Times-Roman) 180.0 0.0 true true (4000)]
] -60.0 MRshow
1026 1420 M
63 0 V
5805 0 R
-63 0 V
 stroke
918 1420 M
[ [(Times-Roman) 180.0 0.0 true true (6000)]
] -60.0 MRshow
1026 1860 M
63 0 V
5805 0 R
-63 0 V
 stroke
918 1860 M
[ [(Times-Roman) 180.0 0.0 true true (8000)]
] -60.0 MRshow
1026 2300 M
63 0 V
5805 0 R
-63 0 V
 stroke
918 2300 M
[ [(Times-Roman) 180.0 0.0 true true (10000)]
] -60.0 MRshow
1026 2740 M
63 0 V
5805 0 R
-63 0 V
 stroke
918 2740 M
[ [(Times-Roman) 180.0 0.0 true true (12000)]
] -60.0 MRshow
1026 3180 M
63 0 V
5805 0 R
-63 0 V
 stroke
918 3180 M
[ [(Times-Roman) 180.0 0.0 true true (14000)]
] -60.0 MRshow
1026 3620 M
63 0 V
5805 0 R
-63 0 V
 stroke
918 3620 M
[ [(Times-Roman) 180.0 0.0 true true (16000)]
] -60.0 MRshow
1026 4060 M
63 0 V
5805 0 R
-63 0 V
 stroke
918 4060 M
[ [(Times-Roman) 180.0 0.0 true true (18000)]
] -60.0 MRshow
1026 4500 M
63 0 V
5805 0 R
-63 0 V
 stroke
918 4500 M
[ [(Times-Roman) 180.0 0.0 true true (20000)]
] -60.0 MRshow
1026 540 M
0 63 V
0 3897 R
0 -63 V
 stroke
1026 360 M
[ [(Times-Roman) 180.0 0.0 true true (4)]
] -60.0 MCshow
1760 540 M
0 63 V
0 3897 R
0 -63 V
 stroke
1760 360 M
[ [(Times-Roman) 180.0 0.0 true true (6)]
] -60.0 MCshow
2493 540 M
0 63 V
0 3897 R
0 -63 V
 stroke
2493 360 M
[ [(Times-Roman) 180.0 0.0 true true (8)]
] -60.0 MCshow
3227 540 M
0 63 V
0 3897 R
0 -63 V
 stroke
3227 360 M
[ [(Times-Roman) 180.0 0.0 true true (10)]
] -60.0 MCshow
3960 540 M
0 63 V
0 3897 R
0 -63 V
 stroke
3960 360 M
[ [(Times-Roman) 180.0 0.0 true true (12)]
] -60.0 MCshow
4694 540 M
0 63 V
0 3897 R
0 -63 V
 stroke
4694 360 M
[ [(Times-Roman) 180.0 0.0 true true (14)]
] -60.0 MCshow
5427 540 M
0 63 V
0 3897 R
0 -63 V
 stroke
5427 360 M
[ [(Times-Roman) 180.0 0.0 true true (16)]
] -60.0 MCshow
6161 540 M
0 63 V
0 3897 R
0 -63 V
 stroke
6161 360 M
[ [(Times-Roman) 180.0 0.0 true true (18)]
] -60.0 MCshow
6894 540 M
0 63 V
0 3897 R
0 -63 V
 stroke
6894 360 M
[ [(Times-Roman) 180.0 0.0 true true (20)]
] -60.0 MCshow
1.000 UL
LTb
1026 540 M
5868 0 V
0 3960 V
-5868 0 V
0 -3960 V
 stroke
180 2520 M
currentpoint gsave translate 90 rotate 0 0 moveto
[ [(Times-Roman) 180.0 0.0 true true (Time \(seconds\))]
] -60.0 MCshow
grestore
3960 90 M
[ [(Times-Roman) 180.0 0.0 true true (Number of Processors)]
] -60.0 MCshow
3960 4770 M
[ [(Times-Roman) 180.0 0.0 true true (Total Sol Time)]
] -60.0 MCshow
1.000 UP
1.000 UL
LT0
6075 4347 M
[ [(Times-Roman) 180.0 0.0 true true (JOSTLE)]
] -60.0 MRshow
6183 4347 M
495 0 V
1026 1294 M
2493 888 L
734 -53 V
733 5 V
734 -50 V
733 -17 V
734 11 V
733 -7 V
1026 1294 Pls
2493 888 Pls
3227 835 Pls
3960 840 Pls
4694 790 Pls
5427 773 Pls
6161 784 Pls
6894 777 Pls
6430 4347 Pls
1.000 UP
1.000 UL
LT1
6075 4167 M
[ [(Times-Roman) 180.0 0.0 true true (PARMETIS)]
] -60.0 MRshow
6183 4167 M
495 0 V
1026 1455 M
2493 1117 L
734 -67 V
733 -6 V
734 15 V
733 -78 V
734 59 V
733 37 V
1026 1455 Crs
2493 1117 Crs
3227 1050 Crs
3960 1044 Crs
4694 1059 Crs
5427 981 Crs
6161 1040 Crs
6894 1077 Crs
6430 4167 Crs
1.000 UP
1.000 UL
LT2
6075 3987 M
[ [(Times-Roman) 180.0 0.0 true true (RCB)]
] -60.0 MRshow
6183 3987 M
495 0 V
-5652 75 R
2493 3007 L
734 338 V
733 -409 V
734 126 V
733 -477 V
734 409 V
733 -54 V
1026 4062 Star
2493 3007 Star
3227 3345 Star
3960 2936 Star
4694 3062 Star
5427 2585 Star
6161 2994 Star
6894 2940 Star
6430 3987 Star
1.000 UP
1.000 UL
LT3
6075 3807 M
[ [(Times-Roman) 180.0 0.0 true true (RIB)]
] -60.0 MRshow
6183 3807 M
495 0 V
1026 1505 M
1467 7 V
734 443 V
733 -5 V
734 -54 V
733 78 V
734 490 V
733 -4 V
1026 1505 Box
2493 1512 Box
3227 1955 Box
3960 1950 Box
4694 1896 Box
5427 1974 Box
6161 2464 Box
6894 2460 Box
6430 3807 Box
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Times-Roman

%%EndDocument
 @endspecial 25328 w @beginspecial 50 @llx 50 @lly 410
@urx 302 @ury 2160 @rwi @setspecial
%%BeginDocument: graphs/solverAverages/times/time_processors/total_time.eps
%!PS-Adobe-2.0 EPSF-2.0
%%Title: total_time.eps
%%Creator: gnuplot 3.7 patchlevel 0
%%CreationDate: Thu Aug 15 11:10:11 2002
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 410 302
%%Orientation: Portrait
%%EndComments
/gnudict 256 dict def
gnudict begin
/Color false def
/Solid false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
/vshift -60 def
/dl {10 mul} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow { currentpoint stroke M
  0 vshift R show } def
/Rshow { currentpoint stroke M
  dup stringwidth pop neg vshift R show } def
/Cshow { currentpoint stroke M
  dup stringwidth pop -2 div vshift R show } def
/UP { dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def } def
/DL { Color {setrgbcolor Solid {pop []} if 0 setdash }
 {pop pop pop Solid {pop []} if 0 setdash} ifelse } def
/BL { stroke gnulinewidth 2 mul setlinewidth } def
/AL { stroke gnulinewidth 2 div setlinewidth } def
/UL { gnulinewidth mul /userlinewidth exch def } def
/PL { stroke userlinewidth setlinewidth } def
/LTb { BL [] 0 0 0 DL } def
/LTa { AL [1 dl 2 dl] 0 setdash 0 0 0 setrgbcolor } def
/LT0 { PL [] 1 0 0 DL } def
/LT1 { PL [4 dl 2 dl] 0 1 0 DL } def
/LT2 { PL [2 dl 3 dl] 0 0 1 DL } def
/LT3 { PL [1 dl 1.5 dl] 1 0 1 DL } def
/LT4 { PL [5 dl 2 dl 1 dl 2 dl] 0 1 1 DL } def
/LT5 { PL [4 dl 3 dl 1 dl 3 dl] 1 1 0 DL } def
/LT6 { PL [2 dl 2 dl 2 dl 4 dl] 0 0 0 DL } def
/LT7 { PL [2 dl 2 dl 2 dl 2 dl 2 dl 4 dl] 1 0.3 0 DL } def
/LT8 { PL [2 dl 2 dl 2 dl 2 dl 2 dl 2 dl 2 dl 4 dl] 0.5 0.5 0.5 DL } def
/Pnt { stroke [] 0 setdash
   gsave 1 setlinecap M 0 0 V stroke grestore } def
/Dia { stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt } def
/Pls { stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
  } def
/Box { stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt } def
/Crs { stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke } def
/TriU { stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt  } def
/Star { 2 copy Pls Crs } def
/BoxF { stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V  hpt2 0 V  0 vpt2 V
  hpt2 neg 0 V  closepath fill } def
/TriUF { stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill } def
/TriD { stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt  } def
/TriDF { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF { stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill } def
/Pent { stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt } def
/PentF { stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore } def
/Circle { stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt } def
/CircleF { stroke [] 0 setdash hpt 0 360 arc fill } def
/C0 { BL [] 0 setdash 2 copy moveto vpt 90 450  arc } bind def
/C1 { BL [] 0 setdash 2 copy        moveto
       2 copy  vpt 0 90 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C2 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 90 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C3 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C4 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 180 270 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C5 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 90 arc
       2 copy moveto
       2 copy  vpt 180 270 arc closepath fill
               vpt 0 360 arc } bind def
/C6 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 90 270 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C7 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 0 270 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C8 { BL [] 0 setdash 2 copy moveto
      2 copy vpt 270 360 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C9 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 270 450 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C10 { BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
       2 copy moveto
       2 copy vpt 90 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C11 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 180 arc closepath fill
       2 copy moveto
       2 copy  vpt 270 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C12 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 180 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C13 { BL [] 0 setdash  2 copy moveto
       2 copy  vpt 0 90 arc closepath fill
       2 copy moveto
       2 copy  vpt 180 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C14 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 90 360 arc closepath fill
               vpt 0 360 arc } bind def
/C15 { BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/Rec   { newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
       neg 0 rlineto closepath } bind def
/Square { dup Rec } bind def
/Bsquare { vpt sub exch vpt sub exch vpt2 Square } bind def
/S0 { BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare } bind def
/S1 { BL [] 0 setdash 2 copy vpt Square fill Bsquare } bind def
/S2 { BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare } bind def
/S3 { BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare } bind def
/S4 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare } bind def
/S5 { BL [] 0 setdash 2 copy 2 copy vpt Square fill
       exch vpt sub exch vpt sub vpt Square fill Bsquare } bind def
/S6 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare } bind def
/S7 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
       2 copy vpt Square fill
       Bsquare } bind def
/S8 { BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare } bind def
/S9 { BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare } bind def
/S10 { BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
       Bsquare } bind def
/S11 { BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
       Bsquare } bind def
/S12 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare } bind def
/S13 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
       2 copy vpt Square fill Bsquare } bind def
/S14 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
       2 copy exch vpt sub exch vpt Square fill Bsquare } bind def
/S15 { BL [] 0 setdash 2 copy Bsquare fill Bsquare } bind def
/D0 { gsave translate 45 rotate 0 0 S0 stroke grestore } bind def
/D1 { gsave translate 45 rotate 0 0 S1 stroke grestore } bind def
/D2 { gsave translate 45 rotate 0 0 S2 stroke grestore } bind def
/D3 { gsave translate 45 rotate 0 0 S3 stroke grestore } bind def
/D4 { gsave translate 45 rotate 0 0 S4 stroke grestore } bind def
/D5 { gsave translate 45 rotate 0 0 S5 stroke grestore } bind def
/D6 { gsave translate 45 rotate 0 0 S6 stroke grestore } bind def
/D7 { gsave translate 45 rotate 0 0 S7 stroke grestore } bind def
/D8 { gsave translate 45 rotate 0 0 S8 stroke grestore } bind def
/D9 { gsave translate 45 rotate 0 0 S9 stroke grestore } bind def
/D10 { gsave translate 45 rotate 0 0 S10 stroke grestore } bind def
/D11 { gsave translate 45 rotate 0 0 S11 stroke grestore } bind def
/D12 { gsave translate 45 rotate 0 0 S12 stroke grestore } bind def
/D13 { gsave translate 45 rotate 0 0 S13 stroke grestore } bind def
/D14 { gsave translate 45 rotate 0 0 S14 stroke grestore } bind def
/D15 { gsave translate 45 rotate 0 0 S15 stroke grestore } bind def
/DiaE { stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke } def
/BoxE { stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke } def
/TriUE { stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke } def
/TriDE { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke } def
/PentE { stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore } def
/CircE { stroke [] 0 setdash 
  hpt 0 360 arc stroke } def
/Opaque { gsave closepath 1 setgray fill grestore 0 setgray closepath } def
/DiaW { stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke } def
/BoxW { stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke } def
/TriUW { stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke } def
/TriDW { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke } def
/PentW { stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore } def
/CircW { stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke } def
/BoxFill { gsave Rec 1 setgray fill grestore } def
/MFshow {{dup dup 0 get findfont exch 1 get scalefont setfont
     [ currentpoint ] exch dup 2 get 0 exch rmoveto dup dup 5 get exch 4 get
     {show} {stringwidth pop 0 rmoveto}ifelse dup 3 get
     {2 get neg 0 exch rmoveto pop} {pop aload pop moveto}ifelse} forall} bind def
/MFwidth {0 exch {dup 3 get{dup dup 0 get findfont exch 1 get scalefont setfont
      5 get stringwidth pop add}
    {pop} ifelse} forall} bind def
/MLshow { currentpoint stroke M
  0 exch R MFshow } bind def
/MRshow { currentpoint stroke M
  exch dup MFwidth neg 3 -1 roll R MFshow } def
/MCshow { currentpoint stroke M
  exch dup MFwidth -2 div 3 -1 roll R MFshow } def
end
%%EndProlog
gnudict begin
gsave
50 50 translate
0.050 0.050 scale
0 setgray
newpath
(Times-Roman) findfont 180 scalefont setfont
1.000 UL
LTb
1026 540 M
63 0 V
5805 0 R
-63 0 V
 stroke
918 540 M
[ [(Times-Roman) 180.0 0.0 true true (4000)]
] -60.0 MRshow
1026 1035 M
63 0 V
5805 0 R
-63 0 V
 stroke
918 1035 M
[ [(Times-Roman) 180.0 0.0 true true (6000)]
] -60.0 MRshow
1026 1530 M
63 0 V
5805 0 R
-63 0 V
 stroke
918 1530 M
[ [(Times-Roman) 180.0 0.0 true true (8000)]
] -60.0 MRshow
1026 2025 M
63 0 V
5805 0 R
-63 0 V
 stroke
918 2025 M
[ [(Times-Roman) 180.0 0.0 true true (10000)]
] -60.0 MRshow
1026 2520 M
63 0 V
5805 0 R
-63 0 V
 stroke
918 2520 M
[ [(Times-Roman) 180.0 0.0 true true (12000)]
] -60.0 MRshow
1026 3015 M
63 0 V
5805 0 R
-63 0 V
 stroke
918 3015 M
[ [(Times-Roman) 180.0 0.0 true true (14000)]
] -60.0 MRshow
1026 3510 M
63 0 V
5805 0 R
-63 0 V
 stroke
918 3510 M
[ [(Times-Roman) 180.0 0.0 true true (16000)]
] -60.0 MRshow
1026 4005 M
63 0 V
5805 0 R
-63 0 V
 stroke
918 4005 M
[ [(Times-Roman) 180.0 0.0 true true (18000)]
] -60.0 MRshow
1026 4500 M
63 0 V
5805 0 R
-63 0 V
 stroke
918 4500 M
[ [(Times-Roman) 180.0 0.0 true true (20000)]
] -60.0 MRshow
1026 540 M
0 63 V
0 3897 R
0 -63 V
 stroke
1026 360 M
[ [(Times-Roman) 180.0 0.0 true true (4)]
] -60.0 MCshow
1760 540 M
0 63 V
0 3897 R
0 -63 V
 stroke
1760 360 M
[ [(Times-Roman) 180.0 0.0 true true (6)]
] -60.0 MCshow
2493 540 M
0 63 V
0 3897 R
0 -63 V
 stroke
2493 360 M
[ [(Times-Roman) 180.0 0.0 true true (8)]
] -60.0 MCshow
3227 540 M
0 63 V
0 3897 R
0 -63 V
 stroke
3227 360 M
[ [(Times-Roman) 180.0 0.0 true true (10)]
] -60.0 MCshow
3960 540 M
0 63 V
0 3897 R
0 -63 V
 stroke
3960 360 M
[ [(Times-Roman) 180.0 0.0 true true (12)]
] -60.0 MCshow
4694 540 M
0 63 V
0 3897 R
0 -63 V
 stroke
4694 360 M
[ [(Times-Roman) 180.0 0.0 true true (14)]
] -60.0 MCshow
5427 540 M
0 63 V
0 3897 R
0 -63 V
 stroke
5427 360 M
[ [(Times-Roman) 180.0 0.0 true true (16)]
] -60.0 MCshow
6161 540 M
0 63 V
0 3897 R
0 -63 V
 stroke
6161 360 M
[ [(Times-Roman) 180.0 0.0 true true (18)]
] -60.0 MCshow
6894 540 M
0 63 V
0 3897 R
0 -63 V
 stroke
6894 360 M
[ [(Times-Roman) 180.0 0.0 true true (20)]
] -60.0 MCshow
1.000 UL
LTb
1026 540 M
5868 0 V
0 3960 V
-5868 0 V
0 -3960 V
 stroke
180 2520 M
currentpoint gsave translate 90 rotate 0 0 moveto
[ [(Times-Roman) 180.0 0.0 true true (Time \(seconds\))]
] -60.0 MCshow
grestore
3960 90 M
[ [(Times-Roman) 180.0 0.0 true true (Number of Processors)]
] -60.0 MCshow
3960 4770 M
[ [(Times-Roman) 180.0 0.0 true true (Total Time \(bal)]
[(Times-Roman) 144.0 -54.0 true true (t)]
[(Times-Roman) 180.0 0.0 true true (ime + ref)]
[(Times-Roman) 144.0 -54.0 true true (t)]
[(Times-Roman) 180.0 0.0 true true (ime + sol)]
[(Times-Roman) 144.0 -54.0 true true (t)]
[(Times-Roman) 180.0 0.0 true true (ime\))]
] -42.0 MCshow
1.000 UP
1.000 UL
LT0
6075 4347 M
[ [(Times-Roman) 180.0 0.0 true true (JOSTLE)]
] -60.0 MRshow
6183 4347 M
495 0 V
1026 1080 M
2493 628 L
734 92 V
733 41 V
4694 542 L
733 36 V
734 -6 V
733 -26 V
1026 1080 Pls
2493 628 Pls
3227 720 Pls
3960 761 Pls
4694 542 Pls
5427 578 Pls
6161 572 Pls
6894 546 Pls
6430 4347 Pls
1.000 UP
1.000 UL
LT1
6075 4167 M
[ [(Times-Roman) 180.0 0.0 true true (PARMETIS)]
] -60.0 MRshow
6183 4167 M
495 0 V
1026 1193 M
2493 773 L
734 -76 V
733 -12 V
734 14 V
733 -88 V
734 67 V
733 39 V
1026 1193 Crs
2493 773 Crs
3227 697 Crs
3960 685 Crs
4694 699 Crs
5427 611 Crs
6161 678 Crs
6894 717 Crs
6430 4167 Crs
1.000 UP
1.000 UL
LT2
6075 3987 M
[ [(Times-Roman) 180.0 0.0 true true (RCB)]
] -60.0 MRshow
6183 3987 M
495 0 V
1026 4151 M
2493 2922 L
734 387 V
733 -470 V
734 135 V
733 -545 V
734 466 V
733 -61 V
1026 4151 Star
2493 2922 Star
3227 3309 Star
3960 2839 Star
4694 2974 Star
5427 2429 Star
6161 2895 Star
6894 2834 Star
6430 3987 Star
1.000 UP
1.000 UL
LT3
6075 3807 M
[ [(Times-Roman) 180.0 0.0 true true (RIB)]
] -60.0 MRshow
6183 3807 M
495 0 V
1026 1261 M
1467 -23 V
734 511 V
733 -7 V
734 -71 V
733 87 V
734 549 V
733 -5 V
1026 1261 Box
2493 1238 Box
3227 1749 Box
3960 1742 Box
4694 1671 Box
5427 1758 Box
6161 2307 Box
6894 2302 Box
6430 3807 Box
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Times-Roman

%%EndDocument
 @endspecial 51523 58642 V 888 58686 50657 45 v 0 60826
a(Figure)449 b(9:)610 b(Times)450 b(for)g(the)f(p)36
b(erforated)449 b(sho)36 b(c)-36 b(k)449 b(tub)36 b(e)449
b(as)g(the)g(n)-36 b(um)g(b)36 b(er)448 b(of)i(pro)36
b(cesses)449 b(ranges)h(from)f(4)h(to)0 62431 y(20.)755
b(The)492 b(graphs)g(sho)-36 b(w)492 b(cum)-36 b(ulativ)g(e)492
b(rebalancing)g(times)h(\(top)e(left\),)508 b(cum)-36
b(ulativ)g(e)492 b(mesh)g(re\257nemen)-36 b(t)0 64036
y(times)415 b(\(top)g(righ)-36 b(t\),)418 b(cum)-36 b(ulativ)g(e)416
b(solution)f(times)g(\(b)36 b(ottom)415 b(left\),)k(and)c(total)h
(analysis)g(times)f(\(b)36 b(ottom)0 65641 y(righ)-36
b(t\))433 b(for)h(the)f(19)h(adaptiv)-36 b(e)434 b(steps.)578
b(The)434 b(total)g(analysis)h(times)f(are)f(the)g(sums)h(of)g(the)f
(other)g(three.)0 69073 y Fl(6)2152 b(Slice)717 b(P)-60
b(artitioning)0 71993 y Fk(Previous)557 b(studies)g(ha)-36
b(v)g(e)557 b(sho)-36 b(wn)556 b(in)-36 b(terpro)36 b(cess)556
b(adjacency)-108 b(,)589 b(the)556 b(n)-36 b(um)g(b)36
b(er)555 b(of)j(neigh)-36 b(b)36 b(ors)556 b(with)h(whic)-36
b(h)0 73599 y(eac)g(h)476 b(pro)36 b(cessor)475 b(m)-36
b(ust)475 b(comm)-36 b(unicate)476 b(during)f(the)g(solution)h(phase,)
486 b(to)475 b(b)36 b(e)476 b(an)f(imp)36 b(ortan)-36
b(t)475 b(e\261ciency)25350 75417 y(12)p eop
%%Page: 13 13
13 12 bop 888 140 50657 45 v 866 17422 45 17282 v 1553
16940 a @beginspecial 50 @llx 50 @lly 410 @urx 302 @ury
2160 @rwi @setspecial
%%BeginDocument: graphs/octpart/partition/gsi/muzzle-refined-GSI-2.eps
%!PS-Adobe-2.0 EPSF-2.0
%%Title: muzzle-refined-GSI-color-2.eps
%%Creator: gnuplot 3.7 patchlevel 0
%%CreationDate: Thu Jul 18 17:20:59 2002
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 410 302
%%Orientation: Portrait
%%EndComments
/gnudict 256 dict def
gnudict begin
/Color false def
/Solid false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
/vshift -60 def
/dl {10 mul} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow { currentpoint stroke M
  0 vshift R show } def
/Rshow { currentpoint stroke M
  dup stringwidth pop neg vshift R show } def
/Cshow { currentpoint stroke M
  dup stringwidth pop -2 div vshift R show } def
/UP { dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def } def
/DL { Color {setrgbcolor Solid {pop []} if 0 setdash }
 {pop pop pop Solid {pop []} if 0 setdash} ifelse } def
/BL { stroke gnulinewidth 2 mul setlinewidth } def
/AL { stroke gnulinewidth 2 div setlinewidth } def
/UL { gnulinewidth mul /userlinewidth exch def } def
/PL { stroke userlinewidth setlinewidth } def
/LTb { BL [] 0 0 0 DL } def
/LTa { AL [1 dl 2 dl] 0 setdash 0 0 0 setrgbcolor } def
/LT0 { PL [] 1 0 0 DL } def
/LT1 { PL [4 dl 2 dl] 0 1 0 DL } def
/LT2 { PL [2 dl 3 dl] 0 0 1 DL } def
/LT3 { PL [1 dl 1.5 dl] 1 0 1 DL } def
/LT4 { PL [5 dl 2 dl 1 dl 2 dl] 0 1 1 DL } def
/LT5 { PL [4 dl 3 dl 1 dl 3 dl] 1 1 0 DL } def
/LT6 { PL [2 dl 2 dl 2 dl 4 dl] 0 0 0 DL } def
/LT7 { PL [2 dl 2 dl 2 dl 2 dl 2 dl 4 dl] 1 0.3 0 DL } def
/LT8 { PL [2 dl 2 dl 2 dl 2 dl 2 dl 2 dl 2 dl 4 dl] 0.5 0.5 0.5 DL } def
/Pnt { stroke [] 0 setdash
   gsave 1 setlinecap M 0 0 V stroke grestore } def
/Dia { stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt } def
/Pls { stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
  } def
/Box { stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt } def
/Crs { stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke } def
/TriU { stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt  } def
/Star { 2 copy Pls Crs } def
/BoxF { stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V  hpt2 0 V  0 vpt2 V
  hpt2 neg 0 V  closepath fill } def
/TriUF { stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill } def
/TriD { stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt  } def
/TriDF { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF { stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill } def
/Pent { stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt } def
/PentF { stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore } def
/Circle { stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt } def
/CircleF { stroke [] 0 setdash hpt 0 360 arc fill } def
/C0 { BL [] 0 setdash 2 copy moveto vpt 90 450  arc } bind def
/C1 { BL [] 0 setdash 2 copy        moveto
       2 copy  vpt 0 90 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C2 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 90 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C3 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C4 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 180 270 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C5 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 90 arc
       2 copy moveto
       2 copy  vpt 180 270 arc closepath fill
               vpt 0 360 arc } bind def
/C6 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 90 270 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C7 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 0 270 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C8 { BL [] 0 setdash 2 copy moveto
      2 copy vpt 270 360 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C9 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 270 450 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C10 { BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
       2 copy moveto
       2 copy vpt 90 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C11 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 180 arc closepath fill
       2 copy moveto
       2 copy  vpt 270 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C12 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 180 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C13 { BL [] 0 setdash  2 copy moveto
       2 copy  vpt 0 90 arc closepath fill
       2 copy moveto
       2 copy  vpt 180 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C14 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 90 360 arc closepath fill
               vpt 0 360 arc } bind def
/C15 { BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/Rec   { newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
       neg 0 rlineto closepath } bind def
/Square { dup Rec } bind def
/Bsquare { vpt sub exch vpt sub exch vpt2 Square } bind def
/S0 { BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare } bind def
/S1 { BL [] 0 setdash 2 copy vpt Square fill Bsquare } bind def
/S2 { BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare } bind def
/S3 { BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare } bind def
/S4 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare } bind def
/S5 { BL [] 0 setdash 2 copy 2 copy vpt Square fill
       exch vpt sub exch vpt sub vpt Square fill Bsquare } bind def
/S6 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare } bind def
/S7 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
       2 copy vpt Square fill
       Bsquare } bind def
/S8 { BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare } bind def
/S9 { BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare } bind def
/S10 { BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
       Bsquare } bind def
/S11 { BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
       Bsquare } bind def
/S12 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare } bind def
/S13 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
       2 copy vpt Square fill Bsquare } bind def
/S14 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
       2 copy exch vpt sub exch vpt Square fill Bsquare } bind def
/S15 { BL [] 0 setdash 2 copy Bsquare fill Bsquare } bind def
/D0 { gsave translate 45 rotate 0 0 S0 stroke grestore } bind def
/D1 { gsave translate 45 rotate 0 0 S1 stroke grestore } bind def
/D2 { gsave translate 45 rotate 0 0 S2 stroke grestore } bind def
/D3 { gsave translate 45 rotate 0 0 S3 stroke grestore } bind def
/D4 { gsave translate 45 rotate 0 0 S4 stroke grestore } bind def
/D5 { gsave translate 45 rotate 0 0 S5 stroke grestore } bind def
/D6 { gsave translate 45 rotate 0 0 S6 stroke grestore } bind def
/D7 { gsave translate 45 rotate 0 0 S7 stroke grestore } bind def
/D8 { gsave translate 45 rotate 0 0 S8 stroke grestore } bind def
/D9 { gsave translate 45 rotate 0 0 S9 stroke grestore } bind def
/D10 { gsave translate 45 rotate 0 0 S10 stroke grestore } bind def
/D11 { gsave translate 45 rotate 0 0 S11 stroke grestore } bind def
/D12 { gsave translate 45 rotate 0 0 S12 stroke grestore } bind def
/D13 { gsave translate 45 rotate 0 0 S13 stroke grestore } bind def
/D14 { gsave translate 45 rotate 0 0 S14 stroke grestore } bind def
/D15 { gsave translate 45 rotate 0 0 S15 stroke grestore } bind def
/DiaE { stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke } def
/BoxE { stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke } def
/TriUE { stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke } def
/TriDE { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke } def
/PentE { stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore } def
/CircE { stroke [] 0 setdash 
  hpt 0 360 arc stroke } def
/Opaque { gsave closepath 1 setgray fill grestore 0 setgray closepath } def
/DiaW { stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke } def
/BoxW { stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke } def
/TriUW { stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke } def
/TriDW { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke } def
/PentW { stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore } def
/CircW { stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke } def
/BoxFill { gsave Rec 1 setgray fill grestore } def
/MFshow {{dup dup 0 get findfont exch 1 get scalefont setfont
     [ currentpoint ] exch dup 2 get 0 exch rmoveto dup dup 5 get exch 4 get
     {show} {stringwidth pop 0 rmoveto}ifelse dup 3 get
     {2 get neg 0 exch rmoveto pop} {pop aload pop moveto}ifelse} forall} bind def
/MFwidth {0 exch {dup 3 get{dup dup 0 get findfont exch 1 get scalefont setfont
      5 get stringwidth pop add}
    {pop} ifelse} forall} bind def
/MLshow { currentpoint stroke M
  0 exch R MFshow } bind def
/MRshow { currentpoint stroke M
  exch dup MFwidth neg 3 -1 roll R MFshow } def
/MCshow { currentpoint stroke M
  exch dup MFwidth -2 div 3 -1 roll R MFshow } def
end
%%EndProlog
gnudict begin
gsave
50 50 translate
0.050 0.050 scale
0 setgray
newpath
(Times-Roman) findfont 180 scalefont setfont
1.000 UL
LTb
594 859 M
63 0 V
6237 0 R
-63 0 V
 stroke
486 859 M
[ [(Times-Roman) 180.0 0.0 true true (1)]
] -60.0 MRshow
594 1498 M
63 0 V
6237 0 R
-63 0 V
 stroke
486 1498 M
[ [(Times-Roman) 180.0 0.0 true true (2)]
] -60.0 MRshow
594 2137 M
63 0 V
6237 0 R
-63 0 V
 stroke
486 2137 M
[ [(Times-Roman) 180.0 0.0 true true (3)]
] -60.0 MRshow
594 2775 M
63 0 V
6237 0 R
-63 0 V
 stroke
486 2775 M
[ [(Times-Roman) 180.0 0.0 true true (4)]
] -60.0 MRshow
594 3414 M
63 0 V
6237 0 R
-63 0 V
 stroke
486 3414 M
[ [(Times-Roman) 180.0 0.0 true true (5)]
] -60.0 MRshow
594 4053 M
63 0 V
6237 0 R
-63 0 V
 stroke
486 4053 M
[ [(Times-Roman) 180.0 0.0 true true (6)]
] -60.0 MRshow
1196 540 M
0 63 V
0 3897 R
0 -63 V
 stroke
1196 360 M
[ [(Times-Roman) 180.0 0.0 true true (20)]
] -60.0 MCshow
1829 540 M
0 63 V
0 3897 R
0 -63 V
 stroke
1829 360 M
[ [(Times-Roman) 180.0 0.0 true true (40)]
] -60.0 MCshow
2462 540 M
0 63 V
0 3897 R
0 -63 V
 stroke
2462 360 M
[ [(Times-Roman) 180.0 0.0 true true (60)]
] -60.0 MCshow
3095 540 M
0 63 V
0 3897 R
0 -63 V
 stroke
3095 360 M
[ [(Times-Roman) 180.0 0.0 true true (80)]
] -60.0 MCshow
3728 540 M
0 63 V
0 3897 R
0 -63 V
 stroke
3728 360 M
[ [(Times-Roman) 180.0 0.0 true true (100)]
] -60.0 MCshow
4361 540 M
0 63 V
0 3897 R
0 -63 V
 stroke
4361 360 M
[ [(Times-Roman) 180.0 0.0 true true (120)]
] -60.0 MCshow
4995 540 M
0 63 V
0 3897 R
0 -63 V
 stroke
4995 360 M
[ [(Times-Roman) 180.0 0.0 true true (140)]
] -60.0 MCshow
5628 540 M
0 63 V
0 3897 R
0 -63 V
 stroke
5628 360 M
[ [(Times-Roman) 180.0 0.0 true true (160)]
] -60.0 MCshow
6261 540 M
0 63 V
0 3897 R
0 -63 V
 stroke
6261 360 M
[ [(Times-Roman) 180.0 0.0 true true (180)]
] -60.0 MCshow
6894 540 M
0 63 V
0 3897 R
0 -63 V
 stroke
6894 360 M
[ [(Times-Roman) 180.0 0.0 true true (200)]
] -60.0 MCshow
1.000 UL
LTb
594 540 M
6300 0 V
0 3960 V
-6300 0 V
594 540 L
 stroke
180 2520 M
currentpoint gsave translate 90 rotate 0 0 moveto
[ [(Times-Roman) 180.0 0.0 true true (GSI)]
] -60.0 MCshow
grestore
3744 90 M
[ [(Times-Roman) 180.0 0.0 true true (Octant Size)]
] -60.0 MCshow
3744 4770 M
[ [(Times-Roman) 180.0 0.0 true true (Global Surface Index: Muzzle Refined Mesh)]
] -60.0 MCshow
1.000 UP
1.000 UL
LT0
6075 4347 M
[ [(Times-Roman) 180.0 0.0 true true (2 processors)]
] -60.0 MRshow
6183 4347 M
495 0 V
594 660 M
127 0 V
158 0 V
158 0 V
159 0 V
158 0 V
158 0 V
158 0 V
159 0 V
158 0 V
158 0 V
317 0 V
316 0 V
317 0 V
317 0 V
316 0 V
633 0 V
634 0 V
633 0 V
633 0 V
633 0 V
594 660 Pls
721 660 Pls
879 660 Pls
1037 660 Pls
1196 660 Pls
1354 660 Pls
1512 660 Pls
1670 660 Pls
1829 660 Pls
1987 660 Pls
2145 660 Pls
2462 660 Pls
2778 660 Pls
3095 660 Pls
3412 660 Pls
3728 660 Pls
4361 660 Pls
4995 660 Pls
5628 660 Pls
6261 660 Pls
6894 660 Pls
6430 4347 Pls
1.000 UP
1.000 UL
LT1
6075 4167 M
[ [(Times-Roman) 180.0 0.0 true true (4 processors)]
] -60.0 MRshow
6183 4167 M
495 0 V
594 1610 M
127 0 V
158 0 V
158 1 V
159 0 V
158 0 V
158 0 V
158 0 V
159 0 V
158 0 V
158 0 V
317 0 V
316 0 V
317 0 V
317 -5 V
316 -3 V
633 0 V
634 0 V
633 0 V
633 0 V
633 0 V
594 1610 Crs
721 1610 Crs
879 1610 Crs
1037 1611 Crs
1196 1611 Crs
1354 1611 Crs
1512 1611 Crs
1670 1611 Crs
1829 1611 Crs
1987 1611 Crs
2145 1611 Crs
2462 1611 Crs
2778 1611 Crs
3095 1611 Crs
3412 1606 Crs
3728 1603 Crs
4361 1603 Crs
4995 1603 Crs
5628 1603 Crs
6261 1603 Crs
6894 1603 Crs
6430 4167 Crs
1.000 UP
1.000 UL
LT2
6075 3987 M
[ [(Times-Roman) 180.0 0.0 true true (6 processors)]
] -60.0 MRshow
6183 3987 M
495 0 V
594 2525 M
127 -1 V
158 0 V
158 0 V
159 0 V
158 -6 V
158 0 V
158 0 V
159 0 V
158 0 V
158 0 V
317 0 V
316 -5 V
317 0 V
317 -1 V
316 0 V
633 2 V
634 0 V
633 0 V
633 -12 V
633 0 V
594 2525 Star
721 2524 Star
879 2524 Star
1037 2524 Star
1196 2524 Star
1354 2518 Star
1512 2518 Star
1670 2518 Star
1829 2518 Star
1987 2518 Star
2145 2518 Star
2462 2518 Star
2778 2513 Star
3095 2513 Star
3412 2512 Star
3728 2512 Star
4361 2514 Star
4995 2514 Star
5628 2514 Star
6261 2502 Star
6894 2502 Star
6430 3987 Star
1.000 UP
1.000 UL
LT3
6075 3807 M
[ [(Times-Roman) 180.0 0.0 true true (8 processors)]
] -60.0 MRshow
6183 3807 M
495 0 V
594 2591 M
127 -2 V
158 0 V
158 0 V
159 0 V
158 0 V
158 0 V
158 0 V
159 0 V
158 0 V
158 0 V
317 0 V
316 -8 V
317 0 V
317 -9 V
316 -3 V
633 0 V
634 0 V
633 0 V
633 0 V
633 3 V
594 2591 Box
721 2589 Box
879 2589 Box
1037 2589 Box
1196 2589 Box
1354 2589 Box
1512 2589 Box
1670 2589 Box
1829 2589 Box
1987 2589 Box
2145 2589 Box
2462 2589 Box
2778 2581 Box
3095 2581 Box
3412 2572 Box
3728 2569 Box
4361 2569 Box
4995 2569 Box
5628 2569 Box
6261 2569 Box
6894 2572 Box
6430 3807 Box
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Times-Roman

%%EndDocument
 @endspecial 25328 w @beginspecial 50 @llx 50 @lly 410
@urx 302 @ury 2160 @rwi @setspecial
%%BeginDocument: graphs/octpart/partition/avg_proc_adj/muzzle-refined-avgAdj-2.eps
%!PS-Adobe-2.0 EPSF-2.0
%%Title: muzzle-refined-avgAdj-color-2.eps
%%Creator: gnuplot 3.7 patchlevel 0
%%CreationDate: Thu Jul 18 17:20:59 2002
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 410 302
%%Orientation: Portrait
%%EndComments
/gnudict 256 dict def
gnudict begin
/Color false def
/Solid false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
/vshift -60 def
/dl {10 mul} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow { currentpoint stroke M
  0 vshift R show } def
/Rshow { currentpoint stroke M
  dup stringwidth pop neg vshift R show } def
/Cshow { currentpoint stroke M
  dup stringwidth pop -2 div vshift R show } def
/UP { dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def } def
/DL { Color {setrgbcolor Solid {pop []} if 0 setdash }
 {pop pop pop Solid {pop []} if 0 setdash} ifelse } def
/BL { stroke gnulinewidth 2 mul setlinewidth } def
/AL { stroke gnulinewidth 2 div setlinewidth } def
/UL { gnulinewidth mul /userlinewidth exch def } def
/PL { stroke userlinewidth setlinewidth } def
/LTb { BL [] 0 0 0 DL } def
/LTa { AL [1 dl 2 dl] 0 setdash 0 0 0 setrgbcolor } def
/LT0 { PL [] 1 0 0 DL } def
/LT1 { PL [4 dl 2 dl] 0 1 0 DL } def
/LT2 { PL [2 dl 3 dl] 0 0 1 DL } def
/LT3 { PL [1 dl 1.5 dl] 1 0 1 DL } def
/LT4 { PL [5 dl 2 dl 1 dl 2 dl] 0 1 1 DL } def
/LT5 { PL [4 dl 3 dl 1 dl 3 dl] 1 1 0 DL } def
/LT6 { PL [2 dl 2 dl 2 dl 4 dl] 0 0 0 DL } def
/LT7 { PL [2 dl 2 dl 2 dl 2 dl 2 dl 4 dl] 1 0.3 0 DL } def
/LT8 { PL [2 dl 2 dl 2 dl 2 dl 2 dl 2 dl 2 dl 4 dl] 0.5 0.5 0.5 DL } def
/Pnt { stroke [] 0 setdash
   gsave 1 setlinecap M 0 0 V stroke grestore } def
/Dia { stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt } def
/Pls { stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
  } def
/Box { stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt } def
/Crs { stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke } def
/TriU { stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt  } def
/Star { 2 copy Pls Crs } def
/BoxF { stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V  hpt2 0 V  0 vpt2 V
  hpt2 neg 0 V  closepath fill } def
/TriUF { stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill } def
/TriD { stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt  } def
/TriDF { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF { stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill } def
/Pent { stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt } def
/PentF { stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore } def
/Circle { stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt } def
/CircleF { stroke [] 0 setdash hpt 0 360 arc fill } def
/C0 { BL [] 0 setdash 2 copy moveto vpt 90 450  arc } bind def
/C1 { BL [] 0 setdash 2 copy        moveto
       2 copy  vpt 0 90 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C2 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 90 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C3 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C4 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 180 270 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C5 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 90 arc
       2 copy moveto
       2 copy  vpt 180 270 arc closepath fill
               vpt 0 360 arc } bind def
/C6 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 90 270 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C7 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 0 270 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C8 { BL [] 0 setdash 2 copy moveto
      2 copy vpt 270 360 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C9 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 270 450 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C10 { BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
       2 copy moveto
       2 copy vpt 90 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C11 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 180 arc closepath fill
       2 copy moveto
       2 copy  vpt 270 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C12 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 180 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C13 { BL [] 0 setdash  2 copy moveto
       2 copy  vpt 0 90 arc closepath fill
       2 copy moveto
       2 copy  vpt 180 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C14 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 90 360 arc closepath fill
               vpt 0 360 arc } bind def
/C15 { BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/Rec   { newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
       neg 0 rlineto closepath } bind def
/Square { dup Rec } bind def
/Bsquare { vpt sub exch vpt sub exch vpt2 Square } bind def
/S0 { BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare } bind def
/S1 { BL [] 0 setdash 2 copy vpt Square fill Bsquare } bind def
/S2 { BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare } bind def
/S3 { BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare } bind def
/S4 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare } bind def
/S5 { BL [] 0 setdash 2 copy 2 copy vpt Square fill
       exch vpt sub exch vpt sub vpt Square fill Bsquare } bind def
/S6 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare } bind def
/S7 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
       2 copy vpt Square fill
       Bsquare } bind def
/S8 { BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare } bind def
/S9 { BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare } bind def
/S10 { BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
       Bsquare } bind def
/S11 { BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
       Bsquare } bind def
/S12 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare } bind def
/S13 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
       2 copy vpt Square fill Bsquare } bind def
/S14 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
       2 copy exch vpt sub exch vpt Square fill Bsquare } bind def
/S15 { BL [] 0 setdash 2 copy Bsquare fill Bsquare } bind def
/D0 { gsave translate 45 rotate 0 0 S0 stroke grestore } bind def
/D1 { gsave translate 45 rotate 0 0 S1 stroke grestore } bind def
/D2 { gsave translate 45 rotate 0 0 S2 stroke grestore } bind def
/D3 { gsave translate 45 rotate 0 0 S3 stroke grestore } bind def
/D4 { gsave translate 45 rotate 0 0 S4 stroke grestore } bind def
/D5 { gsave translate 45 rotate 0 0 S5 stroke grestore } bind def
/D6 { gsave translate 45 rotate 0 0 S6 stroke grestore } bind def
/D7 { gsave translate 45 rotate 0 0 S7 stroke grestore } bind def
/D8 { gsave translate 45 rotate 0 0 S8 stroke grestore } bind def
/D9 { gsave translate 45 rotate 0 0 S9 stroke grestore } bind def
/D10 { gsave translate 45 rotate 0 0 S10 stroke grestore } bind def
/D11 { gsave translate 45 rotate 0 0 S11 stroke grestore } bind def
/D12 { gsave translate 45 rotate 0 0 S12 stroke grestore } bind def
/D13 { gsave translate 45 rotate 0 0 S13 stroke grestore } bind def
/D14 { gsave translate 45 rotate 0 0 S14 stroke grestore } bind def
/D15 { gsave translate 45 rotate 0 0 S15 stroke grestore } bind def
/DiaE { stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke } def
/BoxE { stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke } def
/TriUE { stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke } def
/TriDE { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke } def
/PentE { stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore } def
/CircE { stroke [] 0 setdash 
  hpt 0 360 arc stroke } def
/Opaque { gsave closepath 1 setgray fill grestore 0 setgray closepath } def
/DiaW { stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke } def
/BoxW { stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke } def
/TriUW { stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke } def
/TriDW { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke } def
/PentW { stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore } def
/CircW { stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke } def
/BoxFill { gsave Rec 1 setgray fill grestore } def
/MFshow {{dup dup 0 get findfont exch 1 get scalefont setfont
     [ currentpoint ] exch dup 2 get 0 exch rmoveto dup dup 5 get exch 4 get
     {show} {stringwidth pop 0 rmoveto}ifelse dup 3 get
     {2 get neg 0 exch rmoveto pop} {pop aload pop moveto}ifelse} forall} bind def
/MFwidth {0 exch {dup 3 get{dup dup 0 get findfont exch 1 get scalefont setfont
      5 get stringwidth pop add}
    {pop} ifelse} forall} bind def
/MLshow { currentpoint stroke M
  0 exch R MFshow } bind def
/MRshow { currentpoint stroke M
  exch dup MFwidth neg 3 -1 roll R MFshow } def
/MCshow { currentpoint stroke M
  exch dup MFwidth -2 div 3 -1 roll R MFshow } def
end
%%EndProlog
gnudict begin
gsave
50 50 translate
0.050 0.050 scale
0 setgray
newpath
(Times-Roman) findfont 180 scalefont setfont
1.000 UL
LTb
810 870 M
63 0 V
6021 0 R
-63 0 V
 stroke
702 870 M
[ [(Times-Roman) 180.0 0.0 true true (50)]
] -60.0 MRshow
810 1530 M
63 0 V
6021 0 R
-63 0 V
 stroke
702 1530 M
[ [(Times-Roman) 180.0 0.0 true true (60)]
] -60.0 MRshow
810 2190 M
63 0 V
6021 0 R
-63 0 V
 stroke
702 2190 M
[ [(Times-Roman) 180.0 0.0 true true (70)]
] -60.0 MRshow
810 2850 M
63 0 V
6021 0 R
-63 0 V
 stroke
702 2850 M
[ [(Times-Roman) 180.0 0.0 true true (80)]
] -60.0 MRshow
810 3510 M
63 0 V
6021 0 R
-63 0 V
 stroke
702 3510 M
[ [(Times-Roman) 180.0 0.0 true true (90)]
] -60.0 MRshow
810 4170 M
63 0 V
6021 0 R
-63 0 V
 stroke
702 4170 M
[ [(Times-Roman) 180.0 0.0 true true (100)]
] -60.0 MRshow
1391 540 M
0 63 V
0 3897 R
0 -63 V
 stroke
1391 360 M
[ [(Times-Roman) 180.0 0.0 true true (20)]
] -60.0 MCshow
2002 540 M
0 63 V
0 3897 R
0 -63 V
 stroke
2002 360 M
[ [(Times-Roman) 180.0 0.0 true true (40)]
] -60.0 MCshow
2614 540 M
0 63 V
0 3897 R
0 -63 V
 stroke
2614 360 M
[ [(Times-Roman) 180.0 0.0 true true (60)]
] -60.0 MCshow
3225 540 M
0 63 V
0 3897 R
0 -63 V
 stroke
3225 360 M
[ [(Times-Roman) 180.0 0.0 true true (80)]
] -60.0 MCshow
3837 540 M
0 63 V
0 3897 R
0 -63 V
 stroke
3837 360 M
[ [(Times-Roman) 180.0 0.0 true true (100)]
] -60.0 MCshow
4448 540 M
0 63 V
0 3897 R
0 -63 V
 stroke
4448 360 M
[ [(Times-Roman) 180.0 0.0 true true (120)]
] -60.0 MCshow
5060 540 M
0 63 V
0 3897 R
0 -63 V
 stroke
5060 360 M
[ [(Times-Roman) 180.0 0.0 true true (140)]
] -60.0 MCshow
5671 540 M
0 63 V
0 3897 R
0 -63 V
 stroke
5671 360 M
[ [(Times-Roman) 180.0 0.0 true true (160)]
] -60.0 MCshow
6283 540 M
0 63 V
0 3897 R
0 -63 V
 stroke
6283 360 M
[ [(Times-Roman) 180.0 0.0 true true (180)]
] -60.0 MCshow
6894 540 M
0 63 V
0 3897 R
0 -63 V
 stroke
6894 360 M
[ [(Times-Roman) 180.0 0.0 true true (200)]
] -60.0 MCshow
1.000 UL
LTb
810 540 M
6084 0 V
0 3960 V
-6084 0 V
810 540 L
 stroke
180 2520 M
currentpoint gsave translate 90 rotate 0 0 moveto
[ [(Times-Roman) 180.0 0.0 true true (Interprocessor Adjacency)]
] -60.0 MCshow
grestore
3852 90 M
[ [(Times-Roman) 180.0 0.0 true true (Octant Size)]
] -60.0 MCshow
3852 4770 M
[ [(Times-Roman) 180.0 0.0 true true (Average Interprocessor Adjacency: Muzzle-Refined Mesh)]
] -60.0 MCshow
1.000 UP
1.000 UL
LT0
6175 1266 M
[ [(Times-Roman) 180.0 0.0 true true (2 processors)]
] -60.0 MRshow
6283 1266 M
495 0 V
810 4170 M
122 0 V
153 0 V
153 0 V
153 0 V
153 0 V
153 0 V
152 0 V
153 0 V
153 0 V
153 0 V
306 0 V
306 0 V
305 0 V
306 0 V
306 0 V
611 0 V
612 0 V
611 0 V
612 0 V
611 0 V
810 4170 Pls
932 4170 Pls
1085 4170 Pls
1238 4170 Pls
1391 4170 Pls
1544 4170 Pls
1697 4170 Pls
1849 4170 Pls
2002 4170 Pls
2155 4170 Pls
2308 4170 Pls
2614 4170 Pls
2920 4170 Pls
3225 4170 Pls
3531 4170 Pls
3837 4170 Pls
4448 4170 Pls
5060 4170 Pls
5671 4170 Pls
6283 4170 Pls
6894 4170 Pls
6530 1266 Pls
1.000 UP
1.000 UL
LT1
6175 1086 M
[ [(Times-Roman) 180.0 0.0 true true (4 processors)]
] -60.0 MRshow
6283 1086 M
495 0 V
810 4170 M
122 0 V
153 0 V
153 0 V
153 0 V
153 0 V
153 0 V
152 0 V
153 0 V
153 0 V
153 0 V
306 0 V
306 0 V
305 0 V
306 0 V
306 0 V
611 0 V
612 0 V
611 0 V
612 0 V
611 0 V
810 4170 Crs
932 4170 Crs
1085 4170 Crs
1238 4170 Crs
1391 4170 Crs
1544 4170 Crs
1697 4170 Crs
1849 4170 Crs
2002 4170 Crs
2155 4170 Crs
2308 4170 Crs
2614 4170 Crs
2920 4170 Crs
3225 4170 Crs
3531 4170 Crs
3837 4170 Crs
4448 4170 Crs
5060 4170 Crs
5671 4170 Crs
6283 4170 Crs
6894 4170 Crs
6530 1086 Crs
1.000 UP
1.000 UL
LT2
6175 906 M
[ [(Times-Roman) 180.0 0.0 true true (6 processors)]
] -60.0 MRshow
6283 906 M
495 0 V
810 3290 M
122 0 V
153 0 V
153 0 V
153 0 V
153 0 V
153 0 V
152 0 V
153 0 V
153 0 V
153 0 V
306 0 V
306 0 V
305 0 V
306 0 V
306 0 V
611 0 V
612 0 V
611 0 V
612 0 V
611 0 V
810 3290 Star
932 3290 Star
1085 3290 Star
1238 3290 Star
1391 3290 Star
1544 3290 Star
1697 3290 Star
1849 3290 Star
2002 3290 Star
2155 3290 Star
2308 3290 Star
2614 3290 Star
2920 3290 Star
3225 3290 Star
3531 3290 Star
3837 3290 Star
4448 3290 Star
5060 3290 Star
5671 3290 Star
6283 3290 Star
6894 3290 Star
6530 906 Star
1.000 UP
1.000 UL
LT3
6175 726 M
[ [(Times-Roman) 180.0 0.0 true true (8 processors)]
] -60.0 MRshow
6283 726 M
495 0 V
810 3463 M
122 0 V
153 0 V
153 0 V
153 0 V
153 0 V
153 0 V
152 0 V
153 0 V
153 0 V
153 0 V
306 0 V
306 0 V
305 0 V
306 0 V
306 0 V
611 0 V
612 0 V
611 0 V
612 0 V
611 0 V
810 3463 Box
932 3463 Box
1085 3463 Box
1238 3463 Box
1391 3463 Box
1544 3463 Box
1697 3463 Box
1849 3463 Box
2002 3463 Box
2155 3463 Box
2308 3463 Box
2614 3463 Box
2920 3463 Box
3225 3463 Box
3531 3463 Box
3837 3463 Box
4448 3463 Box
5060 3463 Box
5671 3463 Box
6283 3463 Box
6894 3463 Box
6530 726 Box
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Times-Roman

%%EndDocument
 @endspecial 51523 17422 V 866 34703 V 1553 34222 a @beginspecial
50 @llx 50 @lly 410 @urx 302 @ury 2160 @rwi @setspecial
%%BeginDocument: graphs/octpart/partition/gsi/muzzle-refined-GSI-10.eps
%!PS-Adobe-2.0 EPSF-2.0
%%Title: muzzle-refined-GSI-color-10.eps
%%Creator: gnuplot 3.7 patchlevel 0
%%CreationDate: Thu Jul 18 17:20:59 2002
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 410 302
%%Orientation: Portrait
%%EndComments
/gnudict 256 dict def
gnudict begin
/Color false def
/Solid false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
/vshift -60 def
/dl {10 mul} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow { currentpoint stroke M
  0 vshift R show } def
/Rshow { currentpoint stroke M
  dup stringwidth pop neg vshift R show } def
/Cshow { currentpoint stroke M
  dup stringwidth pop -2 div vshift R show } def
/UP { dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def } def
/DL { Color {setrgbcolor Solid {pop []} if 0 setdash }
 {pop pop pop Solid {pop []} if 0 setdash} ifelse } def
/BL { stroke gnulinewidth 2 mul setlinewidth } def
/AL { stroke gnulinewidth 2 div setlinewidth } def
/UL { gnulinewidth mul /userlinewidth exch def } def
/PL { stroke userlinewidth setlinewidth } def
/LTb { BL [] 0 0 0 DL } def
/LTa { AL [1 dl 2 dl] 0 setdash 0 0 0 setrgbcolor } def
/LT0 { PL [] 1 0 0 DL } def
/LT1 { PL [4 dl 2 dl] 0 1 0 DL } def
/LT2 { PL [2 dl 3 dl] 0 0 1 DL } def
/LT3 { PL [1 dl 1.5 dl] 1 0 1 DL } def
/LT4 { PL [5 dl 2 dl 1 dl 2 dl] 0 1 1 DL } def
/LT5 { PL [4 dl 3 dl 1 dl 3 dl] 1 1 0 DL } def
/LT6 { PL [2 dl 2 dl 2 dl 4 dl] 0 0 0 DL } def
/LT7 { PL [2 dl 2 dl 2 dl 2 dl 2 dl 4 dl] 1 0.3 0 DL } def
/LT8 { PL [2 dl 2 dl 2 dl 2 dl 2 dl 2 dl 2 dl 4 dl] 0.5 0.5 0.5 DL } def
/Pnt { stroke [] 0 setdash
   gsave 1 setlinecap M 0 0 V stroke grestore } def
/Dia { stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt } def
/Pls { stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
  } def
/Box { stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt } def
/Crs { stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke } def
/TriU { stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt  } def
/Star { 2 copy Pls Crs } def
/BoxF { stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V  hpt2 0 V  0 vpt2 V
  hpt2 neg 0 V  closepath fill } def
/TriUF { stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill } def
/TriD { stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt  } def
/TriDF { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF { stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill } def
/Pent { stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt } def
/PentF { stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore } def
/Circle { stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt } def
/CircleF { stroke [] 0 setdash hpt 0 360 arc fill } def
/C0 { BL [] 0 setdash 2 copy moveto vpt 90 450  arc } bind def
/C1 { BL [] 0 setdash 2 copy        moveto
       2 copy  vpt 0 90 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C2 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 90 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C3 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C4 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 180 270 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C5 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 90 arc
       2 copy moveto
       2 copy  vpt 180 270 arc closepath fill
               vpt 0 360 arc } bind def
/C6 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 90 270 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C7 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 0 270 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C8 { BL [] 0 setdash 2 copy moveto
      2 copy vpt 270 360 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C9 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 270 450 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C10 { BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
       2 copy moveto
       2 copy vpt 90 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C11 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 180 arc closepath fill
       2 copy moveto
       2 copy  vpt 270 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C12 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 180 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C13 { BL [] 0 setdash  2 copy moveto
       2 copy  vpt 0 90 arc closepath fill
       2 copy moveto
       2 copy  vpt 180 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C14 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 90 360 arc closepath fill
               vpt 0 360 arc } bind def
/C15 { BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/Rec   { newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
       neg 0 rlineto closepath } bind def
/Square { dup Rec } bind def
/Bsquare { vpt sub exch vpt sub exch vpt2 Square } bind def
/S0 { BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare } bind def
/S1 { BL [] 0 setdash 2 copy vpt Square fill Bsquare } bind def
/S2 { BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare } bind def
/S3 { BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare } bind def
/S4 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare } bind def
/S5 { BL [] 0 setdash 2 copy 2 copy vpt Square fill
       exch vpt sub exch vpt sub vpt Square fill Bsquare } bind def
/S6 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare } bind def
/S7 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
       2 copy vpt Square fill
       Bsquare } bind def
/S8 { BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare } bind def
/S9 { BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare } bind def
/S10 { BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
       Bsquare } bind def
/S11 { BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
       Bsquare } bind def
/S12 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare } bind def
/S13 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
       2 copy vpt Square fill Bsquare } bind def
/S14 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
       2 copy exch vpt sub exch vpt Square fill Bsquare } bind def
/S15 { BL [] 0 setdash 2 copy Bsquare fill Bsquare } bind def
/D0 { gsave translate 45 rotate 0 0 S0 stroke grestore } bind def
/D1 { gsave translate 45 rotate 0 0 S1 stroke grestore } bind def
/D2 { gsave translate 45 rotate 0 0 S2 stroke grestore } bind def
/D3 { gsave translate 45 rotate 0 0 S3 stroke grestore } bind def
/D4 { gsave translate 45 rotate 0 0 S4 stroke grestore } bind def
/D5 { gsave translate 45 rotate 0 0 S5 stroke grestore } bind def
/D6 { gsave translate 45 rotate 0 0 S6 stroke grestore } bind def
/D7 { gsave translate 45 rotate 0 0 S7 stroke grestore } bind def
/D8 { gsave translate 45 rotate 0 0 S8 stroke grestore } bind def
/D9 { gsave translate 45 rotate 0 0 S9 stroke grestore } bind def
/D10 { gsave translate 45 rotate 0 0 S10 stroke grestore } bind def
/D11 { gsave translate 45 rotate 0 0 S11 stroke grestore } bind def
/D12 { gsave translate 45 rotate 0 0 S12 stroke grestore } bind def
/D13 { gsave translate 45 rotate 0 0 S13 stroke grestore } bind def
/D14 { gsave translate 45 rotate 0 0 S14 stroke grestore } bind def
/D15 { gsave translate 45 rotate 0 0 S15 stroke grestore } bind def
/DiaE { stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke } def
/BoxE { stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke } def
/TriUE { stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke } def
/TriDE { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke } def
/PentE { stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore } def
/CircE { stroke [] 0 setdash 
  hpt 0 360 arc stroke } def
/Opaque { gsave closepath 1 setgray fill grestore 0 setgray closepath } def
/DiaW { stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke } def
/BoxW { stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke } def
/TriUW { stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke } def
/TriDW { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke } def
/PentW { stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore } def
/CircW { stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke } def
/BoxFill { gsave Rec 1 setgray fill grestore } def
/MFshow {{dup dup 0 get findfont exch 1 get scalefont setfont
     [ currentpoint ] exch dup 2 get 0 exch rmoveto dup dup 5 get exch 4 get
     {show} {stringwidth pop 0 rmoveto}ifelse dup 3 get
     {2 get neg 0 exch rmoveto pop} {pop aload pop moveto}ifelse} forall} bind def
/MFwidth {0 exch {dup 3 get{dup dup 0 get findfont exch 1 get scalefont setfont
      5 get stringwidth pop add}
    {pop} ifelse} forall} bind def
/MLshow { currentpoint stroke M
  0 exch R MFshow } bind def
/MRshow { currentpoint stroke M
  exch dup MFwidth neg 3 -1 roll R MFshow } def
/MCshow { currentpoint stroke M
  exch dup MFwidth -2 div 3 -1 roll R MFshow } def
end
%%EndProlog
gnudict begin
gsave
50 50 translate
0.050 0.050 scale
0 setgray
newpath
(Times-Roman) findfont 180 scalefont setfont
1.000 UL
LTb
594 859 M
63 0 V
6237 0 R
-63 0 V
 stroke
486 859 M
[ [(Times-Roman) 180.0 0.0 true true (1)]
] -60.0 MRshow
594 1498 M
63 0 V
6237 0 R
-63 0 V
 stroke
486 1498 M
[ [(Times-Roman) 180.0 0.0 true true (2)]
] -60.0 MRshow
594 2137 M
63 0 V
6237 0 R
-63 0 V
 stroke
486 2137 M
[ [(Times-Roman) 180.0 0.0 true true (3)]
] -60.0 MRshow
594 2775 M
63 0 V
6237 0 R
-63 0 V
 stroke
486 2775 M
[ [(Times-Roman) 180.0 0.0 true true (4)]
] -60.0 MRshow
594 3414 M
63 0 V
6237 0 R
-63 0 V
 stroke
486 3414 M
[ [(Times-Roman) 180.0 0.0 true true (5)]
] -60.0 MRshow
594 4053 M
63 0 V
6237 0 R
-63 0 V
 stroke
486 4053 M
[ [(Times-Roman) 180.0 0.0 true true (6)]
] -60.0 MRshow
1196 540 M
0 63 V
0 3897 R
0 -63 V
 stroke
1196 360 M
[ [(Times-Roman) 180.0 0.0 true true (20)]
] -60.0 MCshow
1829 540 M
0 63 V
0 3897 R
0 -63 V
 stroke
1829 360 M
[ [(Times-Roman) 180.0 0.0 true true (40)]
] -60.0 MCshow
2462 540 M
0 63 V
0 3897 R
0 -63 V
 stroke
2462 360 M
[ [(Times-Roman) 180.0 0.0 true true (60)]
] -60.0 MCshow
3095 540 M
0 63 V
0 3897 R
0 -63 V
 stroke
3095 360 M
[ [(Times-Roman) 180.0 0.0 true true (80)]
] -60.0 MCshow
3728 540 M
0 63 V
0 3897 R
0 -63 V
 stroke
3728 360 M
[ [(Times-Roman) 180.0 0.0 true true (100)]
] -60.0 MCshow
4361 540 M
0 63 V
0 3897 R
0 -63 V
 stroke
4361 360 M
[ [(Times-Roman) 180.0 0.0 true true (120)]
] -60.0 MCshow
4995 540 M
0 63 V
0 3897 R
0 -63 V
 stroke
4995 360 M
[ [(Times-Roman) 180.0 0.0 true true (140)]
] -60.0 MCshow
5628 540 M
0 63 V
0 3897 R
0 -63 V
 stroke
5628 360 M
[ [(Times-Roman) 180.0 0.0 true true (160)]
] -60.0 MCshow
6261 540 M
0 63 V
0 3897 R
0 -63 V
 stroke
6261 360 M
[ [(Times-Roman) 180.0 0.0 true true (180)]
] -60.0 MCshow
6894 540 M
0 63 V
0 3897 R
0 -63 V
 stroke
6894 360 M
[ [(Times-Roman) 180.0 0.0 true true (200)]
] -60.0 MCshow
1.000 UL
LTb
594 540 M
6300 0 V
0 3960 V
-6300 0 V
594 540 L
 stroke
180 2520 M
currentpoint gsave translate 90 rotate 0 0 moveto
[ [(Times-Roman) 180.0 0.0 true true (GSI)]
] -60.0 MCshow
grestore
3744 90 M
[ [(Times-Roman) 180.0 0.0 true true (Octant Size)]
] -60.0 MCshow
3744 4770 M
[ [(Times-Roman) 180.0 0.0 true true (Global Surface Index: Muzzle Refined Mesh)]
] -60.0 MCshow
1.000 UP
1.000 UL
LT0
6075 4347 M
[ [(Times-Roman) 180.0 0.0 true true (10 processors)]
] -60.0 MRshow
6183 4347 M
495 0 V
594 3081 M
127 2 V
158 1 V
158 -1 V
159 -6 V
158 0 V
158 -4 V
158 0 V
159 0 V
158 0 V
158 0 V
317 0 V
316 -5 V
317 0 V
317 0 V
316 0 V
633 -5 V
634 -9 V
633 4 V
633 4 V
633 0 V
594 3081 Pls
721 3083 Pls
879 3084 Pls
1037 3083 Pls
1196 3077 Pls
1354 3077 Pls
1512 3073 Pls
1670 3073 Pls
1829 3073 Pls
1987 3073 Pls
2145 3073 Pls
2462 3073 Pls
2778 3068 Pls
3095 3068 Pls
3412 3068 Pls
3728 3068 Pls
4361 3063 Pls
4995 3054 Pls
5628 3058 Pls
6261 3062 Pls
6894 3062 Pls
6430 4347 Pls
1.000 UP
1.000 UL
LT1
6075 4167 M
[ [(Times-Roman) 180.0 0.0 true true (12 processors)]
] -60.0 MRshow
6183 4167 M
495 0 V
594 3501 M
127 -2 V
158 -2 V
158 0 V
159 0 V
158 -8 V
158 0 V
158 -1 V
159 0 V
158 0 V
158 0 V
317 0 V
316 -4 V
317 0 V
317 -19 V
316 -2 V
633 4 V
634 -11 V
633 0 V
633 -13 V
633 0 V
594 3501 Crs
721 3499 Crs
879 3497 Crs
1037 3497 Crs
1196 3497 Crs
1354 3489 Crs
1512 3489 Crs
1670 3488 Crs
1829 3488 Crs
1987 3488 Crs
2145 3488 Crs
2462 3488 Crs
2778 3484 Crs
3095 3484 Crs
3412 3465 Crs
3728 3463 Crs
4361 3467 Crs
4995 3456 Crs
5628 3456 Crs
6261 3443 Crs
6894 3443 Crs
6430 4167 Crs
1.000 UP
1.000 UL
LT2
6075 3987 M
[ [(Times-Roman) 180.0 0.0 true true (14 processors)]
] -60.0 MRshow
6183 3987 M
495 0 V
594 3518 M
127 -3 V
158 -4 V
158 -4 V
159 -8 V
158 -10 V
158 -4 V
158 0 V
159 0 V
158 0 V
158 0 V
317 6 V
316 0 V
317 0 V
317 -11 V
316 -24 V
633 -19 V
634 0 V
633 0 V
633 0 V
633 -3 V
594 3518 Star
721 3515 Star
879 3511 Star
1037 3507 Star
1196 3499 Star
1354 3489 Star
1512 3485 Star
1670 3485 Star
1829 3485 Star
1987 3485 Star
2145 3485 Star
2462 3491 Star
2778 3491 Star
3095 3491 Star
3412 3480 Star
3728 3456 Star
4361 3437 Star
4995 3437 Star
5628 3437 Star
6261 3437 Star
6894 3434 Star
6430 3987 Star
1.000 UP
1.000 UL
LT3
6075 3807 M
[ [(Times-Roman) 180.0 0.0 true true (16 processors)]
] -60.0 MRshow
6183 3807 M
495 0 V
594 3706 M
127 -2 V
158 0 V
158 -3 V
159 1 V
158 -3 V
158 -2 V
158 0 V
159 0 V
158 0 V
158 -2 V
317 0 V
316 -6 V
317 0 V
317 -7 V
316 -3 V
633 0 V
634 -20 V
633 -10 V
633 0 V
633 0 V
594 3706 Box
721 3704 Box
879 3704 Box
1037 3701 Box
1196 3702 Box
1354 3699 Box
1512 3697 Box
1670 3697 Box
1829 3697 Box
1987 3697 Box
2145 3695 Box
2462 3695 Box
2778 3689 Box
3095 3689 Box
3412 3682 Box
3728 3679 Box
4361 3679 Box
4995 3659 Box
5628 3649 Box
6261 3649 Box
6894 3649 Box
6430 3807 Box
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Times-Roman

%%EndDocument
 @endspecial 25328 w @beginspecial 50 @llx 50 @lly 410
@urx 302 @ury 2160 @rwi @setspecial
%%BeginDocument: graphs/octpart/partition/avg_proc_adj/muzzle-refined-avgAdj-10.eps
%!PS-Adobe-2.0 EPSF-2.0
%%Title: muzzle-refined-avgAdj-color-10.eps
%%Creator: gnuplot 3.7 patchlevel 0
%%CreationDate: Thu Jul 18 17:20:59 2002
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 410 302
%%Orientation: Portrait
%%EndComments
/gnudict 256 dict def
gnudict begin
/Color false def
/Solid false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
/vshift -60 def
/dl {10 mul} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow { currentpoint stroke M
  0 vshift R show } def
/Rshow { currentpoint stroke M
  dup stringwidth pop neg vshift R show } def
/Cshow { currentpoint stroke M
  dup stringwidth pop -2 div vshift R show } def
/UP { dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def } def
/DL { Color {setrgbcolor Solid {pop []} if 0 setdash }
 {pop pop pop Solid {pop []} if 0 setdash} ifelse } def
/BL { stroke gnulinewidth 2 mul setlinewidth } def
/AL { stroke gnulinewidth 2 div setlinewidth } def
/UL { gnulinewidth mul /userlinewidth exch def } def
/PL { stroke userlinewidth setlinewidth } def
/LTb { BL [] 0 0 0 DL } def
/LTa { AL [1 dl 2 dl] 0 setdash 0 0 0 setrgbcolor } def
/LT0 { PL [] 1 0 0 DL } def
/LT1 { PL [4 dl 2 dl] 0 1 0 DL } def
/LT2 { PL [2 dl 3 dl] 0 0 1 DL } def
/LT3 { PL [1 dl 1.5 dl] 1 0 1 DL } def
/LT4 { PL [5 dl 2 dl 1 dl 2 dl] 0 1 1 DL } def
/LT5 { PL [4 dl 3 dl 1 dl 3 dl] 1 1 0 DL } def
/LT6 { PL [2 dl 2 dl 2 dl 4 dl] 0 0 0 DL } def
/LT7 { PL [2 dl 2 dl 2 dl 2 dl 2 dl 4 dl] 1 0.3 0 DL } def
/LT8 { PL [2 dl 2 dl 2 dl 2 dl 2 dl 2 dl 2 dl 4 dl] 0.5 0.5 0.5 DL } def
/Pnt { stroke [] 0 setdash
   gsave 1 setlinecap M 0 0 V stroke grestore } def
/Dia { stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt } def
/Pls { stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
  } def
/Box { stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt } def
/Crs { stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke } def
/TriU { stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt  } def
/Star { 2 copy Pls Crs } def
/BoxF { stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V  hpt2 0 V  0 vpt2 V
  hpt2 neg 0 V  closepath fill } def
/TriUF { stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill } def
/TriD { stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt  } def
/TriDF { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF { stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill } def
/Pent { stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt } def
/PentF { stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore } def
/Circle { stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt } def
/CircleF { stroke [] 0 setdash hpt 0 360 arc fill } def
/C0 { BL [] 0 setdash 2 copy moveto vpt 90 450  arc } bind def
/C1 { BL [] 0 setdash 2 copy        moveto
       2 copy  vpt 0 90 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C2 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 90 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C3 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C4 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 180 270 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C5 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 90 arc
       2 copy moveto
       2 copy  vpt 180 270 arc closepath fill
               vpt 0 360 arc } bind def
/C6 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 90 270 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C7 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 0 270 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C8 { BL [] 0 setdash 2 copy moveto
      2 copy vpt 270 360 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C9 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 270 450 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C10 { BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
       2 copy moveto
       2 copy vpt 90 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C11 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 180 arc closepath fill
       2 copy moveto
       2 copy  vpt 270 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C12 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 180 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C13 { BL [] 0 setdash  2 copy moveto
       2 copy  vpt 0 90 arc closepath fill
       2 copy moveto
       2 copy  vpt 180 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C14 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 90 360 arc closepath fill
               vpt 0 360 arc } bind def
/C15 { BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/Rec   { newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
       neg 0 rlineto closepath } bind def
/Square { dup Rec } bind def
/Bsquare { vpt sub exch vpt sub exch vpt2 Square } bind def
/S0 { BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare } bind def
/S1 { BL [] 0 setdash 2 copy vpt Square fill Bsquare } bind def
/S2 { BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare } bind def
/S3 { BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare } bind def
/S4 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare } bind def
/S5 { BL [] 0 setdash 2 copy 2 copy vpt Square fill
       exch vpt sub exch vpt sub vpt Square fill Bsquare } bind def
/S6 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare } bind def
/S7 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
       2 copy vpt Square fill
       Bsquare } bind def
/S8 { BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare } bind def
/S9 { BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare } bind def
/S10 { BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
       Bsquare } bind def
/S11 { BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
       Bsquare } bind def
/S12 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare } bind def
/S13 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
       2 copy vpt Square fill Bsquare } bind def
/S14 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
       2 copy exch vpt sub exch vpt Square fill Bsquare } bind def
/S15 { BL [] 0 setdash 2 copy Bsquare fill Bsquare } bind def
/D0 { gsave translate 45 rotate 0 0 S0 stroke grestore } bind def
/D1 { gsave translate 45 rotate 0 0 S1 stroke grestore } bind def
/D2 { gsave translate 45 rotate 0 0 S2 stroke grestore } bind def
/D3 { gsave translate 45 rotate 0 0 S3 stroke grestore } bind def
/D4 { gsave translate 45 rotate 0 0 S4 stroke grestore } bind def
/D5 { gsave translate 45 rotate 0 0 S5 stroke grestore } bind def
/D6 { gsave translate 45 rotate 0 0 S6 stroke grestore } bind def
/D7 { gsave translate 45 rotate 0 0 S7 stroke grestore } bind def
/D8 { gsave translate 45 rotate 0 0 S8 stroke grestore } bind def
/D9 { gsave translate 45 rotate 0 0 S9 stroke grestore } bind def
/D10 { gsave translate 45 rotate 0 0 S10 stroke grestore } bind def
/D11 { gsave translate 45 rotate 0 0 S11 stroke grestore } bind def
/D12 { gsave translate 45 rotate 0 0 S12 stroke grestore } bind def
/D13 { gsave translate 45 rotate 0 0 S13 stroke grestore } bind def
/D14 { gsave translate 45 rotate 0 0 S14 stroke grestore } bind def
/D15 { gsave translate 45 rotate 0 0 S15 stroke grestore } bind def
/DiaE { stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke } def
/BoxE { stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke } def
/TriUE { stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke } def
/TriDE { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke } def
/PentE { stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore } def
/CircE { stroke [] 0 setdash 
  hpt 0 360 arc stroke } def
/Opaque { gsave closepath 1 setgray fill grestore 0 setgray closepath } def
/DiaW { stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke } def
/BoxW { stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke } def
/TriUW { stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke } def
/TriDW { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke } def
/PentW { stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore } def
/CircW { stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke } def
/BoxFill { gsave Rec 1 setgray fill grestore } def
/MFshow {{dup dup 0 get findfont exch 1 get scalefont setfont
     [ currentpoint ] exch dup 2 get 0 exch rmoveto dup dup 5 get exch 4 get
     {show} {stringwidth pop 0 rmoveto}ifelse dup 3 get
     {2 get neg 0 exch rmoveto pop} {pop aload pop moveto}ifelse} forall} bind def
/MFwidth {0 exch {dup 3 get{dup dup 0 get findfont exch 1 get scalefont setfont
      5 get stringwidth pop add}
    {pop} ifelse} forall} bind def
/MLshow { currentpoint stroke M
  0 exch R MFshow } bind def
/MRshow { currentpoint stroke M
  exch dup MFwidth neg 3 -1 roll R MFshow } def
/MCshow { currentpoint stroke M
  exch dup MFwidth -2 div 3 -1 roll R MFshow } def
end
%%EndProlog
gnudict begin
gsave
50 50 translate
0.050 0.050 scale
0 setgray
newpath
(Times-Roman) findfont 180 scalefont setfont
1.000 UL
LTb
810 870 M
63 0 V
6021 0 R
-63 0 V
 stroke
702 870 M
[ [(Times-Roman) 180.0 0.0 true true (50)]
] -60.0 MRshow
810 1530 M
63 0 V
6021 0 R
-63 0 V
 stroke
702 1530 M
[ [(Times-Roman) 180.0 0.0 true true (60)]
] -60.0 MRshow
810 2190 M
63 0 V
6021 0 R
-63 0 V
 stroke
702 2190 M
[ [(Times-Roman) 180.0 0.0 true true (70)]
] -60.0 MRshow
810 2850 M
63 0 V
6021 0 R
-63 0 V
 stroke
702 2850 M
[ [(Times-Roman) 180.0 0.0 true true (80)]
] -60.0 MRshow
810 3510 M
63 0 V
6021 0 R
-63 0 V
 stroke
702 3510 M
[ [(Times-Roman) 180.0 0.0 true true (90)]
] -60.0 MRshow
810 4170 M
63 0 V
6021 0 R
-63 0 V
 stroke
702 4170 M
[ [(Times-Roman) 180.0 0.0 true true (100)]
] -60.0 MRshow
1391 540 M
0 63 V
0 3897 R
0 -63 V
 stroke
1391 360 M
[ [(Times-Roman) 180.0 0.0 true true (20)]
] -60.0 MCshow
2002 540 M
0 63 V
0 3897 R
0 -63 V
 stroke
2002 360 M
[ [(Times-Roman) 180.0 0.0 true true (40)]
] -60.0 MCshow
2614 540 M
0 63 V
0 3897 R
0 -63 V
 stroke
2614 360 M
[ [(Times-Roman) 180.0 0.0 true true (60)]
] -60.0 MCshow
3225 540 M
0 63 V
0 3897 R
0 -63 V
 stroke
3225 360 M
[ [(Times-Roman) 180.0 0.0 true true (80)]
] -60.0 MCshow
3837 540 M
0 63 V
0 3897 R
0 -63 V
 stroke
3837 360 M
[ [(Times-Roman) 180.0 0.0 true true (100)]
] -60.0 MCshow
4448 540 M
0 63 V
0 3897 R
0 -63 V
 stroke
4448 360 M
[ [(Times-Roman) 180.0 0.0 true true (120)]
] -60.0 MCshow
5060 540 M
0 63 V
0 3897 R
0 -63 V
 stroke
5060 360 M
[ [(Times-Roman) 180.0 0.0 true true (140)]
] -60.0 MCshow
5671 540 M
0 63 V
0 3897 R
0 -63 V
 stroke
5671 360 M
[ [(Times-Roman) 180.0 0.0 true true (160)]
] -60.0 MCshow
6283 540 M
0 63 V
0 3897 R
0 -63 V
 stroke
6283 360 M
[ [(Times-Roman) 180.0 0.0 true true (180)]
] -60.0 MCshow
6894 540 M
0 63 V
0 3897 R
0 -63 V
 stroke
6894 360 M
[ [(Times-Roman) 180.0 0.0 true true (200)]
] -60.0 MCshow
1.000 UL
LTb
810 540 M
6084 0 V
0 3960 V
-6084 0 V
810 540 L
 stroke
180 2520 M
currentpoint gsave translate 90 rotate 0 0 moveto
[ [(Times-Roman) 180.0 0.0 true true (Interprocessor Adjacency)]
] -60.0 MCshow
grestore
3852 90 M
[ [(Times-Roman) 180.0 0.0 true true (Octant Size)]
] -60.0 MCshow
3852 4770 M
[ [(Times-Roman) 180.0 0.0 true true (Average Interprocessor Adjacency: Muzzle-Refined Mesh)]
] -60.0 MCshow
1.000 UP
1.000 UL
LT0
6075 4347 M
[ [(Times-Roman) 180.0 0.0 true true (10 processors)]
] -60.0 MRshow
6183 4347 M
495 0 V
810 2410 M
122 0 V
153 0 V
153 0 V
153 0 V
153 0 V
153 0 V
152 0 V
153 0 V
153 0 V
153 0 V
306 0 V
306 0 V
305 0 V
306 0 V
306 0 V
611 0 V
612 0 V
611 0 V
612 0 V
611 0 V
810 2410 Pls
932 2410 Pls
1085 2410 Pls
1238 2410 Pls
1391 2410 Pls
1544 2410 Pls
1697 2410 Pls
1849 2410 Pls
2002 2410 Pls
2155 2410 Pls
2308 2410 Pls
2614 2410 Pls
2920 2410 Pls
3225 2410 Pls
3531 2410 Pls
3837 2410 Pls
4448 2410 Pls
5060 2410 Pls
5671 2410 Pls
6283 2410 Pls
6894 2410 Pls
6430 4347 Pls
1.000 UP
1.000 UL
LT1
6075 4167 M
[ [(Times-Roman) 180.0 0.0 true true (12 processors)]
] -60.0 MRshow
6183 4167 M
495 0 V
810 1870 M
122 0 V
153 0 V
153 0 V
153 0 V
153 0 V
153 0 V
152 0 V
153 0 V
153 0 V
153 0 V
306 0 V
306 0 V
305 0 V
306 0 V
306 0 V
611 0 V
612 0 V
611 0 V
612 0 V
611 0 V
810 1870 Crs
932 1870 Crs
1085 1870 Crs
1238 1870 Crs
1391 1870 Crs
1544 1870 Crs
1697 1870 Crs
1849 1870 Crs
2002 1870 Crs
2155 1870 Crs
2308 1870 Crs
2614 1870 Crs
2920 1870 Crs
3225 1870 Crs
3531 1870 Crs
3837 1870 Crs
4448 1870 Crs
5060 1870 Crs
5671 1870 Crs
6283 1870 Crs
6894 1870 Crs
6430 4167 Crs
1.000 UP
1.000 UL
LT2
6075 3987 M
[ [(Times-Roman) 180.0 0.0 true true (14 processors)]
] -60.0 MRshow
6183 3987 M
495 0 V
810 1341 M
122 0 V
153 0 V
153 0 V
153 0 V
153 0 V
153 0 V
152 0 V
153 0 V
153 0 V
153 0 V
306 0 V
306 0 V
305 0 V
306 0 V
306 0 V
611 0 V
612 0 V
611 0 V
612 0 V
611 0 V
810 1341 Star
932 1341 Star
1085 1341 Star
1238 1341 Star
1391 1341 Star
1544 1341 Star
1697 1341 Star
1849 1341 Star
2002 1341 Star
2155 1341 Star
2308 1341 Star
2614 1341 Star
2920 1341 Star
3225 1341 Star
3531 1341 Star
3837 1341 Star
4448 1341 Star
5060 1341 Star
5671 1341 Star
6283 1341 Star
6894 1341 Star
6430 3987 Star
1.000 UP
1.000 UL
LT3
6075 3807 M
[ [(Times-Roman) 180.0 0.0 true true (16 processors)]
] -60.0 MRshow
6183 3807 M
495 0 V
810 1145 M
122 0 V
153 0 V
153 0 V
153 0 V
153 0 V
153 0 V
152 0 V
153 0 V
153 0 V
153 0 V
306 0 V
306 0 V
305 0 V
306 0 V
306 0 V
611 0 V
612 0 V
611 0 V
612 0 V
611 0 V
810 1145 Box
932 1145 Box
1085 1145 Box
1238 1145 Box
1391 1145 Box
1544 1145 Box
1697 1145 Box
1849 1145 Box
2002 1145 Box
2155 1145 Box
2308 1145 Box
2614 1145 Box
2920 1145 Box
3225 1145 Box
3531 1145 Box
3837 1145 Box
4448 1145 Box
5060 1145 Box
5671 1145 Box
6283 1145 Box
6894 1145 Box
6430 3807 Box
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Times-Roman

%%EndDocument
 @endspecial 51523 34703 V 866 51985 V 1553 51504 a @beginspecial
50 @llx 50 @lly 410 @urx 302 @ury 2160 @rwi @setspecial
%%BeginDocument: graphs/octpart/partition/gsi/muzzle-refined-GSI-18.eps
%!PS-Adobe-2.0 EPSF-2.0
%%Title: muzzle-refined-GSI-color-18.eps
%%Creator: gnuplot 3.7 patchlevel 0
%%CreationDate: Thu Jul 18 17:20:59 2002
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 410 302
%%Orientation: Portrait
%%EndComments
/gnudict 256 dict def
gnudict begin
/Color false def
/Solid false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
/vshift -60 def
/dl {10 mul} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow { currentpoint stroke M
  0 vshift R show } def
/Rshow { currentpoint stroke M
  dup stringwidth pop neg vshift R show } def
/Cshow { currentpoint stroke M
  dup stringwidth pop -2 div vshift R show } def
/UP { dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def } def
/DL { Color {setrgbcolor Solid {pop []} if 0 setdash }
 {pop pop pop Solid {pop []} if 0 setdash} ifelse } def
/BL { stroke gnulinewidth 2 mul setlinewidth } def
/AL { stroke gnulinewidth 2 div setlinewidth } def
/UL { gnulinewidth mul /userlinewidth exch def } def
/PL { stroke userlinewidth setlinewidth } def
/LTb { BL [] 0 0 0 DL } def
/LTa { AL [1 dl 2 dl] 0 setdash 0 0 0 setrgbcolor } def
/LT0 { PL [] 1 0 0 DL } def
/LT1 { PL [4 dl 2 dl] 0 1 0 DL } def
/LT2 { PL [2 dl 3 dl] 0 0 1 DL } def
/LT3 { PL [1 dl 1.5 dl] 1 0 1 DL } def
/LT4 { PL [5 dl 2 dl 1 dl 2 dl] 0 1 1 DL } def
/LT5 { PL [4 dl 3 dl 1 dl 3 dl] 1 1 0 DL } def
/LT6 { PL [2 dl 2 dl 2 dl 4 dl] 0 0 0 DL } def
/LT7 { PL [2 dl 2 dl 2 dl 2 dl 2 dl 4 dl] 1 0.3 0 DL } def
/LT8 { PL [2 dl 2 dl 2 dl 2 dl 2 dl 2 dl 2 dl 4 dl] 0.5 0.5 0.5 DL } def
/Pnt { stroke [] 0 setdash
   gsave 1 setlinecap M 0 0 V stroke grestore } def
/Dia { stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt } def
/Pls { stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
  } def
/Box { stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt } def
/Crs { stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke } def
/TriU { stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt  } def
/Star { 2 copy Pls Crs } def
/BoxF { stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V  hpt2 0 V  0 vpt2 V
  hpt2 neg 0 V  closepath fill } def
/TriUF { stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill } def
/TriD { stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt  } def
/TriDF { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF { stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill } def
/Pent { stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt } def
/PentF { stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore } def
/Circle { stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt } def
/CircleF { stroke [] 0 setdash hpt 0 360 arc fill } def
/C0 { BL [] 0 setdash 2 copy moveto vpt 90 450  arc } bind def
/C1 { BL [] 0 setdash 2 copy        moveto
       2 copy  vpt 0 90 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C2 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 90 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C3 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C4 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 180 270 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C5 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 90 arc
       2 copy moveto
       2 copy  vpt 180 270 arc closepath fill
               vpt 0 360 arc } bind def
/C6 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 90 270 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C7 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 0 270 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C8 { BL [] 0 setdash 2 copy moveto
      2 copy vpt 270 360 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C9 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 270 450 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C10 { BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
       2 copy moveto
       2 copy vpt 90 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C11 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 180 arc closepath fill
       2 copy moveto
       2 copy  vpt 270 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C12 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 180 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C13 { BL [] 0 setdash  2 copy moveto
       2 copy  vpt 0 90 arc closepath fill
       2 copy moveto
       2 copy  vpt 180 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C14 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 90 360 arc closepath fill
               vpt 0 360 arc } bind def
/C15 { BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/Rec   { newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
       neg 0 rlineto closepath } bind def
/Square { dup Rec } bind def
/Bsquare { vpt sub exch vpt sub exch vpt2 Square } bind def
/S0 { BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare } bind def
/S1 { BL [] 0 setdash 2 copy vpt Square fill Bsquare } bind def
/S2 { BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare } bind def
/S3 { BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare } bind def
/S4 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare } bind def
/S5 { BL [] 0 setdash 2 copy 2 copy vpt Square fill
       exch vpt sub exch vpt sub vpt Square fill Bsquare } bind def
/S6 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare } bind def
/S7 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
       2 copy vpt Square fill
       Bsquare } bind def
/S8 { BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare } bind def
/S9 { BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare } bind def
/S10 { BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
       Bsquare } bind def
/S11 { BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
       Bsquare } bind def
/S12 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare } bind def
/S13 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
       2 copy vpt Square fill Bsquare } bind def
/S14 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
       2 copy exch vpt sub exch vpt Square fill Bsquare } bind def
/S15 { BL [] 0 setdash 2 copy Bsquare fill Bsquare } bind def
/D0 { gsave translate 45 rotate 0 0 S0 stroke grestore } bind def
/D1 { gsave translate 45 rotate 0 0 S1 stroke grestore } bind def
/D2 { gsave translate 45 rotate 0 0 S2 stroke grestore } bind def
/D3 { gsave translate 45 rotate 0 0 S3 stroke grestore } bind def
/D4 { gsave translate 45 rotate 0 0 S4 stroke grestore } bind def
/D5 { gsave translate 45 rotate 0 0 S5 stroke grestore } bind def
/D6 { gsave translate 45 rotate 0 0 S6 stroke grestore } bind def
/D7 { gsave translate 45 rotate 0 0 S7 stroke grestore } bind def
/D8 { gsave translate 45 rotate 0 0 S8 stroke grestore } bind def
/D9 { gsave translate 45 rotate 0 0 S9 stroke grestore } bind def
/D10 { gsave translate 45 rotate 0 0 S10 stroke grestore } bind def
/D11 { gsave translate 45 rotate 0 0 S11 stroke grestore } bind def
/D12 { gsave translate 45 rotate 0 0 S12 stroke grestore } bind def
/D13 { gsave translate 45 rotate 0 0 S13 stroke grestore } bind def
/D14 { gsave translate 45 rotate 0 0 S14 stroke grestore } bind def
/D15 { gsave translate 45 rotate 0 0 S15 stroke grestore } bind def
/DiaE { stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke } def
/BoxE { stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke } def
/TriUE { stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke } def
/TriDE { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke } def
/PentE { stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore } def
/CircE { stroke [] 0 setdash 
  hpt 0 360 arc stroke } def
/Opaque { gsave closepath 1 setgray fill grestore 0 setgray closepath } def
/DiaW { stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke } def
/BoxW { stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke } def
/TriUW { stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke } def
/TriDW { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke } def
/PentW { stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore } def
/CircW { stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke } def
/BoxFill { gsave Rec 1 setgray fill grestore } def
/MFshow {{dup dup 0 get findfont exch 1 get scalefont setfont
     [ currentpoint ] exch dup 2 get 0 exch rmoveto dup dup 5 get exch 4 get
     {show} {stringwidth pop 0 rmoveto}ifelse dup 3 get
     {2 get neg 0 exch rmoveto pop} {pop aload pop moveto}ifelse} forall} bind def
/MFwidth {0 exch {dup 3 get{dup dup 0 get findfont exch 1 get scalefont setfont
      5 get stringwidth pop add}
    {pop} ifelse} forall} bind def
/MLshow { currentpoint stroke M
  0 exch R MFshow } bind def
/MRshow { currentpoint stroke M
  exch dup MFwidth neg 3 -1 roll R MFshow } def
/MCshow { currentpoint stroke M
  exch dup MFwidth -2 div 3 -1 roll R MFshow } def
end
%%EndProlog
gnudict begin
gsave
50 50 translate
0.050 0.050 scale
0 setgray
newpath
(Times-Roman) findfont 180 scalefont setfont
1.000 UL
LTb
594 859 M
63 0 V
6237 0 R
-63 0 V
 stroke
486 859 M
[ [(Times-Roman) 180.0 0.0 true true (1)]
] -60.0 MRshow
594 1498 M
63 0 V
6237 0 R
-63 0 V
 stroke
486 1498 M
[ [(Times-Roman) 180.0 0.0 true true (2)]
] -60.0 MRshow
594 2137 M
63 0 V
6237 0 R
-63 0 V
 stroke
486 2137 M
[ [(Times-Roman) 180.0 0.0 true true (3)]
] -60.0 MRshow
594 2775 M
63 0 V
6237 0 R
-63 0 V
 stroke
486 2775 M
[ [(Times-Roman) 180.0 0.0 true true (4)]
] -60.0 MRshow
594 3414 M
63 0 V
6237 0 R
-63 0 V
 stroke
486 3414 M
[ [(Times-Roman) 180.0 0.0 true true (5)]
] -60.0 MRshow
594 4053 M
63 0 V
6237 0 R
-63 0 V
 stroke
486 4053 M
[ [(Times-Roman) 180.0 0.0 true true (6)]
] -60.0 MRshow
1196 540 M
0 63 V
0 3897 R
0 -63 V
 stroke
1196 360 M
[ [(Times-Roman) 180.0 0.0 true true (20)]
] -60.0 MCshow
1829 540 M
0 63 V
0 3897 R
0 -63 V
 stroke
1829 360 M
[ [(Times-Roman) 180.0 0.0 true true (40)]
] -60.0 MCshow
2462 540 M
0 63 V
0 3897 R
0 -63 V
 stroke
2462 360 M
[ [(Times-Roman) 180.0 0.0 true true (60)]
] -60.0 MCshow
3095 540 M
0 63 V
0 3897 R
0 -63 V
 stroke
3095 360 M
[ [(Times-Roman) 180.0 0.0 true true (80)]
] -60.0 MCshow
3728 540 M
0 63 V
0 3897 R
0 -63 V
 stroke
3728 360 M
[ [(Times-Roman) 180.0 0.0 true true (100)]
] -60.0 MCshow
4361 540 M
0 63 V
0 3897 R
0 -63 V
 stroke
4361 360 M
[ [(Times-Roman) 180.0 0.0 true true (120)]
] -60.0 MCshow
4995 540 M
0 63 V
0 3897 R
0 -63 V
 stroke
4995 360 M
[ [(Times-Roman) 180.0 0.0 true true (140)]
] -60.0 MCshow
5628 540 M
0 63 V
0 3897 R
0 -63 V
 stroke
5628 360 M
[ [(Times-Roman) 180.0 0.0 true true (160)]
] -60.0 MCshow
6261 540 M
0 63 V
0 3897 R
0 -63 V
 stroke
6261 360 M
[ [(Times-Roman) 180.0 0.0 true true (180)]
] -60.0 MCshow
6894 540 M
0 63 V
0 3897 R
0 -63 V
 stroke
6894 360 M
[ [(Times-Roman) 180.0 0.0 true true (200)]
] -60.0 MCshow
1.000 UL
LTb
594 540 M
6300 0 V
0 3960 V
-6300 0 V
594 540 L
 stroke
180 2520 M
currentpoint gsave translate 90 rotate 0 0 moveto
[ [(Times-Roman) 180.0 0.0 true true (GSI)]
] -60.0 MCshow
grestore
3744 90 M
[ [(Times-Roman) 180.0 0.0 true true (Octant Size)]
] -60.0 MCshow
3744 4770 M
[ [(Times-Roman) 180.0 0.0 true true (Global Surface Index: Muzzle Refined Mesh)]
] -60.0 MCshow
1.000 UP
1.000 UL
LT0
6153 1179 M
[ [(Times-Roman) 180.0 0.0 true true (18 processors)]
] -60.0 MRshow
6261 1179 M
495 0 V
594 4167 M
127 -6 V
158 -1 V
158 -12 V
159 0 V
158 -5 V
158 -5 V
158 0 V
159 0 V
158 -7 V
158 0 V
317 0 V
316 -4 V
317 -9 V
317 -7 V
316 1 V
633 3 V
634 -5 V
633 0 V
633 -19 V
633 0 V
594 4167 Pls
721 4161 Pls
879 4160 Pls
1037 4148 Pls
1196 4148 Pls
1354 4143 Pls
1512 4138 Pls
1670 4138 Pls
1829 4138 Pls
1987 4131 Pls
2145 4131 Pls
2462 4131 Pls
2778 4127 Pls
3095 4118 Pls
3412 4111 Pls
3728 4112 Pls
4361 4115 Pls
4995 4110 Pls
5628 4110 Pls
6261 4091 Pls
6894 4091 Pls
6508 1179 Pls
1.000 UP
1.000 UL
LT1
6153 999 M
[ [(Times-Roman) 180.0 0.0 true true (20 processors)]
] -60.0 MRshow
6261 999 M
495 0 V
594 4478 M
127 2 V
158 -3 V
158 -2 V
159 -18 V
158 0 V
158 -4 V
158 0 V
159 -10 V
158 0 V
158 0 V
317 0 V
316 -5 V
317 0 V
317 -11 V
316 -2 V
633 -8 V
634 -4 V
633 0 V
633 3 V
633 0 V
594 4478 Crs
721 4480 Crs
879 4477 Crs
1037 4475 Crs
1196 4457 Crs
1354 4457 Crs
1512 4453 Crs
1670 4453 Crs
1829 4443 Crs
1987 4443 Crs
2145 4443 Crs
2462 4443 Crs
2778 4438 Crs
3095 4438 Crs
3412 4427 Crs
3728 4425 Crs
4361 4417 Crs
4995 4413 Crs
5628 4413 Crs
6261 4416 Crs
6894 4416 Crs
6508 999 Crs
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Times-Roman

%%EndDocument
 @endspecial 25328 w @beginspecial 50 @llx 50 @lly 410
@urx 302 @ury 2160 @rwi @setspecial
%%BeginDocument: graphs/octpart/partition/avg_proc_adj/muzzle-refined-avgAdj-18.eps
%!PS-Adobe-2.0 EPSF-2.0
%%Title: muzzle-refined-avgAdj-color-18.eps
%%Creator: gnuplot 3.7 patchlevel 0
%%CreationDate: Thu Jul 18 17:20:59 2002
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 410 302
%%Orientation: Portrait
%%EndComments
/gnudict 256 dict def
gnudict begin
/Color false def
/Solid false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
/vshift -60 def
/dl {10 mul} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow { currentpoint stroke M
  0 vshift R show } def
/Rshow { currentpoint stroke M
  dup stringwidth pop neg vshift R show } def
/Cshow { currentpoint stroke M
  dup stringwidth pop -2 div vshift R show } def
/UP { dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def } def
/DL { Color {setrgbcolor Solid {pop []} if 0 setdash }
 {pop pop pop Solid {pop []} if 0 setdash} ifelse } def
/BL { stroke gnulinewidth 2 mul setlinewidth } def
/AL { stroke gnulinewidth 2 div setlinewidth } def
/UL { gnulinewidth mul /userlinewidth exch def } def
/PL { stroke userlinewidth setlinewidth } def
/LTb { BL [] 0 0 0 DL } def
/LTa { AL [1 dl 2 dl] 0 setdash 0 0 0 setrgbcolor } def
/LT0 { PL [] 1 0 0 DL } def
/LT1 { PL [4 dl 2 dl] 0 1 0 DL } def
/LT2 { PL [2 dl 3 dl] 0 0 1 DL } def
/LT3 { PL [1 dl 1.5 dl] 1 0 1 DL } def
/LT4 { PL [5 dl 2 dl 1 dl 2 dl] 0 1 1 DL } def
/LT5 { PL [4 dl 3 dl 1 dl 3 dl] 1 1 0 DL } def
/LT6 { PL [2 dl 2 dl 2 dl 4 dl] 0 0 0 DL } def
/LT7 { PL [2 dl 2 dl 2 dl 2 dl 2 dl 4 dl] 1 0.3 0 DL } def
/LT8 { PL [2 dl 2 dl 2 dl 2 dl 2 dl 2 dl 2 dl 4 dl] 0.5 0.5 0.5 DL } def
/Pnt { stroke [] 0 setdash
   gsave 1 setlinecap M 0 0 V stroke grestore } def
/Dia { stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt } def
/Pls { stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
  } def
/Box { stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt } def
/Crs { stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke } def
/TriU { stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt  } def
/Star { 2 copy Pls Crs } def
/BoxF { stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V  hpt2 0 V  0 vpt2 V
  hpt2 neg 0 V  closepath fill } def
/TriUF { stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill } def
/TriD { stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt  } def
/TriDF { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF { stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill } def
/Pent { stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt } def
/PentF { stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore } def
/Circle { stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt } def
/CircleF { stroke [] 0 setdash hpt 0 360 arc fill } def
/C0 { BL [] 0 setdash 2 copy moveto vpt 90 450  arc } bind def
/C1 { BL [] 0 setdash 2 copy        moveto
       2 copy  vpt 0 90 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C2 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 90 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C3 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C4 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 180 270 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C5 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 90 arc
       2 copy moveto
       2 copy  vpt 180 270 arc closepath fill
               vpt 0 360 arc } bind def
/C6 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 90 270 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C7 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 0 270 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C8 { BL [] 0 setdash 2 copy moveto
      2 copy vpt 270 360 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C9 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 270 450 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C10 { BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
       2 copy moveto
       2 copy vpt 90 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C11 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 180 arc closepath fill
       2 copy moveto
       2 copy  vpt 270 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C12 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 180 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C13 { BL [] 0 setdash  2 copy moveto
       2 copy  vpt 0 90 arc closepath fill
       2 copy moveto
       2 copy  vpt 180 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C14 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 90 360 arc closepath fill
               vpt 0 360 arc } bind def
/C15 { BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/Rec   { newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
       neg 0 rlineto closepath } bind def
/Square { dup Rec } bind def
/Bsquare { vpt sub exch vpt sub exch vpt2 Square } bind def
/S0 { BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare } bind def
/S1 { BL [] 0 setdash 2 copy vpt Square fill Bsquare } bind def
/S2 { BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare } bind def
/S3 { BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare } bind def
/S4 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare } bind def
/S5 { BL [] 0 setdash 2 copy 2 copy vpt Square fill
       exch vpt sub exch vpt sub vpt Square fill Bsquare } bind def
/S6 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare } bind def
/S7 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
       2 copy vpt Square fill
       Bsquare } bind def
/S8 { BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare } bind def
/S9 { BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare } bind def
/S10 { BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
       Bsquare } bind def
/S11 { BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
       Bsquare } bind def
/S12 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare } bind def
/S13 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
       2 copy vpt Square fill Bsquare } bind def
/S14 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
       2 copy exch vpt sub exch vpt Square fill Bsquare } bind def
/S15 { BL [] 0 setdash 2 copy Bsquare fill Bsquare } bind def
/D0 { gsave translate 45 rotate 0 0 S0 stroke grestore } bind def
/D1 { gsave translate 45 rotate 0 0 S1 stroke grestore } bind def
/D2 { gsave translate 45 rotate 0 0 S2 stroke grestore } bind def
/D3 { gsave translate 45 rotate 0 0 S3 stroke grestore } bind def
/D4 { gsave translate 45 rotate 0 0 S4 stroke grestore } bind def
/D5 { gsave translate 45 rotate 0 0 S5 stroke grestore } bind def
/D6 { gsave translate 45 rotate 0 0 S6 stroke grestore } bind def
/D7 { gsave translate 45 rotate 0 0 S7 stroke grestore } bind def
/D8 { gsave translate 45 rotate 0 0 S8 stroke grestore } bind def
/D9 { gsave translate 45 rotate 0 0 S9 stroke grestore } bind def
/D10 { gsave translate 45 rotate 0 0 S10 stroke grestore } bind def
/D11 { gsave translate 45 rotate 0 0 S11 stroke grestore } bind def
/D12 { gsave translate 45 rotate 0 0 S12 stroke grestore } bind def
/D13 { gsave translate 45 rotate 0 0 S13 stroke grestore } bind def
/D14 { gsave translate 45 rotate 0 0 S14 stroke grestore } bind def
/D15 { gsave translate 45 rotate 0 0 S15 stroke grestore } bind def
/DiaE { stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke } def
/BoxE { stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke } def
/TriUE { stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke } def
/TriDE { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke } def
/PentE { stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore } def
/CircE { stroke [] 0 setdash 
  hpt 0 360 arc stroke } def
/Opaque { gsave closepath 1 setgray fill grestore 0 setgray closepath } def
/DiaW { stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke } def
/BoxW { stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke } def
/TriUW { stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke } def
/TriDW { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke } def
/PentW { stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore } def
/CircW { stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke } def
/BoxFill { gsave Rec 1 setgray fill grestore } def
/MFshow {{dup dup 0 get findfont exch 1 get scalefont setfont
     [ currentpoint ] exch dup 2 get 0 exch rmoveto dup dup 5 get exch 4 get
     {show} {stringwidth pop 0 rmoveto}ifelse dup 3 get
     {2 get neg 0 exch rmoveto pop} {pop aload pop moveto}ifelse} forall} bind def
/MFwidth {0 exch {dup 3 get{dup dup 0 get findfont exch 1 get scalefont setfont
      5 get stringwidth pop add}
    {pop} ifelse} forall} bind def
/MLshow { currentpoint stroke M
  0 exch R MFshow } bind def
/MRshow { currentpoint stroke M
  exch dup MFwidth neg 3 -1 roll R MFshow } def
/MCshow { currentpoint stroke M
  exch dup MFwidth -2 div 3 -1 roll R MFshow } def
end
%%EndProlog
gnudict begin
gsave
50 50 translate
0.050 0.050 scale
0 setgray
newpath
(Times-Roman) findfont 180 scalefont setfont
1.000 UL
LTb
810 870 M
63 0 V
6021 0 R
-63 0 V
 stroke
702 870 M
[ [(Times-Roman) 180.0 0.0 true true (50)]
] -60.0 MRshow
810 1530 M
63 0 V
6021 0 R
-63 0 V
 stroke
702 1530 M
[ [(Times-Roman) 180.0 0.0 true true (60)]
] -60.0 MRshow
810 2190 M
63 0 V
6021 0 R
-63 0 V
 stroke
702 2190 M
[ [(Times-Roman) 180.0 0.0 true true (70)]
] -60.0 MRshow
810 2850 M
63 0 V
6021 0 R
-63 0 V
 stroke
702 2850 M
[ [(Times-Roman) 180.0 0.0 true true (80)]
] -60.0 MRshow
810 3510 M
63 0 V
6021 0 R
-63 0 V
 stroke
702 3510 M
[ [(Times-Roman) 180.0 0.0 true true (90)]
] -60.0 MRshow
810 4170 M
63 0 V
6021 0 R
-63 0 V
 stroke
702 4170 M
[ [(Times-Roman) 180.0 0.0 true true (100)]
] -60.0 MRshow
1391 540 M
0 63 V
0 3897 R
0 -63 V
 stroke
1391 360 M
[ [(Times-Roman) 180.0 0.0 true true (20)]
] -60.0 MCshow
2002 540 M
0 63 V
0 3897 R
0 -63 V
 stroke
2002 360 M
[ [(Times-Roman) 180.0 0.0 true true (40)]
] -60.0 MCshow
2614 540 M
0 63 V
0 3897 R
0 -63 V
 stroke
2614 360 M
[ [(Times-Roman) 180.0 0.0 true true (60)]
] -60.0 MCshow
3225 540 M
0 63 V
0 3897 R
0 -63 V
 stroke
3225 360 M
[ [(Times-Roman) 180.0 0.0 true true (80)]
] -60.0 MCshow
3837 540 M
0 63 V
0 3897 R
0 -63 V
 stroke
3837 360 M
[ [(Times-Roman) 180.0 0.0 true true (100)]
] -60.0 MCshow
4448 540 M
0 63 V
0 3897 R
0 -63 V
 stroke
4448 360 M
[ [(Times-Roman) 180.0 0.0 true true (120)]
] -60.0 MCshow
5060 540 M
0 63 V
0 3897 R
0 -63 V
 stroke
5060 360 M
[ [(Times-Roman) 180.0 0.0 true true (140)]
] -60.0 MCshow
5671 540 M
0 63 V
0 3897 R
0 -63 V
 stroke
5671 360 M
[ [(Times-Roman) 180.0 0.0 true true (160)]
] -60.0 MCshow
6283 540 M
0 63 V
0 3897 R
0 -63 V
 stroke
6283 360 M
[ [(Times-Roman) 180.0 0.0 true true (180)]
] -60.0 MCshow
6894 540 M
0 63 V
0 3897 R
0 -63 V
 stroke
6894 360 M
[ [(Times-Roman) 180.0 0.0 true true (200)]
] -60.0 MCshow
1.000 UL
LTb
810 540 M
6084 0 V
0 3960 V
-6084 0 V
810 540 L
 stroke
180 2520 M
currentpoint gsave translate 90 rotate 0 0 moveto
[ [(Times-Roman) 180.0 0.0 true true (Interprocessor Adjacency)]
] -60.0 MCshow
grestore
3852 90 M
[ [(Times-Roman) 180.0 0.0 true true (Octant Size)]
] -60.0 MCshow
3852 4770 M
[ [(Times-Roman) 180.0 0.0 true true (Average Interprocessor Adjacency: Muzzle-Refined Mesh)]
] -60.0 MCshow
1.000 UP
1.000 UL
LT0
6075 4347 M
[ [(Times-Roman) 180.0 0.0 true true (18 processors)]
] -60.0 MRshow
6183 4347 M
495 0 V
810 1107 M
122 0 V
153 0 V
153 0 V
153 0 V
153 0 V
153 0 V
152 0 V
153 0 V
153 0 V
153 0 V
306 0 V
306 0 V
305 -86 V
306 0 V
306 0 V
611 0 V
612 0 V
611 0 V
612 0 V
611 0 V
810 1107 Pls
932 1107 Pls
1085 1107 Pls
1238 1107 Pls
1391 1107 Pls
1544 1107 Pls
1697 1107 Pls
1849 1107 Pls
2002 1107 Pls
2155 1107 Pls
2308 1107 Pls
2614 1107 Pls
2920 1107 Pls
3225 1021 Pls
3531 1021 Pls
3837 1021 Pls
4448 1021 Pls
5060 1021 Pls
5671 1021 Pls
6283 1021 Pls
6894 1021 Pls
6430 4347 Pls
1.000 UP
1.000 UL
LT1
6075 4167 M
[ [(Times-Roman) 180.0 0.0 true true (20 processors)]
] -60.0 MRshow
6183 4167 M
495 0 V
810 870 M
122 0 V
153 0 V
153 0 V
153 0 V
153 0 V
153 0 V
152 0 V
153 0 V
153 0 V
153 0 V
306 0 V
306 0 V
305 0 V
306 0 V
306 0 V
611 0 V
612 0 V
611 0 V
612 0 V
611 0 V
810 870 Crs
932 870 Crs
1085 870 Crs
1238 870 Crs
1391 870 Crs
1544 870 Crs
1697 870 Crs
1849 870 Crs
2002 870 Crs
2155 870 Crs
2308 870 Crs
2614 870 Crs
2920 870 Crs
3225 870 Crs
3531 870 Crs
3837 870 Crs
4448 870 Crs
5060 870 Crs
5671 870 Crs
6283 870 Crs
6894 870 Crs
6430 4167 Crs
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Times-Roman

%%EndDocument
 @endspecial 51523 51985 V 888 52029 50657 45 v 0 54243
a Fk(Figure)493 b(10:)699 b Fj(r)7106 54442 y Fb(G)8388
54243 y Fk(\(left\))494 b(and)e Fj(ad)-145 b(j)16076
54442 y Fb(A)17330 54243 y Fk(\(righ)-36 b(t\))493 b(for)h(partitions)f
(of)h(the)f(Muzzle)g(mesh)g(on)h(from)f(2)h(\(top\))f(to)0
55848 y(20)413 b(\(b)36 b(ottom\))411 b(pro)36 b(cesses)412
b(as)g(the)g(o)36 b(ctan)-36 b(t)412 b(gran)-36 b(ularit)g(y)412
b(is)g(v)-72 b(aried.)572 b(Gran)-36 b(ularit)g(y)411
b(had)h(little)g(or)g(no)g(e\256ect)0 57454 y(on)433
b(these)h(statistics.)0 60996 y(factor)627 b([10)q(].)1158
b(T)-108 b(o)626 b(minimize)h(adjacency)-108 b(,)676
b(w)-36 b(e)627 b(mo)36 b(di\257ed)625 b(the)h(R)-36
b(CB)627 b(algorithm)g(to)g(pro)36 b(duce)626 b(\\slice")0
62601 y(partitions,)434 b(where)f(eac)-36 b(h)434 b(cut)f(is)h(along)g
(the)f(same)h(axis.)1951 64206 y(W)-108 b(e)379 b(compare)g(the)g
(original)h(R)-36 b(CB)380 b(algorithm)g(with)f(the)f(slice)i
(partitioner)f(used)f(to)i(cut)e(along)i(eac)-36 b(h)0
65811 y(co)36 b(ordinate)434 b(axis.)579 b(W)-108 b(e)434
b(again)g(use)g(the)f(p)36 b(erforated)433 b(sho)36 b(c)-36
b(k)434 b(tub)36 b(e)433 b(problem)g(describ)36 b(ed)433
b(in)g Ff(x)p Fk(2.1.)1951 67416 y(Figure)413 b(12)g(sho)-36
b(ws)414 b(surface)f(indices)g(at)g(eac)-36 b(h)413 b(adaptiv)-36
b(e)413 b(re\257nemen)-36 b(t)411 b(step)i(of)g(the)g(p)36
b(erforated)413 b(sho)36 b(c)-36 b(k)0 69021 y(tub)36
b(e.)559 b(R)-36 b(CB)377 b Fj(x)p Fk(-cut)f(ac)-36 b(hiev)g(ed)376
b(the)h(b)36 b(est)376 b Fj(r)20683 69220 y Fb(G)21848
69021 y Fk(and)h Fj(r)24907 69220 y Fb(M)26337 69021
y Fk(v)-72 b(alues)377 b(in)f(all)i(cases.)560 b(R)-36
b(CB)377 b Fj(y)48 b Fk(-cut)376 b(w)-36 b(as)377 b(also)h(b)36
b(etter)0 70626 y(than)433 b(the)g(original)i(R)-36 b(CB)434
b(in)f(man)-36 b(y)434 b(cases,)g(but)f(R)-36 b(CB)434
b Fj(z)59 b Fk(-cut)433 b(w)-36 b(as)434 b(m)-36 b(uc)g(h)433
b(w)-36 b(orse.)25350 75417 y(13)p eop
%%Page: 14 14
14 13 bop 888 140 50657 45 v 866 17422 45 17282 v 1553
16940 a @beginspecial 50 @llx 50 @lly 410 @urx 302 @ury
2160 @rwi @setspecial
%%BeginDocument: graphs/octpart/times/partition/muzzle-refined-partition-2.eps
%!PS-Adobe-2.0 EPSF-2.0
%%Title: muzzle-refined-partition-2.eps
%%Creator: gnuplot 3.7 patchlevel 0
%%CreationDate: Fri Jul 19 11:24:35 2002
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 410 302
%%Orientation: Portrait
%%EndComments
/gnudict 256 dict def
gnudict begin
/Color false def
/Solid false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
/vshift -60 def
/dl {10 mul} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow { currentpoint stroke M
  0 vshift R show } def
/Rshow { currentpoint stroke M
  dup stringwidth pop neg vshift R show } def
/Cshow { currentpoint stroke M
  dup stringwidth pop -2 div vshift R show } def
/UP { dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def } def
/DL { Color {setrgbcolor Solid {pop []} if 0 setdash }
 {pop pop pop Solid {pop []} if 0 setdash} ifelse } def
/BL { stroke gnulinewidth 2 mul setlinewidth } def
/AL { stroke gnulinewidth 2 div setlinewidth } def
/UL { gnulinewidth mul /userlinewidth exch def } def
/PL { stroke userlinewidth setlinewidth } def
/LTb { BL [] 0 0 0 DL } def
/LTa { AL [1 dl 2 dl] 0 setdash 0 0 0 setrgbcolor } def
/LT0 { PL [] 1 0 0 DL } def
/LT1 { PL [4 dl 2 dl] 0 1 0 DL } def
/LT2 { PL [2 dl 3 dl] 0 0 1 DL } def
/LT3 { PL [1 dl 1.5 dl] 1 0 1 DL } def
/LT4 { PL [5 dl 2 dl 1 dl 2 dl] 0 1 1 DL } def
/LT5 { PL [4 dl 3 dl 1 dl 3 dl] 1 1 0 DL } def
/LT6 { PL [2 dl 2 dl 2 dl 4 dl] 0 0 0 DL } def
/LT7 { PL [2 dl 2 dl 2 dl 2 dl 2 dl 4 dl] 1 0.3 0 DL } def
/LT8 { PL [2 dl 2 dl 2 dl 2 dl 2 dl 2 dl 2 dl 4 dl] 0.5 0.5 0.5 DL } def
/Pnt { stroke [] 0 setdash
   gsave 1 setlinecap M 0 0 V stroke grestore } def
/Dia { stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt } def
/Pls { stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
  } def
/Box { stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt } def
/Crs { stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke } def
/TriU { stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt  } def
/Star { 2 copy Pls Crs } def
/BoxF { stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V  hpt2 0 V  0 vpt2 V
  hpt2 neg 0 V  closepath fill } def
/TriUF { stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill } def
/TriD { stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt  } def
/TriDF { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF { stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill } def
/Pent { stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt } def
/PentF { stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore } def
/Circle { stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt } def
/CircleF { stroke [] 0 setdash hpt 0 360 arc fill } def
/C0 { BL [] 0 setdash 2 copy moveto vpt 90 450  arc } bind def
/C1 { BL [] 0 setdash 2 copy        moveto
       2 copy  vpt 0 90 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C2 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 90 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C3 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C4 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 180 270 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C5 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 90 arc
       2 copy moveto
       2 copy  vpt 180 270 arc closepath fill
               vpt 0 360 arc } bind def
/C6 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 90 270 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C7 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 0 270 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C8 { BL [] 0 setdash 2 copy moveto
      2 copy vpt 270 360 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C9 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 270 450 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C10 { BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
       2 copy moveto
       2 copy vpt 90 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C11 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 180 arc closepath fill
       2 copy moveto
       2 copy  vpt 270 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C12 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 180 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C13 { BL [] 0 setdash  2 copy moveto
       2 copy  vpt 0 90 arc closepath fill
       2 copy moveto
       2 copy  vpt 180 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C14 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 90 360 arc closepath fill
               vpt 0 360 arc } bind def
/C15 { BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/Rec   { newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
       neg 0 rlineto closepath } bind def
/Square { dup Rec } bind def
/Bsquare { vpt sub exch vpt sub exch vpt2 Square } bind def
/S0 { BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare } bind def
/S1 { BL [] 0 setdash 2 copy vpt Square fill Bsquare } bind def
/S2 { BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare } bind def
/S3 { BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare } bind def
/S4 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare } bind def
/S5 { BL [] 0 setdash 2 copy 2 copy vpt Square fill
       exch vpt sub exch vpt sub vpt Square fill Bsquare } bind def
/S6 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare } bind def
/S7 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
       2 copy vpt Square fill
       Bsquare } bind def
/S8 { BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare } bind def
/S9 { BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare } bind def
/S10 { BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
       Bsquare } bind def
/S11 { BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
       Bsquare } bind def
/S12 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare } bind def
/S13 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
       2 copy vpt Square fill Bsquare } bind def
/S14 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
       2 copy exch vpt sub exch vpt Square fill Bsquare } bind def
/S15 { BL [] 0 setdash 2 copy Bsquare fill Bsquare } bind def
/D0 { gsave translate 45 rotate 0 0 S0 stroke grestore } bind def
/D1 { gsave translate 45 rotate 0 0 S1 stroke grestore } bind def
/D2 { gsave translate 45 rotate 0 0 S2 stroke grestore } bind def
/D3 { gsave translate 45 rotate 0 0 S3 stroke grestore } bind def
/D4 { gsave translate 45 rotate 0 0 S4 stroke grestore } bind def
/D5 { gsave translate 45 rotate 0 0 S5 stroke grestore } bind def
/D6 { gsave translate 45 rotate 0 0 S6 stroke grestore } bind def
/D7 { gsave translate 45 rotate 0 0 S7 stroke grestore } bind def
/D8 { gsave translate 45 rotate 0 0 S8 stroke grestore } bind def
/D9 { gsave translate 45 rotate 0 0 S9 stroke grestore } bind def
/D10 { gsave translate 45 rotate 0 0 S10 stroke grestore } bind def
/D11 { gsave translate 45 rotate 0 0 S11 stroke grestore } bind def
/D12 { gsave translate 45 rotate 0 0 S12 stroke grestore } bind def
/D13 { gsave translate 45 rotate 0 0 S13 stroke grestore } bind def
/D14 { gsave translate 45 rotate 0 0 S14 stroke grestore } bind def
/D15 { gsave translate 45 rotate 0 0 S15 stroke grestore } bind def
/DiaE { stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke } def
/BoxE { stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke } def
/TriUE { stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke } def
/TriDE { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke } def
/PentE { stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore } def
/CircE { stroke [] 0 setdash 
  hpt 0 360 arc stroke } def
/Opaque { gsave closepath 1 setgray fill grestore 0 setgray closepath } def
/DiaW { stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke } def
/BoxW { stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke } def
/TriUW { stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke } def
/TriDW { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke } def
/PentW { stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore } def
/CircW { stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke } def
/BoxFill { gsave Rec 1 setgray fill grestore } def
/MFshow {{dup dup 0 get findfont exch 1 get scalefont setfont
     [ currentpoint ] exch dup 2 get 0 exch rmoveto dup dup 5 get exch 4 get
     {show} {stringwidth pop 0 rmoveto}ifelse dup 3 get
     {2 get neg 0 exch rmoveto pop} {pop aload pop moveto}ifelse} forall} bind def
/MFwidth {0 exch {dup 3 get{dup dup 0 get findfont exch 1 get scalefont setfont
      5 get stringwidth pop add}
    {pop} ifelse} forall} bind def
/MLshow { currentpoint stroke M
  0 exch R MFshow } bind def
/MRshow { currentpoint stroke M
  exch dup MFwidth neg 3 -1 roll R MFshow } def
/MCshow { currentpoint stroke M
  exch dup MFwidth -2 div 3 -1 roll R MFshow } def
end
%%EndProlog
gnudict begin
gsave
50 50 translate
0.050 0.050 scale
0 setgray
newpath
(Times-Roman) findfont 180 scalefont setfont
1.000 UL
LTb
702 1134 M
63 0 V
6129 0 R
-63 0 V
 stroke
594 1134 M
[ [(Times-Roman) 180.0 0.0 true true (5)]
] -60.0 MRshow
702 2124 M
63 0 V
6129 0 R
-63 0 V
 stroke
594 2124 M
[ [(Times-Roman) 180.0 0.0 true true (10)]
] -60.0 MRshow
702 3114 M
63 0 V
6129 0 R
-63 0 V
 stroke
594 3114 M
[ [(Times-Roman) 180.0 0.0 true true (15)]
] -60.0 MRshow
702 4104 M
63 0 V
6129 0 R
-63 0 V
 stroke
594 4104 M
[ [(Times-Roman) 180.0 0.0 true true (20)]
] -60.0 MRshow
1293 540 M
0 63 V
0 3897 R
0 -63 V
 stroke
1293 360 M
[ [(Times-Roman) 180.0 0.0 true true (20)]
] -60.0 MCshow
1916 540 M
0 63 V
0 3897 R
0 -63 V
 stroke
1916 360 M
[ [(Times-Roman) 180.0 0.0 true true (40)]
] -60.0 MCshow
2538 540 M
0 63 V
0 3897 R
0 -63 V
 stroke
2538 360 M
[ [(Times-Roman) 180.0 0.0 true true (60)]
] -60.0 MCshow
3160 540 M
0 63 V
0 3897 R
0 -63 V
 stroke
3160 360 M
[ [(Times-Roman) 180.0 0.0 true true (80)]
] -60.0 MCshow
3782 540 M
0 63 V
0 3897 R
0 -63 V
 stroke
3782 360 M
[ [(Times-Roman) 180.0 0.0 true true (100)]
] -60.0 MCshow
4405 540 M
0 63 V
0 3897 R
0 -63 V
 stroke
4405 360 M
[ [(Times-Roman) 180.0 0.0 true true (120)]
] -60.0 MCshow
5027 540 M
0 63 V
0 3897 R
0 -63 V
 stroke
5027 360 M
[ [(Times-Roman) 180.0 0.0 true true (140)]
] -60.0 MCshow
5649 540 M
0 63 V
0 3897 R
0 -63 V
 stroke
5649 360 M
[ [(Times-Roman) 180.0 0.0 true true (160)]
] -60.0 MCshow
6272 540 M
0 63 V
0 3897 R
0 -63 V
 stroke
6272 360 M
[ [(Times-Roman) 180.0 0.0 true true (180)]
] -60.0 MCshow
6894 540 M
0 63 V
0 3897 R
0 -63 V
 stroke
6894 360 M
[ [(Times-Roman) 180.0 0.0 true true (200)]
] -60.0 MCshow
1.000 UL
LTb
702 540 M
6192 0 V
0 3960 V
-6192 0 V
702 540 L
 stroke
180 2520 M
currentpoint gsave translate 90 rotate 0 0 moveto
[ [(Times-Roman) 180.0 0.0 true true (Time \(seconds\))]
] -60.0 MCshow
grestore
3798 90 M
[ [(Times-Roman) 180.0 0.0 true true (Octant Size)]
] -60.0 MCshow
3798 4770 M
[ [(Times-Roman) 180.0 0.0 true true (Partition Times for 2 Processors: Muzzle-Refined Mesh)]
] -60.0 MCshow
1.000 UP
1.000 UL
LT0
6075 4347 M
[ [(Times-Roman) 180.0 0.0 true true (nodes=1:ppn=2)]
] -60.0 MRshow
6183 4347 M
495 0 V
702 2051 M
826 905 L
982 802 L
156 -42 V
155 -17 V
156 0 V
155 -12 V
156 12 V
156 23 V
155 20 V
156 36 V
311 75 V
311 128 V
311 118 V
311 129 V
311 150 V
623 351 V
622 369 V
622 382 V
623 518 V
622 531 V
702 2051 Pls
826 905 Pls
982 802 Pls
1138 760 Pls
1293 743 Pls
1449 743 Pls
1604 731 Pls
1760 743 Pls
1916 766 Pls
2071 786 Pls
2227 822 Pls
2538 897 Pls
2849 1025 Pls
3160 1143 Pls
3471 1272 Pls
3782 1422 Pls
4405 1773 Pls
5027 2142 Pls
5649 2524 Pls
6272 3042 Pls
6894 3573 Pls
6430 4347 Pls
1.000 UP
1.000 UL
LT1
6075 4167 M
[ [(Times-Roman) 180.0 0.0 true true (nodes=2:ppn=1)]
] -60.0 MRshow
6183 4167 M
495 0 V
702 2500 M
826 1118 L
156 -86 V
1138 923 L
155 -47 V
156 -8 V
155 19 V
156 -8 V
156 20 V
155 78 V
156 -16 V
311 94 V
311 83 V
311 125 V
311 146 V
311 167 V
623 318 V
622 391 V
622 385 V
623 521 V
622 495 V
702 2500 Crs
826 1118 Crs
982 1032 Crs
1138 923 Crs
1293 876 Crs
1449 868 Crs
1604 887 Crs
1760 879 Crs
1916 899 Crs
2071 977 Crs
2227 961 Crs
2538 1055 Crs
2849 1138 Crs
3160 1263 Crs
3471 1409 Crs
3782 1576 Crs
4405 1894 Crs
5027 2285 Crs
5649 2670 Crs
6272 3191 Crs
6894 3686 Crs
6430 4167 Crs
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Times-Roman

%%EndDocument
 @endspecial 25328 w @beginspecial 50 @llx 50 @lly 410
@urx 302 @ury 2160 @rwi @setspecial
%%BeginDocument: graphs/octpart/times/partition/muzzle-refined-partition-4.eps
%!PS-Adobe-2.0 EPSF-2.0
%%Title: muzzle-refined-partition-4.eps
%%Creator: gnuplot 3.7 patchlevel 0
%%CreationDate: Fri Jul 19 11:24:35 2002
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 410 302
%%Orientation: Portrait
%%EndComments
/gnudict 256 dict def
gnudict begin
/Color false def
/Solid false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
/vshift -60 def
/dl {10 mul} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow { currentpoint stroke M
  0 vshift R show } def
/Rshow { currentpoint stroke M
  dup stringwidth pop neg vshift R show } def
/Cshow { currentpoint stroke M
  dup stringwidth pop -2 div vshift R show } def
/UP { dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def } def
/DL { Color {setrgbcolor Solid {pop []} if 0 setdash }
 {pop pop pop Solid {pop []} if 0 setdash} ifelse } def
/BL { stroke gnulinewidth 2 mul setlinewidth } def
/AL { stroke gnulinewidth 2 div setlinewidth } def
/UL { gnulinewidth mul /userlinewidth exch def } def
/PL { stroke userlinewidth setlinewidth } def
/LTb { BL [] 0 0 0 DL } def
/LTa { AL [1 dl 2 dl] 0 setdash 0 0 0 setrgbcolor } def
/LT0 { PL [] 1 0 0 DL } def
/LT1 { PL [4 dl 2 dl] 0 1 0 DL } def
/LT2 { PL [2 dl 3 dl] 0 0 1 DL } def
/LT3 { PL [1 dl 1.5 dl] 1 0 1 DL } def
/LT4 { PL [5 dl 2 dl 1 dl 2 dl] 0 1 1 DL } def
/LT5 { PL [4 dl 3 dl 1 dl 3 dl] 1 1 0 DL } def
/LT6 { PL [2 dl 2 dl 2 dl 4 dl] 0 0 0 DL } def
/LT7 { PL [2 dl 2 dl 2 dl 2 dl 2 dl 4 dl] 1 0.3 0 DL } def
/LT8 { PL [2 dl 2 dl 2 dl 2 dl 2 dl 2 dl 2 dl 4 dl] 0.5 0.5 0.5 DL } def
/Pnt { stroke [] 0 setdash
   gsave 1 setlinecap M 0 0 V stroke grestore } def
/Dia { stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt } def
/Pls { stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
  } def
/Box { stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt } def
/Crs { stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke } def
/TriU { stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt  } def
/Star { 2 copy Pls Crs } def
/BoxF { stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V  hpt2 0 V  0 vpt2 V
  hpt2 neg 0 V  closepath fill } def
/TriUF { stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill } def
/TriD { stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt  } def
/TriDF { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF { stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill } def
/Pent { stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt } def
/PentF { stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore } def
/Circle { stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt } def
/CircleF { stroke [] 0 setdash hpt 0 360 arc fill } def
/C0 { BL [] 0 setdash 2 copy moveto vpt 90 450  arc } bind def
/C1 { BL [] 0 setdash 2 copy        moveto
       2 copy  vpt 0 90 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C2 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 90 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C3 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C4 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 180 270 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C5 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 90 arc
       2 copy moveto
       2 copy  vpt 180 270 arc closepath fill
               vpt 0 360 arc } bind def
/C6 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 90 270 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C7 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 0 270 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C8 { BL [] 0 setdash 2 copy moveto
      2 copy vpt 270 360 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C9 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 270 450 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C10 { BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
       2 copy moveto
       2 copy vpt 90 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C11 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 180 arc closepath fill
       2 copy moveto
       2 copy  vpt 270 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C12 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 180 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C13 { BL [] 0 setdash  2 copy moveto
       2 copy  vpt 0 90 arc closepath fill
       2 copy moveto
       2 copy  vpt 180 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C14 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 90 360 arc closepath fill
               vpt 0 360 arc } bind def
/C15 { BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/Rec   { newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
       neg 0 rlineto closepath } bind def
/Square { dup Rec } bind def
/Bsquare { vpt sub exch vpt sub exch vpt2 Square } bind def
/S0 { BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare } bind def
/S1 { BL [] 0 setdash 2 copy vpt Square fill Bsquare } bind def
/S2 { BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare } bind def
/S3 { BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare } bind def
/S4 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare } bind def
/S5 { BL [] 0 setdash 2 copy 2 copy vpt Square fill
       exch vpt sub exch vpt sub vpt Square fill Bsquare } bind def
/S6 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare } bind def
/S7 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
       2 copy vpt Square fill
       Bsquare } bind def
/S8 { BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare } bind def
/S9 { BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare } bind def
/S10 { BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
       Bsquare } bind def
/S11 { BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
       Bsquare } bind def
/S12 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare } bind def
/S13 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
       2 copy vpt Square fill Bsquare } bind def
/S14 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
       2 copy exch vpt sub exch vpt Square fill Bsquare } bind def
/S15 { BL [] 0 setdash 2 copy Bsquare fill Bsquare } bind def
/D0 { gsave translate 45 rotate 0 0 S0 stroke grestore } bind def
/D1 { gsave translate 45 rotate 0 0 S1 stroke grestore } bind def
/D2 { gsave translate 45 rotate 0 0 S2 stroke grestore } bind def
/D3 { gsave translate 45 rotate 0 0 S3 stroke grestore } bind def
/D4 { gsave translate 45 rotate 0 0 S4 stroke grestore } bind def
/D5 { gsave translate 45 rotate 0 0 S5 stroke grestore } bind def
/D6 { gsave translate 45 rotate 0 0 S6 stroke grestore } bind def
/D7 { gsave translate 45 rotate 0 0 S7 stroke grestore } bind def
/D8 { gsave translate 45 rotate 0 0 S8 stroke grestore } bind def
/D9 { gsave translate 45 rotate 0 0 S9 stroke grestore } bind def
/D10 { gsave translate 45 rotate 0 0 S10 stroke grestore } bind def
/D11 { gsave translate 45 rotate 0 0 S11 stroke grestore } bind def
/D12 { gsave translate 45 rotate 0 0 S12 stroke grestore } bind def
/D13 { gsave translate 45 rotate 0 0 S13 stroke grestore } bind def
/D14 { gsave translate 45 rotate 0 0 S14 stroke grestore } bind def
/D15 { gsave translate 45 rotate 0 0 S15 stroke grestore } bind def
/DiaE { stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke } def
/BoxE { stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke } def
/TriUE { stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke } def
/TriDE { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke } def
/PentE { stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore } def
/CircE { stroke [] 0 setdash 
  hpt 0 360 arc stroke } def
/Opaque { gsave closepath 1 setgray fill grestore 0 setgray closepath } def
/DiaW { stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke } def
/BoxW { stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke } def
/TriUW { stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke } def
/TriDW { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke } def
/PentW { stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore } def
/CircW { stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke } def
/BoxFill { gsave Rec 1 setgray fill grestore } def
/MFshow {{dup dup 0 get findfont exch 1 get scalefont setfont
     [ currentpoint ] exch dup 2 get 0 exch rmoveto dup dup 5 get exch 4 get
     {show} {stringwidth pop 0 rmoveto}ifelse dup 3 get
     {2 get neg 0 exch rmoveto pop} {pop aload pop moveto}ifelse} forall} bind def
/MFwidth {0 exch {dup 3 get{dup dup 0 get findfont exch 1 get scalefont setfont
      5 get stringwidth pop add}
    {pop} ifelse} forall} bind def
/MLshow { currentpoint stroke M
  0 exch R MFshow } bind def
/MRshow { currentpoint stroke M
  exch dup MFwidth neg 3 -1 roll R MFshow } def
/MCshow { currentpoint stroke M
  exch dup MFwidth -2 div 3 -1 roll R MFshow } def
end
%%EndProlog
gnudict begin
gsave
50 50 translate
0.050 0.050 scale
0 setgray
newpath
(Times-Roman) findfont 180 scalefont setfont
1.000 UL
LTb
702 1134 M
63 0 V
6129 0 R
-63 0 V
 stroke
594 1134 M
[ [(Times-Roman) 180.0 0.0 true true (5)]
] -60.0 MRshow
702 2124 M
63 0 V
6129 0 R
-63 0 V
 stroke
594 2124 M
[ [(Times-Roman) 180.0 0.0 true true (10)]
] -60.0 MRshow
702 3114 M
63 0 V
6129 0 R
-63 0 V
 stroke
594 3114 M
[ [(Times-Roman) 180.0 0.0 true true (15)]
] -60.0 MRshow
702 4104 M
63 0 V
6129 0 R
-63 0 V
 stroke
594 4104 M
[ [(Times-Roman) 180.0 0.0 true true (20)]
] -60.0 MRshow
1293 540 M
0 63 V
0 3897 R
0 -63 V
 stroke
1293 360 M
[ [(Times-Roman) 180.0 0.0 true true (20)]
] -60.0 MCshow
1916 540 M
0 63 V
0 3897 R
0 -63 V
 stroke
1916 360 M
[ [(Times-Roman) 180.0 0.0 true true (40)]
] -60.0 MCshow
2538 540 M
0 63 V
0 3897 R
0 -63 V
 stroke
2538 360 M
[ [(Times-Roman) 180.0 0.0 true true (60)]
] -60.0 MCshow
3160 540 M
0 63 V
0 3897 R
0 -63 V
 stroke
3160 360 M
[ [(Times-Roman) 180.0 0.0 true true (80)]
] -60.0 MCshow
3782 540 M
0 63 V
0 3897 R
0 -63 V
 stroke
3782 360 M
[ [(Times-Roman) 180.0 0.0 true true (100)]
] -60.0 MCshow
4405 540 M
0 63 V
0 3897 R
0 -63 V
 stroke
4405 360 M
[ [(Times-Roman) 180.0 0.0 true true (120)]
] -60.0 MCshow
5027 540 M
0 63 V
0 3897 R
0 -63 V
 stroke
5027 360 M
[ [(Times-Roman) 180.0 0.0 true true (140)]
] -60.0 MCshow
5649 540 M
0 63 V
0 3897 R
0 -63 V
 stroke
5649 360 M
[ [(Times-Roman) 180.0 0.0 true true (160)]
] -60.0 MCshow
6272 540 M
0 63 V
0 3897 R
0 -63 V
 stroke
6272 360 M
[ [(Times-Roman) 180.0 0.0 true true (180)]
] -60.0 MCshow
6894 540 M
0 63 V
0 3897 R
0 -63 V
 stroke
6894 360 M
[ [(Times-Roman) 180.0 0.0 true true (200)]
] -60.0 MCshow
1.000 UL
LTb
702 540 M
6192 0 V
0 3960 V
-6192 0 V
702 540 L
 stroke
180 2520 M
currentpoint gsave translate 90 rotate 0 0 moveto
[ [(Times-Roman) 180.0 0.0 true true (Time \(seconds\))]
] -60.0 MCshow
grestore
3798 90 M
[ [(Times-Roman) 180.0 0.0 true true (Octant Size)]
] -60.0 MCshow
3798 4770 M
[ [(Times-Roman) 180.0 0.0 true true (Partition Times for 4 Processors: Muzzle-Refined Mesh)]
] -60.0 MCshow
1.000 UP
1.000 UL
LT0
6075 4347 M
[ [(Times-Roman) 180.0 0.0 true true (nodes=1:ppn=4)]
] -60.0 MRshow
6183 4347 M
495 0 V
702 2222 M
826 959 L
982 820 L
156 -39 V
155 -37 V
156 -1 V
155 2 V
156 13 V
156 30 V
155 11 V
156 69 V
311 42 V
311 109 V
311 122 V
311 127 V
311 148 V
623 344 V
622 357 V
622 384 V
623 536 V
622 492 V
702 2222 Pls
826 959 Pls
982 820 Pls
1138 781 Pls
1293 744 Pls
1449 743 Pls
1604 745 Pls
1760 758 Pls
1916 788 Pls
2071 799 Pls
2227 868 Pls
2538 910 Pls
2849 1019 Pls
3160 1141 Pls
3471 1268 Pls
3782 1416 Pls
4405 1760 Pls
5027 2117 Pls
5649 2501 Pls
6272 3037 Pls
6894 3529 Pls
6430 4347 Pls
1.000 UP
1.000 UL
LT1
6075 4167 M
[ [(Times-Roman) 180.0 0.0 true true (nodes=2:ppn=2)]
] -60.0 MRshow
6183 4167 M
495 0 V
702 2721 M
826 1175 L
982 1000 L
156 -74 V
155 -21 V
156 -25 V
155 -4 V
156 14 V
156 26 V
155 18 V
156 31 V
311 81 V
311 100 V
311 123 V
311 145 V
311 129 V
623 343 V
622 359 V
622 404 V
623 525 V
622 500 V
702 2721 Crs
826 1175 Crs
982 1000 Crs
1138 926 Crs
1293 905 Crs
1449 880 Crs
1604 876 Crs
1760 890 Crs
1916 916 Crs
2071 934 Crs
2227 965 Crs
2538 1046 Crs
2849 1146 Crs
3160 1269 Crs
3471 1414 Crs
3782 1543 Crs
4405 1886 Crs
5027 2245 Crs
5649 2649 Crs
6272 3174 Crs
6894 3674 Crs
6430 4167 Crs
1.000 UP
1.000 UL
LT2
6075 3987 M
[ [(Times-Roman) 180.0 0.0 true true (nodes=4:ppn=1)]
] -60.0 MRshow
6183 3987 M
495 0 V
702 2993 M
826 1291 L
982 1041 L
156 -44 V
155 -56 V
156 -20 V
155 32 V
156 -3 V
156 -6 V
155 25 V
156 64 V
311 141 V
311 23 V
311 149 V
311 82 V
311 182 V
623 368 V
622 336 V
622 369 V
623 495 V
622 542 V
702 2993 Star
826 1291 Star
982 1041 Star
1138 997 Star
1293 941 Star
1449 921 Star
1604 953 Star
1760 950 Star
1916 944 Star
2071 969 Star
2227 1033 Star
2538 1174 Star
2849 1197 Star
3160 1346 Star
3471 1428 Star
3782 1610 Star
4405 1978 Star
5027 2314 Star
5649 2683 Star
6272 3178 Star
6894 3720 Star
6430 3987 Star
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Times-Roman

%%EndDocument
 @endspecial 51523 17422 V 866 34703 V 1553 34222 a @beginspecial
50 @llx 50 @lly 410 @urx 302 @ury 2160 @rwi @setspecial
%%BeginDocument: graphs/octpart/times/partition/muzzle-refined-partition-6.eps
%!PS-Adobe-2.0 EPSF-2.0
%%Title: muzzle-refined-partition-6.eps
%%Creator: gnuplot 3.7 patchlevel 0
%%CreationDate: Fri Jul 19 11:24:35 2002
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 410 302
%%Orientation: Portrait
%%EndComments
/gnudict 256 dict def
gnudict begin
/Color false def
/Solid false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
/vshift -60 def
/dl {10 mul} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow { currentpoint stroke M
  0 vshift R show } def
/Rshow { currentpoint stroke M
  dup stringwidth pop neg vshift R show } def
/Cshow { currentpoint stroke M
  dup stringwidth pop -2 div vshift R show } def
/UP { dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def } def
/DL { Color {setrgbcolor Solid {pop []} if 0 setdash }
 {pop pop pop Solid {pop []} if 0 setdash} ifelse } def
/BL { stroke gnulinewidth 2 mul setlinewidth } def
/AL { stroke gnulinewidth 2 div setlinewidth } def
/UL { gnulinewidth mul /userlinewidth exch def } def
/PL { stroke userlinewidth setlinewidth } def
/LTb { BL [] 0 0 0 DL } def
/LTa { AL [1 dl 2 dl] 0 setdash 0 0 0 setrgbcolor } def
/LT0 { PL [] 1 0 0 DL } def
/LT1 { PL [4 dl 2 dl] 0 1 0 DL } def
/LT2 { PL [2 dl 3 dl] 0 0 1 DL } def
/LT3 { PL [1 dl 1.5 dl] 1 0 1 DL } def
/LT4 { PL [5 dl 2 dl 1 dl 2 dl] 0 1 1 DL } def
/LT5 { PL [4 dl 3 dl 1 dl 3 dl] 1 1 0 DL } def
/LT6 { PL [2 dl 2 dl 2 dl 4 dl] 0 0 0 DL } def
/LT7 { PL [2 dl 2 dl 2 dl 2 dl 2 dl 4 dl] 1 0.3 0 DL } def
/LT8 { PL [2 dl 2 dl 2 dl 2 dl 2 dl 2 dl 2 dl 4 dl] 0.5 0.5 0.5 DL } def
/Pnt { stroke [] 0 setdash
   gsave 1 setlinecap M 0 0 V stroke grestore } def
/Dia { stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt } def
/Pls { stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
  } def
/Box { stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt } def
/Crs { stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke } def
/TriU { stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt  } def
/Star { 2 copy Pls Crs } def
/BoxF { stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V  hpt2 0 V  0 vpt2 V
  hpt2 neg 0 V  closepath fill } def
/TriUF { stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill } def
/TriD { stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt  } def
/TriDF { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF { stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill } def
/Pent { stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt } def
/PentF { stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore } def
/Circle { stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt } def
/CircleF { stroke [] 0 setdash hpt 0 360 arc fill } def
/C0 { BL [] 0 setdash 2 copy moveto vpt 90 450  arc } bind def
/C1 { BL [] 0 setdash 2 copy        moveto
       2 copy  vpt 0 90 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C2 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 90 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C3 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C4 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 180 270 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C5 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 90 arc
       2 copy moveto
       2 copy  vpt 180 270 arc closepath fill
               vpt 0 360 arc } bind def
/C6 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 90 270 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C7 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 0 270 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C8 { BL [] 0 setdash 2 copy moveto
      2 copy vpt 270 360 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C9 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 270 450 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C10 { BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
       2 copy moveto
       2 copy vpt 90 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C11 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 180 arc closepath fill
       2 copy moveto
       2 copy  vpt 270 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C12 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 180 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C13 { BL [] 0 setdash  2 copy moveto
       2 copy  vpt 0 90 arc closepath fill
       2 copy moveto
       2 copy  vpt 180 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C14 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 90 360 arc closepath fill
               vpt 0 360 arc } bind def
/C15 { BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/Rec   { newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
       neg 0 rlineto closepath } bind def
/Square { dup Rec } bind def
/Bsquare { vpt sub exch vpt sub exch vpt2 Square } bind def
/S0 { BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare } bind def
/S1 { BL [] 0 setdash 2 copy vpt Square fill Bsquare } bind def
/S2 { BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare } bind def
/S3 { BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare } bind def
/S4 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare } bind def
/S5 { BL [] 0 setdash 2 copy 2 copy vpt Square fill
       exch vpt sub exch vpt sub vpt Square fill Bsquare } bind def
/S6 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare } bind def
/S7 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
       2 copy vpt Square fill
       Bsquare } bind def
/S8 { BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare } bind def
/S9 { BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare } bind def
/S10 { BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
       Bsquare } bind def
/S11 { BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
       Bsquare } bind def
/S12 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare } bind def
/S13 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
       2 copy vpt Square fill Bsquare } bind def
/S14 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
       2 copy exch vpt sub exch vpt Square fill Bsquare } bind def
/S15 { BL [] 0 setdash 2 copy Bsquare fill Bsquare } bind def
/D0 { gsave translate 45 rotate 0 0 S0 stroke grestore } bind def
/D1 { gsave translate 45 rotate 0 0 S1 stroke grestore } bind def
/D2 { gsave translate 45 rotate 0 0 S2 stroke grestore } bind def
/D3 { gsave translate 45 rotate 0 0 S3 stroke grestore } bind def
/D4 { gsave translate 45 rotate 0 0 S4 stroke grestore } bind def
/D5 { gsave translate 45 rotate 0 0 S5 stroke grestore } bind def
/D6 { gsave translate 45 rotate 0 0 S6 stroke grestore } bind def
/D7 { gsave translate 45 rotate 0 0 S7 stroke grestore } bind def
/D8 { gsave translate 45 rotate 0 0 S8 stroke grestore } bind def
/D9 { gsave translate 45 rotate 0 0 S9 stroke grestore } bind def
/D10 { gsave translate 45 rotate 0 0 S10 stroke grestore } bind def
/D11 { gsave translate 45 rotate 0 0 S11 stroke grestore } bind def
/D12 { gsave translate 45 rotate 0 0 S12 stroke grestore } bind def
/D13 { gsave translate 45 rotate 0 0 S13 stroke grestore } bind def
/D14 { gsave translate 45 rotate 0 0 S14 stroke grestore } bind def
/D15 { gsave translate 45 rotate 0 0 S15 stroke grestore } bind def
/DiaE { stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke } def
/BoxE { stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke } def
/TriUE { stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke } def
/TriDE { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke } def
/PentE { stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore } def
/CircE { stroke [] 0 setdash 
  hpt 0 360 arc stroke } def
/Opaque { gsave closepath 1 setgray fill grestore 0 setgray closepath } def
/DiaW { stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke } def
/BoxW { stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke } def
/TriUW { stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke } def
/TriDW { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke } def
/PentW { stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore } def
/CircW { stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke } def
/BoxFill { gsave Rec 1 setgray fill grestore } def
/MFshow {{dup dup 0 get findfont exch 1 get scalefont setfont
     [ currentpoint ] exch dup 2 get 0 exch rmoveto dup dup 5 get exch 4 get
     {show} {stringwidth pop 0 rmoveto}ifelse dup 3 get
     {2 get neg 0 exch rmoveto pop} {pop aload pop moveto}ifelse} forall} bind def
/MFwidth {0 exch {dup 3 get{dup dup 0 get findfont exch 1 get scalefont setfont
      5 get stringwidth pop add}
    {pop} ifelse} forall} bind def
/MLshow { currentpoint stroke M
  0 exch R MFshow } bind def
/MRshow { currentpoint stroke M
  exch dup MFwidth neg 3 -1 roll R MFshow } def
/MCshow { currentpoint stroke M
  exch dup MFwidth -2 div 3 -1 roll R MFshow } def
end
%%EndProlog
gnudict begin
gsave
50 50 translate
0.050 0.050 scale
0 setgray
newpath
(Times-Roman) findfont 180 scalefont setfont
1.000 UL
LTb
702 1134 M
63 0 V
6129 0 R
-63 0 V
 stroke
594 1134 M
[ [(Times-Roman) 180.0 0.0 true true (5)]
] -60.0 MRshow
702 2124 M
63 0 V
6129 0 R
-63 0 V
 stroke
594 2124 M
[ [(Times-Roman) 180.0 0.0 true true (10)]
] -60.0 MRshow
702 3114 M
63 0 V
6129 0 R
-63 0 V
 stroke
594 3114 M
[ [(Times-Roman) 180.0 0.0 true true (15)]
] -60.0 MRshow
702 4104 M
63 0 V
6129 0 R
-63 0 V
 stroke
594 4104 M
[ [(Times-Roman) 180.0 0.0 true true (20)]
] -60.0 MRshow
1293 540 M
0 63 V
0 3897 R
0 -63 V
 stroke
1293 360 M
[ [(Times-Roman) 180.0 0.0 true true (20)]
] -60.0 MCshow
1916 540 M
0 63 V
0 3897 R
0 -63 V
 stroke
1916 360 M
[ [(Times-Roman) 180.0 0.0 true true (40)]
] -60.0 MCshow
2538 540 M
0 63 V
0 3897 R
0 -63 V
 stroke
2538 360 M
[ [(Times-Roman) 180.0 0.0 true true (60)]
] -60.0 MCshow
3160 540 M
0 63 V
0 3897 R
0 -63 V
 stroke
3160 360 M
[ [(Times-Roman) 180.0 0.0 true true (80)]
] -60.0 MCshow
3782 540 M
0 63 V
0 3897 R
0 -63 V
 stroke
3782 360 M
[ [(Times-Roman) 180.0 0.0 true true (100)]
] -60.0 MCshow
4405 540 M
0 63 V
0 3897 R
0 -63 V
 stroke
4405 360 M
[ [(Times-Roman) 180.0 0.0 true true (120)]
] -60.0 MCshow
5027 540 M
0 63 V
0 3897 R
0 -63 V
 stroke
5027 360 M
[ [(Times-Roman) 180.0 0.0 true true (140)]
] -60.0 MCshow
5649 540 M
0 63 V
0 3897 R
0 -63 V
 stroke
5649 360 M
[ [(Times-Roman) 180.0 0.0 true true (160)]
] -60.0 MCshow
6272 540 M
0 63 V
0 3897 R
0 -63 V
 stroke
6272 360 M
[ [(Times-Roman) 180.0 0.0 true true (180)]
] -60.0 MCshow
6894 540 M
0 63 V
0 3897 R
0 -63 V
 stroke
6894 360 M
[ [(Times-Roman) 180.0 0.0 true true (200)]
] -60.0 MCshow
1.000 UL
LTb
702 540 M
6192 0 V
0 3960 V
-6192 0 V
702 540 L
 stroke
180 2520 M
currentpoint gsave translate 90 rotate 0 0 moveto
[ [(Times-Roman) 180.0 0.0 true true (Time \(seconds\))]
] -60.0 MCshow
grestore
3798 90 M
[ [(Times-Roman) 180.0 0.0 true true (Octant Size)]
] -60.0 MCshow
3798 4770 M
[ [(Times-Roman) 180.0 0.0 true true (Partition Times for 6 Processors: Muzzle-Refined Mesh)]
] -60.0 MCshow
1.000 UP
1.000 UL
LT0
6075 4347 M
[ [(Times-Roman) 180.0 0.0 true true (nodes=3:ppn=2)]
] -60.0 MRshow
6183 4347 M
495 0 V
702 2819 M
826 1214 L
982 1068 L
1138 949 L
155 -24 V
156 -12 V
155 -13 V
156 22 V
156 7 V
155 19 V
156 30 V
311 79 V
311 99 V
311 135 V
311 118 V
311 157 V
623 321 V
622 338 V
622 453 V
623 406 V
622 555 V
702 2819 Pls
826 1214 Pls
982 1068 Pls
1138 949 Pls
1293 925 Pls
1449 913 Pls
1604 900 Pls
1760 922 Pls
1916 929 Pls
2071 948 Pls
2227 978 Pls
2538 1057 Pls
2849 1156 Pls
3160 1291 Pls
3471 1409 Pls
3782 1566 Pls
4405 1887 Pls
5027 2225 Pls
5649 2678 Pls
6272 3084 Pls
6894 3639 Pls
6430 4347 Pls
1.000 UP
1.000 UL
LT1
6075 4167 M
[ [(Times-Roman) 180.0 0.0 true true (nodes=6:ppn=1)]
] -60.0 MRshow
6183 4167 M
495 0 V
702 3559 M
826 1296 L
982 1120 L
156 -114 V
155 -4 V
156 -43 V
155 3 V
156 -4 V
156 21 V
155 23 V
156 27 V
311 71 V
311 101 V
311 119 V
311 145 V
311 145 V
623 314 V
622 349 V
622 408 V
623 581 V
622 485 V
702 3559 Crs
826 1296 Crs
982 1120 Crs
1138 1006 Crs
1293 1002 Crs
1449 959 Crs
1604 962 Crs
1760 958 Crs
1916 979 Crs
2071 1002 Crs
2227 1029 Crs
2538 1100 Crs
2849 1201 Crs
3160 1320 Crs
3471 1465 Crs
3782 1610 Crs
4405 1924 Crs
5027 2273 Crs
5649 2681 Crs
6272 3262 Crs
6894 3747 Crs
6430 4167 Crs
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Times-Roman

%%EndDocument
 @endspecial 25328 w @beginspecial 50 @llx 50 @lly 410
@urx 302 @ury 2160 @rwi @setspecial
%%BeginDocument: graphs/octpart/times/partition/muzzle-refined-partition-8.eps
%!PS-Adobe-2.0 EPSF-2.0
%%Title: muzzle-refined-partition-8.eps
%%Creator: gnuplot 3.7 patchlevel 0
%%CreationDate: Fri Jul 19 11:24:35 2002
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 410 302
%%Orientation: Portrait
%%EndComments
/gnudict 256 dict def
gnudict begin
/Color false def
/Solid false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
/vshift -60 def
/dl {10 mul} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow { currentpoint stroke M
  0 vshift R show } def
/Rshow { currentpoint stroke M
  dup stringwidth pop neg vshift R show } def
/Cshow { currentpoint stroke M
  dup stringwidth pop -2 div vshift R show } def
/UP { dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def } def
/DL { Color {setrgbcolor Solid {pop []} if 0 setdash }
 {pop pop pop Solid {pop []} if 0 setdash} ifelse } def
/BL { stroke gnulinewidth 2 mul setlinewidth } def
/AL { stroke gnulinewidth 2 div setlinewidth } def
/UL { gnulinewidth mul /userlinewidth exch def } def
/PL { stroke userlinewidth setlinewidth } def
/LTb { BL [] 0 0 0 DL } def
/LTa { AL [1 dl 2 dl] 0 setdash 0 0 0 setrgbcolor } def
/LT0 { PL [] 1 0 0 DL } def
/LT1 { PL [4 dl 2 dl] 0 1 0 DL } def
/LT2 { PL [2 dl 3 dl] 0 0 1 DL } def
/LT3 { PL [1 dl 1.5 dl] 1 0 1 DL } def
/LT4 { PL [5 dl 2 dl 1 dl 2 dl] 0 1 1 DL } def
/LT5 { PL [4 dl 3 dl 1 dl 3 dl] 1 1 0 DL } def
/LT6 { PL [2 dl 2 dl 2 dl 4 dl] 0 0 0 DL } def
/LT7 { PL [2 dl 2 dl 2 dl 2 dl 2 dl 4 dl] 1 0.3 0 DL } def
/LT8 { PL [2 dl 2 dl 2 dl 2 dl 2 dl 2 dl 2 dl 4 dl] 0.5 0.5 0.5 DL } def
/Pnt { stroke [] 0 setdash
   gsave 1 setlinecap M 0 0 V stroke grestore } def
/Dia { stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt } def
/Pls { stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
  } def
/Box { stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt } def
/Crs { stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke } def
/TriU { stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt  } def
/Star { 2 copy Pls Crs } def
/BoxF { stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V  hpt2 0 V  0 vpt2 V
  hpt2 neg 0 V  closepath fill } def
/TriUF { stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill } def
/TriD { stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt  } def
/TriDF { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF { stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill } def
/Pent { stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt } def
/PentF { stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore } def
/Circle { stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt } def
/CircleF { stroke [] 0 setdash hpt 0 360 arc fill } def
/C0 { BL [] 0 setdash 2 copy moveto vpt 90 450  arc } bind def
/C1 { BL [] 0 setdash 2 copy        moveto
       2 copy  vpt 0 90 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C2 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 90 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C3 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C4 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 180 270 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C5 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 90 arc
       2 copy moveto
       2 copy  vpt 180 270 arc closepath fill
               vpt 0 360 arc } bind def
/C6 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 90 270 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C7 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 0 270 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C8 { BL [] 0 setdash 2 copy moveto
      2 copy vpt 270 360 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C9 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 270 450 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C10 { BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
       2 copy moveto
       2 copy vpt 90 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C11 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 180 arc closepath fill
       2 copy moveto
       2 copy  vpt 270 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C12 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 180 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C13 { BL [] 0 setdash  2 copy moveto
       2 copy  vpt 0 90 arc closepath fill
       2 copy moveto
       2 copy  vpt 180 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C14 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 90 360 arc closepath fill
               vpt 0 360 arc } bind def
/C15 { BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/Rec   { newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
       neg 0 rlineto closepath } bind def
/Square { dup Rec } bind def
/Bsquare { vpt sub exch vpt sub exch vpt2 Square } bind def
/S0 { BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare } bind def
/S1 { BL [] 0 setdash 2 copy vpt Square fill Bsquare } bind def
/S2 { BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare } bind def
/S3 { BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare } bind def
/S4 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare } bind def
/S5 { BL [] 0 setdash 2 copy 2 copy vpt Square fill
       exch vpt sub exch vpt sub vpt Square fill Bsquare } bind def
/S6 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare } bind def
/S7 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
       2 copy vpt Square fill
       Bsquare } bind def
/S8 { BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare } bind def
/S9 { BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare } bind def
/S10 { BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
       Bsquare } bind def
/S11 { BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
       Bsquare } bind def
/S12 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare } bind def
/S13 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
       2 copy vpt Square fill Bsquare } bind def
/S14 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
       2 copy exch vpt sub exch vpt Square fill Bsquare } bind def
/S15 { BL [] 0 setdash 2 copy Bsquare fill Bsquare } bind def
/D0 { gsave translate 45 rotate 0 0 S0 stroke grestore } bind def
/D1 { gsave translate 45 rotate 0 0 S1 stroke grestore } bind def
/D2 { gsave translate 45 rotate 0 0 S2 stroke grestore } bind def
/D3 { gsave translate 45 rotate 0 0 S3 stroke grestore } bind def
/D4 { gsave translate 45 rotate 0 0 S4 stroke grestore } bind def
/D5 { gsave translate 45 rotate 0 0 S5 stroke grestore } bind def
/D6 { gsave translate 45 rotate 0 0 S6 stroke grestore } bind def
/D7 { gsave translate 45 rotate 0 0 S7 stroke grestore } bind def
/D8 { gsave translate 45 rotate 0 0 S8 stroke grestore } bind def
/D9 { gsave translate 45 rotate 0 0 S9 stroke grestore } bind def
/D10 { gsave translate 45 rotate 0 0 S10 stroke grestore } bind def
/D11 { gsave translate 45 rotate 0 0 S11 stroke grestore } bind def
/D12 { gsave translate 45 rotate 0 0 S12 stroke grestore } bind def
/D13 { gsave translate 45 rotate 0 0 S13 stroke grestore } bind def
/D14 { gsave translate 45 rotate 0 0 S14 stroke grestore } bind def
/D15 { gsave translate 45 rotate 0 0 S15 stroke grestore } bind def
/DiaE { stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke } def
/BoxE { stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke } def
/TriUE { stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke } def
/TriDE { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke } def
/PentE { stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore } def
/CircE { stroke [] 0 setdash 
  hpt 0 360 arc stroke } def
/Opaque { gsave closepath 1 setgray fill grestore 0 setgray closepath } def
/DiaW { stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke } def
/BoxW { stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke } def
/TriUW { stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke } def
/TriDW { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke } def
/PentW { stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore } def
/CircW { stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke } def
/BoxFill { gsave Rec 1 setgray fill grestore } def
/MFshow {{dup dup 0 get findfont exch 1 get scalefont setfont
     [ currentpoint ] exch dup 2 get 0 exch rmoveto dup dup 5 get exch 4 get
     {show} {stringwidth pop 0 rmoveto}ifelse dup 3 get
     {2 get neg 0 exch rmoveto pop} {pop aload pop moveto}ifelse} forall} bind def
/MFwidth {0 exch {dup 3 get{dup dup 0 get findfont exch 1 get scalefont setfont
      5 get stringwidth pop add}
    {pop} ifelse} forall} bind def
/MLshow { currentpoint stroke M
  0 exch R MFshow } bind def
/MRshow { currentpoint stroke M
  exch dup MFwidth neg 3 -1 roll R MFshow } def
/MCshow { currentpoint stroke M
  exch dup MFwidth -2 div 3 -1 roll R MFshow } def
end
%%EndProlog
gnudict begin
gsave
50 50 translate
0.050 0.050 scale
0 setgray
newpath
(Times-Roman) findfont 180 scalefont setfont
1.000 UL
LTb
702 1134 M
63 0 V
6129 0 R
-63 0 V
 stroke
594 1134 M
[ [(Times-Roman) 180.0 0.0 true true (5)]
] -60.0 MRshow
702 2124 M
63 0 V
6129 0 R
-63 0 V
 stroke
594 2124 M
[ [(Times-Roman) 180.0 0.0 true true (10)]
] -60.0 MRshow
702 3114 M
63 0 V
6129 0 R
-63 0 V
 stroke
594 3114 M
[ [(Times-Roman) 180.0 0.0 true true (15)]
] -60.0 MRshow
702 4104 M
63 0 V
6129 0 R
-63 0 V
 stroke
594 4104 M
[ [(Times-Roman) 180.0 0.0 true true (20)]
] -60.0 MRshow
1293 540 M
0 63 V
0 3897 R
0 -63 V
 stroke
1293 360 M
[ [(Times-Roman) 180.0 0.0 true true (20)]
] -60.0 MCshow
1916 540 M
0 63 V
0 3897 R
0 -63 V
 stroke
1916 360 M
[ [(Times-Roman) 180.0 0.0 true true (40)]
] -60.0 MCshow
2538 540 M
0 63 V
0 3897 R
0 -63 V
 stroke
2538 360 M
[ [(Times-Roman) 180.0 0.0 true true (60)]
] -60.0 MCshow
3160 540 M
0 63 V
0 3897 R
0 -63 V
 stroke
3160 360 M
[ [(Times-Roman) 180.0 0.0 true true (80)]
] -60.0 MCshow
3782 540 M
0 63 V
0 3897 R
0 -63 V
 stroke
3782 360 M
[ [(Times-Roman) 180.0 0.0 true true (100)]
] -60.0 MCshow
4405 540 M
0 63 V
0 3897 R
0 -63 V
 stroke
4405 360 M
[ [(Times-Roman) 180.0 0.0 true true (120)]
] -60.0 MCshow
5027 540 M
0 63 V
0 3897 R
0 -63 V
 stroke
5027 360 M
[ [(Times-Roman) 180.0 0.0 true true (140)]
] -60.0 MCshow
5649 540 M
0 63 V
0 3897 R
0 -63 V
 stroke
5649 360 M
[ [(Times-Roman) 180.0 0.0 true true (160)]
] -60.0 MCshow
6272 540 M
0 63 V
0 3897 R
0 -63 V
 stroke
6272 360 M
[ [(Times-Roman) 180.0 0.0 true true (180)]
] -60.0 MCshow
6894 540 M
0 63 V
0 3897 R
0 -63 V
 stroke
6894 360 M
[ [(Times-Roman) 180.0 0.0 true true (200)]
] -60.0 MCshow
1.000 UL
LTb
702 540 M
6192 0 V
0 3960 V
-6192 0 V
702 540 L
 stroke
180 2520 M
currentpoint gsave translate 90 rotate 0 0 moveto
[ [(Times-Roman) 180.0 0.0 true true (Time \(seconds\))]
] -60.0 MCshow
grestore
3798 90 M
[ [(Times-Roman) 180.0 0.0 true true (Octant Size)]
] -60.0 MCshow
3798 4770 M
[ [(Times-Roman) 180.0 0.0 true true (Partition Times for 8 Processors: Muzzle-Refined Mesh)]
] -60.0 MCshow
1.000 UP
1.000 UL
LT0
6075 4347 M
[ [(Times-Roman) 180.0 0.0 true true (nodes=2:ppn=4)]
] -60.0 MRshow
6183 4347 M
495 0 V
702 1897 M
826 909 L
982 811 L
156 -37 V
155 -15 V
156 -17 V
155 3 V
156 5 V
156 3 V
155 16 V
156 13 V
311 36 V
311 54 V
311 52 V
311 92 V
311 49 V
623 176 V
622 163 V
622 198 V
623 252 V
622 265 V
702 1897 Pls
826 909 Pls
982 811 Pls
1138 774 Pls
1293 759 Pls
1449 742 Pls
1604 745 Pls
1760 750 Pls
1916 753 Pls
2071 769 Pls
2227 782 Pls
2538 818 Pls
2849 872 Pls
3160 924 Pls
3471 1016 Pls
3782 1065 Pls
4405 1241 Pls
5027 1404 Pls
5649 1602 Pls
6272 1854 Pls
6894 2119 Pls
6430 4347 Pls
1.000 UP
1.000 UL
LT1
6075 4167 M
[ [(Times-Roman) 180.0 0.0 true true (nodes=4:ppn=2)]
] -60.0 MRshow
6183 4167 M
495 0 V
702 2197 M
826 1034 L
982 871 L
156 -57 V
155 -23 V
156 -20 V
155 11 V
156 -3 V
156 5 V
155 3 V
156 21 V
311 41 V
311 50 V
311 78 V
311 56 V
311 63 V
623 183 V
622 171 V
622 203 V
623 220 V
622 275 V
702 2197 Crs
826 1034 Crs
982 871 Crs
1138 814 Crs
1293 791 Crs
1449 771 Crs
1604 782 Crs
1760 779 Crs
1916 784 Crs
2071 787 Crs
2227 808 Crs
2538 849 Crs
2849 899 Crs
3160 977 Crs
3471 1033 Crs
3782 1096 Crs
4405 1279 Crs
5027 1450 Crs
5649 1653 Crs
6272 1873 Crs
6894 2148 Crs
6430 4167 Crs
1.000 UP
1.000 UL
LT2
6075 3987 M
[ [(Times-Roman) 180.0 0.0 true true (nodes=8:ppn=1)]
] -60.0 MRshow
6183 3987 M
495 0 V
702 2105 M
826 971 L
982 866 L
156 -18 V
155 -57 V
156 -17 V
155 3 V
156 -2 V
156 23 V
155 94 V
156 -37 V
311 34 V
311 1 V
311 74 V
311 119 V
311 7 V
623 172 V
622 203 V
622 183 V
623 268 V
622 256 V
702 2105 Star
826 971 Star
982 866 Star
1138 848 Star
1293 791 Star
1449 774 Star
1604 777 Star
1760 775 Star
1916 798 Star
2071 892 Star
2227 855 Star
2538 889 Star
2849 890 Star
3160 964 Star
3471 1083 Star
3782 1090 Star
4405 1262 Star
5027 1465 Star
5649 1648 Star
6272 1916 Star
6894 2172 Star
6430 3987 Star
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Times-Roman

%%EndDocument
 @endspecial 51523 34703 V 866 51985 V 1553 51504 a @beginspecial
50 @llx 50 @lly 410 @urx 302 @ury 2160 @rwi @setspecial
%%BeginDocument: graphs/octpart/times/partition/muzzle-refined-partition-10.eps
%!PS-Adobe-2.0 EPSF-2.0
%%Title: muzzle-refined-partition-10.eps
%%Creator: gnuplot 3.7 patchlevel 0
%%CreationDate: Fri Jul 19 11:24:35 2002
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 410 302
%%Orientation: Portrait
%%EndComments
/gnudict 256 dict def
gnudict begin
/Color false def
/Solid false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
/vshift -60 def
/dl {10 mul} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow { currentpoint stroke M
  0 vshift R show } def
/Rshow { currentpoint stroke M
  dup stringwidth pop neg vshift R show } def
/Cshow { currentpoint stroke M
  dup stringwidth pop -2 div vshift R show } def
/UP { dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def } def
/DL { Color {setrgbcolor Solid {pop []} if 0 setdash }
 {pop pop pop Solid {pop []} if 0 setdash} ifelse } def
/BL { stroke gnulinewidth 2 mul setlinewidth } def
/AL { stroke gnulinewidth 2 div setlinewidth } def
/UL { gnulinewidth mul /userlinewidth exch def } def
/PL { stroke userlinewidth setlinewidth } def
/LTb { BL [] 0 0 0 DL } def
/LTa { AL [1 dl 2 dl] 0 setdash 0 0 0 setrgbcolor } def
/LT0 { PL [] 1 0 0 DL } def
/LT1 { PL [4 dl 2 dl] 0 1 0 DL } def
/LT2 { PL [2 dl 3 dl] 0 0 1 DL } def
/LT3 { PL [1 dl 1.5 dl] 1 0 1 DL } def
/LT4 { PL [5 dl 2 dl 1 dl 2 dl] 0 1 1 DL } def
/LT5 { PL [4 dl 3 dl 1 dl 3 dl] 1 1 0 DL } def
/LT6 { PL [2 dl 2 dl 2 dl 4 dl] 0 0 0 DL } def
/LT7 { PL [2 dl 2 dl 2 dl 2 dl 2 dl 4 dl] 1 0.3 0 DL } def
/LT8 { PL [2 dl 2 dl 2 dl 2 dl 2 dl 2 dl 2 dl 4 dl] 0.5 0.5 0.5 DL } def
/Pnt { stroke [] 0 setdash
   gsave 1 setlinecap M 0 0 V stroke grestore } def
/Dia { stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt } def
/Pls { stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
  } def
/Box { stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt } def
/Crs { stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke } def
/TriU { stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt  } def
/Star { 2 copy Pls Crs } def
/BoxF { stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V  hpt2 0 V  0 vpt2 V
  hpt2 neg 0 V  closepath fill } def
/TriUF { stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill } def
/TriD { stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt  } def
/TriDF { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF { stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill } def
/Pent { stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt } def
/PentF { stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore } def
/Circle { stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt } def
/CircleF { stroke [] 0 setdash hpt 0 360 arc fill } def
/C0 { BL [] 0 setdash 2 copy moveto vpt 90 450  arc } bind def
/C1 { BL [] 0 setdash 2 copy        moveto
       2 copy  vpt 0 90 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C2 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 90 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C3 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C4 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 180 270 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C5 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 90 arc
       2 copy moveto
       2 copy  vpt 180 270 arc closepath fill
               vpt 0 360 arc } bind def
/C6 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 90 270 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C7 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 0 270 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C8 { BL [] 0 setdash 2 copy moveto
      2 copy vpt 270 360 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C9 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 270 450 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C10 { BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
       2 copy moveto
       2 copy vpt 90 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C11 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 180 arc closepath fill
       2 copy moveto
       2 copy  vpt 270 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C12 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 180 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C13 { BL [] 0 setdash  2 copy moveto
       2 copy  vpt 0 90 arc closepath fill
       2 copy moveto
       2 copy  vpt 180 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C14 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 90 360 arc closepath fill
               vpt 0 360 arc } bind def
/C15 { BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/Rec   { newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
       neg 0 rlineto closepath } bind def
/Square { dup Rec } bind def
/Bsquare { vpt sub exch vpt sub exch vpt2 Square } bind def
/S0 { BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare } bind def
/S1 { BL [] 0 setdash 2 copy vpt Square fill Bsquare } bind def
/S2 { BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare } bind def
/S3 { BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare } bind def
/S4 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare } bind def
/S5 { BL [] 0 setdash 2 copy 2 copy vpt Square fill
       exch vpt sub exch vpt sub vpt Square fill Bsquare } bind def
/S6 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare } bind def
/S7 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
       2 copy vpt Square fill
       Bsquare } bind def
/S8 { BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare } bind def
/S9 { BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare } bind def
/S10 { BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
       Bsquare } bind def
/S11 { BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
       Bsquare } bind def
/S12 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare } bind def
/S13 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
       2 copy vpt Square fill Bsquare } bind def
/S14 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
       2 copy exch vpt sub exch vpt Square fill Bsquare } bind def
/S15 { BL [] 0 setdash 2 copy Bsquare fill Bsquare } bind def
/D0 { gsave translate 45 rotate 0 0 S0 stroke grestore } bind def
/D1 { gsave translate 45 rotate 0 0 S1 stroke grestore } bind def
/D2 { gsave translate 45 rotate 0 0 S2 stroke grestore } bind def
/D3 { gsave translate 45 rotate 0 0 S3 stroke grestore } bind def
/D4 { gsave translate 45 rotate 0 0 S4 stroke grestore } bind def
/D5 { gsave translate 45 rotate 0 0 S5 stroke grestore } bind def
/D6 { gsave translate 45 rotate 0 0 S6 stroke grestore } bind def
/D7 { gsave translate 45 rotate 0 0 S7 stroke grestore } bind def
/D8 { gsave translate 45 rotate 0 0 S8 stroke grestore } bind def
/D9 { gsave translate 45 rotate 0 0 S9 stroke grestore } bind def
/D10 { gsave translate 45 rotate 0 0 S10 stroke grestore } bind def
/D11 { gsave translate 45 rotate 0 0 S11 stroke grestore } bind def
/D12 { gsave translate 45 rotate 0 0 S12 stroke grestore } bind def
/D13 { gsave translate 45 rotate 0 0 S13 stroke grestore } bind def
/D14 { gsave translate 45 rotate 0 0 S14 stroke grestore } bind def
/D15 { gsave translate 45 rotate 0 0 S15 stroke grestore } bind def
/DiaE { stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke } def
/BoxE { stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke } def
/TriUE { stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke } def
/TriDE { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke } def
/PentE { stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore } def
/CircE { stroke [] 0 setdash 
  hpt 0 360 arc stroke } def
/Opaque { gsave closepath 1 setgray fill grestore 0 setgray closepath } def
/DiaW { stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke } def
/BoxW { stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke } def
/TriUW { stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke } def
/TriDW { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke } def
/PentW { stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore } def
/CircW { stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke } def
/BoxFill { gsave Rec 1 setgray fill grestore } def
/MFshow {{dup dup 0 get findfont exch 1 get scalefont setfont
     [ currentpoint ] exch dup 2 get 0 exch rmoveto dup dup 5 get exch 4 get
     {show} {stringwidth pop 0 rmoveto}ifelse dup 3 get
     {2 get neg 0 exch rmoveto pop} {pop aload pop moveto}ifelse} forall} bind def
/MFwidth {0 exch {dup 3 get{dup dup 0 get findfont exch 1 get scalefont setfont
      5 get stringwidth pop add}
    {pop} ifelse} forall} bind def
/MLshow { currentpoint stroke M
  0 exch R MFshow } bind def
/MRshow { currentpoint stroke M
  exch dup MFwidth neg 3 -1 roll R MFshow } def
/MCshow { currentpoint stroke M
  exch dup MFwidth -2 div 3 -1 roll R MFshow } def
end
%%EndProlog
gnudict begin
gsave
50 50 translate
0.050 0.050 scale
0 setgray
newpath
(Times-Roman) findfont 180 scalefont setfont
1.000 UL
LTb
702 1134 M
63 0 V
6129 0 R
-63 0 V
 stroke
594 1134 M
[ [(Times-Roman) 180.0 0.0 true true (5)]
] -60.0 MRshow
702 2124 M
63 0 V
6129 0 R
-63 0 V
 stroke
594 2124 M
[ [(Times-Roman) 180.0 0.0 true true (10)]
] -60.0 MRshow
702 3114 M
63 0 V
6129 0 R
-63 0 V
 stroke
594 3114 M
[ [(Times-Roman) 180.0 0.0 true true (15)]
] -60.0 MRshow
702 4104 M
63 0 V
6129 0 R
-63 0 V
 stroke
594 4104 M
[ [(Times-Roman) 180.0 0.0 true true (20)]
] -60.0 MRshow
1293 540 M
0 63 V
0 3897 R
0 -63 V
 stroke
1293 360 M
[ [(Times-Roman) 180.0 0.0 true true (20)]
] -60.0 MCshow
1916 540 M
0 63 V
0 3897 R
0 -63 V
 stroke
1916 360 M
[ [(Times-Roman) 180.0 0.0 true true (40)]
] -60.0 MCshow
2538 540 M
0 63 V
0 3897 R
0 -63 V
 stroke
2538 360 M
[ [(Times-Roman) 180.0 0.0 true true (60)]
] -60.0 MCshow
3160 540 M
0 63 V
0 3897 R
0 -63 V
 stroke
3160 360 M
[ [(Times-Roman) 180.0 0.0 true true (80)]
] -60.0 MCshow
3782 540 M
0 63 V
0 3897 R
0 -63 V
 stroke
3782 360 M
[ [(Times-Roman) 180.0 0.0 true true (100)]
] -60.0 MCshow
4405 540 M
0 63 V
0 3897 R
0 -63 V
 stroke
4405 360 M
[ [(Times-Roman) 180.0 0.0 true true (120)]
] -60.0 MCshow
5027 540 M
0 63 V
0 3897 R
0 -63 V
 stroke
5027 360 M
[ [(Times-Roman) 180.0 0.0 true true (140)]
] -60.0 MCshow
5649 540 M
0 63 V
0 3897 R
0 -63 V
 stroke
5649 360 M
[ [(Times-Roman) 180.0 0.0 true true (160)]
] -60.0 MCshow
6272 540 M
0 63 V
0 3897 R
0 -63 V
 stroke
6272 360 M
[ [(Times-Roman) 180.0 0.0 true true (180)]
] -60.0 MCshow
6894 540 M
0 63 V
0 3897 R
0 -63 V
 stroke
6894 360 M
[ [(Times-Roman) 180.0 0.0 true true (200)]
] -60.0 MCshow
1.000 UL
LTb
702 540 M
6192 0 V
0 3960 V
-6192 0 V
702 540 L
 stroke
180 2520 M
currentpoint gsave translate 90 rotate 0 0 moveto
[ [(Times-Roman) 180.0 0.0 true true (Time \(seconds\))]
] -60.0 MCshow
grestore
3798 90 M
[ [(Times-Roman) 180.0 0.0 true true (Octant Size)]
] -60.0 MCshow
3798 4770 M
[ [(Times-Roman) 180.0 0.0 true true (Partition Times for 10-16 Processors: Muzzle-Refined Mesh)]
] -60.0 MCshow
1.000 UP
1.000 UL
LT0
6075 4347 M
[ [(Times-Roman) 180.0 0.0 true true (nodes=5:ppn=2)]
] -60.0 MRshow
6183 4347 M
495 0 V
702 2576 M
826 1252 L
982 1057 L
156 -68 V
155 -4 V
156 -31 V
155 28 V
156 89 V
1916 849 L
155 18 V
156 121 V
311 60 V
311 -70 V
311 66 V
311 160 V
311 91 V
623 209 V
622 110 V
622 266 V
623 235 V
622 398 V
702 2576 Pls
826 1252 Pls
982 1057 Pls
1138 989 Pls
1293 985 Pls
1449 954 Pls
1604 982 Pls
1760 1071 Pls
1916 849 Pls
2071 867 Pls
2227 988 Pls
2538 1048 Pls
2849 978 Pls
3160 1044 Pls
3471 1204 Pls
3782 1295 Pls
4405 1504 Pls
5027 1614 Pls
5649 1880 Pls
6272 2115 Pls
6894 2513 Pls
6430 4347 Pls
1.000 UP
1.000 UL
LT1
6075 4167 M
[ [(Times-Roman) 180.0 0.0 true true (nodes=6:ppn=2)]
] -60.0 MRshow
6183 4167 M
495 0 V
702 3430 M
826 1542 L
156 -33 V
156 -192 V
155 210 V
156 471 V
155 196 V
156 -881 V
156 -51 V
155 192 V
156 -38 V
311 2 V
311 -29 V
311 129 V
311 68 V
311 -20 V
623 468 V
622 249 V
622 338 V
623 539 V
622 570 V
702 3430 Crs
826 1542 Crs
982 1509 Crs
1138 1317 Crs
1293 1527 Crs
1449 1998 Crs
1604 2194 Crs
1760 1313 Crs
1916 1262 Crs
2071 1454 Crs
2227 1416 Crs
2538 1418 Crs
2849 1389 Crs
3160 1518 Crs
3471 1586 Crs
3782 1566 Crs
4405 2034 Crs
5027 2283 Crs
5649 2621 Crs
6272 3160 Crs
6894 3730 Crs
6430 4167 Crs
1.000 UP
1.000 UL
LT2
6075 3987 M
[ [(Times-Roman) 180.0 0.0 true true (nodes=7:ppn=2)]
] -60.0 MRshow
6183 3987 M
495 0 V
702 2282 M
826 1396 L
156 471 V
156 -823 V
155 -7 V
156 99 V
155 -114 V
156 147 V
156 -78 V
155 -10 V
156 16 V
311 42 V
311 179 V
311 7 V
311 48 V
311 63 V
623 253 V
622 183 V
622 226 V
623 255 V
622 356 V
702 2282 Star
826 1396 Star
982 1867 Star
1138 1044 Star
1293 1037 Star
1449 1136 Star
1604 1022 Star
1760 1169 Star
1916 1091 Star
2071 1081 Star
2227 1097 Star
2538 1139 Star
2849 1318 Star
3160 1325 Star
3471 1373 Star
3782 1436 Star
4405 1689 Star
5027 1872 Star
5649 2098 Star
6272 2353 Star
6894 2709 Star
6430 3987 Star
1.000 UP
1.000 UL
LT3
6075 3807 M
[ [(Times-Roman) 180.0 0.0 true true (nodes=8:ppn=2)]
] -60.0 MRshow
6183 3807 M
495 0 V
702 2231 M
826 1233 L
156 122 V
156 -265 V
155 -94 V
156 11 V
155 548 V
156 -546 V
156 188 V
155 -107 V
156 -82 V
311 133 V
311 62 V
311 62 V
311 27 V
311 91 V
623 146 V
622 146 V
622 126 V
623 1025 V
622 -441 V
702 2231 Box
826 1233 Box
982 1355 Box
1138 1090 Box
1293 996 Box
1449 1007 Box
1604 1555 Box
1760 1009 Box
1916 1197 Box
2071 1090 Box
2227 1008 Box
2538 1141 Box
2849 1203 Box
3160 1265 Box
3471 1292 Box
3782 1383 Box
4405 1529 Box
5027 1675 Box
5649 1801 Box
6272 2826 Box
6894 2385 Box
6430 3807 Box
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Times-Roman

%%EndDocument
 @endspecial 25328 w @beginspecial 50 @llx 50 @lly 410
@urx 302 @ury 2160 @rwi @setspecial
%%BeginDocument: graphs/octpart/times/partition/muzzle-refined-partition-18.eps
%!PS-Adobe-2.0 EPSF-2.0
%%Title: muzzle-refined-partition-18.eps
%%Creator: gnuplot 3.7 patchlevel 0
%%CreationDate: Fri Jul 19 11:24:35 2002
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 410 302
%%Orientation: Portrait
%%EndComments
/gnudict 256 dict def
gnudict begin
/Color false def
/Solid false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
/vshift -60 def
/dl {10 mul} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow { currentpoint stroke M
  0 vshift R show } def
/Rshow { currentpoint stroke M
  dup stringwidth pop neg vshift R show } def
/Cshow { currentpoint stroke M
  dup stringwidth pop -2 div vshift R show } def
/UP { dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def } def
/DL { Color {setrgbcolor Solid {pop []} if 0 setdash }
 {pop pop pop Solid {pop []} if 0 setdash} ifelse } def
/BL { stroke gnulinewidth 2 mul setlinewidth } def
/AL { stroke gnulinewidth 2 div setlinewidth } def
/UL { gnulinewidth mul /userlinewidth exch def } def
/PL { stroke userlinewidth setlinewidth } def
/LTb { BL [] 0 0 0 DL } def
/LTa { AL [1 dl 2 dl] 0 setdash 0 0 0 setrgbcolor } def
/LT0 { PL [] 1 0 0 DL } def
/LT1 { PL [4 dl 2 dl] 0 1 0 DL } def
/LT2 { PL [2 dl 3 dl] 0 0 1 DL } def
/LT3 { PL [1 dl 1.5 dl] 1 0 1 DL } def
/LT4 { PL [5 dl 2 dl 1 dl 2 dl] 0 1 1 DL } def
/LT5 { PL [4 dl 3 dl 1 dl 3 dl] 1 1 0 DL } def
/LT6 { PL [2 dl 2 dl 2 dl 4 dl] 0 0 0 DL } def
/LT7 { PL [2 dl 2 dl 2 dl 2 dl 2 dl 4 dl] 1 0.3 0 DL } def
/LT8 { PL [2 dl 2 dl 2 dl 2 dl 2 dl 2 dl 2 dl 4 dl] 0.5 0.5 0.5 DL } def
/Pnt { stroke [] 0 setdash
   gsave 1 setlinecap M 0 0 V stroke grestore } def
/Dia { stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt } def
/Pls { stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
  } def
/Box { stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt } def
/Crs { stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke } def
/TriU { stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt  } def
/Star { 2 copy Pls Crs } def
/BoxF { stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V  hpt2 0 V  0 vpt2 V
  hpt2 neg 0 V  closepath fill } def
/TriUF { stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill } def
/TriD { stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt  } def
/TriDF { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF { stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill } def
/Pent { stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt } def
/PentF { stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore } def
/Circle { stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt } def
/CircleF { stroke [] 0 setdash hpt 0 360 arc fill } def
/C0 { BL [] 0 setdash 2 copy moveto vpt 90 450  arc } bind def
/C1 { BL [] 0 setdash 2 copy        moveto
       2 copy  vpt 0 90 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C2 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 90 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C3 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C4 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 180 270 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C5 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 90 arc
       2 copy moveto
       2 copy  vpt 180 270 arc closepath fill
               vpt 0 360 arc } bind def
/C6 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 90 270 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C7 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 0 270 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C8 { BL [] 0 setdash 2 copy moveto
      2 copy vpt 270 360 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C9 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 270 450 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C10 { BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
       2 copy moveto
       2 copy vpt 90 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C11 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 180 arc closepath fill
       2 copy moveto
       2 copy  vpt 270 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C12 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 180 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C13 { BL [] 0 setdash  2 copy moveto
       2 copy  vpt 0 90 arc closepath fill
       2 copy moveto
       2 copy  vpt 180 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C14 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 90 360 arc closepath fill
               vpt 0 360 arc } bind def
/C15 { BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/Rec   { newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
       neg 0 rlineto closepath } bind def
/Square { dup Rec } bind def
/Bsquare { vpt sub exch vpt sub exch vpt2 Square } bind def
/S0 { BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare } bind def
/S1 { BL [] 0 setdash 2 copy vpt Square fill Bsquare } bind def
/S2 { BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare } bind def
/S3 { BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare } bind def
/S4 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare } bind def
/S5 { BL [] 0 setdash 2 copy 2 copy vpt Square fill
       exch vpt sub exch vpt sub vpt Square fill Bsquare } bind def
/S6 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare } bind def
/S7 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
       2 copy vpt Square fill
       Bsquare } bind def
/S8 { BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare } bind def
/S9 { BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare } bind def
/S10 { BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
       Bsquare } bind def
/S11 { BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
       Bsquare } bind def
/S12 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare } bind def
/S13 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
       2 copy vpt Square fill Bsquare } bind def
/S14 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
       2 copy exch vpt sub exch vpt Square fill Bsquare } bind def
/S15 { BL [] 0 setdash 2 copy Bsquare fill Bsquare } bind def
/D0 { gsave translate 45 rotate 0 0 S0 stroke grestore } bind def
/D1 { gsave translate 45 rotate 0 0 S1 stroke grestore } bind def
/D2 { gsave translate 45 rotate 0 0 S2 stroke grestore } bind def
/D3 { gsave translate 45 rotate 0 0 S3 stroke grestore } bind def
/D4 { gsave translate 45 rotate 0 0 S4 stroke grestore } bind def
/D5 { gsave translate 45 rotate 0 0 S5 stroke grestore } bind def
/D6 { gsave translate 45 rotate 0 0 S6 stroke grestore } bind def
/D7 { gsave translate 45 rotate 0 0 S7 stroke grestore } bind def
/D8 { gsave translate 45 rotate 0 0 S8 stroke grestore } bind def
/D9 { gsave translate 45 rotate 0 0 S9 stroke grestore } bind def
/D10 { gsave translate 45 rotate 0 0 S10 stroke grestore } bind def
/D11 { gsave translate 45 rotate 0 0 S11 stroke grestore } bind def
/D12 { gsave translate 45 rotate 0 0 S12 stroke grestore } bind def
/D13 { gsave translate 45 rotate 0 0 S13 stroke grestore } bind def
/D14 { gsave translate 45 rotate 0 0 S14 stroke grestore } bind def
/D15 { gsave translate 45 rotate 0 0 S15 stroke grestore } bind def
/DiaE { stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke } def
/BoxE { stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke } def
/TriUE { stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke } def
/TriDE { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke } def
/PentE { stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore } def
/CircE { stroke [] 0 setdash 
  hpt 0 360 arc stroke } def
/Opaque { gsave closepath 1 setgray fill grestore 0 setgray closepath } def
/DiaW { stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke } def
/BoxW { stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke } def
/TriUW { stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke } def
/TriDW { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke } def
/PentW { stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore } def
/CircW { stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke } def
/BoxFill { gsave Rec 1 setgray fill grestore } def
/MFshow {{dup dup 0 get findfont exch 1 get scalefont setfont
     [ currentpoint ] exch dup 2 get 0 exch rmoveto dup dup 5 get exch 4 get
     {show} {stringwidth pop 0 rmoveto}ifelse dup 3 get
     {2 get neg 0 exch rmoveto pop} {pop aload pop moveto}ifelse} forall} bind def
/MFwidth {0 exch {dup 3 get{dup dup 0 get findfont exch 1 get scalefont setfont
      5 get stringwidth pop add}
    {pop} ifelse} forall} bind def
/MLshow { currentpoint stroke M
  0 exch R MFshow } bind def
/MRshow { currentpoint stroke M
  exch dup MFwidth neg 3 -1 roll R MFshow } def
/MCshow { currentpoint stroke M
  exch dup MFwidth -2 div 3 -1 roll R MFshow } def
end
%%EndProlog
gnudict begin
gsave
50 50 translate
0.050 0.050 scale
0 setgray
newpath
(Times-Roman) findfont 180 scalefont setfont
1.000 UL
LTb
702 1134 M
63 0 V
6129 0 R
-63 0 V
 stroke
594 1134 M
[ [(Times-Roman) 180.0 0.0 true true (5)]
] -60.0 MRshow
702 2124 M
63 0 V
6129 0 R
-63 0 V
 stroke
594 2124 M
[ [(Times-Roman) 180.0 0.0 true true (10)]
] -60.0 MRshow
702 3114 M
63 0 V
6129 0 R
-63 0 V
 stroke
594 3114 M
[ [(Times-Roman) 180.0 0.0 true true (15)]
] -60.0 MRshow
702 4104 M
63 0 V
6129 0 R
-63 0 V
 stroke
594 4104 M
[ [(Times-Roman) 180.0 0.0 true true (20)]
] -60.0 MRshow
1293 540 M
0 63 V
0 3897 R
0 -63 V
 stroke
1293 360 M
[ [(Times-Roman) 180.0 0.0 true true (20)]
] -60.0 MCshow
1916 540 M
0 63 V
0 3897 R
0 -63 V
 stroke
1916 360 M
[ [(Times-Roman) 180.0 0.0 true true (40)]
] -60.0 MCshow
2538 540 M
0 63 V
0 3897 R
0 -63 V
 stroke
2538 360 M
[ [(Times-Roman) 180.0 0.0 true true (60)]
] -60.0 MCshow
3160 540 M
0 63 V
0 3897 R
0 -63 V
 stroke
3160 360 M
[ [(Times-Roman) 180.0 0.0 true true (80)]
] -60.0 MCshow
3782 540 M
0 63 V
0 3897 R
0 -63 V
 stroke
3782 360 M
[ [(Times-Roman) 180.0 0.0 true true (100)]
] -60.0 MCshow
4405 540 M
0 63 V
0 3897 R
0 -63 V
 stroke
4405 360 M
[ [(Times-Roman) 180.0 0.0 true true (120)]
] -60.0 MCshow
5027 540 M
0 63 V
0 3897 R
0 -63 V
 stroke
5027 360 M
[ [(Times-Roman) 180.0 0.0 true true (140)]
] -60.0 MCshow
5649 540 M
0 63 V
0 3897 R
0 -63 V
 stroke
5649 360 M
[ [(Times-Roman) 180.0 0.0 true true (160)]
] -60.0 MCshow
6272 540 M
0 63 V
0 3897 R
0 -63 V
 stroke
6272 360 M
[ [(Times-Roman) 180.0 0.0 true true (180)]
] -60.0 MCshow
6894 540 M
0 63 V
0 3897 R
0 -63 V
 stroke
6894 360 M
[ [(Times-Roman) 180.0 0.0 true true (200)]
] -60.0 MCshow
1.000 UL
LTb
702 540 M
6192 0 V
0 3960 V
-6192 0 V
702 540 L
 stroke
180 2520 M
currentpoint gsave translate 90 rotate 0 0 moveto
[ [(Times-Roman) 180.0 0.0 true true (Time \(seconds\))]
] -60.0 MCshow
grestore
3798 90 M
[ [(Times-Roman) 180.0 0.0 true true (Octant Size)]
] -60.0 MCshow
3798 4770 M
[ [(Times-Roman) 180.0 0.0 true true (Partition Times for 18-20 Processors: Muzzle-Refined Mesh)]
] -60.0 MCshow
1.000 UP
1.000 UL
LT0
6075 4347 M
[ [(Times-Roman) 180.0 0.0 true true (nodes=1:ppn=4+7:ppn=2)]
] -60.0 MRshow
6183 4347 M
495 0 V
702 2429 M
826 1513 L
982 1283 L
156 -89 V
155 -164 V
156 -70 V
155 101 V
156 106 V
156 -19 V
155 -56 V
156 13 V
311 24 V
311 51 V
311 130 V
311 68 V
311 884 V
623 -713 V
622 133 V
622 240 V
623 361 V
622 1833 V
702 2429 Pls
826 1513 Pls
982 1283 Pls
1138 1194 Pls
1293 1030 Pls
1449 960 Pls
1604 1061 Pls
1760 1167 Pls
1916 1148 Pls
2071 1092 Pls
2227 1105 Pls
2538 1129 Pls
2849 1180 Pls
3160 1310 Pls
3471 1378 Pls
3782 2262 Pls
4405 1549 Pls
5027 1682 Pls
5649 1922 Pls
6272 2283 Pls
6894 4116 Pls
6430 4347 Pls
1.000 UP
1.000 UL
LT1
6075 4167 M
[ [(Times-Roman) 180.0 0.0 true true (nodes=2:ppn=4+6:ppn=2)]
] -60.0 MRshow
6183 4167 M
495 0 V
702 3429 M
826 1383 L
982 1238 L
156 1532 V
1293 1252 L
156 -86 V
155 -79 V
156 22 V
156 66 V
155 -2 V
156 -11 V
311 59 V
311 65 V
311 13 V
311 53 V
311 333 V
623 -65 V
622 225 V
622 72 V
623 310 V
622 855 V
702 3429 Crs
826 1383 Crs
982 1238 Crs
1138 2770 Crs
1293 1252 Crs
1449 1166 Crs
1604 1087 Crs
1760 1109 Crs
1916 1175 Crs
2071 1173 Crs
2227 1162 Crs
2538 1221 Crs
2849 1286 Crs
3160 1299 Crs
3471 1352 Crs
3782 1685 Crs
4405 1620 Crs
5027 1845 Crs
5649 1917 Crs
6272 2227 Crs
6894 3082 Crs
6430 4167 Crs
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Times-Roman

%%EndDocument
 @endspecial 51523 51985 V 888 52029 50657 45 v 0 54170
a Fk(Figure)522 b(11:)755 b(OCTP)-108 b(AR)g(T)522 b(partitioning)g
(time)g(for)h(the)e(Muzzle)h(mesh)f(as)h(the)g(o)36 b(ctan)-36
b(t)521 b(gran)-36 b(ularit)g(y)523 b(is)0 55775 y(v)-72
b(aried)470 b(from)h(1)f(to)g(200)h(ob)72 b(jects)471
b(on)f(from)g(2)h(to)f(20)h(pro)36 b(cesses.)688 b(Di\256eren)-36
b(t)469 b(n)-36 b(um)g(b)36 b(ers)469 b(of)i(pro)36 b(cesses)470
b(are)0 57380 y(placed)434 b(on)f(di\256eren)-36 b(t)432
b(graphs)i(for)g(readabilit)-36 b(y)-108 b(.)1951 61180
y(These)407 b(results)f(are)h(highly)g(dep)36 b(enden)-36
b(t)405 b(up)36 b(on)406 b(mesh)g(structure.)568 b(F)-108
b(or)406 b(the)h(p)36 b(erforated)406 b(sho)36 b(c)-36
b(k)408 b(tub)36 b(e,)0 62785 y(the)478 b(main)i(cluster)e(of)i
(re\257nemen)-36 b(t)477 b(is)j(along)g(the)e(in)-36
b(terface)479 b(b)36 b(et)-36 b(w)g(een)479 b(the)f(main)h(barrel)g
(and)g(the)f(v)-36 b(en)g(t)0 64390 y(hole,)455 b(so)c(an)-36
b(y)450 b(cut)g(plane)g(that)g(passes)g(through)g(that)g(region)g(will)
i(incur)e(p)36 b(o)g(or)450 b(surface)h(index)f(v)-72
b(alues.)0 65996 y(Since)424 b(this)f(in)-36 b(terface)424
b(is)h(in)f(the)f Fj(xy)48 b Fk(-plane,)425 b(the)f Fj(z)59
b Fk(-cut)423 b(R)-36 b(CB)425 b(is)f(most)g(lik)-36
b(ely)426 b(to)e(mak)-36 b(e)424 b(an)g(unfortunate)0
67601 y(cut)433 b(through)g(this)g(region.)1951 69206
y(Figure)407 b(13)g(sho)-36 b(ws)407 b(in)-36 b(terpro)36
b(cess)406 b(adjacencies)i(at)f(eac)-36 b(h)406 b(step)h(of)g(the)f(p)
36 b(erforated)407 b(sho)36 b(c)-36 b(k)407 b(tub)36
b(e.)569 b Fj(ad)-145 b(j)51240 69405 y Fb(A)0 70811
y Fk(v)-72 b(alues)392 b(w)-36 b(ere)391 b(lo)-36 b(w)g(est)392
b(for)g(the)f Fj(z)59 b Fk(-cut,)399 b(follo)-36 b(w)g(ed)393
b(b)-36 b(y)391 b(the)g Fj(x)p Fk(-cut)f(and)h(then)g(the)f
Fj(y)48 b Fk(-cut)391 b(for)g(b)36 b(oth)391 b(the)g(8)g(and)25350
75417 y(14)p eop
%%Page: 15 15
15 14 bop 888 140 50657 45 v 866 17422 45 17282 v 1553
16940 a @beginspecial 50 @llx 50 @lly 410 @urx 302 @ury
2160 @rwi @setspecial
%%BeginDocument: graphs/rcbAllCuts/partition/gsi_8.eps
%!PS-Adobe-2.0 EPSF-2.0
%%Title: gsi_8.eps
%%Creator: gnuplot 3.7 patchlevel 1
%%CreationDate: Fri Aug 16 14:47:36 2002
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 410 302
%%Orientation: Portrait
%%EndComments
/gnudict 256 dict def
gnudict begin
/Color false def
/Solid false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
/vshift -60 def
/dl {10 mul} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow { currentpoint stroke M
  0 vshift R show } def
/Rshow { currentpoint stroke M
  dup stringwidth pop neg vshift R show } def
/Cshow { currentpoint stroke M
  dup stringwidth pop -2 div vshift R show } def
/UP { dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def } def
/DL { Color {setrgbcolor Solid {pop []} if 0 setdash }
 {pop pop pop Solid {pop []} if 0 setdash} ifelse } def
/BL { stroke userlinewidth 2 mul setlinewidth } def
/AL { stroke userlinewidth 2 div setlinewidth } def
/UL { dup gnulinewidth mul /userlinewidth exch def
      10 mul /udl exch def } def
/PL { stroke userlinewidth setlinewidth } def
/LTb { BL [] 0 0 0 DL } def
/LTa { AL [1 udl mul 2 udl mul] 0 setdash 0 0 0 setrgbcolor } def
/LT0 { PL [] 1 0 0 DL } def
/LT1 { PL [4 dl 2 dl] 0 1 0 DL } def
/LT2 { PL [2 dl 3 dl] 0 0 1 DL } def
/LT3 { PL [1 dl 1.5 dl] 1 0 1 DL } def
/LT4 { PL [5 dl 2 dl 1 dl 2 dl] 0 1 1 DL } def
/LT5 { PL [4 dl 3 dl 1 dl 3 dl] 1 1 0 DL } def
/LT6 { PL [2 dl 2 dl 2 dl 4 dl] 0 0 0 DL } def
/LT7 { PL [2 dl 2 dl 2 dl 2 dl 2 dl 4 dl] 1 0.3 0 DL } def
/LT8 { PL [2 dl 2 dl 2 dl 2 dl 2 dl 2 dl 2 dl 4 dl] 0.5 0.5 0.5 DL } def
/Pnt { stroke [] 0 setdash
   gsave 1 setlinecap M 0 0 V stroke grestore } def
/Dia { stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt } def
/Pls { stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
  } def
/Box { stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt } def
/Crs { stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke } def
/TriU { stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt  } def
/Star { 2 copy Pls Crs } def
/BoxF { stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V  hpt2 0 V  0 vpt2 V
  hpt2 neg 0 V  closepath fill } def
/TriUF { stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill } def
/TriD { stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt  } def
/TriDF { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF { stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill } def
/Pent { stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt } def
/PentF { stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore } def
/Circle { stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt } def
/CircleF { stroke [] 0 setdash hpt 0 360 arc fill } def
/C0 { BL [] 0 setdash 2 copy moveto vpt 90 450  arc } bind def
/C1 { BL [] 0 setdash 2 copy        moveto
       2 copy  vpt 0 90 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C2 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 90 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C3 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C4 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 180 270 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C5 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 90 arc
       2 copy moveto
       2 copy  vpt 180 270 arc closepath fill
               vpt 0 360 arc } bind def
/C6 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 90 270 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C7 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 0 270 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C8 { BL [] 0 setdash 2 copy moveto
      2 copy vpt 270 360 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C9 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 270 450 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C10 { BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
       2 copy moveto
       2 copy vpt 90 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C11 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 180 arc closepath fill
       2 copy moveto
       2 copy  vpt 270 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C12 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 180 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C13 { BL [] 0 setdash  2 copy moveto
       2 copy  vpt 0 90 arc closepath fill
       2 copy moveto
       2 copy  vpt 180 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C14 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 90 360 arc closepath fill
               vpt 0 360 arc } bind def
/C15 { BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/Rec   { newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
       neg 0 rlineto closepath } bind def
/Square { dup Rec } bind def
/Bsquare { vpt sub exch vpt sub exch vpt2 Square } bind def
/S0 { BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare } bind def
/S1 { BL [] 0 setdash 2 copy vpt Square fill Bsquare } bind def
/S2 { BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare } bind def
/S3 { BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare } bind def
/S4 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare } bind def
/S5 { BL [] 0 setdash 2 copy 2 copy vpt Square fill
       exch vpt sub exch vpt sub vpt Square fill Bsquare } bind def
/S6 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare } bind def
/S7 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
       2 copy vpt Square fill
       Bsquare } bind def
/S8 { BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare } bind def
/S9 { BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare } bind def
/S10 { BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
       Bsquare } bind def
/S11 { BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
       Bsquare } bind def
/S12 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare } bind def
/S13 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
       2 copy vpt Square fill Bsquare } bind def
/S14 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
       2 copy exch vpt sub exch vpt Square fill Bsquare } bind def
/S15 { BL [] 0 setdash 2 copy Bsquare fill Bsquare } bind def
/D0 { gsave translate 45 rotate 0 0 S0 stroke grestore } bind def
/D1 { gsave translate 45 rotate 0 0 S1 stroke grestore } bind def
/D2 { gsave translate 45 rotate 0 0 S2 stroke grestore } bind def
/D3 { gsave translate 45 rotate 0 0 S3 stroke grestore } bind def
/D4 { gsave translate 45 rotate 0 0 S4 stroke grestore } bind def
/D5 { gsave translate 45 rotate 0 0 S5 stroke grestore } bind def
/D6 { gsave translate 45 rotate 0 0 S6 stroke grestore } bind def
/D7 { gsave translate 45 rotate 0 0 S7 stroke grestore } bind def
/D8 { gsave translate 45 rotate 0 0 S8 stroke grestore } bind def
/D9 { gsave translate 45 rotate 0 0 S9 stroke grestore } bind def
/D10 { gsave translate 45 rotate 0 0 S10 stroke grestore } bind def
/D11 { gsave translate 45 rotate 0 0 S11 stroke grestore } bind def
/D12 { gsave translate 45 rotate 0 0 S12 stroke grestore } bind def
/D13 { gsave translate 45 rotate 0 0 S13 stroke grestore } bind def
/D14 { gsave translate 45 rotate 0 0 S14 stroke grestore } bind def
/D15 { gsave translate 45 rotate 0 0 S15 stroke grestore } bind def
/DiaE { stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke } def
/BoxE { stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke } def
/TriUE { stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke } def
/TriDE { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke } def
/PentE { stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore } def
/CircE { stroke [] 0 setdash 
  hpt 0 360 arc stroke } def
/Opaque { gsave closepath 1 setgray fill grestore 0 setgray closepath } def
/DiaW { stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke } def
/BoxW { stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke } def
/TriUW { stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke } def
/TriDW { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke } def
/PentW { stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore } def
/CircW { stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke } def
/BoxFill { gsave Rec 1 setgray fill grestore } def
/MFshow {{dup dup 0 get findfont exch 1 get scalefont setfont
     [ currentpoint ] exch dup 2 get 0 exch rmoveto dup dup 5 get exch 4 get
     {show} {stringwidth pop 0 rmoveto}ifelse dup 3 get
     {2 get neg 0 exch rmoveto pop} {pop aload pop moveto}ifelse} forall} bind def
/MFwidth {0 exch {dup 3 get{dup dup 0 get findfont exch 1 get scalefont setfont
      5 get stringwidth pop add}
    {pop} ifelse} forall} bind def
/MLshow { currentpoint stroke M
  0 exch R MFshow } bind def
/MRshow { currentpoint stroke M
  exch dup MFwidth neg 3 -1 roll R MFshow } def
/MCshow { currentpoint stroke M
  exch dup MFwidth -2 div 3 -1 roll R MFshow } def
end
%%EndProlog
gnudict begin
gsave
50 50 translate
0.050 0.050 scale
0 setgray
newpath
(Times-Roman) findfont 180 scalefont setfont
1.000 UL
LTb
702 540 M
63 0 V
6129 0 R
-63 0 V
 stroke
594 540 M
[ [(Times-Roman) 180.0 0.0 true true (0)]
] -60.0 MRshow
702 1035 M
63 0 V
6129 0 R
-63 0 V
 stroke
594 1035 M
[ [(Times-Roman) 180.0 0.0 true true (5)]
] -60.0 MRshow
702 1530 M
63 0 V
6129 0 R
-63 0 V
 stroke
594 1530 M
[ [(Times-Roman) 180.0 0.0 true true (10)]
] -60.0 MRshow
702 2025 M
63 0 V
6129 0 R
-63 0 V
 stroke
594 2025 M
[ [(Times-Roman) 180.0 0.0 true true (15)]
] -60.0 MRshow
702 2520 M
63 0 V
6129 0 R
-63 0 V
 stroke
594 2520 M
[ [(Times-Roman) 180.0 0.0 true true (20)]
] -60.0 MRshow
702 3015 M
63 0 V
6129 0 R
-63 0 V
 stroke
594 3015 M
[ [(Times-Roman) 180.0 0.0 true true (25)]
] -60.0 MRshow
702 3510 M
63 0 V
6129 0 R
-63 0 V
 stroke
594 3510 M
[ [(Times-Roman) 180.0 0.0 true true (30)]
] -60.0 MRshow
702 4005 M
63 0 V
6129 0 R
-63 0 V
 stroke
594 4005 M
[ [(Times-Roman) 180.0 0.0 true true (35)]
] -60.0 MRshow
702 4500 M
63 0 V
6129 0 R
-63 0 V
 stroke
594 4500 M
[ [(Times-Roman) 180.0 0.0 true true (40)]
] -60.0 MRshow
1046 540 M
0 63 V
0 3897 R
0 -63 V
 stroke
1046 360 M
[ [(Times-Roman) 180.0 0.0 true true (2)]
] -60.0 MCshow
1734 540 M
0 63 V
0 3897 R
0 -63 V
 stroke
1734 360 M
[ [(Times-Roman) 180.0 0.0 true true (4)]
] -60.0 MCshow
2422 540 M
0 63 V
0 3897 R
0 -63 V
 stroke
2422 360 M
[ [(Times-Roman) 180.0 0.0 true true (6)]
] -60.0 MCshow
3110 540 M
0 63 V
0 3897 R
0 -63 V
 stroke
3110 360 M
[ [(Times-Roman) 180.0 0.0 true true (8)]
] -60.0 MCshow
3798 540 M
0 63 V
0 3897 R
0 -63 V
 stroke
3798 360 M
[ [(Times-Roman) 180.0 0.0 true true (10)]
] -60.0 MCshow
4486 540 M
0 63 V
0 3897 R
0 -63 V
 stroke
4486 360 M
[ [(Times-Roman) 180.0 0.0 true true (12)]
] -60.0 MCshow
5174 540 M
0 63 V
0 3897 R
0 -63 V
 stroke
5174 360 M
[ [(Times-Roman) 180.0 0.0 true true (14)]
] -60.0 MCshow
5862 540 M
0 63 V
0 3897 R
0 -63 V
 stroke
5862 360 M
[ [(Times-Roman) 180.0 0.0 true true (16)]
] -60.0 MCshow
6550 540 M
0 63 V
0 3897 R
0 -63 V
 stroke
6550 360 M
[ [(Times-Roman) 180.0 0.0 true true (18)]
] -60.0 MCshow
1.000 UL
LTb
702 540 M
6192 0 V
0 3960 V
-6192 0 V
702 540 L
 stroke
180 2520 M
currentpoint gsave translate 90 rotate 0 0 moveto
[ [(Times-Roman) 180.0 0.0 true true (GSI)]
] -60.0 MCshow
grestore
3798 90 M
[ [(Times-Roman) 180.0 0.0 true true (Refinement Step)]
] -60.0 MCshow
3798 4770 M
[ [(Times-Roman) 180.0 0.0 true true (Global Surface Index for 8 Processors)]
] -60.0 MCshow
1.000 UP
1.000 UL
LT0
6075 4347 M
[ [(Times-Roman) 180.0 0.0 true true (RCB)]
] -60.0 MRshow
6183 4347 M
495 0 V
702 847 M
344 247 V
344 159 V
344 59 V
344 -158 V
344 -10 V
344 -10 V
344 -10 V
344 -10 V
344 -10 V
344 -10 V
344 -9 V
344 -10 V
344 -20 V
344 -20 V
344 10 V
344 -10 V
344 -10 V
344 -10 V
702 847 Pls
1046 1094 Pls
1390 1253 Pls
1734 1312 Pls
2078 1154 Pls
2422 1144 Pls
2766 1134 Pls
3110 1124 Pls
3454 1114 Pls
3798 1104 Pls
4142 1094 Pls
4486 1085 Pls
4830 1075 Pls
5174 1055 Pls
5518 1035 Pls
5862 1045 Pls
6206 1035 Pls
6550 1025 Pls
6894 1015 Pls
6430 4347 Pls
1.000 UP
1.000 UL
LT1
6075 4167 M
[ [(Times-Roman) 180.0 0.0 true true (RCB x-cut)]
] -60.0 MRshow
6183 4167 M
495 0 V
702 966 M
1046 847 L
344 -69 V
344 10 V
344 9 V
344 -9 V
344 0 V
344 9 V
344 0 V
344 10 V
344 0 V
344 0 V
344 0 V
344 0 V
344 0 V
344 10 V
344 0 V
344 0 V
344 0 V
702 966 Crs
1046 847 Crs
1390 778 Crs
1734 788 Crs
2078 797 Crs
2422 788 Crs
2766 788 Crs
3110 797 Crs
3454 797 Crs
3798 807 Crs
4142 807 Crs
4486 807 Crs
4830 807 Crs
5174 807 Crs
5518 807 Crs
5862 817 Crs
6206 817 Crs
6550 817 Crs
6894 817 Crs
6430 4167 Crs
1.000 UP
1.000 UL
LT2
6075 3987 M
[ [(Times-Roman) 180.0 0.0 true true (RCB y-cut)]
] -60.0 MRshow
6183 3987 M
495 0 V
702 1302 M
344 -198 V
1390 986 L
344 0 V
344 0 V
344 0 V
344 0 V
344 -10 V
344 0 V
344 0 V
344 0 V
344 10 V
344 0 V
344 9 V
344 0 V
344 0 V
344 0 V
344 0 V
344 10 V
702 1302 Star
1046 1104 Star
1390 986 Star
1734 986 Star
2078 986 Star
2422 986 Star
2766 986 Star
3110 976 Star
3454 976 Star
3798 976 Star
4142 976 Star
4486 986 Star
4830 986 Star
5174 995 Star
5518 995 Star
5862 995 Star
6206 995 Star
6550 995 Star
6894 1005 Star
6430 3987 Star
1.000 UP
1.000 UL
LT3
6075 3807 M
[ [(Times-Roman) 180.0 0.0 true true (RCB z-cut)]
] -60.0 MRshow
6183 3807 M
495 0 V
702 986 M
344 752 V
344 327 V
344 178 V
344 -30 V
344 -10 V
344 -20 V
344 -39 V
344 -20 V
344 -40 V
344 -19 V
344 -50 V
344 -30 V
344 -49 V
344 -30 V
344 -10 V
344 -29 V
344 -30 V
344 -30 V
702 986 Box
1046 1738 Box
1390 2065 Box
1734 2243 Box
2078 2213 Box
2422 2203 Box
2766 2183 Box
3110 2144 Box
3454 2124 Box
3798 2084 Box
4142 2065 Box
4486 2015 Box
4830 1985 Box
5174 1936 Box
5518 1906 Box
5862 1896 Box
6206 1867 Box
6550 1837 Box
6894 1807 Box
6430 3807 Box
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Times-Roman

%%EndDocument
 @endspecial 25328 w @beginspecial 50 @llx 50 @lly 410
@urx 302 @ury 2160 @rwi @setspecial
%%BeginDocument: graphs/rcbAllCuts/partition/gsi_20.eps
%!PS-Adobe-2.0 EPSF-2.0
%%Title: gsi_20.eps
%%Creator: gnuplot 3.7 patchlevel 1
%%CreationDate: Fri Aug 16 14:47:30 2002
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 410 302
%%Orientation: Portrait
%%EndComments
/gnudict 256 dict def
gnudict begin
/Color false def
/Solid false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
/vshift -60 def
/dl {10 mul} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow { currentpoint stroke M
  0 vshift R show } def
/Rshow { currentpoint stroke M
  dup stringwidth pop neg vshift R show } def
/Cshow { currentpoint stroke M
  dup stringwidth pop -2 div vshift R show } def
/UP { dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def } def
/DL { Color {setrgbcolor Solid {pop []} if 0 setdash }
 {pop pop pop Solid {pop []} if 0 setdash} ifelse } def
/BL { stroke userlinewidth 2 mul setlinewidth } def
/AL { stroke userlinewidth 2 div setlinewidth } def
/UL { dup gnulinewidth mul /userlinewidth exch def
      10 mul /udl exch def } def
/PL { stroke userlinewidth setlinewidth } def
/LTb { BL [] 0 0 0 DL } def
/LTa { AL [1 udl mul 2 udl mul] 0 setdash 0 0 0 setrgbcolor } def
/LT0 { PL [] 1 0 0 DL } def
/LT1 { PL [4 dl 2 dl] 0 1 0 DL } def
/LT2 { PL [2 dl 3 dl] 0 0 1 DL } def
/LT3 { PL [1 dl 1.5 dl] 1 0 1 DL } def
/LT4 { PL [5 dl 2 dl 1 dl 2 dl] 0 1 1 DL } def
/LT5 { PL [4 dl 3 dl 1 dl 3 dl] 1 1 0 DL } def
/LT6 { PL [2 dl 2 dl 2 dl 4 dl] 0 0 0 DL } def
/LT7 { PL [2 dl 2 dl 2 dl 2 dl 2 dl 4 dl] 1 0.3 0 DL } def
/LT8 { PL [2 dl 2 dl 2 dl 2 dl 2 dl 2 dl 2 dl 4 dl] 0.5 0.5 0.5 DL } def
/Pnt { stroke [] 0 setdash
   gsave 1 setlinecap M 0 0 V stroke grestore } def
/Dia { stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt } def
/Pls { stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
  } def
/Box { stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt } def
/Crs { stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke } def
/TriU { stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt  } def
/Star { 2 copy Pls Crs } def
/BoxF { stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V  hpt2 0 V  0 vpt2 V
  hpt2 neg 0 V  closepath fill } def
/TriUF { stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill } def
/TriD { stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt  } def
/TriDF { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF { stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill } def
/Pent { stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt } def
/PentF { stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore } def
/Circle { stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt } def
/CircleF { stroke [] 0 setdash hpt 0 360 arc fill } def
/C0 { BL [] 0 setdash 2 copy moveto vpt 90 450  arc } bind def
/C1 { BL [] 0 setdash 2 copy        moveto
       2 copy  vpt 0 90 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C2 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 90 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C3 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C4 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 180 270 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C5 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 90 arc
       2 copy moveto
       2 copy  vpt 180 270 arc closepath fill
               vpt 0 360 arc } bind def
/C6 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 90 270 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C7 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 0 270 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C8 { BL [] 0 setdash 2 copy moveto
      2 copy vpt 270 360 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C9 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 270 450 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C10 { BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
       2 copy moveto
       2 copy vpt 90 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C11 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 180 arc closepath fill
       2 copy moveto
       2 copy  vpt 270 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C12 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 180 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C13 { BL [] 0 setdash  2 copy moveto
       2 copy  vpt 0 90 arc closepath fill
       2 copy moveto
       2 copy  vpt 180 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C14 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 90 360 arc closepath fill
               vpt 0 360 arc } bind def
/C15 { BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/Rec   { newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
       neg 0 rlineto closepath } bind def
/Square { dup Rec } bind def
/Bsquare { vpt sub exch vpt sub exch vpt2 Square } bind def
/S0 { BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare } bind def
/S1 { BL [] 0 setdash 2 copy vpt Square fill Bsquare } bind def
/S2 { BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare } bind def
/S3 { BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare } bind def
/S4 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare } bind def
/S5 { BL [] 0 setdash 2 copy 2 copy vpt Square fill
       exch vpt sub exch vpt sub vpt Square fill Bsquare } bind def
/S6 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare } bind def
/S7 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
       2 copy vpt Square fill
       Bsquare } bind def
/S8 { BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare } bind def
/S9 { BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare } bind def
/S10 { BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
       Bsquare } bind def
/S11 { BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
       Bsquare } bind def
/S12 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare } bind def
/S13 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
       2 copy vpt Square fill Bsquare } bind def
/S14 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
       2 copy exch vpt sub exch vpt Square fill Bsquare } bind def
/S15 { BL [] 0 setdash 2 copy Bsquare fill Bsquare } bind def
/D0 { gsave translate 45 rotate 0 0 S0 stroke grestore } bind def
/D1 { gsave translate 45 rotate 0 0 S1 stroke grestore } bind def
/D2 { gsave translate 45 rotate 0 0 S2 stroke grestore } bind def
/D3 { gsave translate 45 rotate 0 0 S3 stroke grestore } bind def
/D4 { gsave translate 45 rotate 0 0 S4 stroke grestore } bind def
/D5 { gsave translate 45 rotate 0 0 S5 stroke grestore } bind def
/D6 { gsave translate 45 rotate 0 0 S6 stroke grestore } bind def
/D7 { gsave translate 45 rotate 0 0 S7 stroke grestore } bind def
/D8 { gsave translate 45 rotate 0 0 S8 stroke grestore } bind def
/D9 { gsave translate 45 rotate 0 0 S9 stroke grestore } bind def
/D10 { gsave translate 45 rotate 0 0 S10 stroke grestore } bind def
/D11 { gsave translate 45 rotate 0 0 S11 stroke grestore } bind def
/D12 { gsave translate 45 rotate 0 0 S12 stroke grestore } bind def
/D13 { gsave translate 45 rotate 0 0 S13 stroke grestore } bind def
/D14 { gsave translate 45 rotate 0 0 S14 stroke grestore } bind def
/D15 { gsave translate 45 rotate 0 0 S15 stroke grestore } bind def
/DiaE { stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke } def
/BoxE { stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke } def
/TriUE { stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke } def
/TriDE { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke } def
/PentE { stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore } def
/CircE { stroke [] 0 setdash 
  hpt 0 360 arc stroke } def
/Opaque { gsave closepath 1 setgray fill grestore 0 setgray closepath } def
/DiaW { stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke } def
/BoxW { stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke } def
/TriUW { stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke } def
/TriDW { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke } def
/PentW { stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore } def
/CircW { stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke } def
/BoxFill { gsave Rec 1 setgray fill grestore } def
/MFshow {{dup dup 0 get findfont exch 1 get scalefont setfont
     [ currentpoint ] exch dup 2 get 0 exch rmoveto dup dup 5 get exch 4 get
     {show} {stringwidth pop 0 rmoveto}ifelse dup 3 get
     {2 get neg 0 exch rmoveto pop} {pop aload pop moveto}ifelse} forall} bind def
/MFwidth {0 exch {dup 3 get{dup dup 0 get findfont exch 1 get scalefont setfont
      5 get stringwidth pop add}
    {pop} ifelse} forall} bind def
/MLshow { currentpoint stroke M
  0 exch R MFshow } bind def
/MRshow { currentpoint stroke M
  exch dup MFwidth neg 3 -1 roll R MFshow } def
/MCshow { currentpoint stroke M
  exch dup MFwidth -2 div 3 -1 roll R MFshow } def
end
%%EndProlog
gnudict begin
gsave
50 50 translate
0.050 0.050 scale
0 setgray
newpath
(Times-Roman) findfont 180 scalefont setfont
1.000 UL
LTb
702 540 M
63 0 V
6129 0 R
-63 0 V
 stroke
594 540 M
[ [(Times-Roman) 180.0 0.0 true true (0)]
] -60.0 MRshow
702 1035 M
63 0 V
6129 0 R
-63 0 V
 stroke
594 1035 M
[ [(Times-Roman) 180.0 0.0 true true (5)]
] -60.0 MRshow
702 1530 M
63 0 V
6129 0 R
-63 0 V
 stroke
594 1530 M
[ [(Times-Roman) 180.0 0.0 true true (10)]
] -60.0 MRshow
702 2025 M
63 0 V
6129 0 R
-63 0 V
 stroke
594 2025 M
[ [(Times-Roman) 180.0 0.0 true true (15)]
] -60.0 MRshow
702 2520 M
63 0 V
6129 0 R
-63 0 V
 stroke
594 2520 M
[ [(Times-Roman) 180.0 0.0 true true (20)]
] -60.0 MRshow
702 3015 M
63 0 V
6129 0 R
-63 0 V
 stroke
594 3015 M
[ [(Times-Roman) 180.0 0.0 true true (25)]
] -60.0 MRshow
702 3510 M
63 0 V
6129 0 R
-63 0 V
 stroke
594 3510 M
[ [(Times-Roman) 180.0 0.0 true true (30)]
] -60.0 MRshow
702 4005 M
63 0 V
6129 0 R
-63 0 V
 stroke
594 4005 M
[ [(Times-Roman) 180.0 0.0 true true (35)]
] -60.0 MRshow
702 4500 M
63 0 V
6129 0 R
-63 0 V
 stroke
594 4500 M
[ [(Times-Roman) 180.0 0.0 true true (40)]
] -60.0 MRshow
1046 540 M
0 63 V
0 3897 R
0 -63 V
 stroke
1046 360 M
[ [(Times-Roman) 180.0 0.0 true true (2)]
] -60.0 MCshow
1734 540 M
0 63 V
0 3897 R
0 -63 V
 stroke
1734 360 M
[ [(Times-Roman) 180.0 0.0 true true (4)]
] -60.0 MCshow
2422 540 M
0 63 V
0 3897 R
0 -63 V
 stroke
2422 360 M
[ [(Times-Roman) 180.0 0.0 true true (6)]
] -60.0 MCshow
3110 540 M
0 63 V
0 3897 R
0 -63 V
 stroke
3110 360 M
[ [(Times-Roman) 180.0 0.0 true true (8)]
] -60.0 MCshow
3798 540 M
0 63 V
0 3897 R
0 -63 V
 stroke
3798 360 M
[ [(Times-Roman) 180.0 0.0 true true (10)]
] -60.0 MCshow
4486 540 M
0 63 V
0 3897 R
0 -63 V
 stroke
4486 360 M
[ [(Times-Roman) 180.0 0.0 true true (12)]
] -60.0 MCshow
5174 540 M
0 63 V
0 3897 R
0 -63 V
 stroke
5174 360 M
[ [(Times-Roman) 180.0 0.0 true true (14)]
] -60.0 MCshow
5862 540 M
0 63 V
0 3897 R
0 -63 V
 stroke
5862 360 M
[ [(Times-Roman) 180.0 0.0 true true (16)]
] -60.0 MCshow
6550 540 M
0 63 V
0 3897 R
0 -63 V
 stroke
6550 360 M
[ [(Times-Roman) 180.0 0.0 true true (18)]
] -60.0 MCshow
1.000 UL
LTb
702 540 M
6192 0 V
0 3960 V
-6192 0 V
702 540 L
 stroke
180 2520 M
currentpoint gsave translate 90 rotate 0 0 moveto
[ [(Times-Roman) 180.0 0.0 true true (GSI)]
] -60.0 MCshow
grestore
3798 90 M
[ [(Times-Roman) 180.0 0.0 true true (Refinement Step)]
] -60.0 MCshow
3798 4770 M
[ [(Times-Roman) 180.0 0.0 true true (Global Surface Index for 20 Processors)]
] -60.0 MCshow
1.000 UP
1.000 UL
LT0
6075 4347 M
[ [(Times-Roman) 180.0 0.0 true true (RCB)]
] -60.0 MRshow
6183 4347 M
495 0 V
702 1075 M
344 366 V
344 119 V
344 158 V
344 -79 V
344 -10 V
344 -10 V
344 -109 V
344 -20 V
344 -19 V
344 -89 V
344 -30 V
344 -10 V
344 -30 V
344 -39 V
344 29 V
344 -10 V
344 -19 V
344 -10 V
702 1075 Pls
1046 1441 Pls
1390 1560 Pls
1734 1718 Pls
2078 1639 Pls
2422 1629 Pls
2766 1619 Pls
3110 1510 Pls
3454 1490 Pls
3798 1471 Pls
4142 1382 Pls
4486 1352 Pls
4830 1342 Pls
5174 1312 Pls
5518 1273 Pls
5862 1302 Pls
6206 1292 Pls
6550 1273 Pls
6894 1263 Pls
6430 4347 Pls
1.000 UP
1.000 UL
LT1
6075 4167 M
[ [(Times-Roman) 180.0 0.0 true true (RCB x-cut)]
] -60.0 MRshow
6183 4167 M
495 0 V
702 1639 M
344 -317 V
344 -148 V
344 29 V
344 0 V
344 10 V
344 0 V
344 10 V
344 10 V
344 10 V
344 0 V
344 0 V
344 10 V
344 -10 V
344 0 V
344 0 V
344 -10 V
344 10 V
344 -10 V
702 1639 Crs
1046 1322 Crs
1390 1174 Crs
1734 1203 Crs
2078 1203 Crs
2422 1213 Crs
2766 1213 Crs
3110 1223 Crs
3454 1233 Crs
3798 1243 Crs
4142 1243 Crs
4486 1243 Crs
4830 1253 Crs
5174 1243 Crs
5518 1243 Crs
5862 1243 Crs
6206 1233 Crs
6550 1243 Crs
6894 1233 Crs
6430 4167 Crs
1.000 UP
1.000 UL
LT2
6075 3987 M
[ [(Times-Roman) 180.0 0.0 true true (RCB y-cut)]
] -60.0 MRshow
6183 3987 M
495 0 V
702 2441 M
344 -545 V
344 -188 V
344 0 V
344 -10 V
344 0 V
344 -10 V
344 -19 V
344 -10 V
344 0 V
344 0 V
344 29 V
344 10 V
344 10 V
344 0 V
344 0 V
344 0 V
344 10 V
344 10 V
702 2441 Star
1046 1896 Star
1390 1708 Star
1734 1708 Star
2078 1698 Star
2422 1698 Star
2766 1688 Star
3110 1669 Star
3454 1659 Star
3798 1659 Star
4142 1659 Star
4486 1688 Star
4830 1698 Star
5174 1708 Star
5518 1708 Star
5862 1708 Star
6206 1708 Star
6550 1718 Star
6894 1728 Star
6430 3987 Star
1.000 UP
1.000 UL
LT3
6075 3807 M
[ [(Times-Roman) 180.0 0.0 true true (RCB z-cut)]
] -60.0 MRshow
6183 3807 M
495 0 V
702 1748 M
344 1356 V
344 683 V
344 535 V
344 -50 V
344 -39 V
344 -40 V
344 -79 V
344 -50 V
344 -89 V
344 -29 V
344 -99 V
344 -70 V
344 -99 V
344 -49 V
344 -30 V
344 -49 V
344 -60 V
344 -59 V
702 1748 Box
1046 3104 Box
1390 3787 Box
1734 4322 Box
2078 4272 Box
2422 4233 Box
2766 4193 Box
3110 4114 Box
3454 4064 Box
3798 3975 Box
4142 3946 Box
4486 3847 Box
4830 3777 Box
5174 3678 Box
5518 3629 Box
5862 3599 Box
6206 3550 Box
6550 3490 Box
6894 3431 Box
6430 3807 Box
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Times-Roman

%%EndDocument
 @endspecial 51523 17422 V 866 34703 V 1553 34222 a @beginspecial
50 @llx 50 @lly 410 @urx 302 @ury 2160 @rwi @setspecial
%%BeginDocument: graphs/rcbAllCuts/partition/msi_8.eps
%!PS-Adobe-2.0 EPSF-2.0
%%Title: msi_8.eps
%%Creator: gnuplot 3.7 patchlevel 1
%%CreationDate: Fri Aug 16 14:53:37 2002
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 410 302
%%Orientation: Portrait
%%EndComments
/gnudict 256 dict def
gnudict begin
/Color false def
/Solid false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
/vshift -60 def
/dl {10 mul} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow { currentpoint stroke M
  0 vshift R show } def
/Rshow { currentpoint stroke M
  dup stringwidth pop neg vshift R show } def
/Cshow { currentpoint stroke M
  dup stringwidth pop -2 div vshift R show } def
/UP { dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def } def
/DL { Color {setrgbcolor Solid {pop []} if 0 setdash }
 {pop pop pop Solid {pop []} if 0 setdash} ifelse } def
/BL { stroke userlinewidth 2 mul setlinewidth } def
/AL { stroke userlinewidth 2 div setlinewidth } def
/UL { dup gnulinewidth mul /userlinewidth exch def
      10 mul /udl exch def } def
/PL { stroke userlinewidth setlinewidth } def
/LTb { BL [] 0 0 0 DL } def
/LTa { AL [1 udl mul 2 udl mul] 0 setdash 0 0 0 setrgbcolor } def
/LT0 { PL [] 1 0 0 DL } def
/LT1 { PL [4 dl 2 dl] 0 1 0 DL } def
/LT2 { PL [2 dl 3 dl] 0 0 1 DL } def
/LT3 { PL [1 dl 1.5 dl] 1 0 1 DL } def
/LT4 { PL [5 dl 2 dl 1 dl 2 dl] 0 1 1 DL } def
/LT5 { PL [4 dl 3 dl 1 dl 3 dl] 1 1 0 DL } def
/LT6 { PL [2 dl 2 dl 2 dl 4 dl] 0 0 0 DL } def
/LT7 { PL [2 dl 2 dl 2 dl 2 dl 2 dl 4 dl] 1 0.3 0 DL } def
/LT8 { PL [2 dl 2 dl 2 dl 2 dl 2 dl 2 dl 2 dl 4 dl] 0.5 0.5 0.5 DL } def
/Pnt { stroke [] 0 setdash
   gsave 1 setlinecap M 0 0 V stroke grestore } def
/Dia { stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt } def
/Pls { stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
  } def
/Box { stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt } def
/Crs { stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke } def
/TriU { stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt  } def
/Star { 2 copy Pls Crs } def
/BoxF { stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V  hpt2 0 V  0 vpt2 V
  hpt2 neg 0 V  closepath fill } def
/TriUF { stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill } def
/TriD { stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt  } def
/TriDF { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF { stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill } def
/Pent { stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt } def
/PentF { stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore } def
/Circle { stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt } def
/CircleF { stroke [] 0 setdash hpt 0 360 arc fill } def
/C0 { BL [] 0 setdash 2 copy moveto vpt 90 450  arc } bind def
/C1 { BL [] 0 setdash 2 copy        moveto
       2 copy  vpt 0 90 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C2 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 90 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C3 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C4 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 180 270 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C5 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 90 arc
       2 copy moveto
       2 copy  vpt 180 270 arc closepath fill
               vpt 0 360 arc } bind def
/C6 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 90 270 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C7 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 0 270 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C8 { BL [] 0 setdash 2 copy moveto
      2 copy vpt 270 360 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C9 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 270 450 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C10 { BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
       2 copy moveto
       2 copy vpt 90 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C11 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 180 arc closepath fill
       2 copy moveto
       2 copy  vpt 270 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C12 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 180 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C13 { BL [] 0 setdash  2 copy moveto
       2 copy  vpt 0 90 arc closepath fill
       2 copy moveto
       2 copy  vpt 180 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C14 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 90 360 arc closepath fill
               vpt 0 360 arc } bind def
/C15 { BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/Rec   { newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
       neg 0 rlineto closepath } bind def
/Square { dup Rec } bind def
/Bsquare { vpt sub exch vpt sub exch vpt2 Square } bind def
/S0 { BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare } bind def
/S1 { BL [] 0 setdash 2 copy vpt Square fill Bsquare } bind def
/S2 { BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare } bind def
/S3 { BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare } bind def
/S4 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare } bind def
/S5 { BL [] 0 setdash 2 copy 2 copy vpt Square fill
       exch vpt sub exch vpt sub vpt Square fill Bsquare } bind def
/S6 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare } bind def
/S7 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
       2 copy vpt Square fill
       Bsquare } bind def
/S8 { BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare } bind def
/S9 { BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare } bind def
/S10 { BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
       Bsquare } bind def
/S11 { BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
       Bsquare } bind def
/S12 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare } bind def
/S13 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
       2 copy vpt Square fill Bsquare } bind def
/S14 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
       2 copy exch vpt sub exch vpt Square fill Bsquare } bind def
/S15 { BL [] 0 setdash 2 copy Bsquare fill Bsquare } bind def
/D0 { gsave translate 45 rotate 0 0 S0 stroke grestore } bind def
/D1 { gsave translate 45 rotate 0 0 S1 stroke grestore } bind def
/D2 { gsave translate 45 rotate 0 0 S2 stroke grestore } bind def
/D3 { gsave translate 45 rotate 0 0 S3 stroke grestore } bind def
/D4 { gsave translate 45 rotate 0 0 S4 stroke grestore } bind def
/D5 { gsave translate 45 rotate 0 0 S5 stroke grestore } bind def
/D6 { gsave translate 45 rotate 0 0 S6 stroke grestore } bind def
/D7 { gsave translate 45 rotate 0 0 S7 stroke grestore } bind def
/D8 { gsave translate 45 rotate 0 0 S8 stroke grestore } bind def
/D9 { gsave translate 45 rotate 0 0 S9 stroke grestore } bind def
/D10 { gsave translate 45 rotate 0 0 S10 stroke grestore } bind def
/D11 { gsave translate 45 rotate 0 0 S11 stroke grestore } bind def
/D12 { gsave translate 45 rotate 0 0 S12 stroke grestore } bind def
/D13 { gsave translate 45 rotate 0 0 S13 stroke grestore } bind def
/D14 { gsave translate 45 rotate 0 0 S14 stroke grestore } bind def
/D15 { gsave translate 45 rotate 0 0 S15 stroke grestore } bind def
/DiaE { stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke } def
/BoxE { stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke } def
/TriUE { stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke } def
/TriDE { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke } def
/PentE { stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore } def
/CircE { stroke [] 0 setdash 
  hpt 0 360 arc stroke } def
/Opaque { gsave closepath 1 setgray fill grestore 0 setgray closepath } def
/DiaW { stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke } def
/BoxW { stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke } def
/TriUW { stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke } def
/TriDW { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke } def
/PentW { stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore } def
/CircW { stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke } def
/BoxFill { gsave Rec 1 setgray fill grestore } def
/MFshow {{dup dup 0 get findfont exch 1 get scalefont setfont
     [ currentpoint ] exch dup 2 get 0 exch rmoveto dup dup 5 get exch 4 get
     {show} {stringwidth pop 0 rmoveto}ifelse dup 3 get
     {2 get neg 0 exch rmoveto pop} {pop aload pop moveto}ifelse} forall} bind def
/MFwidth {0 exch {dup 3 get{dup dup 0 get findfont exch 1 get scalefont setfont
      5 get stringwidth pop add}
    {pop} ifelse} forall} bind def
/MLshow { currentpoint stroke M
  0 exch R MFshow } bind def
/MRshow { currentpoint stroke M
  exch dup MFwidth neg 3 -1 roll R MFshow } def
/MCshow { currentpoint stroke M
  exch dup MFwidth -2 div 3 -1 roll R MFshow } def
end
%%EndProlog
gnudict begin
gsave
50 50 translate
0.050 0.050 scale
0 setgray
newpath
(Times-Roman) findfont 180 scalefont setfont
1.000 UL
LTb
702 540 M
63 0 V
6129 0 R
-63 0 V
 stroke
594 540 M
[ [(Times-Roman) 180.0 0.0 true true (0)]
] -60.0 MRshow
702 980 M
63 0 V
6129 0 R
-63 0 V
 stroke
594 980 M
[ [(Times-Roman) 180.0 0.0 true true (10)]
] -60.0 MRshow
702 1420 M
63 0 V
6129 0 R
-63 0 V
 stroke
594 1420 M
[ [(Times-Roman) 180.0 0.0 true true (20)]
] -60.0 MRshow
702 1860 M
63 0 V
6129 0 R
-63 0 V
 stroke
594 1860 M
[ [(Times-Roman) 180.0 0.0 true true (30)]
] -60.0 MRshow
702 2300 M
63 0 V
6129 0 R
-63 0 V
 stroke
594 2300 M
[ [(Times-Roman) 180.0 0.0 true true (40)]
] -60.0 MRshow
702 2740 M
63 0 V
6129 0 R
-63 0 V
 stroke
594 2740 M
[ [(Times-Roman) 180.0 0.0 true true (50)]
] -60.0 MRshow
702 3180 M
63 0 V
6129 0 R
-63 0 V
 stroke
594 3180 M
[ [(Times-Roman) 180.0 0.0 true true (60)]
] -60.0 MRshow
702 3620 M
63 0 V
6129 0 R
-63 0 V
 stroke
594 3620 M
[ [(Times-Roman) 180.0 0.0 true true (70)]
] -60.0 MRshow
702 4060 M
63 0 V
6129 0 R
-63 0 V
 stroke
594 4060 M
[ [(Times-Roman) 180.0 0.0 true true (80)]
] -60.0 MRshow
702 4500 M
63 0 V
6129 0 R
-63 0 V
 stroke
594 4500 M
[ [(Times-Roman) 180.0 0.0 true true (90)]
] -60.0 MRshow
1046 540 M
0 63 V
0 3897 R
0 -63 V
 stroke
1046 360 M
[ [(Times-Roman) 180.0 0.0 true true (2)]
] -60.0 MCshow
1734 540 M
0 63 V
0 3897 R
0 -63 V
 stroke
1734 360 M
[ [(Times-Roman) 180.0 0.0 true true (4)]
] -60.0 MCshow
2422 540 M
0 63 V
0 3897 R
0 -63 V
 stroke
2422 360 M
[ [(Times-Roman) 180.0 0.0 true true (6)]
] -60.0 MCshow
3110 540 M
0 63 V
0 3897 R
0 -63 V
 stroke
3110 360 M
[ [(Times-Roman) 180.0 0.0 true true (8)]
] -60.0 MCshow
3798 540 M
0 63 V
0 3897 R
0 -63 V
 stroke
3798 360 M
[ [(Times-Roman) 180.0 0.0 true true (10)]
] -60.0 MCshow
4486 540 M
0 63 V
0 3897 R
0 -63 V
 stroke
4486 360 M
[ [(Times-Roman) 180.0 0.0 true true (12)]
] -60.0 MCshow
5174 540 M
0 63 V
0 3897 R
0 -63 V
 stroke
5174 360 M
[ [(Times-Roman) 180.0 0.0 true true (14)]
] -60.0 MCshow
5862 540 M
0 63 V
0 3897 R
0 -63 V
 stroke
5862 360 M
[ [(Times-Roman) 180.0 0.0 true true (16)]
] -60.0 MCshow
6550 540 M
0 63 V
0 3897 R
0 -63 V
 stroke
6550 360 M
[ [(Times-Roman) 180.0 0.0 true true (18)]
] -60.0 MCshow
1.000 UL
LTb
702 540 M
6192 0 V
0 3960 V
-6192 0 V
702 540 L
 stroke
180 2520 M
currentpoint gsave translate 90 rotate 0 0 moveto
[ [(Times-Roman) 180.0 0.0 true true (MSI)]
] -60.0 MCshow
grestore
3798 90 M
[ [(Times-Roman) 180.0 0.0 true true (Refinement Step)]
] -60.0 MCshow
3798 4770 M
[ [(Times-Roman) 180.0 0.0 true true (Maximum Surface Index for 8 Processors)]
] -60.0 MCshow
1.000 UP
1.000 UL
LT0
6075 4347 M
[ [(Times-Roman) 180.0 0.0 true true (RCB)]
] -60.0 MRshow
6183 4347 M
495 0 V
702 1081 M
344 295 V
344 480 V
344 237 V
344 -347 V
344 0 V
344 -5 V
344 -4 V
344 -5 V
344 -8 V
344 -9 V
344 -5 V
344 -22 V
344 -17 V
344 -71 V
344 36 V
344 -5 V
344 -13 V
344 -18 V
702 1081 Pls
1046 1376 Pls
1390 1856 Pls
1734 2093 Pls
2078 1746 Pls
2422 1746 Pls
2766 1741 Pls
3110 1737 Pls
3454 1732 Pls
3798 1724 Pls
4142 1715 Pls
4486 1710 Pls
4830 1688 Pls
5174 1671 Pls
5518 1600 Pls
5862 1636 Pls
6206 1631 Pls
6550 1618 Pls
6894 1600 Pls
6430 4347 Pls
1.000 UP
1.000 UL
LT1
6075 4167 M
[ [(Times-Roman) 180.0 0.0 true true (RCB x-cut)]
] -60.0 MRshow
6183 4167 M
495 0 V
702 984 M
344 -83 V
344 -44 V
344 -18 V
344 9 V
344 0 V
344 0 V
344 4 V
344 5 V
344 4 V
344 5 V
344 0 V
344 0 V
344 0 V
344 -5 V
344 5 V
344 -5 V
344 5 V
344 8 V
702 984 Crs
1046 901 Crs
1390 857 Crs
1734 839 Crs
2078 848 Crs
2422 848 Crs
2766 848 Crs
3110 852 Crs
3454 857 Crs
3798 861 Crs
4142 866 Crs
4486 866 Crs
4830 866 Crs
5174 866 Crs
5518 861 Crs
5862 866 Crs
6206 861 Crs
6550 866 Crs
6894 874 Crs
6430 4167 Crs
1.000 UP
1.000 UL
LT2
6075 3987 M
[ [(Times-Roman) 180.0 0.0 true true (RCB y-cut)]
] -60.0 MRshow
6183 3987 M
495 0 V
702 1416 M
344 -132 V
344 -75 V
344 -176 V
344 4 V
344 0 V
344 0 V
344 0 V
344 -4 V
344 4 V
344 -4 V
344 13 V
344 9 V
344 0 V
344 9 V
344 0 V
344 4 V
344 4 V
344 -4 V
702 1416 Star
1046 1284 Star
1390 1209 Star
1734 1033 Star
2078 1037 Star
2422 1037 Star
2766 1037 Star
3110 1037 Star
3454 1033 Star
3798 1037 Star
4142 1033 Star
4486 1046 Star
4830 1055 Star
5174 1055 Star
5518 1064 Star
5862 1064 Star
6206 1068 Star
6550 1072 Star
6894 1068 Star
6430 3987 Star
1.000 UP
1.000 UL
LT3
6075 3807 M
[ [(Times-Roman) 180.0 0.0 true true (RCB z-cut)]
] -60.0 MRshow
6183 3807 M
495 0 V
702 1402 M
344 608 V
344 413 V
344 273 V
344 0 V
344 -4 V
344 0 V
344 0 V
344 -5 V
344 -4 V
344 -13 V
344 -5 V
344 -22 V
344 -17 V
344 -22 V
344 -9 V
344 -9 V
344 -18 V
344 -22 V
702 1402 Box
1046 2010 Box
1390 2423 Box
1734 2696 Box
2078 2696 Box
2422 2692 Box
2766 2692 Box
3110 2692 Box
3454 2687 Box
3798 2683 Box
4142 2670 Box
4486 2665 Box
4830 2643 Box
5174 2626 Box
5518 2604 Box
5862 2595 Box
6206 2586 Box
6550 2568 Box
6894 2546 Box
6430 3807 Box
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Times-Roman

%%EndDocument
 @endspecial 25328 w @beginspecial 50 @llx 50 @lly 410
@urx 302 @ury 2160 @rwi @setspecial
%%BeginDocument: graphs/rcbAllCuts/partition/msi_20.eps
%!PS-Adobe-2.0 EPSF-2.0
%%Title: msi_20.eps
%%Creator: gnuplot 3.7 patchlevel 1
%%CreationDate: Fri Aug 16 14:53:43 2002
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 410 302
%%Orientation: Portrait
%%EndComments
/gnudict 256 dict def
gnudict begin
/Color false def
/Solid false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
/vshift -60 def
/dl {10 mul} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow { currentpoint stroke M
  0 vshift R show } def
/Rshow { currentpoint stroke M
  dup stringwidth pop neg vshift R show } def
/Cshow { currentpoint stroke M
  dup stringwidth pop -2 div vshift R show } def
/UP { dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def } def
/DL { Color {setrgbcolor Solid {pop []} if 0 setdash }
 {pop pop pop Solid {pop []} if 0 setdash} ifelse } def
/BL { stroke userlinewidth 2 mul setlinewidth } def
/AL { stroke userlinewidth 2 div setlinewidth } def
/UL { dup gnulinewidth mul /userlinewidth exch def
      10 mul /udl exch def } def
/PL { stroke userlinewidth setlinewidth } def
/LTb { BL [] 0 0 0 DL } def
/LTa { AL [1 udl mul 2 udl mul] 0 setdash 0 0 0 setrgbcolor } def
/LT0 { PL [] 1 0 0 DL } def
/LT1 { PL [4 dl 2 dl] 0 1 0 DL } def
/LT2 { PL [2 dl 3 dl] 0 0 1 DL } def
/LT3 { PL [1 dl 1.5 dl] 1 0 1 DL } def
/LT4 { PL [5 dl 2 dl 1 dl 2 dl] 0 1 1 DL } def
/LT5 { PL [4 dl 3 dl 1 dl 3 dl] 1 1 0 DL } def
/LT6 { PL [2 dl 2 dl 2 dl 4 dl] 0 0 0 DL } def
/LT7 { PL [2 dl 2 dl 2 dl 2 dl 2 dl 4 dl] 1 0.3 0 DL } def
/LT8 { PL [2 dl 2 dl 2 dl 2 dl 2 dl 2 dl 2 dl 4 dl] 0.5 0.5 0.5 DL } def
/Pnt { stroke [] 0 setdash
   gsave 1 setlinecap M 0 0 V stroke grestore } def
/Dia { stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt } def
/Pls { stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
  } def
/Box { stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt } def
/Crs { stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke } def
/TriU { stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt  } def
/Star { 2 copy Pls Crs } def
/BoxF { stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V  hpt2 0 V  0 vpt2 V
  hpt2 neg 0 V  closepath fill } def
/TriUF { stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill } def
/TriD { stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt  } def
/TriDF { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF { stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill } def
/Pent { stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt } def
/PentF { stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore } def
/Circle { stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt } def
/CircleF { stroke [] 0 setdash hpt 0 360 arc fill } def
/C0 { BL [] 0 setdash 2 copy moveto vpt 90 450  arc } bind def
/C1 { BL [] 0 setdash 2 copy        moveto
       2 copy  vpt 0 90 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C2 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 90 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C3 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C4 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 180 270 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C5 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 90 arc
       2 copy moveto
       2 copy  vpt 180 270 arc closepath fill
               vpt 0 360 arc } bind def
/C6 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 90 270 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C7 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 0 270 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C8 { BL [] 0 setdash 2 copy moveto
      2 copy vpt 270 360 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C9 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 270 450 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C10 { BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
       2 copy moveto
       2 copy vpt 90 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C11 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 180 arc closepath fill
       2 copy moveto
       2 copy  vpt 270 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C12 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 180 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C13 { BL [] 0 setdash  2 copy moveto
       2 copy  vpt 0 90 arc closepath fill
       2 copy moveto
       2 copy  vpt 180 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C14 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 90 360 arc closepath fill
               vpt 0 360 arc } bind def
/C15 { BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/Rec   { newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
       neg 0 rlineto closepath } bind def
/Square { dup Rec } bind def
/Bsquare { vpt sub exch vpt sub exch vpt2 Square } bind def
/S0 { BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare } bind def
/S1 { BL [] 0 setdash 2 copy vpt Square fill Bsquare } bind def
/S2 { BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare } bind def
/S3 { BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare } bind def
/S4 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare } bind def
/S5 { BL [] 0 setdash 2 copy 2 copy vpt Square fill
       exch vpt sub exch vpt sub vpt Square fill Bsquare } bind def
/S6 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare } bind def
/S7 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
       2 copy vpt Square fill
       Bsquare } bind def
/S8 { BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare } bind def
/S9 { BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare } bind def
/S10 { BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
       Bsquare } bind def
/S11 { BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
       Bsquare } bind def
/S12 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare } bind def
/S13 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
       2 copy vpt Square fill Bsquare } bind def
/S14 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
       2 copy exch vpt sub exch vpt Square fill Bsquare } bind def
/S15 { BL [] 0 setdash 2 copy Bsquare fill Bsquare } bind def
/D0 { gsave translate 45 rotate 0 0 S0 stroke grestore } bind def
/D1 { gsave translate 45 rotate 0 0 S1 stroke grestore } bind def
/D2 { gsave translate 45 rotate 0 0 S2 stroke grestore } bind def
/D3 { gsave translate 45 rotate 0 0 S3 stroke grestore } bind def
/D4 { gsave translate 45 rotate 0 0 S4 stroke grestore } bind def
/D5 { gsave translate 45 rotate 0 0 S5 stroke grestore } bind def
/D6 { gsave translate 45 rotate 0 0 S6 stroke grestore } bind def
/D7 { gsave translate 45 rotate 0 0 S7 stroke grestore } bind def
/D8 { gsave translate 45 rotate 0 0 S8 stroke grestore } bind def
/D9 { gsave translate 45 rotate 0 0 S9 stroke grestore } bind def
/D10 { gsave translate 45 rotate 0 0 S10 stroke grestore } bind def
/D11 { gsave translate 45 rotate 0 0 S11 stroke grestore } bind def
/D12 { gsave translate 45 rotate 0 0 S12 stroke grestore } bind def
/D13 { gsave translate 45 rotate 0 0 S13 stroke grestore } bind def
/D14 { gsave translate 45 rotate 0 0 S14 stroke grestore } bind def
/D15 { gsave translate 45 rotate 0 0 S15 stroke grestore } bind def
/DiaE { stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke } def
/BoxE { stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke } def
/TriUE { stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke } def
/TriDE { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke } def
/PentE { stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore } def
/CircE { stroke [] 0 setdash 
  hpt 0 360 arc stroke } def
/Opaque { gsave closepath 1 setgray fill grestore 0 setgray closepath } def
/DiaW { stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke } def
/BoxW { stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke } def
/TriUW { stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke } def
/TriDW { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke } def
/PentW { stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore } def
/CircW { stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke } def
/BoxFill { gsave Rec 1 setgray fill grestore } def
/MFshow {{dup dup 0 get findfont exch 1 get scalefont setfont
     [ currentpoint ] exch dup 2 get 0 exch rmoveto dup dup 5 get exch 4 get
     {show} {stringwidth pop 0 rmoveto}ifelse dup 3 get
     {2 get neg 0 exch rmoveto pop} {pop aload pop moveto}ifelse} forall} bind def
/MFwidth {0 exch {dup 3 get{dup dup 0 get findfont exch 1 get scalefont setfont
      5 get stringwidth pop add}
    {pop} ifelse} forall} bind def
/MLshow { currentpoint stroke M
  0 exch R MFshow } bind def
/MRshow { currentpoint stroke M
  exch dup MFwidth neg 3 -1 roll R MFshow } def
/MCshow { currentpoint stroke M
  exch dup MFwidth -2 div 3 -1 roll R MFshow } def
end
%%EndProlog
gnudict begin
gsave
50 50 translate
0.050 0.050 scale
0 setgray
newpath
(Times-Roman) findfont 180 scalefont setfont
1.000 UL
LTb
702 540 M
63 0 V
6129 0 R
-63 0 V
 stroke
594 540 M
[ [(Times-Roman) 180.0 0.0 true true (0)]
] -60.0 MRshow
702 980 M
63 0 V
6129 0 R
-63 0 V
 stroke
594 980 M
[ [(Times-Roman) 180.0 0.0 true true (10)]
] -60.0 MRshow
702 1420 M
63 0 V
6129 0 R
-63 0 V
 stroke
594 1420 M
[ [(Times-Roman) 180.0 0.0 true true (20)]
] -60.0 MRshow
702 1860 M
63 0 V
6129 0 R
-63 0 V
 stroke
594 1860 M
[ [(Times-Roman) 180.0 0.0 true true (30)]
] -60.0 MRshow
702 2300 M
63 0 V
6129 0 R
-63 0 V
 stroke
594 2300 M
[ [(Times-Roman) 180.0 0.0 true true (40)]
] -60.0 MRshow
702 2740 M
63 0 V
6129 0 R
-63 0 V
 stroke
594 2740 M
[ [(Times-Roman) 180.0 0.0 true true (50)]
] -60.0 MRshow
702 3180 M
63 0 V
6129 0 R
-63 0 V
 stroke
594 3180 M
[ [(Times-Roman) 180.0 0.0 true true (60)]
] -60.0 MRshow
702 3620 M
63 0 V
6129 0 R
-63 0 V
 stroke
594 3620 M
[ [(Times-Roman) 180.0 0.0 true true (70)]
] -60.0 MRshow
702 4060 M
63 0 V
6129 0 R
-63 0 V
 stroke
594 4060 M
[ [(Times-Roman) 180.0 0.0 true true (80)]
] -60.0 MRshow
702 4500 M
63 0 V
6129 0 R
-63 0 V
 stroke
594 4500 M
[ [(Times-Roman) 180.0 0.0 true true (90)]
] -60.0 MRshow
1046 540 M
0 63 V
0 3897 R
0 -63 V
 stroke
1046 360 M
[ [(Times-Roman) 180.0 0.0 true true (2)]
] -60.0 MCshow
1734 540 M
0 63 V
0 3897 R
0 -63 V
 stroke
1734 360 M
[ [(Times-Roman) 180.0 0.0 true true (4)]
] -60.0 MCshow
2422 540 M
0 63 V
0 3897 R
0 -63 V
 stroke
2422 360 M
[ [(Times-Roman) 180.0 0.0 true true (6)]
] -60.0 MCshow
3110 540 M
0 63 V
0 3897 R
0 -63 V
 stroke
3110 360 M
[ [(Times-Roman) 180.0 0.0 true true (8)]
] -60.0 MCshow
3798 540 M
0 63 V
0 3897 R
0 -63 V
 stroke
3798 360 M
[ [(Times-Roman) 180.0 0.0 true true (10)]
] -60.0 MCshow
4486 540 M
0 63 V
0 3897 R
0 -63 V
 stroke
4486 360 M
[ [(Times-Roman) 180.0 0.0 true true (12)]
] -60.0 MCshow
5174 540 M
0 63 V
0 3897 R
0 -63 V
 stroke
5174 360 M
[ [(Times-Roman) 180.0 0.0 true true (14)]
] -60.0 MCshow
5862 540 M
0 63 V
0 3897 R
0 -63 V
 stroke
5862 360 M
[ [(Times-Roman) 180.0 0.0 true true (16)]
] -60.0 MCshow
6550 540 M
0 63 V
0 3897 R
0 -63 V
 stroke
6550 360 M
[ [(Times-Roman) 180.0 0.0 true true (18)]
] -60.0 MCshow
1.000 UL
LTb
702 540 M
6192 0 V
0 3960 V
-6192 0 V
702 540 L
 stroke
180 2520 M
currentpoint gsave translate 90 rotate 0 0 moveto
[ [(Times-Roman) 180.0 0.0 true true (MSI)]
] -60.0 MCshow
grestore
3798 90 M
[ [(Times-Roman) 180.0 0.0 true true (Refinement Step)]
] -60.0 MCshow
3798 4770 M
[ [(Times-Roman) 180.0 0.0 true true (Maximum Surface Index for 20 Processors)]
] -60.0 MCshow
1.000 UP
1.000 UL
LT0
5754 3620 M
[ [(Times-Roman) 180.0 0.0 true true (RCB)]
] -60.0 MRshow
5862 3620 M
495 0 V
702 1820 M
344 546 V
344 -176 V
344 739 V
344 -22 V
344 5 V
344 0 V
344 0 V
344 -9 V
344 4 V
344 -748 V
344 -31 V
344 -136 V
344 -22 V
344 -18 V
344 -4 V
344 -31 V
344 -39 V
344 -18 V
702 1820 Pls
1046 2366 Pls
1390 2190 Pls
1734 2929 Pls
2078 2907 Pls
2422 2912 Pls
2766 2912 Pls
3110 2912 Pls
3454 2903 Pls
3798 2907 Pls
4142 2159 Pls
4486 2128 Pls
4830 1992 Pls
5174 1970 Pls
5518 1952 Pls
5862 1948 Pls
6206 1917 Pls
6550 1878 Pls
6894 1860 Pls
6109 3620 Pls
1.000 UP
1.000 UL
LT1
5754 3440 M
[ [(Times-Roman) 180.0 0.0 true true (RCB x-cut)]
] -60.0 MRshow
5862 3440 M
495 0 V
702 1680 M
344 -137 V
344 -123 V
344 -167 V
344 -18 V
344 35 V
344 9 V
344 18 V
344 9 V
344 13 V
344 0 V
344 9 V
344 4 V
344 4 V
344 -17 V
344 -9 V
344 -4 V
344 13 V
344 22 V
702 1680 Crs
1046 1543 Crs
1390 1420 Crs
1734 1253 Crs
2078 1235 Crs
2422 1270 Crs
2766 1279 Crs
3110 1297 Crs
3454 1306 Crs
3798 1319 Crs
4142 1319 Crs
4486 1328 Crs
4830 1332 Crs
5174 1336 Crs
5518 1319 Crs
5862 1310 Crs
6206 1306 Crs
6550 1319 Crs
6894 1341 Crs
6109 3440 Crs
1.000 UP
1.000 UL
LT2
5754 3260 M
[ [(Times-Roman) 180.0 0.0 true true (RCB y-cut)]
] -60.0 MRshow
5862 3260 M
495 0 V
702 2634 M
344 -321 V
344 -211 V
344 -458 V
344 5 V
344 9 V
344 0 V
344 8 V
344 0 V
344 5 V
344 -9 V
344 31 V
344 17 V
344 14 V
344 0 V
344 -9 V
344 -5 V
344 22 V
344 0 V
702 2634 Star
1046 2313 Star
1390 2102 Star
1734 1644 Star
2078 1649 Star
2422 1658 Star
2766 1658 Star
3110 1666 Star
3454 1666 Star
3798 1671 Star
4142 1662 Star
4486 1693 Star
4830 1710 Star
5174 1724 Star
5518 1724 Star
5862 1715 Star
6206 1710 Star
6550 1732 Star
6894 1732 Star
6109 3260 Star
1.000 UP
1.000 UL
LT3
5754 3080 M
[ [(Times-Roman) 180.0 0.0 true true (RCB z-cut)]
] -60.0 MRshow
5862 3080 M
495 0 V
702 2617 M
344 462 V
344 413 V
344 581 V
344 0 V
344 5 V
344 0 V
344 0 V
344 -14 V
344 5 V
344 -31 V
344 -9 V
344 -22 V
344 -9 V
344 -8 V
344 -14 V
344 0 V
344 -13 V
344 -13 V
702 2617 Box
1046 3079 Box
1390 3492 Box
1734 4073 Box
2078 4073 Box
2422 4078 Box
2766 4078 Box
3110 4078 Box
3454 4064 Box
3798 4069 Box
4142 4038 Box
4486 4029 Box
4830 4007 Box
5174 3998 Box
5518 3990 Box
5862 3976 Box
6206 3976 Box
6550 3963 Box
6894 3950 Box
6109 3080 Box
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Times-Roman

%%EndDocument
 @endspecial 51523 34703 V 888 34748 50657 45 v 0 36962
a Fk(Figure)521 b(12:)753 b Fj(r)7188 37161 y Fb(G)8497
36962 y Fk(\(top\))520 b(and)g Fj(r)15110 37161 y Fb(M)16684
36962 y Fk(\(b)36 b(ottom\))520 b(at)h(eac)-36 b(h)521
b(adaptiv)-36 b(e)521 b(re\257nemen)-36 b(t)519 b(step)h(for)h(the)f(p)
36 b(erforated)0 38567 y(sho)g(c)-36 b(k)405 b(tub)36
b(e)403 b(on)i(8)f(\(left\))h(and)f(20)h(\(righ)-36 b(t\))404
b(pro)36 b(cesses.)568 b(R)-36 b(CB)405 b Fj(x)p Fk(-cut)f(ac)-36
b(hiev)g(ed)404 b(the)g(b)36 b(est)404 b(surface)h(indices)0
40172 y(in)433 b(all)i(cases.)0 43714 y(20)350 b(pro)36
b(cess)349 b(cases.)551 b(The)349 b(original)h(R)-36
b(CB)350 b(algorithm)g(had)e(the)h(lo)-36 b(w)g(est)349
b Fj(ad)-145 b(j)36189 43913 y Fb(A)37299 43714 y Fk(and)348
b Fj(ad)-145 b(j)41495 43913 y Fb(M)42898 43714 y Fk(for)350
b(20)f(pro)36 b(cesses,)0 45319 y(and)433 b(similar)i(v)-72
b(alues)434 b(to)f Fj(y)48 b Fk(-cut)433 b(on)g(8)h(pro)36
b(cesses.)1951 46924 y(The)469 b(in)-36 b(terpro)36 b(cess)468
b(adjacency)i(statistics)f(w)-36 b(ere)469 b(at)g(\257rst)f
(surprising.)683 b(The)469 b(initial)h(motiv)-72 b(ation)469
b(for)0 48529 y(the)475 b(slice)i(partitioning)f(w)-36
b(as)477 b(to)f(minimize)g(in)-36 b(terpro)36 b(cess)475
b(adjacency)-108 b(.)706 b(Y)-108 b(et,)487 b(for)476
b(the)g(20)g(pro)36 b(cess)476 b(case,)0 50134 y(the)h(original)h(R)-36
b(CB)478 b(algorithm)g(had)f(a)g(lo)-36 b(w)g(er)478
b Fj(ad)-145 b(j)25144 50333 y Fb(A)26382 50134 y Fk(at)477
b(eac)-36 b(h)477 b(re\257nemen)-36 b(t)476 b(step)g(than)h(an)-36
b(y)478 b(of)g(the)e(slice)0 51740 y(metho)36 b(ds.)622
b(The)449 b(structure)e(of)i(the)f(mesh,)k(more)c(sp)36
b(eci\257cally)-108 b(,)454 b(the)448 b(re\257nemen)-36
b(t)446 b(pattern,)452 b(caused)c(this.)0 53345 y(The)471
b(domain)g(a)-36 b(w)g(a)g(y)472 b(from)f(the)f(in)-36
b(terface)471 b(of)h(the)e(barrel)h(and)f(v)-36 b(en)g(t)471
b(hole)g(consists)g(of)g(large)h(elemen)-36 b(ts.)0 54950
y(The)375 b(cut)f(planes)g(for)i(the)e Fj(x)p Fk(-cut)g(and)g
Fj(y)48 b Fk(-cut)373 b(R)-36 b(CB)375 b(are)g(determined)f(almost)h
(completely)h(b)-36 b(y)374 b(the)g(highly)0 56555 y(re\257ned)557
b(in)-36 b(terface.)953 b(Slices)559 b(w)-36 b(ere)558
b(formed)h(in)f(this)g(region,)590 b(but)558 b(a)-36
b(w)g(a)g(y)559 b(from)g(the)f(dense)f(re\257nemen)-36
b(t,)0 58160 y(there)401 b(are)h(larger)g(mesh)f(elemen)-36
b(ts)401 b(that)g(spanned)f(three)h(or)h(more)f(slices,)409
b(causing)402 b(a)g(small)g(n)-36 b(um)g(b)36 b(er)400
b(of)0 59765 y(these)433 b(elemen)-36 b(ts)433 b(to)h(b)36
b(e)433 b(\\adjacen)-36 b(t")435 b(to)e(more)h(distan)-36
b(t)433 b(slices.)1951 61370 y(Figure)458 b(14)g(sho)-36
b(ws)458 b(that)f Fj(x)p Fk(-cut)g(R)-36 b(CB)458 b(ac)-36
b(hiev)g(ed)458 b(a)g(solution)f(to)h(the)f(p)36 b(erforated)458
b(sho)36 b(c)-36 b(k)458 b(tub)36 b(e)457 b(most)0 62975
y(quic)-36 b(kly)-108 b(,)578 b(follo)-36 b(w)g(ed)550
b(closely)g(b)-36 b(y)548 b(the)g Fj(y)48 b Fk(-cut.)921
b(These)548 b(correlate)h(closely)h(to)e(the)g(surface)g(index)g(v)-72
b(alues)0 64580 y(in)521 b(Figure)g(12.)842 b(As)521
b(with)g(the)f(studies)h(in)g(Section)g(4,)543 b(surface)522
b(indices)f(w)-36 b(ere)521 b(more)g(imp)36 b(ortan)-36
b(t)521 b(than)0 66185 y(in)-36 b(terpro)36 b(cess)433
b(adjacency)i(for)f(the)f(Sun)f(cluster.)25350 75417
y(15)p eop
%%Page: 16 16
16 15 bop 888 140 50657 45 v 866 17422 45 17282 v 1553
16940 a @beginspecial 50 @llx 50 @lly 410 @urx 302 @ury
2160 @rwi @setspecial
%%BeginDocument: graphs/rcbAllCuts/partition/avg_proc_adj_8.eps
%!PS-Adobe-2.0 EPSF-2.0
%%Title: avg_proc_adj_8.eps
%%Creator: gnuplot 3.7 patchlevel 1
%%CreationDate: Fri Aug 16 14:32:30 2002
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 410 302
%%Orientation: Portrait
%%EndComments
/gnudict 256 dict def
gnudict begin
/Color false def
/Solid false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
/vshift -60 def
/dl {10 mul} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow { currentpoint stroke M
  0 vshift R show } def
/Rshow { currentpoint stroke M
  dup stringwidth pop neg vshift R show } def
/Cshow { currentpoint stroke M
  dup stringwidth pop -2 div vshift R show } def
/UP { dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def } def
/DL { Color {setrgbcolor Solid {pop []} if 0 setdash }
 {pop pop pop Solid {pop []} if 0 setdash} ifelse } def
/BL { stroke userlinewidth 2 mul setlinewidth } def
/AL { stroke userlinewidth 2 div setlinewidth } def
/UL { dup gnulinewidth mul /userlinewidth exch def
      10 mul /udl exch def } def
/PL { stroke userlinewidth setlinewidth } def
/LTb { BL [] 0 0 0 DL } def
/LTa { AL [1 udl mul 2 udl mul] 0 setdash 0 0 0 setrgbcolor } def
/LT0 { PL [] 1 0 0 DL } def
/LT1 { PL [4 dl 2 dl] 0 1 0 DL } def
/LT2 { PL [2 dl 3 dl] 0 0 1 DL } def
/LT3 { PL [1 dl 1.5 dl] 1 0 1 DL } def
/LT4 { PL [5 dl 2 dl 1 dl 2 dl] 0 1 1 DL } def
/LT5 { PL [4 dl 3 dl 1 dl 3 dl] 1 1 0 DL } def
/LT6 { PL [2 dl 2 dl 2 dl 4 dl] 0 0 0 DL } def
/LT7 { PL [2 dl 2 dl 2 dl 2 dl 2 dl 4 dl] 1 0.3 0 DL } def
/LT8 { PL [2 dl 2 dl 2 dl 2 dl 2 dl 2 dl 2 dl 4 dl] 0.5 0.5 0.5 DL } def
/Pnt { stroke [] 0 setdash
   gsave 1 setlinecap M 0 0 V stroke grestore } def
/Dia { stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt } def
/Pls { stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
  } def
/Box { stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt } def
/Crs { stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke } def
/TriU { stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt  } def
/Star { 2 copy Pls Crs } def
/BoxF { stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V  hpt2 0 V  0 vpt2 V
  hpt2 neg 0 V  closepath fill } def
/TriUF { stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill } def
/TriD { stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt  } def
/TriDF { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF { stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill } def
/Pent { stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt } def
/PentF { stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore } def
/Circle { stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt } def
/CircleF { stroke [] 0 setdash hpt 0 360 arc fill } def
/C0 { BL [] 0 setdash 2 copy moveto vpt 90 450  arc } bind def
/C1 { BL [] 0 setdash 2 copy        moveto
       2 copy  vpt 0 90 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C2 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 90 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C3 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C4 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 180 270 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C5 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 90 arc
       2 copy moveto
       2 copy  vpt 180 270 arc closepath fill
               vpt 0 360 arc } bind def
/C6 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 90 270 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C7 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 0 270 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C8 { BL [] 0 setdash 2 copy moveto
      2 copy vpt 270 360 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C9 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 270 450 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C10 { BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
       2 copy moveto
       2 copy vpt 90 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C11 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 180 arc closepath fill
       2 copy moveto
       2 copy  vpt 270 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C12 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 180 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C13 { BL [] 0 setdash  2 copy moveto
       2 copy  vpt 0 90 arc closepath fill
       2 copy moveto
       2 copy  vpt 180 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C14 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 90 360 arc closepath fill
               vpt 0 360 arc } bind def
/C15 { BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/Rec   { newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
       neg 0 rlineto closepath } bind def
/Square { dup Rec } bind def
/Bsquare { vpt sub exch vpt sub exch vpt2 Square } bind def
/S0 { BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare } bind def
/S1 { BL [] 0 setdash 2 copy vpt Square fill Bsquare } bind def
/S2 { BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare } bind def
/S3 { BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare } bind def
/S4 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare } bind def
/S5 { BL [] 0 setdash 2 copy 2 copy vpt Square fill
       exch vpt sub exch vpt sub vpt Square fill Bsquare } bind def
/S6 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare } bind def
/S7 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
       2 copy vpt Square fill
       Bsquare } bind def
/S8 { BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare } bind def
/S9 { BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare } bind def
/S10 { BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
       Bsquare } bind def
/S11 { BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
       Bsquare } bind def
/S12 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare } bind def
/S13 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
       2 copy vpt Square fill Bsquare } bind def
/S14 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
       2 copy exch vpt sub exch vpt Square fill Bsquare } bind def
/S15 { BL [] 0 setdash 2 copy Bsquare fill Bsquare } bind def
/D0 { gsave translate 45 rotate 0 0 S0 stroke grestore } bind def
/D1 { gsave translate 45 rotate 0 0 S1 stroke grestore } bind def
/D2 { gsave translate 45 rotate 0 0 S2 stroke grestore } bind def
/D3 { gsave translate 45 rotate 0 0 S3 stroke grestore } bind def
/D4 { gsave translate 45 rotate 0 0 S4 stroke grestore } bind def
/D5 { gsave translate 45 rotate 0 0 S5 stroke grestore } bind def
/D6 { gsave translate 45 rotate 0 0 S6 stroke grestore } bind def
/D7 { gsave translate 45 rotate 0 0 S7 stroke grestore } bind def
/D8 { gsave translate 45 rotate 0 0 S8 stroke grestore } bind def
/D9 { gsave translate 45 rotate 0 0 S9 stroke grestore } bind def
/D10 { gsave translate 45 rotate 0 0 S10 stroke grestore } bind def
/D11 { gsave translate 45 rotate 0 0 S11 stroke grestore } bind def
/D12 { gsave translate 45 rotate 0 0 S12 stroke grestore } bind def
/D13 { gsave translate 45 rotate 0 0 S13 stroke grestore } bind def
/D14 { gsave translate 45 rotate 0 0 S14 stroke grestore } bind def
/D15 { gsave translate 45 rotate 0 0 S15 stroke grestore } bind def
/DiaE { stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke } def
/BoxE { stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke } def
/TriUE { stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke } def
/TriDE { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke } def
/PentE { stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore } def
/CircE { stroke [] 0 setdash 
  hpt 0 360 arc stroke } def
/Opaque { gsave closepath 1 setgray fill grestore 0 setgray closepath } def
/DiaW { stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke } def
/BoxW { stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke } def
/TriUW { stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke } def
/TriDW { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke } def
/PentW { stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore } def
/CircW { stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke } def
/BoxFill { gsave Rec 1 setgray fill grestore } def
/MFshow {{dup dup 0 get findfont exch 1 get scalefont setfont
     [ currentpoint ] exch dup 2 get 0 exch rmoveto dup dup 5 get exch 4 get
     {show} {stringwidth pop 0 rmoveto}ifelse dup 3 get
     {2 get neg 0 exch rmoveto pop} {pop aload pop moveto}ifelse} forall} bind def
/MFwidth {0 exch {dup 3 get{dup dup 0 get findfont exch 1 get scalefont setfont
      5 get stringwidth pop add}
    {pop} ifelse} forall} bind def
/MLshow { currentpoint stroke M
  0 exch R MFshow } bind def
/MRshow { currentpoint stroke M
  exch dup MFwidth neg 3 -1 roll R MFshow } def
/MCshow { currentpoint stroke M
  exch dup MFwidth -2 div 3 -1 roll R MFshow } def
end
%%EndProlog
gnudict begin
gsave
50 50 translate
0.050 0.050 scale
0 setgray
newpath
(Times-Roman) findfont 180 scalefont setfont
1.000 UL
LTb
810 540 M
63 0 V
6021 0 R
-63 0 V
 stroke
702 540 M
[ [(Times-Roman) 180.0 0.0 true true (0)]
] -60.0 MRshow
810 1294 M
63 0 V
6021 0 R
-63 0 V
 stroke
702 1294 M
[ [(Times-Roman) 180.0 0.0 true true (20)]
] -60.0 MRshow
810 2049 M
63 0 V
6021 0 R
-63 0 V
 stroke
702 2049 M
[ [(Times-Roman) 180.0 0.0 true true (40)]
] -60.0 MRshow
810 2803 M
63 0 V
6021 0 R
-63 0 V
 stroke
702 2803 M
[ [(Times-Roman) 180.0 0.0 true true (60)]
] -60.0 MRshow
810 3557 M
63 0 V
6021 0 R
-63 0 V
 stroke
702 3557 M
[ [(Times-Roman) 180.0 0.0 true true (80)]
] -60.0 MRshow
810 4311 M
63 0 V
6021 0 R
-63 0 V
 stroke
702 4311 M
[ [(Times-Roman) 180.0 0.0 true true (100)]
] -60.0 MRshow
1148 540 M
0 63 V
0 3897 R
0 -63 V
 stroke
1148 360 M
[ [(Times-Roman) 180.0 0.0 true true (2)]
] -60.0 MCshow
1824 540 M
0 63 V
0 3897 R
0 -63 V
 stroke
1824 360 M
[ [(Times-Roman) 180.0 0.0 true true (4)]
] -60.0 MCshow
2500 540 M
0 63 V
0 3897 R
0 -63 V
 stroke
2500 360 M
[ [(Times-Roman) 180.0 0.0 true true (6)]
] -60.0 MCshow
3176 540 M
0 63 V
0 3897 R
0 -63 V
 stroke
3176 360 M
[ [(Times-Roman) 180.0 0.0 true true (8)]
] -60.0 MCshow
3852 540 M
0 63 V
0 3897 R
0 -63 V
 stroke
3852 360 M
[ [(Times-Roman) 180.0 0.0 true true (10)]
] -60.0 MCshow
4528 540 M
0 63 V
0 3897 R
0 -63 V
 stroke
4528 360 M
[ [(Times-Roman) 180.0 0.0 true true (12)]
] -60.0 MCshow
5204 540 M
0 63 V
0 3897 R
0 -63 V
 stroke
5204 360 M
[ [(Times-Roman) 180.0 0.0 true true (14)]
] -60.0 MCshow
5880 540 M
0 63 V
0 3897 R
0 -63 V
 stroke
5880 360 M
[ [(Times-Roman) 180.0 0.0 true true (16)]
] -60.0 MCshow
6556 540 M
0 63 V
0 3897 R
0 -63 V
 stroke
6556 360 M
[ [(Times-Roman) 180.0 0.0 true true (18)]
] -60.0 MCshow
1.000 UL
LTb
810 540 M
6084 0 V
0 3960 V
-6084 0 V
810 540 L
 stroke
180 2520 M
currentpoint gsave translate 90 rotate 0 0 moveto
[ [(Times-Roman) 180.0 0.0 true true (Interprocessor Adjacency)]
] -60.0 MCshow
grestore
3852 90 M
[ [(Times-Roman) 180.0 0.0 true true (Refinement Step)]
] -60.0 MCshow
3852 4770 M
[ [(Times-Roman) 180.0 0.0 true true (Average Interprocessor Adjacency for 8 Processors)]
] -60.0 MCshow
1.000 UP
1.000 UL
LT0
6110 1294 M
[ [(Times-Roman) 180.0 0.0 true true (RCB)]
] -60.0 MRshow
6218 1294 M
495 0 V
810 3233 M
338 811 V
338 0 V
338 -136 V
338 403 V
338 0 V
338 0 V
338 0 V
338 0 V
338 -135 V
338 -132 V
338 0 V
338 267 V
338 -267 V
338 -408 V
338 408 V
338 0 V
338 0 V
338 0 V
810 3233 Pls
1148 4044 Pls
1486 4044 Pls
1824 3908 Pls
2162 4311 Pls
2500 4311 Pls
2838 4311 Pls
3176 4311 Pls
3514 4311 Pls
3852 4176 Pls
4190 4044 Pls
4528 4044 Pls
4866 4311 Pls
5204 4044 Pls
5542 3636 Pls
5880 4044 Pls
6218 4044 Pls
6556 4044 Pls
6894 4044 Pls
6465 1294 Pls
1.000 UP
1.000 UL
LT1
6110 1114 M
[ [(Times-Roman) 180.0 0.0 true true (RCB x-cut)]
] -60.0 MRshow
6218 1114 M
495 0 V
810 3233 M
338 0 V
338 136 V
338 403 V
338 -136 V
338 0 V
338 0 V
338 0 V
338 0 V
338 0 V
338 0 V
338 0 V
338 0 V
338 0 V
338 0 V
338 0 V
338 0 V
338 0 V
338 0 V
810 3233 Crs
1148 3233 Crs
1486 3369 Crs
1824 3772 Crs
2162 3636 Crs
2500 3636 Crs
2838 3636 Crs
3176 3636 Crs
3514 3636 Crs
3852 3636 Crs
4190 3636 Crs
4528 3636 Crs
4866 3636 Crs
5204 3636 Crs
5542 3636 Crs
5880 3636 Crs
6218 3636 Crs
6556 3636 Crs
6894 3636 Crs
6465 1114 Crs
1.000 UP
1.000 UL
LT2
6110 934 M
[ [(Times-Roman) 180.0 0.0 true true (RCB y-cut)]
] -60.0 MRshow
6218 934 M
495 0 V
810 4311 M
338 0 V
338 0 V
338 -135 V
338 0 V
338 0 V
338 0 V
338 0 V
338 0 V
338 0 V
338 0 V
338 0 V
338 0 V
338 0 V
338 0 V
338 0 V
338 0 V
338 0 V
338 0 V
810 4311 Star
1148 4311 Star
1486 4311 Star
1824 4176 Star
2162 4176 Star
2500 4176 Star
2838 4176 Star
3176 4176 Star
3514 4176 Star
3852 4176 Star
4190 4176 Star
4528 4176 Star
4866 4176 Star
5204 4176 Star
5542 4176 Star
5880 4176 Star
6218 4176 Star
6556 4176 Star
6894 4176 Star
6465 934 Star
1.000 UP
1.000 UL
LT3
6110 754 M
[ [(Times-Roman) 180.0 0.0 true true (RCB z-cut)]
] -60.0 MRshow
6218 754 M
495 0 V
810 1886 M
338 1618 V
338 268 V
338 -403 V
338 0 V
338 0 V
338 0 V
338 0 V
338 0 V
338 0 V
338 0 V
338 0 V
338 0 V
338 0 V
338 -136 V
338 0 V
338 0 V
338 0 V
338 0 V
810 1886 Box
1148 3504 Box
1486 3772 Box
1824 3369 Box
2162 3369 Box
2500 3369 Box
2838 3369 Box
3176 3369 Box
3514 3369 Box
3852 3369 Box
4190 3369 Box
4528 3369 Box
4866 3369 Box
5204 3369 Box
5542 3233 Box
5880 3233 Box
6218 3233 Box
6556 3233 Box
6894 3233 Box
6465 754 Box
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Times-Roman

%%EndDocument
 @endspecial 25328 w @beginspecial 50 @llx 50 @lly 410
@urx 302 @ury 2160 @rwi @setspecial
%%BeginDocument: graphs/rcbAllCuts/partition/avg_proc_adj_20.eps
%!PS-Adobe-2.0 EPSF-2.0
%%Title: avg_proc_adj_20.eps
%%Creator: gnuplot 3.7 patchlevel 1
%%CreationDate: Fri Aug 16 14:32:22 2002
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 410 302
%%Orientation: Portrait
%%EndComments
/gnudict 256 dict def
gnudict begin
/Color false def
/Solid false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
/vshift -60 def
/dl {10 mul} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow { currentpoint stroke M
  0 vshift R show } def
/Rshow { currentpoint stroke M
  dup stringwidth pop neg vshift R show } def
/Cshow { currentpoint stroke M
  dup stringwidth pop -2 div vshift R show } def
/UP { dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def } def
/DL { Color {setrgbcolor Solid {pop []} if 0 setdash }
 {pop pop pop Solid {pop []} if 0 setdash} ifelse } def
/BL { stroke userlinewidth 2 mul setlinewidth } def
/AL { stroke userlinewidth 2 div setlinewidth } def
/UL { dup gnulinewidth mul /userlinewidth exch def
      10 mul /udl exch def } def
/PL { stroke userlinewidth setlinewidth } def
/LTb { BL [] 0 0 0 DL } def
/LTa { AL [1 udl mul 2 udl mul] 0 setdash 0 0 0 setrgbcolor } def
/LT0 { PL [] 1 0 0 DL } def
/LT1 { PL [4 dl 2 dl] 0 1 0 DL } def
/LT2 { PL [2 dl 3 dl] 0 0 1 DL } def
/LT3 { PL [1 dl 1.5 dl] 1 0 1 DL } def
/LT4 { PL [5 dl 2 dl 1 dl 2 dl] 0 1 1 DL } def
/LT5 { PL [4 dl 3 dl 1 dl 3 dl] 1 1 0 DL } def
/LT6 { PL [2 dl 2 dl 2 dl 4 dl] 0 0 0 DL } def
/LT7 { PL [2 dl 2 dl 2 dl 2 dl 2 dl 4 dl] 1 0.3 0 DL } def
/LT8 { PL [2 dl 2 dl 2 dl 2 dl 2 dl 2 dl 2 dl 4 dl] 0.5 0.5 0.5 DL } def
/Pnt { stroke [] 0 setdash
   gsave 1 setlinecap M 0 0 V stroke grestore } def
/Dia { stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt } def
/Pls { stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
  } def
/Box { stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt } def
/Crs { stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke } def
/TriU { stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt  } def
/Star { 2 copy Pls Crs } def
/BoxF { stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V  hpt2 0 V  0 vpt2 V
  hpt2 neg 0 V  closepath fill } def
/TriUF { stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill } def
/TriD { stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt  } def
/TriDF { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF { stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill } def
/Pent { stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt } def
/PentF { stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore } def
/Circle { stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt } def
/CircleF { stroke [] 0 setdash hpt 0 360 arc fill } def
/C0 { BL [] 0 setdash 2 copy moveto vpt 90 450  arc } bind def
/C1 { BL [] 0 setdash 2 copy        moveto
       2 copy  vpt 0 90 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C2 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 90 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C3 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C4 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 180 270 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C5 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 90 arc
       2 copy moveto
       2 copy  vpt 180 270 arc closepath fill
               vpt 0 360 arc } bind def
/C6 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 90 270 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C7 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 0 270 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C8 { BL [] 0 setdash 2 copy moveto
      2 copy vpt 270 360 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C9 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 270 450 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C10 { BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
       2 copy moveto
       2 copy vpt 90 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C11 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 180 arc closepath fill
       2 copy moveto
       2 copy  vpt 270 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C12 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 180 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C13 { BL [] 0 setdash  2 copy moveto
       2 copy  vpt 0 90 arc closepath fill
       2 copy moveto
       2 copy  vpt 180 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C14 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 90 360 arc closepath fill
               vpt 0 360 arc } bind def
/C15 { BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/Rec   { newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
       neg 0 rlineto closepath } bind def
/Square { dup Rec } bind def
/Bsquare { vpt sub exch vpt sub exch vpt2 Square } bind def
/S0 { BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare } bind def
/S1 { BL [] 0 setdash 2 copy vpt Square fill Bsquare } bind def
/S2 { BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare } bind def
/S3 { BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare } bind def
/S4 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare } bind def
/S5 { BL [] 0 setdash 2 copy 2 copy vpt Square fill
       exch vpt sub exch vpt sub vpt Square fill Bsquare } bind def
/S6 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare } bind def
/S7 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
       2 copy vpt Square fill
       Bsquare } bind def
/S8 { BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare } bind def
/S9 { BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare } bind def
/S10 { BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
       Bsquare } bind def
/S11 { BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
       Bsquare } bind def
/S12 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare } bind def
/S13 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
       2 copy vpt Square fill Bsquare } bind def
/S14 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
       2 copy exch vpt sub exch vpt Square fill Bsquare } bind def
/S15 { BL [] 0 setdash 2 copy Bsquare fill Bsquare } bind def
/D0 { gsave translate 45 rotate 0 0 S0 stroke grestore } bind def
/D1 { gsave translate 45 rotate 0 0 S1 stroke grestore } bind def
/D2 { gsave translate 45 rotate 0 0 S2 stroke grestore } bind def
/D3 { gsave translate 45 rotate 0 0 S3 stroke grestore } bind def
/D4 { gsave translate 45 rotate 0 0 S4 stroke grestore } bind def
/D5 { gsave translate 45 rotate 0 0 S5 stroke grestore } bind def
/D6 { gsave translate 45 rotate 0 0 S6 stroke grestore } bind def
/D7 { gsave translate 45 rotate 0 0 S7 stroke grestore } bind def
/D8 { gsave translate 45 rotate 0 0 S8 stroke grestore } bind def
/D9 { gsave translate 45 rotate 0 0 S9 stroke grestore } bind def
/D10 { gsave translate 45 rotate 0 0 S10 stroke grestore } bind def
/D11 { gsave translate 45 rotate 0 0 S11 stroke grestore } bind def
/D12 { gsave translate 45 rotate 0 0 S12 stroke grestore } bind def
/D13 { gsave translate 45 rotate 0 0 S13 stroke grestore } bind def
/D14 { gsave translate 45 rotate 0 0 S14 stroke grestore } bind def
/D15 { gsave translate 45 rotate 0 0 S15 stroke grestore } bind def
/DiaE { stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke } def
/BoxE { stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke } def
/TriUE { stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke } def
/TriDE { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke } def
/PentE { stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore } def
/CircE { stroke [] 0 setdash 
  hpt 0 360 arc stroke } def
/Opaque { gsave closepath 1 setgray fill grestore 0 setgray closepath } def
/DiaW { stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke } def
/BoxW { stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke } def
/TriUW { stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke } def
/TriDW { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke } def
/PentW { stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore } def
/CircW { stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke } def
/BoxFill { gsave Rec 1 setgray fill grestore } def
/MFshow {{dup dup 0 get findfont exch 1 get scalefont setfont
     [ currentpoint ] exch dup 2 get 0 exch rmoveto dup dup 5 get exch 4 get
     {show} {stringwidth pop 0 rmoveto}ifelse dup 3 get
     {2 get neg 0 exch rmoveto pop} {pop aload pop moveto}ifelse} forall} bind def
/MFwidth {0 exch {dup 3 get{dup dup 0 get findfont exch 1 get scalefont setfont
      5 get stringwidth pop add}
    {pop} ifelse} forall} bind def
/MLshow { currentpoint stroke M
  0 exch R MFshow } bind def
/MRshow { currentpoint stroke M
  exch dup MFwidth neg 3 -1 roll R MFshow } def
/MCshow { currentpoint stroke M
  exch dup MFwidth -2 div 3 -1 roll R MFshow } def
end
%%EndProlog
gnudict begin
gsave
50 50 translate
0.050 0.050 scale
0 setgray
newpath
(Times-Roman) findfont 180 scalefont setfont
1.000 UL
LTb
810 540 M
63 0 V
6021 0 R
-63 0 V
 stroke
702 540 M
[ [(Times-Roman) 180.0 0.0 true true (0)]
] -60.0 MRshow
810 1294 M
63 0 V
6021 0 R
-63 0 V
 stroke
702 1294 M
[ [(Times-Roman) 180.0 0.0 true true (20)]
] -60.0 MRshow
810 2049 M
63 0 V
6021 0 R
-63 0 V
 stroke
702 2049 M
[ [(Times-Roman) 180.0 0.0 true true (40)]
] -60.0 MRshow
810 2803 M
63 0 V
6021 0 R
-63 0 V
 stroke
702 2803 M
[ [(Times-Roman) 180.0 0.0 true true (60)]
] -60.0 MRshow
810 3557 M
63 0 V
6021 0 R
-63 0 V
 stroke
702 3557 M
[ [(Times-Roman) 180.0 0.0 true true (80)]
] -60.0 MRshow
810 4311 M
63 0 V
6021 0 R
-63 0 V
 stroke
702 4311 M
[ [(Times-Roman) 180.0 0.0 true true (100)]
] -60.0 MRshow
1148 540 M
0 63 V
0 3897 R
0 -63 V
 stroke
1148 360 M
[ [(Times-Roman) 180.0 0.0 true true (2)]
] -60.0 MCshow
1824 540 M
0 63 V
0 3897 R
0 -63 V
 stroke
1824 360 M
[ [(Times-Roman) 180.0 0.0 true true (4)]
] -60.0 MCshow
2500 540 M
0 63 V
0 3897 R
0 -63 V
 stroke
2500 360 M
[ [(Times-Roman) 180.0 0.0 true true (6)]
] -60.0 MCshow
3176 540 M
0 63 V
0 3897 R
0 -63 V
 stroke
3176 360 M
[ [(Times-Roman) 180.0 0.0 true true (8)]
] -60.0 MCshow
3852 540 M
0 63 V
0 3897 R
0 -63 V
 stroke
3852 360 M
[ [(Times-Roman) 180.0 0.0 true true (10)]
] -60.0 MCshow
4528 540 M
0 63 V
0 3897 R
0 -63 V
 stroke
4528 360 M
[ [(Times-Roman) 180.0 0.0 true true (12)]
] -60.0 MCshow
5204 540 M
0 63 V
0 3897 R
0 -63 V
 stroke
5204 360 M
[ [(Times-Roman) 180.0 0.0 true true (14)]
] -60.0 MCshow
5880 540 M
0 63 V
0 3897 R
0 -63 V
 stroke
5880 360 M
[ [(Times-Roman) 180.0 0.0 true true (16)]
] -60.0 MCshow
6556 540 M
0 63 V
0 3897 R
0 -63 V
 stroke
6556 360 M
[ [(Times-Roman) 180.0 0.0 true true (18)]
] -60.0 MCshow
1.000 UL
LTb
810 540 M
6084 0 V
0 3960 V
-6084 0 V
810 540 L
 stroke
180 2520 M
currentpoint gsave translate 90 rotate 0 0 moveto
[ [(Times-Roman) 180.0 0.0 true true (Interprocessor Adjacency)]
] -60.0 MCshow
grestore
3852 90 M
[ [(Times-Roman) 180.0 0.0 true true (Refinement Step)]
] -60.0 MCshow
3852 4770 M
[ [(Times-Roman) 180.0 0.0 true true (Average Interprocessor Adjacency for 20 Processors)]
] -60.0 MCshow
1.000 UP
1.000 UL
LT0
6110 1294 M
[ [(Times-Roman) 180.0 0.0 true true (RCB)]
] -60.0 MRshow
6218 1294 M
495 0 V
810 2109 M
338 117 V
338 298 V
338 120 V
338 -41 V
338 41 V
338 0 V
338 -18 V
338 0 V
338 0 V
338 -121 V
338 0 V
338 0 V
338 19 V
338 -117 V
338 139 V
338 -22 V
338 22 V
338 -60 V
810 2109 Pls
1148 2226 Pls
1486 2524 Pls
1824 2644 Pls
2162 2603 Pls
2500 2644 Pls
2838 2644 Pls
3176 2626 Pls
3514 2626 Pls
3852 2626 Pls
4190 2505 Pls
4528 2505 Pls
4866 2505 Pls
5204 2524 Pls
5542 2407 Pls
5880 2546 Pls
6218 2524 Pls
6556 2546 Pls
6894 2486 Pls
6465 1294 Pls
1.000 UP
1.000 UL
LT1
6110 1114 M
[ [(Times-Roman) 180.0 0.0 true true (RCB x-cut)]
] -60.0 MRshow
6218 1114 M
495 0 V
810 3022 M
338 -80 V
338 279 V
338 336 V
338 -60 V
338 -19 V
338 19 V
338 -19 V
338 -42 V
338 0 V
338 0 V
338 0 V
338 0 V
338 0 V
338 23 V
338 0 V
338 0 V
338 0 V
338 0 V
810 3022 Crs
1148 2942 Crs
1486 3221 Crs
1824 3557 Crs
2162 3497 Crs
2500 3478 Crs
2838 3497 Crs
3176 3478 Crs
3514 3436 Crs
3852 3436 Crs
4190 3436 Crs
4528 3436 Crs
4866 3436 Crs
5204 3436 Crs
5542 3459 Crs
5880 3459 Crs
6218 3459 Crs
6556 3459 Crs
6894 3459 Crs
6465 1114 Crs
1.000 UP
1.000 UL
LT2
6110 934 M
[ [(Times-Roman) 180.0 0.0 true true (RCB y-cut)]
] -60.0 MRshow
6218 934 M
495 0 V
810 4093 M
338 60 V
338 -177 V
338 37 V
338 19 V
338 -19 V
338 0 V
338 42 V
338 -23 V
338 23 V
338 -42 V
338 0 V
338 42 V
338 -23 V
338 -19 V
338 0 V
338 0 V
338 0 V
338 0 V
810 4093 Star
1148 4153 Star
1486 3976 Star
1824 4013 Star
2162 4032 Star
2500 4013 Star
2838 4013 Star
3176 4055 Star
3514 4032 Star
3852 4055 Star
4190 4013 Star
4528 4013 Star
4866 4055 Star
5204 4032 Star
5542 4013 Star
5880 4013 Star
6218 4013 Star
6556 4013 Star
6894 4013 Star
6465 934 Star
1.000 UP
1.000 UL
LT3
6110 754 M
[ [(Times-Roman) 180.0 0.0 true true (RCB z-cut)]
] -60.0 MRshow
6218 754 M
495 0 V
810 1573 M
338 1547 V
338 200 V
338 -317 V
338 0 V
338 79 V
338 -23 V
338 0 V
338 0 V
338 0 V
338 -79 V
338 -56 V
338 -61 V
338 -19 V
338 0 V
338 -22 V
338 22 V
338 -41 V
338 -19 V
810 1573 Box
1148 3120 Box
1486 3320 Box
1824 3003 Box
2162 3003 Box
2500 3082 Box
2838 3059 Box
3176 3059 Box
3514 3059 Box
3852 3059 Box
4190 2980 Box
4528 2924 Box
4866 2863 Box
5204 2844 Box
5542 2844 Box
5880 2822 Box
6218 2844 Box
6556 2803 Box
6894 2784 Box
6465 754 Box
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Times-Roman

%%EndDocument
 @endspecial 51523 17422 V 866 34703 V 1553 34222 a @beginspecial
50 @llx 50 @lly 410 @urx 302 @ury 2160 @rwi @setspecial
%%BeginDocument: graphs/rcbAllCuts/partition/max_proc_adj_8.eps
%!PS-Adobe-2.0 EPSF-2.0
%%Title: max_proc_adj_8.eps
%%Creator: gnuplot 3.7 patchlevel 1
%%CreationDate: Fri Aug 16 14:35:29 2002
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 410 302
%%Orientation: Portrait
%%EndComments
/gnudict 256 dict def
gnudict begin
/Color false def
/Solid false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
/vshift -60 def
/dl {10 mul} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow { currentpoint stroke M
  0 vshift R show } def
/Rshow { currentpoint stroke M
  dup stringwidth pop neg vshift R show } def
/Cshow { currentpoint stroke M
  dup stringwidth pop -2 div vshift R show } def
/UP { dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def } def
/DL { Color {setrgbcolor Solid {pop []} if 0 setdash }
 {pop pop pop Solid {pop []} if 0 setdash} ifelse } def
/BL { stroke userlinewidth 2 mul setlinewidth } def
/AL { stroke userlinewidth 2 div setlinewidth } def
/UL { dup gnulinewidth mul /userlinewidth exch def
      10 mul /udl exch def } def
/PL { stroke userlinewidth setlinewidth } def
/LTb { BL [] 0 0 0 DL } def
/LTa { AL [1 udl mul 2 udl mul] 0 setdash 0 0 0 setrgbcolor } def
/LT0 { PL [] 1 0 0 DL } def
/LT1 { PL [4 dl 2 dl] 0 1 0 DL } def
/LT2 { PL [2 dl 3 dl] 0 0 1 DL } def
/LT3 { PL [1 dl 1.5 dl] 1 0 1 DL } def
/LT4 { PL [5 dl 2 dl 1 dl 2 dl] 0 1 1 DL } def
/LT5 { PL [4 dl 3 dl 1 dl 3 dl] 1 1 0 DL } def
/LT6 { PL [2 dl 2 dl 2 dl 4 dl] 0 0 0 DL } def
/LT7 { PL [2 dl 2 dl 2 dl 2 dl 2 dl 4 dl] 1 0.3 0 DL } def
/LT8 { PL [2 dl 2 dl 2 dl 2 dl 2 dl 2 dl 2 dl 4 dl] 0.5 0.5 0.5 DL } def
/Pnt { stroke [] 0 setdash
   gsave 1 setlinecap M 0 0 V stroke grestore } def
/Dia { stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt } def
/Pls { stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
  } def
/Box { stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt } def
/Crs { stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke } def
/TriU { stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt  } def
/Star { 2 copy Pls Crs } def
/BoxF { stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V  hpt2 0 V  0 vpt2 V
  hpt2 neg 0 V  closepath fill } def
/TriUF { stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill } def
/TriD { stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt  } def
/TriDF { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF { stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill } def
/Pent { stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt } def
/PentF { stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore } def
/Circle { stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt } def
/CircleF { stroke [] 0 setdash hpt 0 360 arc fill } def
/C0 { BL [] 0 setdash 2 copy moveto vpt 90 450  arc } bind def
/C1 { BL [] 0 setdash 2 copy        moveto
       2 copy  vpt 0 90 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C2 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 90 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C3 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C4 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 180 270 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C5 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 90 arc
       2 copy moveto
       2 copy  vpt 180 270 arc closepath fill
               vpt 0 360 arc } bind def
/C6 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 90 270 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C7 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 0 270 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C8 { BL [] 0 setdash 2 copy moveto
      2 copy vpt 270 360 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C9 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 270 450 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C10 { BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
       2 copy moveto
       2 copy vpt 90 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C11 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 180 arc closepath fill
       2 copy moveto
       2 copy  vpt 270 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C12 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 180 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C13 { BL [] 0 setdash  2 copy moveto
       2 copy  vpt 0 90 arc closepath fill
       2 copy moveto
       2 copy  vpt 180 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C14 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 90 360 arc closepath fill
               vpt 0 360 arc } bind def
/C15 { BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/Rec   { newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
       neg 0 rlineto closepath } bind def
/Square { dup Rec } bind def
/Bsquare { vpt sub exch vpt sub exch vpt2 Square } bind def
/S0 { BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare } bind def
/S1 { BL [] 0 setdash 2 copy vpt Square fill Bsquare } bind def
/S2 { BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare } bind def
/S3 { BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare } bind def
/S4 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare } bind def
/S5 { BL [] 0 setdash 2 copy 2 copy vpt Square fill
       exch vpt sub exch vpt sub vpt Square fill Bsquare } bind def
/S6 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare } bind def
/S7 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
       2 copy vpt Square fill
       Bsquare } bind def
/S8 { BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare } bind def
/S9 { BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare } bind def
/S10 { BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
       Bsquare } bind def
/S11 { BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
       Bsquare } bind def
/S12 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare } bind def
/S13 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
       2 copy vpt Square fill Bsquare } bind def
/S14 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
       2 copy exch vpt sub exch vpt Square fill Bsquare } bind def
/S15 { BL [] 0 setdash 2 copy Bsquare fill Bsquare } bind def
/D0 { gsave translate 45 rotate 0 0 S0 stroke grestore } bind def
/D1 { gsave translate 45 rotate 0 0 S1 stroke grestore } bind def
/D2 { gsave translate 45 rotate 0 0 S2 stroke grestore } bind def
/D3 { gsave translate 45 rotate 0 0 S3 stroke grestore } bind def
/D4 { gsave translate 45 rotate 0 0 S4 stroke grestore } bind def
/D5 { gsave translate 45 rotate 0 0 S5 stroke grestore } bind def
/D6 { gsave translate 45 rotate 0 0 S6 stroke grestore } bind def
/D7 { gsave translate 45 rotate 0 0 S7 stroke grestore } bind def
/D8 { gsave translate 45 rotate 0 0 S8 stroke grestore } bind def
/D9 { gsave translate 45 rotate 0 0 S9 stroke grestore } bind def
/D10 { gsave translate 45 rotate 0 0 S10 stroke grestore } bind def
/D11 { gsave translate 45 rotate 0 0 S11 stroke grestore } bind def
/D12 { gsave translate 45 rotate 0 0 S12 stroke grestore } bind def
/D13 { gsave translate 45 rotate 0 0 S13 stroke grestore } bind def
/D14 { gsave translate 45 rotate 0 0 S14 stroke grestore } bind def
/D15 { gsave translate 45 rotate 0 0 S15 stroke grestore } bind def
/DiaE { stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke } def
/BoxE { stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke } def
/TriUE { stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke } def
/TriDE { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke } def
/PentE { stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore } def
/CircE { stroke [] 0 setdash 
  hpt 0 360 arc stroke } def
/Opaque { gsave closepath 1 setgray fill grestore 0 setgray closepath } def
/DiaW { stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke } def
/BoxW { stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke } def
/TriUW { stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke } def
/TriDW { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke } def
/PentW { stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore } def
/CircW { stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke } def
/BoxFill { gsave Rec 1 setgray fill grestore } def
/MFshow {{dup dup 0 get findfont exch 1 get scalefont setfont
     [ currentpoint ] exch dup 2 get 0 exch rmoveto dup dup 5 get exch 4 get
     {show} {stringwidth pop 0 rmoveto}ifelse dup 3 get
     {2 get neg 0 exch rmoveto pop} {pop aload pop moveto}ifelse} forall} bind def
/MFwidth {0 exch {dup 3 get{dup dup 0 get findfont exch 1 get scalefont setfont
      5 get stringwidth pop add}
    {pop} ifelse} forall} bind def
/MLshow { currentpoint stroke M
  0 exch R MFshow } bind def
/MRshow { currentpoint stroke M
  exch dup MFwidth neg 3 -1 roll R MFshow } def
/MCshow { currentpoint stroke M
  exch dup MFwidth -2 div 3 -1 roll R MFshow } def
end
%%EndProlog
gnudict begin
gsave
50 50 translate
0.050 0.050 scale
0 setgray
newpath
(Times-Roman) findfont 180 scalefont setfont
1.000 UL
LTb
810 540 M
63 0 V
6021 0 R
-63 0 V
 stroke
702 540 M
[ [(Times-Roman) 180.0 0.0 true true (0)]
] -60.0 MRshow
810 1294 M
63 0 V
6021 0 R
-63 0 V
 stroke
702 1294 M
[ [(Times-Roman) 180.0 0.0 true true (20)]
] -60.0 MRshow
810 2049 M
63 0 V
6021 0 R
-63 0 V
 stroke
702 2049 M
[ [(Times-Roman) 180.0 0.0 true true (40)]
] -60.0 MRshow
810 2803 M
63 0 V
6021 0 R
-63 0 V
 stroke
702 2803 M
[ [(Times-Roman) 180.0 0.0 true true (60)]
] -60.0 MRshow
810 3557 M
63 0 V
6021 0 R
-63 0 V
 stroke
702 3557 M
[ [(Times-Roman) 180.0 0.0 true true (80)]
] -60.0 MRshow
810 4311 M
63 0 V
6021 0 R
-63 0 V
 stroke
702 4311 M
[ [(Times-Roman) 180.0 0.0 true true (100)]
] -60.0 MRshow
1148 540 M
0 63 V
0 3897 R
0 -63 V
 stroke
1148 360 M
[ [(Times-Roman) 180.0 0.0 true true (2)]
] -60.0 MCshow
1824 540 M
0 63 V
0 3897 R
0 -63 V
 stroke
1824 360 M
[ [(Times-Roman) 180.0 0.0 true true (4)]
] -60.0 MCshow
2500 540 M
0 63 V
0 3897 R
0 -63 V
 stroke
2500 360 M
[ [(Times-Roman) 180.0 0.0 true true (6)]
] -60.0 MCshow
3176 540 M
0 63 V
0 3897 R
0 -63 V
 stroke
3176 360 M
[ [(Times-Roman) 180.0 0.0 true true (8)]
] -60.0 MCshow
3852 540 M
0 63 V
0 3897 R
0 -63 V
 stroke
3852 360 M
[ [(Times-Roman) 180.0 0.0 true true (10)]
] -60.0 MCshow
4528 540 M
0 63 V
0 3897 R
0 -63 V
 stroke
4528 360 M
[ [(Times-Roman) 180.0 0.0 true true (12)]
] -60.0 MCshow
5204 540 M
0 63 V
0 3897 R
0 -63 V
 stroke
5204 360 M
[ [(Times-Roman) 180.0 0.0 true true (14)]
] -60.0 MCshow
5880 540 M
0 63 V
0 3897 R
0 -63 V
 stroke
5880 360 M
[ [(Times-Roman) 180.0 0.0 true true (16)]
] -60.0 MCshow
6556 540 M
0 63 V
0 3897 R
0 -63 V
 stroke
6556 360 M
[ [(Times-Roman) 180.0 0.0 true true (18)]
] -60.0 MCshow
1.000 UL
LTb
810 540 M
6084 0 V
0 3960 V
-6084 0 V
810 540 L
 stroke
180 2520 M
currentpoint gsave translate 90 rotate 0 0 moveto
[ [(Times-Roman) 180.0 0.0 true true (Interprocessor Adjacency)]
] -60.0 MCshow
grestore
3852 90 M
[ [(Times-Roman) 180.0 0.0 true true (Refinement Step)]
] -60.0 MCshow
3852 4770 M
[ [(Times-Roman) 180.0 0.0 true true (Maximum Interprocessor Adjacency for 8 Processors)]
] -60.0 MCshow
1.000 UP
1.000 UL
LT0
6110 1294 M
[ [(Times-Roman) 180.0 0.0 true true (RCB)]
] -60.0 MRshow
6218 1294 M
495 0 V
810 4311 M
338 0 V
338 0 V
338 0 V
338 0 V
338 0 V
338 0 V
338 0 V
338 0 V
338 0 V
338 0 V
338 0 V
338 0 V
338 0 V
338 0 V
338 0 V
338 0 V
338 0 V
338 0 V
810 4311 Pls
1148 4311 Pls
1486 4311 Pls
1824 4311 Pls
2162 4311 Pls
2500 4311 Pls
2838 4311 Pls
3176 4311 Pls
3514 4311 Pls
3852 4311 Pls
4190 4311 Pls
4528 4311 Pls
4866 4311 Pls
5204 4311 Pls
5542 4311 Pls
5880 4311 Pls
6218 4311 Pls
6556 4311 Pls
6894 4311 Pls
6465 1294 Pls
1.000 UP
1.000 UL
LT1
6110 1114 M
[ [(Times-Roman) 180.0 0.0 true true (RCB x-cut)]
] -60.0 MRshow
6218 1114 M
495 0 V
810 4311 M
338 0 V
338 0 V
338 0 V
338 0 V
338 0 V
338 0 V
338 0 V
338 0 V
338 0 V
338 0 V
338 0 V
338 0 V
338 0 V
338 0 V
338 0 V
338 0 V
338 0 V
338 0 V
810 4311 Crs
1148 4311 Crs
1486 4311 Crs
1824 4311 Crs
2162 4311 Crs
2500 4311 Crs
2838 4311 Crs
3176 4311 Crs
3514 4311 Crs
3852 4311 Crs
4190 4311 Crs
4528 4311 Crs
4866 4311 Crs
5204 4311 Crs
5542 4311 Crs
5880 4311 Crs
6218 4311 Crs
6556 4311 Crs
6894 4311 Crs
6465 1114 Crs
1.000 UP
1.000 UL
LT2
6110 934 M
[ [(Times-Roman) 180.0 0.0 true true (RCB y-cut)]
] -60.0 MRshow
6218 934 M
495 0 V
810 4311 M
338 0 V
338 0 V
338 0 V
338 0 V
338 0 V
338 0 V
338 0 V
338 0 V
338 0 V
338 0 V
338 0 V
338 0 V
338 0 V
338 0 V
338 0 V
338 0 V
338 0 V
338 0 V
810 4311 Star
1148 4311 Star
1486 4311 Star
1824 4311 Star
2162 4311 Star
2500 4311 Star
2838 4311 Star
3176 4311 Star
3514 4311 Star
3852 4311 Star
4190 4311 Star
4528 4311 Star
4866 4311 Star
5204 4311 Star
5542 4311 Star
5880 4311 Star
6218 4311 Star
6556 4311 Star
6894 4311 Star
6465 934 Star
1.000 UP
1.000 UL
LT3
6110 754 M
[ [(Times-Roman) 180.0 0.0 true true (RCB z-cut)]
] -60.0 MRshow
6218 754 M
495 0 V
810 2693 M
338 1618 V
338 0 V
338 0 V
338 0 V
338 0 V
338 0 V
338 0 V
338 0 V
338 0 V
338 0 V
338 0 V
338 0 V
338 0 V
338 -539 V
338 0 V
338 0 V
338 0 V
338 0 V
810 2693 Box
1148 4311 Box
1486 4311 Box
1824 4311 Box
2162 4311 Box
2500 4311 Box
2838 4311 Box
3176 4311 Box
3514 4311 Box
3852 4311 Box
4190 4311 Box
4528 4311 Box
4866 4311 Box
5204 4311 Box
5542 3772 Box
5880 3772 Box
6218 3772 Box
6556 3772 Box
6894 3772 Box
6465 754 Box
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Times-Roman

%%EndDocument
 @endspecial 25328 w @beginspecial 50 @llx 50 @lly 410
@urx 302 @ury 2160 @rwi @setspecial
%%BeginDocument: graphs/rcbAllCuts/partition/max_proc_adj_20.eps
%!PS-Adobe-2.0 EPSF-2.0
%%Title: max_proc_adj_20.eps
%%Creator: gnuplot 3.7 patchlevel 1
%%CreationDate: Fri Aug 16 14:35:22 2002
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 410 302
%%Orientation: Portrait
%%EndComments
/gnudict 256 dict def
gnudict begin
/Color false def
/Solid false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
/vshift -60 def
/dl {10 mul} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow { currentpoint stroke M
  0 vshift R show } def
/Rshow { currentpoint stroke M
  dup stringwidth pop neg vshift R show } def
/Cshow { currentpoint stroke M
  dup stringwidth pop -2 div vshift R show } def
/UP { dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def } def
/DL { Color {setrgbcolor Solid {pop []} if 0 setdash }
 {pop pop pop Solid {pop []} if 0 setdash} ifelse } def
/BL { stroke userlinewidth 2 mul setlinewidth } def
/AL { stroke userlinewidth 2 div setlinewidth } def
/UL { dup gnulinewidth mul /userlinewidth exch def
      10 mul /udl exch def } def
/PL { stroke userlinewidth setlinewidth } def
/LTb { BL [] 0 0 0 DL } def
/LTa { AL [1 udl mul 2 udl mul] 0 setdash 0 0 0 setrgbcolor } def
/LT0 { PL [] 1 0 0 DL } def
/LT1 { PL [4 dl 2 dl] 0 1 0 DL } def
/LT2 { PL [2 dl 3 dl] 0 0 1 DL } def
/LT3 { PL [1 dl 1.5 dl] 1 0 1 DL } def
/LT4 { PL [5 dl 2 dl 1 dl 2 dl] 0 1 1 DL } def
/LT5 { PL [4 dl 3 dl 1 dl 3 dl] 1 1 0 DL } def
/LT6 { PL [2 dl 2 dl 2 dl 4 dl] 0 0 0 DL } def
/LT7 { PL [2 dl 2 dl 2 dl 2 dl 2 dl 4 dl] 1 0.3 0 DL } def
/LT8 { PL [2 dl 2 dl 2 dl 2 dl 2 dl 2 dl 2 dl 4 dl] 0.5 0.5 0.5 DL } def
/Pnt { stroke [] 0 setdash
   gsave 1 setlinecap M 0 0 V stroke grestore } def
/Dia { stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt } def
/Pls { stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
  } def
/Box { stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt } def
/Crs { stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke } def
/TriU { stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt  } def
/Star { 2 copy Pls Crs } def
/BoxF { stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V  hpt2 0 V  0 vpt2 V
  hpt2 neg 0 V  closepath fill } def
/TriUF { stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill } def
/TriD { stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt  } def
/TriDF { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF { stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill } def
/Pent { stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt } def
/PentF { stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore } def
/Circle { stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt } def
/CircleF { stroke [] 0 setdash hpt 0 360 arc fill } def
/C0 { BL [] 0 setdash 2 copy moveto vpt 90 450  arc } bind def
/C1 { BL [] 0 setdash 2 copy        moveto
       2 copy  vpt 0 90 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C2 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 90 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C3 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C4 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 180 270 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C5 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 90 arc
       2 copy moveto
       2 copy  vpt 180 270 arc closepath fill
               vpt 0 360 arc } bind def
/C6 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 90 270 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C7 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 0 270 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C8 { BL [] 0 setdash 2 copy moveto
      2 copy vpt 270 360 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C9 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 270 450 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C10 { BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
       2 copy moveto
       2 copy vpt 90 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C11 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 180 arc closepath fill
       2 copy moveto
       2 copy  vpt 270 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C12 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 180 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C13 { BL [] 0 setdash  2 copy moveto
       2 copy  vpt 0 90 arc closepath fill
       2 copy moveto
       2 copy  vpt 180 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C14 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 90 360 arc closepath fill
               vpt 0 360 arc } bind def
/C15 { BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/Rec   { newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
       neg 0 rlineto closepath } bind def
/Square { dup Rec } bind def
/Bsquare { vpt sub exch vpt sub exch vpt2 Square } bind def
/S0 { BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare } bind def
/S1 { BL [] 0 setdash 2 copy vpt Square fill Bsquare } bind def
/S2 { BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare } bind def
/S3 { BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare } bind def
/S4 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare } bind def
/S5 { BL [] 0 setdash 2 copy 2 copy vpt Square fill
       exch vpt sub exch vpt sub vpt Square fill Bsquare } bind def
/S6 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare } bind def
/S7 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
       2 copy vpt Square fill
       Bsquare } bind def
/S8 { BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare } bind def
/S9 { BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare } bind def
/S10 { BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
       Bsquare } bind def
/S11 { BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
       Bsquare } bind def
/S12 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare } bind def
/S13 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
       2 copy vpt Square fill Bsquare } bind def
/S14 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
       2 copy exch vpt sub exch vpt Square fill Bsquare } bind def
/S15 { BL [] 0 setdash 2 copy Bsquare fill Bsquare } bind def
/D0 { gsave translate 45 rotate 0 0 S0 stroke grestore } bind def
/D1 { gsave translate 45 rotate 0 0 S1 stroke grestore } bind def
/D2 { gsave translate 45 rotate 0 0 S2 stroke grestore } bind def
/D3 { gsave translate 45 rotate 0 0 S3 stroke grestore } bind def
/D4 { gsave translate 45 rotate 0 0 S4 stroke grestore } bind def
/D5 { gsave translate 45 rotate 0 0 S5 stroke grestore } bind def
/D6 { gsave translate 45 rotate 0 0 S6 stroke grestore } bind def
/D7 { gsave translate 45 rotate 0 0 S7 stroke grestore } bind def
/D8 { gsave translate 45 rotate 0 0 S8 stroke grestore } bind def
/D9 { gsave translate 45 rotate 0 0 S9 stroke grestore } bind def
/D10 { gsave translate 45 rotate 0 0 S10 stroke grestore } bind def
/D11 { gsave translate 45 rotate 0 0 S11 stroke grestore } bind def
/D12 { gsave translate 45 rotate 0 0 S12 stroke grestore } bind def
/D13 { gsave translate 45 rotate 0 0 S13 stroke grestore } bind def
/D14 { gsave translate 45 rotate 0 0 S14 stroke grestore } bind def
/D15 { gsave translate 45 rotate 0 0 S15 stroke grestore } bind def
/DiaE { stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke } def
/BoxE { stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke } def
/TriUE { stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke } def
/TriDE { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke } def
/PentE { stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore } def
/CircE { stroke [] 0 setdash 
  hpt 0 360 arc stroke } def
/Opaque { gsave closepath 1 setgray fill grestore 0 setgray closepath } def
/DiaW { stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke } def
/BoxW { stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke } def
/TriUW { stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke } def
/TriDW { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke } def
/PentW { stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore } def
/CircW { stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke } def
/BoxFill { gsave Rec 1 setgray fill grestore } def
/MFshow {{dup dup 0 get findfont exch 1 get scalefont setfont
     [ currentpoint ] exch dup 2 get 0 exch rmoveto dup dup 5 get exch 4 get
     {show} {stringwidth pop 0 rmoveto}ifelse dup 3 get
     {2 get neg 0 exch rmoveto pop} {pop aload pop moveto}ifelse} forall} bind def
/MFwidth {0 exch {dup 3 get{dup dup 0 get findfont exch 1 get scalefont setfont
      5 get stringwidth pop add}
    {pop} ifelse} forall} bind def
/MLshow { currentpoint stroke M
  0 exch R MFshow } bind def
/MRshow { currentpoint stroke M
  exch dup MFwidth neg 3 -1 roll R MFshow } def
/MCshow { currentpoint stroke M
  exch dup MFwidth -2 div 3 -1 roll R MFshow } def
end
%%EndProlog
gnudict begin
gsave
50 50 translate
0.050 0.050 scale
0 setgray
newpath
(Times-Roman) findfont 180 scalefont setfont
1.000 UL
LTb
810 540 M
63 0 V
6021 0 R
-63 0 V
 stroke
702 540 M
[ [(Times-Roman) 180.0 0.0 true true (0)]
] -60.0 MRshow
810 1294 M
63 0 V
6021 0 R
-63 0 V
 stroke
702 1294 M
[ [(Times-Roman) 180.0 0.0 true true (20)]
] -60.0 MRshow
810 2049 M
63 0 V
6021 0 R
-63 0 V
 stroke
702 2049 M
[ [(Times-Roman) 180.0 0.0 true true (40)]
] -60.0 MRshow
810 2803 M
63 0 V
6021 0 R
-63 0 V
 stroke
702 2803 M
[ [(Times-Roman) 180.0 0.0 true true (60)]
] -60.0 MRshow
810 3557 M
63 0 V
6021 0 R
-63 0 V
 stroke
702 3557 M
[ [(Times-Roman) 180.0 0.0 true true (80)]
] -60.0 MRshow
810 4311 M
63 0 V
6021 0 R
-63 0 V
 stroke
702 4311 M
[ [(Times-Roman) 180.0 0.0 true true (100)]
] -60.0 MRshow
1148 540 M
0 63 V
0 3897 R
0 -63 V
 stroke
1148 360 M
[ [(Times-Roman) 180.0 0.0 true true (2)]
] -60.0 MCshow
1824 540 M
0 63 V
0 3897 R
0 -63 V
 stroke
1824 360 M
[ [(Times-Roman) 180.0 0.0 true true (4)]
] -60.0 MCshow
2500 540 M
0 63 V
0 3897 R
0 -63 V
 stroke
2500 360 M
[ [(Times-Roman) 180.0 0.0 true true (6)]
] -60.0 MCshow
3176 540 M
0 63 V
0 3897 R
0 -63 V
 stroke
3176 360 M
[ [(Times-Roman) 180.0 0.0 true true (8)]
] -60.0 MCshow
3852 540 M
0 63 V
0 3897 R
0 -63 V
 stroke
3852 360 M
[ [(Times-Roman) 180.0 0.0 true true (10)]
] -60.0 MCshow
4528 540 M
0 63 V
0 3897 R
0 -63 V
 stroke
4528 360 M
[ [(Times-Roman) 180.0 0.0 true true (12)]
] -60.0 MCshow
5204 540 M
0 63 V
0 3897 R
0 -63 V
 stroke
5204 360 M
[ [(Times-Roman) 180.0 0.0 true true (14)]
] -60.0 MCshow
5880 540 M
0 63 V
0 3897 R
0 -63 V
 stroke
5880 360 M
[ [(Times-Roman) 180.0 0.0 true true (16)]
] -60.0 MCshow
6556 540 M
0 63 V
0 3897 R
0 -63 V
 stroke
6556 360 M
[ [(Times-Roman) 180.0 0.0 true true (18)]
] -60.0 MCshow
1.000 UL
LTb
810 540 M
6084 0 V
0 3960 V
-6084 0 V
810 540 L
 stroke
180 2520 M
currentpoint gsave translate 90 rotate 0 0 moveto
[ [(Times-Roman) 180.0 0.0 true true (Interprocessor Adjacency)]
] -60.0 MCshow
grestore
3852 90 M
[ [(Times-Roman) 180.0 0.0 true true (Refinement Step)]
] -60.0 MCshow
3852 4770 M
[ [(Times-Roman) 180.0 0.0 true true (Maximum Interprocessor Adjacency for 20 Processors)]
] -60.0 MCshow
1.000 UP
1.000 UL
LT0
6110 1294 M
[ [(Times-Roman) 180.0 0.0 true true (RCB)]
] -60.0 MRshow
6218 1294 M
495 0 V
810 3120 M
338 200 V
338 396 V
338 0 V
338 0 V
338 -200 V
338 0 V
338 0 V
338 0 V
338 0 V
338 0 V
338 0 V
338 0 V
338 0 V
338 -396 V
338 396 V
338 0 V
338 0 V
338 0 V
810 3120 Pls
1148 3320 Pls
1486 3716 Pls
1824 3716 Pls
2162 3716 Pls
2500 3516 Pls
2838 3516 Pls
3176 3516 Pls
3514 3516 Pls
3852 3516 Pls
4190 3516 Pls
4528 3516 Pls
4866 3516 Pls
5204 3516 Pls
5542 3120 Pls
5880 3516 Pls
6218 3516 Pls
6556 3516 Pls
6894 3516 Pls
6465 1294 Pls
1.000 UP
1.000 UL
LT1
6110 1114 M
[ [(Times-Roman) 180.0 0.0 true true (RCB x-cut)]
] -60.0 MRshow
6218 1114 M
495 0 V
810 4112 M
338 0 V
338 199 V
338 0 V
338 0 V
338 0 V
338 0 V
338 0 V
338 0 V
338 0 V
338 0 V
338 0 V
338 0 V
338 0 V
338 0 V
338 0 V
338 0 V
338 0 V
338 0 V
810 4112 Crs
1148 4112 Crs
1486 4311 Crs
1824 4311 Crs
2162 4311 Crs
2500 4311 Crs
2838 4311 Crs
3176 4311 Crs
3514 4311 Crs
3852 4311 Crs
4190 4311 Crs
4528 4311 Crs
4866 4311 Crs
5204 4311 Crs
5542 4311 Crs
5880 4311 Crs
6218 4311 Crs
6556 4311 Crs
6894 4311 Crs
6465 1114 Crs
1.000 UP
1.000 UL
LT2
6110 934 M
[ [(Times-Roman) 180.0 0.0 true true (RCB y-cut)]
] -60.0 MRshow
6218 934 M
495 0 V
810 4311 M
338 0 V
338 0 V
338 0 V
338 0 V
338 0 V
338 0 V
338 0 V
338 0 V
338 0 V
338 0 V
338 0 V
338 0 V
338 0 V
338 0 V
338 0 V
338 0 V
338 0 V
338 0 V
810 4311 Star
1148 4311 Star
1486 4311 Star
1824 4311 Star
2162 4311 Star
2500 4311 Star
2838 4311 Star
3176 4311 Star
3514 4311 Star
3852 4311 Star
4190 4311 Star
4528 4311 Star
4866 4311 Star
5204 4311 Star
5542 4311 Star
5880 4311 Star
6218 4311 Star
6556 4311 Star
6894 4311 Star
6465 934 Star
1.000 UP
1.000 UL
LT3
6110 754 M
[ [(Times-Roman) 180.0 0.0 true true (RCB z-cut)]
] -60.0 MRshow
6218 754 M
495 0 V
810 2328 M
338 1388 V
338 199 V
338 -199 V
338 0 V
338 0 V
338 0 V
338 0 V
338 0 V
338 0 V
338 0 V
338 -200 V
338 0 V
338 0 V
338 0 V
338 0 V
338 0 V
338 0 V
338 0 V
810 2328 Box
1148 3716 Box
1486 3915 Box
1824 3716 Box
2162 3716 Box
2500 3716 Box
2838 3716 Box
3176 3716 Box
3514 3716 Box
3852 3716 Box
4190 3716 Box
4528 3516 Box
4866 3516 Box
5204 3516 Box
5542 3516 Box
5880 3516 Box
6218 3516 Box
6556 3516 Box
6894 3516 Box
6465 754 Box
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Times-Roman

%%EndDocument
 @endspecial 51523 34703 V 888 34748 50657 45 v 0 36962
a Fk(Figure)360 b(13:)542 b Fj(ad)-145 b(j)7982 37161
y Fb(A)9102 36962 y Fk(\(top\))359 b(and)g Fj(ad)-145
b(j)16559 37161 y Fb(M)17972 36962 y Fk(\(b)36 b(ottom\))359
b(at)h(eac)-36 b(h)359 b(adaptiv)-36 b(e)360 b(re\257nemen)-36
b(t)359 b(step)g(for)h(the)f(p)36 b(erforated)0 38567
y(sho)g(c)-36 b(k)561 b(tub)36 b(e)560 b(on)h(8)g(\(left\))g(and)f(20)i
(\(righ)-36 b(t\))560 b(pro)36 b(cesses.)960 b(R)-36
b(CB)561 b Fj(z)59 b Fk(-cut)561 b(ac)-36 b(hiev)g(ed)561
b(the)f(b)36 b(est)560 b Fj(ad)-145 b(j)47914 38766 y
Fb(A)49235 38567 y Fk(for)562 b(8)0 40172 y(pro)36 b(cesses,)434
b(while)g(the)f(original)i(R)-36 b(CB)434 b(w)-36 b(as)434
b(b)36 b(est)434 b(in)f(this)g(measure)h(for)g(20)g(pro)36
b(cesses.)p 888 41803 V 866 59084 45 17282 v 1553 58603
a @beginspecial 50 @llx 50 @lly 410 @urx 302 @ury 2160
@rwi @setspecial
%%BeginDocument: graphs/rcbAllCuts/times/total-times-8.eps
%!PS-Adobe-2.0 EPSF-2.0
%%Title: total-times-8.eps
%%Creator: gnuplot 3.7 patchlevel 1
%%CreationDate: Fri Aug 16 14:29:30 2002
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 410 302
%%Orientation: Portrait
%%EndComments
/gnudict 256 dict def
gnudict begin
/Color false def
/Solid false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
/vshift -60 def
/dl {10 mul} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow { currentpoint stroke M
  0 vshift R show } def
/Rshow { currentpoint stroke M
  dup stringwidth pop neg vshift R show } def
/Cshow { currentpoint stroke M
  dup stringwidth pop -2 div vshift R show } def
/UP { dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def } def
/DL { Color {setrgbcolor Solid {pop []} if 0 setdash }
 {pop pop pop Solid {pop []} if 0 setdash} ifelse } def
/BL { stroke userlinewidth 2 mul setlinewidth } def
/AL { stroke userlinewidth 2 div setlinewidth } def
/UL { dup gnulinewidth mul /userlinewidth exch def
      10 mul /udl exch def } def
/PL { stroke userlinewidth setlinewidth } def
/LTb { BL [] 0 0 0 DL } def
/LTa { AL [1 udl mul 2 udl mul] 0 setdash 0 0 0 setrgbcolor } def
/LT0 { PL [] 1 0 0 DL } def
/LT1 { PL [4 dl 2 dl] 0 1 0 DL } def
/LT2 { PL [2 dl 3 dl] 0 0 1 DL } def
/LT3 { PL [1 dl 1.5 dl] 1 0 1 DL } def
/LT4 { PL [5 dl 2 dl 1 dl 2 dl] 0 1 1 DL } def
/LT5 { PL [4 dl 3 dl 1 dl 3 dl] 1 1 0 DL } def
/LT6 { PL [2 dl 2 dl 2 dl 4 dl] 0 0 0 DL } def
/LT7 { PL [2 dl 2 dl 2 dl 2 dl 2 dl 4 dl] 1 0.3 0 DL } def
/LT8 { PL [2 dl 2 dl 2 dl 2 dl 2 dl 2 dl 2 dl 4 dl] 0.5 0.5 0.5 DL } def
/Pnt { stroke [] 0 setdash
   gsave 1 setlinecap M 0 0 V stroke grestore } def
/Dia { stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt } def
/Pls { stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
  } def
/Box { stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt } def
/Crs { stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke } def
/TriU { stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt  } def
/Star { 2 copy Pls Crs } def
/BoxF { stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V  hpt2 0 V  0 vpt2 V
  hpt2 neg 0 V  closepath fill } def
/TriUF { stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill } def
/TriD { stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt  } def
/TriDF { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF { stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill } def
/Pent { stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt } def
/PentF { stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore } def
/Circle { stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt } def
/CircleF { stroke [] 0 setdash hpt 0 360 arc fill } def
/C0 { BL [] 0 setdash 2 copy moveto vpt 90 450  arc } bind def
/C1 { BL [] 0 setdash 2 copy        moveto
       2 copy  vpt 0 90 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C2 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 90 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C3 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C4 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 180 270 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C5 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 90 arc
       2 copy moveto
       2 copy  vpt 180 270 arc closepath fill
               vpt 0 360 arc } bind def
/C6 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 90 270 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C7 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 0 270 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C8 { BL [] 0 setdash 2 copy moveto
      2 copy vpt 270 360 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C9 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 270 450 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C10 { BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
       2 copy moveto
       2 copy vpt 90 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C11 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 180 arc closepath fill
       2 copy moveto
       2 copy  vpt 270 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C12 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 180 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C13 { BL [] 0 setdash  2 copy moveto
       2 copy  vpt 0 90 arc closepath fill
       2 copy moveto
       2 copy  vpt 180 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C14 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 90 360 arc closepath fill
               vpt 0 360 arc } bind def
/C15 { BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/Rec   { newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
       neg 0 rlineto closepath } bind def
/Square { dup Rec } bind def
/Bsquare { vpt sub exch vpt sub exch vpt2 Square } bind def
/S0 { BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare } bind def
/S1 { BL [] 0 setdash 2 copy vpt Square fill Bsquare } bind def
/S2 { BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare } bind def
/S3 { BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare } bind def
/S4 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare } bind def
/S5 { BL [] 0 setdash 2 copy 2 copy vpt Square fill
       exch vpt sub exch vpt sub vpt Square fill Bsquare } bind def
/S6 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare } bind def
/S7 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
       2 copy vpt Square fill
       Bsquare } bind def
/S8 { BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare } bind def
/S9 { BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare } bind def
/S10 { BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
       Bsquare } bind def
/S11 { BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
       Bsquare } bind def
/S12 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare } bind def
/S13 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
       2 copy vpt Square fill Bsquare } bind def
/S14 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
       2 copy exch vpt sub exch vpt Square fill Bsquare } bind def
/S15 { BL [] 0 setdash 2 copy Bsquare fill Bsquare } bind def
/D0 { gsave translate 45 rotate 0 0 S0 stroke grestore } bind def
/D1 { gsave translate 45 rotate 0 0 S1 stroke grestore } bind def
/D2 { gsave translate 45 rotate 0 0 S2 stroke grestore } bind def
/D3 { gsave translate 45 rotate 0 0 S3 stroke grestore } bind def
/D4 { gsave translate 45 rotate 0 0 S4 stroke grestore } bind def
/D5 { gsave translate 45 rotate 0 0 S5 stroke grestore } bind def
/D6 { gsave translate 45 rotate 0 0 S6 stroke grestore } bind def
/D7 { gsave translate 45 rotate 0 0 S7 stroke grestore } bind def
/D8 { gsave translate 45 rotate 0 0 S8 stroke grestore } bind def
/D9 { gsave translate 45 rotate 0 0 S9 stroke grestore } bind def
/D10 { gsave translate 45 rotate 0 0 S10 stroke grestore } bind def
/D11 { gsave translate 45 rotate 0 0 S11 stroke grestore } bind def
/D12 { gsave translate 45 rotate 0 0 S12 stroke grestore } bind def
/D13 { gsave translate 45 rotate 0 0 S13 stroke grestore } bind def
/D14 { gsave translate 45 rotate 0 0 S14 stroke grestore } bind def
/D15 { gsave translate 45 rotate 0 0 S15 stroke grestore } bind def
/DiaE { stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke } def
/BoxE { stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke } def
/TriUE { stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke } def
/TriDE { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke } def
/PentE { stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore } def
/CircE { stroke [] 0 setdash 
  hpt 0 360 arc stroke } def
/Opaque { gsave closepath 1 setgray fill grestore 0 setgray closepath } def
/DiaW { stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke } def
/BoxW { stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke } def
/TriUW { stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke } def
/TriDW { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke } def
/PentW { stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore } def
/CircW { stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke } def
/BoxFill { gsave Rec 1 setgray fill grestore } def
/MFshow {{dup dup 0 get findfont exch 1 get scalefont setfont
     [ currentpoint ] exch dup 2 get 0 exch rmoveto dup dup 5 get exch 4 get
     {show} {stringwidth pop 0 rmoveto}ifelse dup 3 get
     {2 get neg 0 exch rmoveto pop} {pop aload pop moveto}ifelse} forall} bind def
/MFwidth {0 exch {dup 3 get{dup dup 0 get findfont exch 1 get scalefont setfont
      5 get stringwidth pop add}
    {pop} ifelse} forall} bind def
/MLshow { currentpoint stroke M
  0 exch R MFshow } bind def
/MRshow { currentpoint stroke M
  exch dup MFwidth neg 3 -1 roll R MFshow } def
/MCshow { currentpoint stroke M
  exch dup MFwidth -2 div 3 -1 roll R MFshow } def
end
%%EndProlog
gnudict begin
gsave
50 50 translate
0.050 0.050 scale
0 setgray
newpath
(Times-Roman) findfont 180 scalefont setfont
1.000 UL
LTb
918 540 M
63 0 V
5913 0 R
-63 0 V
 stroke
810 540 M
[ [(Times-Roman) 180.0 0.0 true true (0)]
] -60.0 MRshow
918 1200 M
63 0 V
5913 0 R
-63 0 V
 stroke
810 1200 M
[ [(Times-Roman) 180.0 0.0 true true (1000)]
] -60.0 MRshow
918 1860 M
63 0 V
5913 0 R
-63 0 V
 stroke
810 1860 M
[ [(Times-Roman) 180.0 0.0 true true (2000)]
] -60.0 MRshow
918 2520 M
63 0 V
5913 0 R
-63 0 V
 stroke
810 2520 M
[ [(Times-Roman) 180.0 0.0 true true (3000)]
] -60.0 MRshow
918 3180 M
63 0 V
5913 0 R
-63 0 V
 stroke
810 3180 M
[ [(Times-Roman) 180.0 0.0 true true (4000)]
] -60.0 MRshow
918 3840 M
63 0 V
5913 0 R
-63 0 V
 stroke
810 3840 M
[ [(Times-Roman) 180.0 0.0 true true (5000)]
] -60.0 MRshow
918 4500 M
63 0 V
5913 0 R
-63 0 V
 stroke
810 4500 M
[ [(Times-Roman) 180.0 0.0 true true (6000)]
] -60.0 MRshow
1250 540 M
0 63 V
0 3897 R
0 -63 V
 stroke
1250 360 M
[ [(Times-Roman) 180.0 0.0 true true (2)]
] -60.0 MCshow
1914 540 M
0 63 V
0 3897 R
0 -63 V
 stroke
1914 360 M
[ [(Times-Roman) 180.0 0.0 true true (4)]
] -60.0 MCshow
2578 540 M
0 63 V
0 3897 R
0 -63 V
 stroke
2578 360 M
[ [(Times-Roman) 180.0 0.0 true true (6)]
] -60.0 MCshow
3242 540 M
0 63 V
0 3897 R
0 -63 V
 stroke
3242 360 M
[ [(Times-Roman) 180.0 0.0 true true (8)]
] -60.0 MCshow
3906 540 M
0 63 V
0 3897 R
0 -63 V
 stroke
3906 360 M
[ [(Times-Roman) 180.0 0.0 true true (10)]
] -60.0 MCshow
4570 540 M
0 63 V
0 3897 R
0 -63 V
 stroke
4570 360 M
[ [(Times-Roman) 180.0 0.0 true true (12)]
] -60.0 MCshow
5234 540 M
0 63 V
0 3897 R
0 -63 V
 stroke
5234 360 M
[ [(Times-Roman) 180.0 0.0 true true (14)]
] -60.0 MCshow
5898 540 M
0 63 V
0 3897 R
0 -63 V
 stroke
5898 360 M
[ [(Times-Roman) 180.0 0.0 true true (16)]
] -60.0 MCshow
6562 540 M
0 63 V
0 3897 R
0 -63 V
 stroke
6562 360 M
[ [(Times-Roman) 180.0 0.0 true true (18)]
] -60.0 MCshow
1.000 UL
LTb
918 540 M
5976 0 V
0 3960 V
-5976 0 V
918 540 L
 stroke
180 2520 M
currentpoint gsave translate 90 rotate 0 0 moveto
[ [(Times-Roman) 180.0 0.0 true true (Time \(seconds\))]
] -60.0 MCshow
grestore
3906 90 M
[ [(Times-Roman) 180.0 0.0 true true (Refinement Step)]
] -60.0 MCshow
3906 4770 M
[ [(Times-Roman) 180.0 0.0 true true (Total Times for 8 Processors \(rebalance time + refinement time + solution time\))]
] -60.0 MCshow
1.000 UP
1.000 UL
LT0
6075 4347 M
[ [(Times-Roman) 180.0 0.0 true true (RCB)]
] -60.0 MRshow
6183 4347 M
495 0 V
918 578 M
332 2 V
332 20 V
332 286 V
332 -97 V
332 18 V
332 129 V
332 247 V
332 251 V
332 270 V
332 -626 V
332 118 V
332 9 V
332 612 V
332 -620 V
332 17 V
332 -116 V
332 382 V
332 -260 V
918 578 Pls
1250 580 Pls
1582 600 Pls
1914 886 Pls
2246 789 Pls
2578 807 Pls
2910 936 Pls
3242 1183 Pls
3574 1434 Pls
3906 1704 Pls
4238 1078 Pls
4570 1196 Pls
4902 1205 Pls
5234 1817 Pls
5566 1197 Pls
5898 1214 Pls
6230 1098 Pls
6562 1480 Pls
6894 1220 Pls
6430 4347 Pls
1.000 UP
1.000 UL
LT1
6075 4167 M
[ [(Times-Roman) 180.0 0.0 true true (RCB x-cut)]
] -60.0 MRshow
6183 4167 M
495 0 V
918 552 M
332 16 V
332 19 V
332 75 V
332 -18 V
332 8 V
332 47 V
332 92 V
332 93 V
332 105 V
4238 756 L
332 47 V
332 19 V
332 233 V
5566 819 L
332 15 V
332 -56 V
332 157 V
332 -97 V
918 552 Crs
1250 568 Crs
1582 587 Crs
1914 662 Crs
2246 644 Crs
2578 652 Crs
2910 699 Crs
3242 791 Crs
3574 884 Crs
3906 989 Crs
4238 756 Crs
4570 803 Crs
4902 822 Crs
5234 1055 Crs
5566 819 Crs
5898 834 Crs
6230 778 Crs
6562 935 Crs
6894 838 Crs
6430 4167 Crs
1.000 UP
1.000 UL
LT2
6075 3987 M
[ [(Times-Roman) 180.0 0.0 true true (RCB y-cut)]
] -60.0 MRshow
6183 3987 M
495 0 V
918 557 M
332 21 V
332 16 V
332 93 V
332 -15 V
332 11 V
332 66 V
332 121 V
332 121 V
332 140 V
4238 826 L
332 60 V
332 18 V
332 307 V
5566 902 L
332 15 V
332 -72 V
332 207 V
6894 929 L
918 557 Star
1250 578 Star
1582 594 Star
1914 687 Star
2246 672 Star
2578 683 Star
2910 749 Star
3242 870 Star
3574 991 Star
3906 1131 Star
4238 826 Star
4570 886 Star
4902 904 Star
5234 1211 Star
5566 902 Star
5898 917 Star
6230 845 Star
6562 1052 Star
6894 929 Star
6430 3987 Star
1.000 UP
1.000 UL
LT3
6075 3807 M
[ [(Times-Roman) 180.0 0.0 true true (RCB z-cut)]
] -60.0 MRshow
6183 3807 M
495 0 V
918 584 M
332 0 V
332 16 V
332 465 V
332 -14 V
332 20 V
332 243 V
332 464 V
332 464 V
332 490 V
4238 1549 L
332 234 V
332 9 V
332 1151 V
5566 1780 L
332 16 V
332 -241 V
332 719 V
332 -472 V
918 584 Box
1250 584 Box
1582 600 Box
1914 1065 Box
2246 1051 Box
2578 1071 Box
2910 1314 Box
3242 1778 Box
3574 2242 Box
3906 2732 Box
4238 1549 Box
4570 1783 Box
4902 1792 Box
5234 2943 Box
5566 1780 Box
5898 1796 Box
6230 1555 Box
6562 2274 Box
6894 1802 Box
6430 3807 Box
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Times-Roman

%%EndDocument
 @endspecial 25328 w @beginspecial 50 @llx 50 @lly 410
@urx 302 @ury 2160 @rwi @setspecial
%%BeginDocument: graphs/rcbAllCuts/times/total-times-20.eps
%!PS-Adobe-2.0 EPSF-2.0
%%Title: total-times-20.eps
%%Creator: gnuplot 3.7 patchlevel 0
%%CreationDate: Thu Aug 15 14:09:14 2002
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 410 302
%%Orientation: Portrait
%%EndComments
/gnudict 256 dict def
gnudict begin
/Color false def
/Solid false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
/vshift -60 def
/dl {10 mul} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow { currentpoint stroke M
  0 vshift R show } def
/Rshow { currentpoint stroke M
  dup stringwidth pop neg vshift R show } def
/Cshow { currentpoint stroke M
  dup stringwidth pop -2 div vshift R show } def
/UP { dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def } def
/DL { Color {setrgbcolor Solid {pop []} if 0 setdash }
 {pop pop pop Solid {pop []} if 0 setdash} ifelse } def
/BL { stroke gnulinewidth 2 mul setlinewidth } def
/AL { stroke gnulinewidth 2 div setlinewidth } def
/UL { gnulinewidth mul /userlinewidth exch def } def
/PL { stroke userlinewidth setlinewidth } def
/LTb { BL [] 0 0 0 DL } def
/LTa { AL [1 dl 2 dl] 0 setdash 0 0 0 setrgbcolor } def
/LT0 { PL [] 1 0 0 DL } def
/LT1 { PL [4 dl 2 dl] 0 1 0 DL } def
/LT2 { PL [2 dl 3 dl] 0 0 1 DL } def
/LT3 { PL [1 dl 1.5 dl] 1 0 1 DL } def
/LT4 { PL [5 dl 2 dl 1 dl 2 dl] 0 1 1 DL } def
/LT5 { PL [4 dl 3 dl 1 dl 3 dl] 1 1 0 DL } def
/LT6 { PL [2 dl 2 dl 2 dl 4 dl] 0 0 0 DL } def
/LT7 { PL [2 dl 2 dl 2 dl 2 dl 2 dl 4 dl] 1 0.3 0 DL } def
/LT8 { PL [2 dl 2 dl 2 dl 2 dl 2 dl 2 dl 2 dl 4 dl] 0.5 0.5 0.5 DL } def
/Pnt { stroke [] 0 setdash
   gsave 1 setlinecap M 0 0 V stroke grestore } def
/Dia { stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt } def
/Pls { stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
  } def
/Box { stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt } def
/Crs { stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke } def
/TriU { stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt  } def
/Star { 2 copy Pls Crs } def
/BoxF { stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V  hpt2 0 V  0 vpt2 V
  hpt2 neg 0 V  closepath fill } def
/TriUF { stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill } def
/TriD { stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt  } def
/TriDF { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF { stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill } def
/Pent { stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt } def
/PentF { stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore } def
/Circle { stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt } def
/CircleF { stroke [] 0 setdash hpt 0 360 arc fill } def
/C0 { BL [] 0 setdash 2 copy moveto vpt 90 450  arc } bind def
/C1 { BL [] 0 setdash 2 copy        moveto
       2 copy  vpt 0 90 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C2 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 90 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C3 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C4 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 180 270 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C5 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 90 arc
       2 copy moveto
       2 copy  vpt 180 270 arc closepath fill
               vpt 0 360 arc } bind def
/C6 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 90 270 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C7 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 0 270 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C8 { BL [] 0 setdash 2 copy moveto
      2 copy vpt 270 360 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C9 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 270 450 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C10 { BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
       2 copy moveto
       2 copy vpt 90 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C11 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 180 arc closepath fill
       2 copy moveto
       2 copy  vpt 270 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C12 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 180 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C13 { BL [] 0 setdash  2 copy moveto
       2 copy  vpt 0 90 arc closepath fill
       2 copy moveto
       2 copy  vpt 180 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C14 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 90 360 arc closepath fill
               vpt 0 360 arc } bind def
/C15 { BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/Rec   { newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
       neg 0 rlineto closepath } bind def
/Square { dup Rec } bind def
/Bsquare { vpt sub exch vpt sub exch vpt2 Square } bind def
/S0 { BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare } bind def
/S1 { BL [] 0 setdash 2 copy vpt Square fill Bsquare } bind def
/S2 { BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare } bind def
/S3 { BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare } bind def
/S4 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare } bind def
/S5 { BL [] 0 setdash 2 copy 2 copy vpt Square fill
       exch vpt sub exch vpt sub vpt Square fill Bsquare } bind def
/S6 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare } bind def
/S7 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
       2 copy vpt Square fill
       Bsquare } bind def
/S8 { BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare } bind def
/S9 { BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare } bind def
/S10 { BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
       Bsquare } bind def
/S11 { BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
       Bsquare } bind def
/S12 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare } bind def
/S13 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
       2 copy vpt Square fill Bsquare } bind def
/S14 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
       2 copy exch vpt sub exch vpt Square fill Bsquare } bind def
/S15 { BL [] 0 setdash 2 copy Bsquare fill Bsquare } bind def
/D0 { gsave translate 45 rotate 0 0 S0 stroke grestore } bind def
/D1 { gsave translate 45 rotate 0 0 S1 stroke grestore } bind def
/D2 { gsave translate 45 rotate 0 0 S2 stroke grestore } bind def
/D3 { gsave translate 45 rotate 0 0 S3 stroke grestore } bind def
/D4 { gsave translate 45 rotate 0 0 S4 stroke grestore } bind def
/D5 { gsave translate 45 rotate 0 0 S5 stroke grestore } bind def
/D6 { gsave translate 45 rotate 0 0 S6 stroke grestore } bind def
/D7 { gsave translate 45 rotate 0 0 S7 stroke grestore } bind def
/D8 { gsave translate 45 rotate 0 0 S8 stroke grestore } bind def
/D9 { gsave translate 45 rotate 0 0 S9 stroke grestore } bind def
/D10 { gsave translate 45 rotate 0 0 S10 stroke grestore } bind def
/D11 { gsave translate 45 rotate 0 0 S11 stroke grestore } bind def
/D12 { gsave translate 45 rotate 0 0 S12 stroke grestore } bind def
/D13 { gsave translate 45 rotate 0 0 S13 stroke grestore } bind def
/D14 { gsave translate 45 rotate 0 0 S14 stroke grestore } bind def
/D15 { gsave translate 45 rotate 0 0 S15 stroke grestore } bind def
/DiaE { stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke } def
/BoxE { stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke } def
/TriUE { stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke } def
/TriDE { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke } def
/PentE { stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore } def
/CircE { stroke [] 0 setdash 
  hpt 0 360 arc stroke } def
/Opaque { gsave closepath 1 setgray fill grestore 0 setgray closepath } def
/DiaW { stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke } def
/BoxW { stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke } def
/TriUW { stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke } def
/TriDW { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke } def
/PentW { stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore } def
/CircW { stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke } def
/BoxFill { gsave Rec 1 setgray fill grestore } def
/MFshow {{dup dup 0 get findfont exch 1 get scalefont setfont
     [ currentpoint ] exch dup 2 get 0 exch rmoveto dup dup 5 get exch 4 get
     {show} {stringwidth pop 0 rmoveto}ifelse dup 3 get
     {2 get neg 0 exch rmoveto pop} {pop aload pop moveto}ifelse} forall} bind def
/MFwidth {0 exch {dup 3 get{dup dup 0 get findfont exch 1 get scalefont setfont
      5 get stringwidth pop add}
    {pop} ifelse} forall} bind def
/MLshow { currentpoint stroke M
  0 exch R MFshow } bind def
/MRshow { currentpoint stroke M
  exch dup MFwidth neg 3 -1 roll R MFshow } def
/MCshow { currentpoint stroke M
  exch dup MFwidth -2 div 3 -1 roll R MFshow } def
end
%%EndProlog
gnudict begin
gsave
50 50 translate
0.050 0.050 scale
0 setgray
newpath
(Times-Roman) findfont 180 scalefont setfont
1.000 UL
LTb
918 540 M
63 0 V
5913 0 R
-63 0 V
 stroke
810 540 M
[ [(Times-Roman) 180.0 0.0 true true (0)]
] -60.0 MRshow
918 1200 M
63 0 V
5913 0 R
-63 0 V
 stroke
810 1200 M
[ [(Times-Roman) 180.0 0.0 true true (1000)]
] -60.0 MRshow
918 1860 M
63 0 V
5913 0 R
-63 0 V
 stroke
810 1860 M
[ [(Times-Roman) 180.0 0.0 true true (2000)]
] -60.0 MRshow
918 2520 M
63 0 V
5913 0 R
-63 0 V
 stroke
810 2520 M
[ [(Times-Roman) 180.0 0.0 true true (3000)]
] -60.0 MRshow
918 3180 M
63 0 V
5913 0 R
-63 0 V
 stroke
810 3180 M
[ [(Times-Roman) 180.0 0.0 true true (4000)]
] -60.0 MRshow
918 3840 M
63 0 V
5913 0 R
-63 0 V
 stroke
810 3840 M
[ [(Times-Roman) 180.0 0.0 true true (5000)]
] -60.0 MRshow
918 4500 M
63 0 V
5913 0 R
-63 0 V
 stroke
810 4500 M
[ [(Times-Roman) 180.0 0.0 true true (6000)]
] -60.0 MRshow
1250 540 M
0 63 V
0 3897 R
0 -63 V
 stroke
1250 360 M
[ [(Times-Roman) 180.0 0.0 true true (2)]
] -60.0 MCshow
1914 540 M
0 63 V
0 3897 R
0 -63 V
 stroke
1914 360 M
[ [(Times-Roman) 180.0 0.0 true true (4)]
] -60.0 MCshow
2578 540 M
0 63 V
0 3897 R
0 -63 V
 stroke
2578 360 M
[ [(Times-Roman) 180.0 0.0 true true (6)]
] -60.0 MCshow
3242 540 M
0 63 V
0 3897 R
0 -63 V
 stroke
3242 360 M
[ [(Times-Roman) 180.0 0.0 true true (8)]
] -60.0 MCshow
3906 540 M
0 63 V
0 3897 R
0 -63 V
 stroke
3906 360 M
[ [(Times-Roman) 180.0 0.0 true true (10)]
] -60.0 MCshow
4570 540 M
0 63 V
0 3897 R
0 -63 V
 stroke
4570 360 M
[ [(Times-Roman) 180.0 0.0 true true (12)]
] -60.0 MCshow
5234 540 M
0 63 V
0 3897 R
0 -63 V
 stroke
5234 360 M
[ [(Times-Roman) 180.0 0.0 true true (14)]
] -60.0 MCshow
5898 540 M
0 63 V
0 3897 R
0 -63 V
 stroke
5898 360 M
[ [(Times-Roman) 180.0 0.0 true true (16)]
] -60.0 MCshow
6562 540 M
0 63 V
0 3897 R
0 -63 V
 stroke
6562 360 M
[ [(Times-Roman) 180.0 0.0 true true (18)]
] -60.0 MCshow
1.000 UL
LTb
918 540 M
5976 0 V
0 3960 V
-5976 0 V
918 540 L
 stroke
180 2520 M
currentpoint gsave translate 90 rotate 0 0 moveto
[ [(Times-Roman) 180.0 0.0 true true (Time \(seconds\))]
] -60.0 MCshow
grestore
3906 90 M
[ [(Times-Roman) 180.0 0.0 true true (Refinement Step)]
] -60.0 MCshow
3906 4770 M
[ [(Times-Roman) 180.0 0.0 true true (Total Times for 20 Processors \(rebalance time + refinement time + solution time\))]
] -60.0 MCshow
1.000 UP
1.000 UL
LT0
6075 4347 M
[ [(Times-Roman) 180.0 0.0 true true (RCB)]
] -60.0 MRshow
6183 4347 M
495 0 V
918 565 M
332 13 V
332 15 V
332 254 V
332 -42 V
332 15 V
332 132 V
332 254 V
332 264 V
332 301 V
4238 980 L
332 107 V
332 22 V
332 537 V
332 -598 V
332 46 V
6230 983 L
332 313 V
332 -205 V
918 565 Pls
1250 578 Pls
1582 593 Pls
1914 847 Pls
2246 805 Pls
2578 820 Pls
2910 952 Pls
3242 1206 Pls
3574 1470 Pls
3906 1771 Pls
4238 980 Pls
4570 1087 Pls
4902 1109 Pls
5234 1646 Pls
5566 1048 Pls
5898 1094 Pls
6230 983 Pls
6562 1296 Pls
6894 1091 Pls
6430 4347 Pls
1.000 UP
1.000 UL
LT1
6075 4167 M
[ [(Times-Roman) 180.0 0.0 true true (RCB x-cut)]
] -60.0 MRshow
6183 4167 M
495 0 V
918 549 M
332 12 V
332 13 V
332 69 V
332 -10 V
332 9 V
332 50 V
332 90 V
332 94 V
332 101 V
4238 744 L
332 46 V
332 20 V
332 234 V
5566 790 L
332 11 V
332 -54 V
332 150 V
332 -91 V
918 549 Crs
1250 561 Crs
1582 574 Crs
1914 643 Crs
2246 633 Crs
2578 642 Crs
2910 692 Crs
3242 782 Crs
3574 876 Crs
3906 977 Crs
4238 744 Crs
4570 790 Crs
4902 810 Crs
5234 1044 Crs
5566 790 Crs
5898 801 Crs
6230 747 Crs
6562 897 Crs
6894 806 Crs
6430 4167 Crs
1.000 UP
1.000 UL
LT2
6075 3987 M
[ [(Times-Roman) 180.0 0.0 true true (RCB y-cut)]
] -60.0 MRshow
6183 3987 M
495 0 V
918 556 M
332 14 V
332 10 V
332 100 V
332 -7 V
332 13 V
332 73 V
332 134 V
332 134 V
332 150 V
4238 841 L
332 67 V
332 17 V
332 337 V
5566 925 L
332 16 V
332 -77 V
332 218 V
6894 946 L
918 556 Star
1250 570 Star
1582 580 Star
1914 680 Star
2246 673 Star
2578 686 Star
2910 759 Star
3242 893 Star
3574 1027 Star
3906 1177 Star
4238 841 Star
4570 908 Star
4902 925 Star
5234 1262 Star
5566 925 Star
5898 941 Star
6230 864 Star
6562 1082 Star
6894 946 Star
6430 3987 Star
1.000 UP
1.000 UL
LT3
6075 3807 M
[ [(Times-Roman) 180.0 0.0 true true (RCB z-cut)]
] -60.0 MRshow
6183 3807 M
495 0 V
918 577 M
332 5 V
332 21 V
332 758 V
332 1 V
332 7 V
332 368 V
332 714 V
332 712 V
332 709 V
4238 2075 L
332 349 V
332 35 V
332 1809 V
5566 2438 L
332 33 V
332 -399 V
332 1127 V
332 -741 V
918 577 Box
1250 582 Box
1582 603 Box
1914 1361 Box
2246 1362 Box
2578 1369 Box
2910 1737 Box
3242 2451 Box
3574 3163 Box
3906 3872 Box
4238 2075 Box
4570 2424 Box
4902 2459 Box
5234 4268 Box
5566 2438 Box
5898 2471 Box
6230 2072 Box
6562 3199 Box
6894 2458 Box
6430 3807 Box
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Times-Roman

%%EndDocument
 @endspecial 51523 59084 V 888 59129 50657 45 v 0 61343
a(Figure)403 b(14:)564 b(T)-108 b(otal)405 b(analysis)g(times)e(\(time)
h(to)f(solution\))h(b)-36 b(y)403 b(adaptiv)-36 b(e)404
b(re\257nemen)-36 b(t)402 b(step)h(for)h(the)f(p)36 b(erfo-)0
62948 y(rated)433 b(sho)36 b(c)-36 b(k)434 b(tub)36 b(e)433
b(on)g(8)h(\(left\))g(and)f(20)h(\(righ)-36 b(t\))433
b(pro)36 b(cessors.)0 66822 y Fl(7)2152 b(Discussion)0
69743 y Fk(These)386 b(studies)g(w)-36 b(ere)386 b(an)g(initial)h(step)
e(in)h(a)h(more)f(thorough)f(study)h(that)f(will)i(include)f
(additional)g(load)0 71348 y(balancing)436 b(algorithms,)h(a)f(larger)g
(v)-72 b(ariet)-36 b(y)436 b(of)g(mesh)f(structures)g(and)g(sizes,)h
(other)f(solution)h(metho)36 b(ds,)25350 75417 y(16)p
eop
%%Page: 17 17
17 16 bop 0 1424 a Fk(and)387 b(di\256eren)-36 b(t)387
b(computational)h(en)-36 b(vironmen)g(ts.)562 b(OCTP)-108
b(AR)g(T)388 b(and)f(HSF)-36 b(C)387 b(need)g(to)h(b)36
b(e)388 b(included)f(in)g(all)0 3029 y(studies.)838 b(Signi\257can)-36
b(tly)521 b(larger)g(meshes)f(m)-36 b(ust)520 b(b)36
b(e)520 b(considered.)839 b(Sim)-36 b(ulations)520 b(in)-36
b(v)g(olving)522 b(millions)f(of)0 4634 y(elemen)-36
b(ts)320 b(are)g(b)36 b(ecoming)321 b(more)f(common)h(and)f(new)g
(scalabilit)-36 b(y)322 b(concerns)e(ma)-36 b(y)321 b(arise.)541
b(The)320 b(p)36 b(erforated)0 6239 y(sho)g(c)-36 b(k)394
b(tub)36 b(e)392 b(needed)g(only)i(19)g(adaptiv)-36 b(e)394
b(re\257nemen)-36 b(t)391 b(steps)i(for)h(solutions)g(that)e(run)h(for)
h(o)-36 b(v)g(er)393 b(an)g(hour.)0 7844 y(Man)-36 b(y)513
b(problems)f(of)i(in)-36 b(terest)512 b(require)h(m)-36
b(uc)g(h)512 b(more)h(frequen)-36 b(t)512 b(re\257nemen)-36
b(t,)532 b(whic)-36 b(h)512 b(w)-36 b(ould)513 b(mak)-36
b(e)514 b(the)0 9450 y(running)351 b(time)i(of)g(the)e(rebalancing)i(a)
g(more)f(signi\257can)-36 b(t)352 b(factor.)553 b(Muc)-36
b(h)351 b(larger)i(n)-36 b(um)g(b)36 b(ers)351 b(of)i(pro)36
b(cessors)0 11055 y(also)352 b(m)-36 b(ust)351 b(b)36
b(e)351 b(considered,)367 b(as)352 b(w)-36 b(ell)352
b(as)f(a)h(v)-72 b(ariet)-36 b(y)352 b(of)g(pro)36 b(cessor)351
b(and)g(net)-36 b(w)g(ork)351 b(sp)36 b(eeds)351 b(and)g(hierarc)-36
b(hies.)1951 12660 y(W)-108 b(e)637 b(can)g(dra)-36 b(w)638
b(some)f(conclusions)h(from)f(the)g(study)g(to)g(this)g(p)36
b(oin)-36 b(t.)1189 b(Though)637 b(Jostle)h(uses)f(a)0
14265 y(more)345 b(computationally)h(exp)36 b(ensiv)-36
b(e)346 b(pro)36 b(cedure,)362 b(the)344 b(resulting)h(partitions,)363
b(with)345 b(lo)-36 b(w)g(er)346 b(surface)f(index)0
15870 y(v)-72 b(alues)430 b(than)f(the)g(others,)h(allo)-36
b(w)g(ed)431 b(for)f(a)g(signi\257can)-36 b(tly)430 b(faster)g
(solution)g(pro)36 b(cess.)577 b(Surface)430 b(index)f(w)-36
b(as)0 17475 y(the)576 b(more)h(signi\257can)-36 b(t)576
b(factor)i(here,)612 b(using)577 b(the)f(relativ)-36
b(ely)578 b(slo)-36 b(w)578 b(Ethernet)d(connection.)1007
b(Previous)0 19080 y(studies)472 b(indicate)h(that)g(the)f(in)-36
b(terpro)36 b(cessor)473 b(adjacency)h(ma)-36 b(y)473
b(b)36 b(e)473 b(the)f(most)h(signi\257can)-36 b(t)473
b(factor)g(when)0 20685 y(comm)-36 b(unication)468 b(is)g(across)h(a)g
(net)-36 b(w)g(ork)468 b(with)g(a)g(higher)g(bandwidth,)476
b(but)467 b(a)i(relativ)-36 b(ely)469 b(large)g(latency)0
22290 y(suc)-36 b(h)433 b(as)h(the)f(IBM)g(SP)g([10)q(].)1951
23895 y(W)-108 b(e)595 b(ha)-36 b(v)g(e)594 b(determined)f(that)i(o)36
b(ctan)-36 b(t)594 b(gran)-36 b(ularit)g(y)595 b(for)g(OCTP)-108
b(AR)g(T)594 b(should)g(b)36 b(e)595 b(set)f(to)h(allo)-36
b(w)596 b(a)0 25500 y(maxim)-36 b(um)523 b(of)g(20{40)h(ob)72
b(jects)523 b(p)36 b(er)522 b(leaf)h(o)36 b(ctan)-36
b(t.)845 b(The)522 b(partitions)g(pro)36 b(duced)522
b(w)-36 b(ere)522 b(nearly)h(equal)g(in)0 27106 y(qualit)-36
b(y)384 b(across)f(all)g(gran)-36 b(ularities,)394 b(but)381
b(this)i(range)g(allo)-36 b(ws)384 b(for)f(the)f(fastest)h(running)e
(time.)562 b(Im)-36 b(balance)0 28711 y(ma)g(y)305 b(b)36
b(e)304 b(in)-36 b(tro)36 b(duced)304 b(that)g(are)g(as)h(large)g(as)g
(the)f(o)36 b(ctan)-36 b(t)305 b(gran)-36 b(ularit)g(y)-108
b(,)330 b(and)304 b(in)h(most)f(cases,)331 b(an)305 b(im)-36
b(balance)0 30316 y(of)434 b(20{40)i(ob)72 b(jects)434
b(is)g(acceptable.)1951 31921 y(The)648 b(slice)i(partitioning)e(mo)36
b(di\257cation)649 b(to)f(Zoltan's)h(R)-36 b(CB)649 b(algorithm)g(is)g
(also)g(promising.)1223 b(It)0 33526 y(incurred)480 b(the)h(same)h
(cost)g(as)g(the)f(regular)h(R)-36 b(CB,)482 b(but)f(pro)36
b(duced)480 b(partitions)i(of)g(signi\257can)-36 b(tly)482
b(higher)0 35131 y(qualit)-36 b(y)-108 b(,)544 b(when)520
b(the)h(axis)h(to)f(cut)f(along)i(w)-36 b(as)521 b(c)-36
b(hosen)520 b(correctly)-108 b(.)841 b(This)521 b(c)-36
b(hoice)521 b(is)h(highly)f(dep)36 b(enden)-36 b(t)0
36736 y(on)551 b(the)g(shap)36 b(e)552 b(of)g(the)f(domain)g(and)g(on)h
(the)e(re\257nemen)-36 b(t)550 b(patterns.)931 b(Use)552
b(of)g(slice)h(partitioning)e(on)0 38341 y(larger)453
b(or)g(more)g(uniformly-re\257ned)f(meshes,)458 b(and)452
b(on)h(systems)g(with)g(a)g(faster)g(net)-36 b(w)g(ork)453
b(ma)-36 b(y)454 b(reduce)0 39946 y(message)434 b(startup)f(latency)
-108 b(.)579 b(This)433 b(will)i(b)36 b(e)434 b(in)-36
b(v)g(estigated.)1951 41551 y(Previous)394 b(studies)f(ha)-36
b(v)g(e)394 b(sho)-36 b(wn)394 b(that)f(a)h(p)36 b(ostpro)g(cessing)394
b(\\partition)g(b)36 b(oundary)393 b(smo)36 b(othing")394
b(step)0 43156 y(can)382 b(signi\257can)-36 b(tly)383
b(impro)-36 b(v)g(e)382 b(the)f(qualit)-36 b(y)384 b(of)e(partitions)g
(pro)36 b(duced)381 b(b)-36 b(y)382 b(the)g(original)h(OCTP)-108
b(AR)g(T)382 b(algo-)0 44762 y(rithm)375 b([23)q(].)559
b(A)376 b(similar)g(pro)36 b(cedure)374 b(for)j(the)d(Zoltan)i
(geometric)g(partitioners,)387 b(esp)36 b(ecially)378
b(OCTP)-108 b(AR)g(T,)0 46367 y(RIB,)434 b(and)f(R)-36
b(CB,)435 b(w)-36 b(ould)433 b(b)36 b(e)434 b(b)36 b(ene\257cial)433
b(and)g(is)h(b)36 b(eing)434 b(in)-36 b(v)g(estigated.)1951
47972 y(The)386 b(appropriate)f(c)-36 b(hoice)386 b(of)g(dynamic)g
(load)g(balancing)g(algorithm)g(often)g(dep)36 b(ends)384
b(on)i(the)f(target)0 49577 y(computer)528 b(system)h([42)q(].)864
b(A)529 b(mac)-36 b(hine)528 b(mo)36 b(del)529 b(for)h(Zoltan)f(to)f
(help)h(guide)f(arc)-36 b(hitecture-a)g(w)g(are)528 b(load)0
51182 y(balancing)599 b(is)f(in)g(dev)-36 b(elopmen)g(t.)1072
b(As)599 b(part)f(of)h(this)f(e\256ort,)639 b(the)598
b(studies)f(describ)36 b(ed)598 b(herein)g(will)h(b)36
b(e)0 52787 y(extended)409 b(to)h(a)g(v)-72 b(ariet)-36
b(y)411 b(of)g(parallel)f(en)-36 b(vironmen)g(ts)410
b(ranging)g(from)g(net)-36 b(w)g(orks)410 b(of)h(w)-36
b(orkstations)411 b(to)f(the)0 54392 y(largest)434 b(sup)36
b(ercomputers.)0 58829 y Fl(Ac)-60 b(kno)g(wledgmen)g(ts)0
61750 y Fk(T)-108 b(eresco)508 b(w)-36 b(as)508 b(supp)36
b(orted)506 b(b)-36 b(y)507 b(con)-36 b(tract)507 b(15162)i(with)e
(Sandia)h(National)g(Lab)36 b(oratories,)527 b(a)507
b(m)-36 b(ulti-pro-)0 63355 y(gram)575 b(lab)36 b(oratory)575
b(op)36 b(eration)575 b(b)-36 b(y)574 b(Sandia)g(Corp)36
b(oration,)610 b(a)575 b(Lo)36 b(c)-36 b(kheed)574 b(Martin)g(Compan)
-36 b(y)-108 b(,)610 b(for)575 b(the)0 64960 y(United)638
b(States)g(Departmen)-36 b(t)638 b(of)i(Energy)f(under)e(Con)-36
b(tract)639 b(DE-A)-36 b(C04-94AL85000.)1196 b(Ungar)638
b(w)-36 b(as)0 66565 y(supp)36 b(orted)432 b(b)-36 b(y)434
b(the)f(Williams)i(College)g(Summer)e(Science)g(researc)-36
b(h)433 b(program.)25350 75417 y(17)p eop
%%Page: 18 18
18 17 bop 0 1424 a Fl(References)650 4345 y Fk([1])652
b(S.)577 b(Adjerid)h(and)g(J.)g(E.)g(Flahert)-36 b(y)-108
b(.)1007 b(A)578 b(mo)-36 b(ving)578 b(\257nite)g(elemen)-36
b(t)577 b(metho)36 b(d)578 b(for)g(time)g(dep)36 b(enden)-36
b(t)2674 5950 y(partial)403 b(with)h(error)f(estimation)g(and)g
(re\257nemen)-36 b(t.)526 b Fg(SIAM)435 b(J.)i(Numer.)f(A)-33
b(nal)p Fk(,)409 b(23:778{796,)j(1986.)650 8662 y([2])652
b(S.)437 b(Adjerid)g(and)g(J.)g(E.)h(Flahert)-36 b(y)-108
b(.)588 b(A)437 b(mo)-36 b(ving)438 b(mesh)f(\257nite)g(elemen)-36
b(t)436 b(metho)36 b(d)437 b(with)h(lo)36 b(cal)438 b(re\257ne-)2674
10267 y(men)-36 b(t)390 b(for)i(parab)36 b(olic)393 b(partial)f
(di\256eren)-36 b(tial)391 b(equations.)509 b Fg(Comput.)426
b(Metho)-66 b(ds)426 b(Appl.)f(Me)-66 b(ch.)425 b(Engr)-66
b(g.)p Fk(,)2674 11872 y(55:3{26,)436 b(1986.)650 14584
y([3])652 b(S.)498 b(Adjerid,)514 b(J.)499 b(E.)g(Flahert)-36
b(y)-108 b(,)514 b(P)-108 b(.)498 b(Mo)36 b(ore,)516
b(and)497 b(Y.)i(W)-108 b(ang.)770 b(High-order)498 b(adaptiv)-36
b(e)499 b(metho)36 b(ds)497 b(for)2674 16189 y(parab)36
b(olic)434 b(systems.)577 b Fg(Physic)-66 b(a-D)p Fk(,)434
b(60:94{111,)j(1992.)650 18901 y([4])652 b(S.)298 b(Aluru)f(and)h(F.)h
(Sevilgen.)357 b(P)-36 b(arallel)300 b(domain)e(decomp)36
b(osition)299 b(and)e(load)i(balancing)g(using)f(space-)2674
20506 y(\257lling)305 b(curv)-36 b(es.)367 b(In)305 b
Fg(Pr)-66 b(o)g(c.)346 b(International)e(Confer)-66 b(enc)g(e)344
b(on)j(High-Performanc)-66 b(e)344 b(Computing)p Fk(,)330
b(pages)2674 22111 y(230{235,)436 b(1997.)650 24823 y([5])652
b(M.)451 b(W.)h(Beall)g(and)e(M.)i(S.)f(Shephard.)627
b(A)451 b(general)h(top)36 b(ology-based)452 b(mesh)e(data)i
(structure.)628 b Fg(Int.)2674 26428 y(J.)464 b(Numer.)g(Meth.)g
(Engng.)p Fk(,)432 b(40\(9\):1573{1596,)438 b(1997.)650
29141 y([6])652 b(M.)499 b(J.)i(Berger)f(and)f(S.)h(H.)g(Bokhari.)775
b(A)500 b(partitioning)g(strategy)g(for)h(non)-36 b(uniform)499
b(problems)g(on)2674 30746 y(m)-36 b(ultipro)36 b(cessors.)577
b Fg(IEEE)465 b(T)-100 b(r)-66 b(ans.)464 b(Computers)p
Fk(,)434 b(36:570{580,)j(1987.)650 33458 y([7])652 b(T.)368
b(Bially)-108 b(.)470 b(Space-\257lling)367 b(curv)-36
b(es:)545 b(their)367 b(generation)h(and)f(their)g(application)h(to)f
(band)g(reduction.)2674 35063 y Fg(IEEE)465 b(T)-100
b(r)-66 b(ans.)464 b(Inform.)f(The)-66 b(ory)p Fk(,)434
b(IT-15:658{664,)j(No)-36 b(v.)434 b(1969.)650 37775
y([8])652 b(R.)430 b(Bisw)-36 b(as,)432 b(K.)f(D.)g(Devine,)h(and)d(J.)
i(E.)f(Flahert)-36 b(y)-108 b(.)571 b(P)-36 b(arallel,)433
b(adaptiv)-36 b(e)430 b(\257nite)g(elemen)-36 b(t)430
b(metho)36 b(ds)2674 39380 y(for)434 b(conserv)-72 b(ation)434
b(la)-36 b(ws.)578 b Fg(Appl.)464 b(Numer.)g(Math.)p
Fk(,)433 b(14:255{283,)k(1994.)650 42092 y([9])652 b(C.)533
b(L.)g(Bottasso,)559 b(J.)534 b(E.)f(Flahert)-36 b(y)-108
b(,)558 b(C.)23033 41756 y(\304)22853 42092 y(Ozturan,)f(M.)533
b(S.)g(Shephard,)556 b(B.)533 b(K.)h(Szymanski,)559 b(J.)533
b(D.)2674 43697 y(T)-108 b(eresco,)649 b(and)604 b(L.)i(H.)f(Zian)-36
b(tz.)1089 b(The)606 b(qualit)-36 b(y)606 b(of)g(partitions)g(pro)36
b(duced)604 b(b)-36 b(y)605 b(an)g(iterativ)-36 b(e)606
b(load)2674 45302 y(balancer.)1198 b(In)642 b(B.)g(K.)h(Szymanski)g
(and)e(B.)i(Sinharo)-36 b(y)-108 b(,)694 b(editors,)g
Fg(Pr)-66 b(o)g(c.)655 b(Thir)-66 b(d)656 b(Workshop)h(on)2674
46907 y(L)-66 b(anguages,)463 b(Compilers,)h(and)h(R)-33
b(untime)463 b(Systems)p Fk(,)434 b(pages)g(265{277,)i(T)-108
b(ro)-36 b(y)-108 b(,)434 b(1996.)0 49619 y([10])652
b(P)-108 b(.)625 b(M.)g(Campb)36 b(ell,)675 b(K.)625
b(D.)h(Devine,)675 b(J.)626 b(E.)f(Flahert)-36 b(y)-108
b(,)674 b(L.)625 b(G.)g(Gerv)-72 b(asio,)675 b(and)624
b(J.)i(D.)g(T)-108 b(eresco.)2674 51224 y(Dynamic)492
b(o)36 b(ctree)493 b(load)f(balancing)g(using)g(space-\257lling)g(curv)
-36 b(es.)750 b(T)-108 b(ec)-36 b(hnical)492 b(Rep)36
b(ort)492 b(CS-03-01,)2674 52829 y(Williams)435 b(College)g(Departmen)
-36 b(t)433 b(of)h(Computer)f(Science,)h(2003.)0 55542
y([11])652 b(K.)595 b(Clark,)637 b(J.)595 b(E.)g(Flahert)-36
b(y)-108 b(,)635 b(and)594 b(M.)h(S.)g(Shephard.)1055
b Fg(Appl.)613 b(Numer.)f(Math.,)649 b(sp)-66 b(e)g(cial)612
b(e)-66 b(d.)612 b(on)2674 57147 y(A)-66 b(daptive)463
b(Metho)-66 b(ds)465 b(for)f(Partial)h(Di\256er)-66 b(ential)463
b(Equations)p Fk(,)433 b(14,)i(1994.)0 59859 y([12])652
b(B.)363 b(Co)36 b(c)-36 b(kburn,)378 b(S.-Y.)363 b(Lin,)377
b(and)363 b(C.-W.)h(Sh)-36 b(u.)461 b(TVB)364 b(Runge-Kutta)f(lo)36
b(cal)365 b(pro)72 b(jection)363 b(discon)-36 b(tin)g(u-)2674
61464 y(ous)361 b(Galerkin)i(\257nite)e(elemen)-36 b(t)362
b(metho)36 b(d)361 b(for)h(conserv)-72 b(ation)363 b(la)-36
b(ws)362 b(I)36 b(I)g(I:)364 b(One-Dimensional)d(systems.)2674
63069 y Fg(J.)464 b(Comput.)g(Phys.)p Fk(,)435 b(84:90{113,)h(1989.)0
65781 y([13])652 b(B.)319 b(Co)36 b(c)-36 b(kburn)318
b(and)h(C.-W.)g(Sh)-36 b(u.)388 b(TVB)320 b(Runge-Kutta)d(lo)36
b(cal)321 b(pro)72 b(jection)319 b(discon)-36 b(tin)g(uous)318
b(Galerkin)2674 67386 y(\257nite)663 b(elemen)-36 b(t)664
b(metho)36 b(d)663 b(for)h(conserv)-72 b(ation)665 b(la)-36
b(ws)665 b(I)36 b(I:)665 b(General)e(framew)-36 b(ork.)1265
b Fg(Math.)676 b(Comp.)p Fk(,)2674 68991 y(52:411{435,)437
b(1989.)25350 75417 y(18)p eop
%%Page: 19 19
19 18 bop 0 1424 a Fk([14])652 b(K.)e(Devine,)705 b(E.)650
b(Boman,)705 b(R.)650 b(Heaph)-36 b(y)-108 b(,)704 b(B.)650
b(Hendric)-36 b(kson,)704 b(and)649 b(C.)i(V)-108 b(aughan.)1221
b(Zoltan)650 b(data)2674 3029 y(managemen)-36 b(t)421
b(services)i(for)g(parallel)g(dynamic)g(applications.)558
b Fg(Computing)454 b(in)f(Scienc)-66 b(e)452 b(and)i(En-)2674
4634 y(gine)-66 b(ering)p Fk(,)430 b(4\(2\):90{97,)436
b(2002.)0 7346 y([15])652 b(K.)418 b(D.)h(Devine,)j(J.)d(E.)f(Flahert)
-36 b(y)-108 b(,)421 b(R.)e(Lo)-36 b(y)-108 b(,)421 b(and)d(S.)f
(Wheat.)552 b(P)-36 b(arallel)420 b(partitioning)e(strategies)g(for)
2674 8951 y(the)298 b(adaptiv)-36 b(e)299 b(solution)g(of)g(conserv)-72
b(ation)299 b(la)-36 b(ws.)359 b(In)298 b(I.)h(Babu)-69
b(\267)-582 b(sk)-72 b(a,)327 b(J.)300 b(E.)e(Flahert)-36
b(y)-108 b(,)326 b(W.)299 b(D.)h(Hensha)-36 b(w,)2674
10557 y(J.)385 b(E.)g(Hop)36 b(croft,)396 b(J.)386 b(E.)f(Oliger,)395
b(and)385 b(T.)h(T)-108 b(ezduy)-36 b(ar,)395 b(editors,)g
Fg(Mo)-66 b(deling,)427 b(Mesh)420 b(Gener)-66 b(ation,)427
b(and)2674 12162 y(A)-66 b(daptive)473 b(Numeric)-66
b(al)474 b(Metho)-66 b(ds)475 b(for)g(Partial)g(Di\256er)-66
b(ential)473 b(Equations)p Fk(,)448 b(v)-36 b(olume)445
b(75,)k(pages)c(215{)2674 13767 y(242,)434 b(Berlin-Heidelb)36
b(erg,)434 b(1995.)h(Springer-V)-108 b(erlag.)0 16479
y([16])652 b(K.)428 b(D.)g(Devine,)i(B.)e(A.)h(Hendric)-36
b(kson,)429 b(E.)f(Boman,)h(M.)f(St.)f(John,)i(and)f(C.)g(V)-108
b(aughan.)567 b Fg(Zoltan:)594 b(A)2674 18084 y(Dynamic)479
b(L)-66 b(o)g(ad)481 b(Balancing)f(Libr)-66 b(ary)480
b(for)h(Par)-66 b(al)66 b(lel)481 b(Applic)-66 b(ations;)487
b(Develop)-66 b(er's)480 b(Guide)p Fk(.)629 b(Sandia)2674
19689 y(National)434 b(Lab)36 b(oratories,)435 b(Albuquerque,)e(NM,)h
(1999.)578 b(T)-108 b(ec)-36 b(h.)433 b(Rep)36 b(ort)434
b(SAND99-1376.)0 22401 y([17])652 b(K.)521 b(D.)g(Devine,)544
b(B.)521 b(A.)g(Hendric)-36 b(kson,)543 b(E.)521 b(Boman,)543
b(M.)521 b(St.)f(John,)543 b(and)520 b(C.)h(V)-108 b(aughan.)837
b Fg(Zoltan:)2674 24006 y(A)592 b(Dynamic)f(L)-66 b(o)g(ad)593
b(Balancing)f(Libr)-66 b(ary)591 b(for)i(Par)-66 b(al)66
b(lel)593 b(Applic)-66 b(ations;)655 b(User's)593 b(Guide)p
Fk(.)991 b(Sandia)2674 25611 y(National)434 b(Lab)36
b(oratories,)435 b(Albuquerque,)e(NM,)h(1999.)578 b(T)-108
b(ec)-36 b(h.)433 b(Rep)36 b(ort)434 b(SAND99-1377.)0
28323 y([18])652 b(R.)432 b(E.)h(Dillon)g(Jr.)575 b(A)433
b(parametric)f(study)g(of)h(p)36 b(erforated)432 b(m)-36
b(uzzle)432 b(brak)-36 b(es.)576 b(ARDC)433 b(T)-108
b(ec)-36 b(h.)432 b(Rep)36 b(ort)2674 29928 y(ARLCB-TR-84015,)435
b(Ben)-36 b(\266)-614 b(et)433 b(W)-108 b(eap)36 b(ons)434
b(Lab)36 b(oratory)-108 b(,)434 b(W)-108 b(atervliet,)435
b(1984.)0 32640 y([19])652 b(C.)583 b(F)-108 b(arhat)582
b(and)g(M.)h(Lesoinne.)1020 b(Automatic)583 b(partitioning)g(of)g
(unstructured)d(meshes)i(for)i(the)2674 34245 y(parallel)354
b(solution)g(of)h(problems)e(in)g(computational)h(mec)-36
b(hanics.)447 b Fg(Int.)390 b(J.)g(Numer.)h(Meth.)f(Engng.)p
Fk(,)2674 35851 y(36:745{764,)437 b(1993.)0 38563 y([20])652
b(J.)406 b(E.)g(Flahert)-36 b(y)-108 b(,)411 b(M.)406
b(Dindar,)412 b(R.)406 b(M.)g(Lo)-36 b(y)-108 b(,)411
b(M.)406 b(S.)g(Shephard,)k(B.)c(K.)g(Szymanski,)413
b(J.)406 b(D.)g(T)-108 b(eresco,)2674 40168 y(and)590
b(L.)h(H.)g(Zian)-36 b(tz.)1045 b(An)590 b(adaptiv)-36
b(e)592 b(and)e(parallel)i(framew)-36 b(ork)592 b(for)f(partial)g
(di\256eren)-36 b(tial)591 b(equa-)2674 41773 y(tions.)548
b(In)415 b(D.)i(F.)f(Gri\261ths,)i(D.)f(J.)f(Higham,)k(and)415
b(G.)h(A.)g(W)-108 b(atson,)420 b(editors,)g Fg(Numeric)-66
b(al)447 b(A)-33 b(nalysis)2674 43378 y(1997)583 b(\(Pr)-66
b(o)g(c.)582 b(17th)h(Dunde)-66 b(e)582 b(Biennial)f(Conf.\))p
Fk(,)593 b(n)-36 b(um)g(b)36 b(er)560 b(380)j(in)f(Pitman)f(Researc)-36
b(h)562 b(Notes)g(in)2674 44983 y(Mathematics)433 b(Series,)h(pages)g
(74{90.)h(Addison)e(W)-108 b(esley)435 b(Longman,)e(1998.)0
47695 y([21])652 b(J.)373 b(E.)h(Flahert)-36 b(y)-108
b(,)385 b(R.)374 b(M.)f(Lo)-36 b(y)-108 b(,)386 b(C.)19381
47359 y(\304)19201 47695 y(Ozturan,)e(M.)373 b(S.)g(Shephard,)384
b(B.)374 b(K.)f(Szymanski,)387 b(J.)373 b(D.)h(T)-108
b(eresco,)2674 49300 y(and)538 b(L.)i(H.)f(Zian)-36 b(tz.)892
b(P)-36 b(arallel)541 b(structures)d(and)h(dynamic)g(load)h(balancing)g
(for)g(adaptiv)-36 b(e)540 b(\257nite)2674 50905 y(elemen)-36
b(t)433 b(computation.)576 b Fg(Appl.)465 b(Numer.)f(Math.)p
Fk(,)433 b(26:241{263,)k(1998.)0 53617 y([22])652 b(J.)297
b(E.)g(Flahert)-36 b(y)-108 b(,)324 b(R.)298 b(M.)f(Lo)-36
b(y)-108 b(,)324 b(M.)297 b(S.)g(Shephard,)323 b(M.)296
b(L.)h(Simone,)325 b(B.)297 b(K.)g(Szymanski,)325 b(J.)298
b(D.)f(T)-108 b(eresco,)2674 55222 y(and)489 b(L.)h(H.)g(Zian)-36
b(tz.)744 b(Distributed)489 b(o)36 b(ctree)490 b(data)f(structures)g
(and)g(lo)36 b(cal)491 b(re\257nemen)-36 b(t)488 b(metho)36
b(d)489 b(for)2674 56827 y(the)512 b(parallel)i(solution)f(of)h
(three-dimensional)e(conserv)-72 b(ation)513 b(la)-36
b(ws.)814 b(In)513 b(M.)g(Bern,)533 b(J.)513 b(Flahert)-36
b(y)-108 b(,)2674 58433 y(and)458 b(M.)h(Luskin,)466
b(editors,)f Fg(Grid)488 b(Gener)-66 b(ation)487 b(and)h(A)-66
b(daptive)487 b(A)-33 b(lgorithms)p Fk(,)464 b(v)-36
b(olume)459 b(113)h(of)g Fg(The)2674 60038 y(IMA)472
b(V)-100 b(olumes)475 b(in)e(Mathematics)g(and)h(its)f(Applic)-66
b(ations)p Fk(,)445 b(pages)e(113{134,)449 b(Minneap)36
b(olis,)446 b(1999.)2674 61643 y(Institute)432 b(for)j(Mathematics)e
(and)g(its)h(Applications,)g(Springer.)0 64355 y([23])652
b(J.)456 b(E.)h(Flahert)-36 b(y)-108 b(,)462 b(R.)457
b(M.)f(Lo)-36 b(y)-108 b(,)462 b(M.)456 b(S.)h(Shephard,)j(B.)d(K.)f
(Szymanski,)463 b(J.)457 b(D.)g(T)-108 b(eresco,)463
b(and)455 b(L.)i(H.)2674 65960 y(Zian)-36 b(tz.)496 b(Adaptiv)-36
b(e)384 b(lo)36 b(cal)386 b(re\257nemen)-36 b(t)382 b(with)j(o)36
b(ctree)384 b(load-balancing)h(for)g(the)e(parallel)j(solution)e(of)
2674 67565 y(three-dimensional)432 b(conserv)-72 b(ation)434
b(la)-36 b(ws.)578 b Fg(J.)465 b(Par)-66 b(al)66 b(lel)465
b(Distrib.)e(Comput.)p Fk(,)434 b(47:139{152,)j(1997.)25350
75417 y(19)p eop
%%Page: 20 20
20 19 bop 0 1424 a Fk([24])652 b(J.)422 b(E.)f(Flahert)-36
b(y)-108 b(,)424 b(R.)e(M.)g(Lo)-36 b(y)-108 b(,)424
b(M.)e(S.)f(Shephard,)i(and)e(J.)h(D.)g(T)-108 b(eresco.)558
b(Soft)-36 b(w)g(are)422 b(for)g(the)f(parallel)2674
3029 y(adaptiv)-36 b(e)407 b(solution)g(of)g(conserv)-72
b(ation)408 b(la)-36 b(ws)407 b(b)-36 b(y)407 b(discon)-36
b(tin)g(uous)406 b(Galerkin)h(metho)36 b(ds.)532 b(In)407
b(B.)g(Co)36 b(c)-36 b(k-)2674 4634 y(burn,)443 b(G.)g(Karniadakis,)j
(and)d(S.-W.)f(Sh)-36 b(u,)444 b(editors,)i Fg(Disc)-66
b(ontinous)472 b(Galerkin)g(Metho)-66 b(ds)473 b(The)-66
b(ory,)2674 6239 y(Computation)575 b(and)g(Applic)-66
b(ations)p Fk(,)583 b(v)-36 b(olume)555 b(11)g(of)g Fg(L)-66
b(e)g(ctur)g(e)574 b(Notes)h(in)g(Compuational)h(Scienc)-66
b(e)2674 7844 y(and)464 b(Engine)-66 b(ering)p Fk(,)431
b(pages)j(113{124,)i(Berlin,)e(2000.)h(Springer.)0 10557
y([25])652 b(B.)531 b(Hendric)-36 b(kson.)867 b(Load)531
b(balancing)h(\257ctions,)555 b(falseho)36 b(o)g(ds)532
b(and)f(fallacies.)869 b Fg(Appl.)554 b(Math.)g(Mo)-66
b(d-)2674 12162 y(el)66 b(ling)p Fk(,)433 b(25:99{108,)j(2000.)0
14874 y([26])652 b(G.)473 b(Karypis)h(and)f(V.)g(Kumar.)696
b(A)473 b(fast)h(and)f(high)g(qualit)-36 b(y)475 b(m)-36
b(ultilev)g(el)474 b(sc)-36 b(heme)473 b(for)h(partitioning)2674
16479 y(irregular)434 b(graphs.)576 b Fg(SIAM)464 b(J.)g(Scien.)f
(Comput.)p Fk(,)433 b(20\(1\),)i(1999.)0 19191 y([27])652
b(G.)470 b(Karypis)h(and)f(V.)h(Kumar.)686 b(P)-36 b(arallel)472
b(m)-36 b(ultiv)g(elel)471 b Fj(k)45 b Fk(-w)-36 b(a)g(y)471
b(partitioning)g(sc)-36 b(heme)470 b(for)h(irregular)2674
20796 y(graphs.)576 b Fg(SIAM)464 b(R)-66 b(eview)p Fk(,)432
b(41\(2\):278{300,)437 b(1999.)0 23508 y([28])652 b(J.)391
b(R.)g(Levine,)400 b(T.)392 b(Mason,)400 b(and)390 b(D.)h(Bro)-36
b(wn.)508 b Fg(lex)425 b(&)h(yac)-66 b(c)p Fk(.)507 b(O'Reilly)392
b(and)f(Asso)36 b(ciates,)400 b(Inc.,)g(1992.)0 26220
y([29])652 b(R.)436 b(M.)g(Lo)-36 b(y)-108 b(.)583 b
Fg(A)-66 b(daptive)465 b(L)-66 b(o)g(c)g(al)466 b(R)-66
b(e\257nement)464 b(with)j(Octr)-66 b(e)g(e)465 b(L)-66
b(o)g(ad-Balancing)466 b(for)g(the)h(Par)-66 b(al)66
b(lel)467 b(So-)2674 27825 y(lution)455 b(of)h(Thr)-66
b(e)g(e-Dimensional)454 b(Conservation)h(L)-66 b(aws)p
Fk(.)562 b(PhD)424 b(thesis,)i(Computer)e(Science)g(Dept.,)2674
29430 y(Rensselaer)434 b(P)-36 b(olytec)g(hnic)434 b(Institute,)f(T)
-108 b(ro)-36 b(y)-108 b(,)434 b(1998.)0 32142 y([30])652
b(T.)303 b(Min)-36 b(y)g(ard,)329 b(Y.)302 b(Kallinderis,)330
b(and)302 b(K.)h(Sc)-36 b(h)g(ulz.)363 b(P)-36 b(arallel)304
b(load)f(balancing)g(for)g(dynamic)g(execution)2674 33747
y(en)-36 b(vironmen)g(ts.)588 b(In)437 b Fg(Pr)-66 b(o)g(c.)468
b(34th)h(A)-66 b(er)g(osp)g(ac)g(e)466 b(Scienc)-66 b(es)467
b(Me)-66 b(eting)466 b(and)i(Exhibit)p Fk(,)438 b(n)-36
b(um)g(b)36 b(er)436 b(96-0295,)2674 35352 y(Reno,)e(1996.)0
38064 y([31])652 b(W.)402 b(F.)f(Mitc)-36 b(hell.)525
b(The)401 b(re\257nemen)-36 b(t-tree)399 b(partition)i(for)h(parallel)h
(solution)e(of)h(partial)g(di\256eren)-36 b(tial)2674
39670 y(equations.)577 b Fg(NIST)464 b(Journal)h(of)g(R)-66
b(ese)g(ar)g(ch)p Fk(,)432 b(103\(4\):405{414,)437 b(1998.)0
42382 y([32])652 b(M.)588 b(P)-36 b(arashar)587 b(and)h(J.)g(C.)h(Bro)
-36 b(wne.)1037 b(On)587 b(partitioning)h(dynamic)g(adaptiv)-36
b(e)588 b(grid)g(hierarc)-36 b(hies.)2674 43987 y(In)479
b Fg(Pr)-66 b(o)g(c.)507 b(29th)h(A)-33 b(nnual)506 b(Hawaii)h
(International)f(Confer)-66 b(enc)g(e)504 b(on)k(System)e(Scienc)-66
b(es)p Fk(,)490 b(v)-36 b(olume)480 b(1,)2674 45592 y(pages)434
b(604{613,)i(Jan.)e(1996.)0 48304 y([33])652 b(E.)389
b(A.)h(P)-36 b(atric)g(k,)399 b(D.)390 b(R.)f(Anderson,)398
b(and)389 b(F.)g(K.)h(Brec)-36 b(h)g(tel.)504 b(Mapping)389
b(m)-36 b(ultidimensional)389 b(space)h(to)2674 49909
y(one)331 b(dimension)h(for)g(computer)f(output)g(displa)-36
b(y)-108 b(.)411 b Fg(IEEE)372 b(T)-100 b(r)-66 b(ans.)371
b(Computers)p Fk(,)352 b(C-17\(10\):949{953,)2674 51514
y(Octob)36 b(er)433 b(1968.)0 54226 y([34])652 b(G.)468
b(P)-36 b(eano.)682 b(Sur)468 b(une)g(courb)36 b(e,)477
b(qui)469 b(remplit)f(toute)h(une)f(aire)h(plane.)682
b Fg(Mathematische)496 b(A)-33 b(nnalen)p Fk(,)2674 55831
y(36:157{160,)437 b(1890.)0 58543 y([35])652 b(J.)593
b(R.)g(Pilkington)g(and)f(S.)h(B.)g(Baden.)1051 b(Dynamic)593
b(partitioning)g(of)g(non-uniform)f(structured)2674 60148
y(w)-36 b(orkloads)454 b(with)g(space)f(\257lling)h(curv)-36
b(es.)636 b Fg(IEEE)483 b(T)-100 b(r)-66 b(ans.)483 b(on)g(Par)-66
b(al)66 b(lel)484 b(and)f(Distribute)-66 b(d)481 b(Systems)p
Fk(,)2674 61753 y(7\(3\):288{300,)436 b(1996.)0 64465
y([36])652 b(M.)491 b(S.)g(Shephard,)505 b(S.)491 b(Dey)-108
b(,)506 b(and)491 b(J.)h(E.)g(Flahert)-36 b(y)-108 b(.)748
b(A)492 b(straigh)-36 b(tforw)g(ard)491 b(structure)f(to)i(construct)
2674 66071 y(shap)36 b(e)439 b(functions)h(for)h(v)-72
b(ariable)440 b(p-order)f(meshes.)596 b Fg(Comp.)470
b(Meth.)g(in)g(Appl.)g(Me)-66 b(ch.)469 b(and)i(Engng.)p
Fk(,)2674 67676 y(147:209{233,)437 b(1997.)0 70388 y([37])652
b(M.)367 b(S.)f(Shephard,)379 b(J.)367 b(E.)g(Flahert)-36
b(y)-108 b(,)380 b(C.)368 b(L.)f(Bottasso,)381 b(H.)367
b(L.)g(de)f(Cougn)-36 b(y)-108 b(,)381 b(C.)41186 70052
y(\304)41005 70388 y(Ozturan,)f(and)366 b(M.)h(L.)2674
71993 y(Simone.)576 b(P)-36 b(arallel)435 b(automatic)f(adaptiv)-36
b(e)434 b(analysis.)578 b Fg(Par)-66 b(al)66 b(lel)466
b(Comput.)p Fk(,)433 b(23:1327{1347,)438 b(1997.)25350
75417 y(20)p eop
%%Page: 21 21
21 20 bop 0 1424 a Fk([38])652 b(M.)589 b(S.)g(Shephard,)626
b(J.)590 b(E.)f(Flahert)-36 b(y)-108 b(,)628 b(H.)589
b(L.)g(de)g(Cougn)-36 b(y)-108 b(,)628 b(C.)34847 1088
y(\304)34667 1424 y(Ozturan,)f(C.)590 b(L.)f(Bottasso,)628
b(and)2674 3029 y(M.)611 b(W.)g(Beall.)1108 b(P)-36 b(arallel)612
b(automated)f(adaptiv)-36 b(e)611 b(pro)36 b(cedures)610
b(for)i(unstructured)d(meshes.)1105 b(In)2674 4634 y
Fg(Par)-66 b(al)66 b(lel)636 b(Comput.)g(in)f(CFD)p Fk(,)620
b(n)-36 b(um)g(b)36 b(er)619 b(R-807,)667 b(pages)620
b(6.1{6.49.)j(Agard,)667 b(Neuilly-Sur-Seine,)2674 6239
y(1995.)0 8951 y([39])652 b(A.)299 b(J.)h(Sop)36 b(er,)326
b(C.)299 b(W)-108 b(alsha)-36 b(w,)327 b(and)299 b(M.)g(Cross.)359
b(A)299 b(Com)-36 b(bined)299 b(Ev)-36 b(olutionary)300
b(Searc)-36 b(h)298 b(and)h(Multilev)-36 b(el)2674 10557
y(Optimisation)315 b(Approac)-36 b(h)315 b(to)g(Graph)g(P)-36
b(artitioning.)385 b(T)-108 b(ec)-36 b(h.)315 b(Rep.)h(00/IM/58,)341
b(Comp.)316 b(Math.)f(Sci.,)2674 12162 y(Univ.)434 b(Green)-36
b(wic)g(h,)433 b(London)g(SE10)g(9LS,)h(UK,)g(April)f(2000.)0
14874 y([40])652 b(V.)635 b(E.)g(T)-108 b(a)-36 b(ylor)637
b(and)d(B.)i(Nour-Omid.)1176 b(A)635 b(study)g(of)h(the)e
(factorization)j(\257ll-in)e(for)g(a)h(parallel)2674
16479 y(implemen)-36 b(tation)493 b(of)i(the)e(\257nite)h(elemen)-36
b(t)493 b(metho)36 b(d.)757 b Fg(Int.)519 b(J.)h(Numer.)f(Meth.)g
(Engng.)p Fk(,)508 b(37:3809{)2674 18084 y(3823,)435
b(1994.)0 20796 y([41])652 b(J.)597 b(D.)h(T)-108 b(eresco.)1065
b Fg(A)614 b(Hier)-66 b(ar)g(chic)g(al)613 b(Partition)g(Mo)-66
b(del)615 b(for)g(Par)-66 b(al)66 b(lel)616 b(A)-66 b(daptive)614
b(Finite)f(Element)2674 22401 y(Computation)p Fk(.)789
b(PhD)504 b(thesis,)523 b(Computer)505 b(Science)f(Dept.,)524
b(Rensselaer)505 b(P)-36 b(olytec)g(hnic)505 b(Institute,)2674
24006 y(T)-108 b(ro)-36 b(y)-108 b(,)434 b(2000.)0 26718
y([42])652 b(J.)362 b(D.)h(T)-108 b(eresco,)376 b(M.)362
b(W.)h(Beall,)378 b(J.)362 b(E.)g(Flahert)-36 b(y)-108
b(,)376 b(and)362 b(M.)g(S.)g(Shephard.)458 b(A)362 b(hierarc)-36
b(hical)362 b(partition)2674 28323 y(mo)36 b(del)450
b(for)g(adaptiv)-36 b(e)450 b(\257nite)f(elemen)-36 b(t)449
b(computation.)625 b Fg(Comput.)479 b(Metho)-66 b(ds)480
b(Appl.)f(Me)-66 b(ch.)478 b(Engr)-66 b(g.)p Fk(,)2674
29928 y(184:269{285,)437 b(2000.)0 32640 y([43])652 b(C.)448
b(W)-108 b(alsha)-36 b(w)449 b(and)e(M.)i(Cross.)620
b(P)-36 b(arallel)449 b(Optimisation)f(Algorithms)h(for)f(Multilev)-36
b(el)449 b(Mesh)e(P)-36 b(ar-)2674 34245 y(titioning.)577
b Fg(Par)-66 b(al)66 b(lel)465 b(Comput.)p Fk(,)434 b
(26\(12\):1635{1660,)k(2000.)25350 75417 y(21)p eop
%%Trailer
end
userdict /end-hook known{end-hook}if
%%EOF
